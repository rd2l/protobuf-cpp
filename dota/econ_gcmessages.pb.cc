// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: econ_gcmessages.proto

#include "econ_gcmessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CGCStoreRechargeRedirect_LineItem_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgAdjustItemEquippedState_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCCreateStaticRecipeResponse_InputError_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCCreateStaticRecipeResponse_OutputItem_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCCreateStaticRecipe_Item_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCUnlockCrateResponse_Item_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCRequestStoreSalesDataResponse_Price_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToClientCurrencyPricePoints_Currency_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCConsoleOutput_OutputLine_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCFlushSteamInventoryCache_Key_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgItemAges_MaxItemIDTimestamp_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgLookupMultipleAccountNamesResponse_Account_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgProcessTransactionOrder_Item_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgUseItem_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CProtoItemSocket_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgProcessTransactionOrder_econ_5fgcmessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_CMsgGCToGCGrantAccountRolledItems_Item_econ_5fgcmessages_2eproto;
namespace proto {
namespace dota {
class CMsgApplyAutographDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgApplyAutograph> _instance;
} _CMsgApplyAutograph_default_instance_;
class CMsgAdjustItemEquippedStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAdjustItemEquippedState> _instance;
} _CMsgAdjustItemEquippedState_default_instance_;
class CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment> _instance;
} _CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_default_instance_;
class CMsgEconPlayerStrangeCountAdjustmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgEconPlayerStrangeCountAdjustment> _instance;
} _CMsgEconPlayerStrangeCountAdjustment_default_instance_;
class CMsgRequestItemPurgatory_FinalizePurchaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestItemPurgatory_FinalizePurchase> _instance;
} _CMsgRequestItemPurgatory_FinalizePurchase_default_instance_;
class CMsgRequestItemPurgatory_FinalizePurchaseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestItemPurgatory_FinalizePurchaseResponse> _instance;
} _CMsgRequestItemPurgatory_FinalizePurchaseResponse_default_instance_;
class CMsgRequestItemPurgatory_RefundPurchaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestItemPurgatory_RefundPurchase> _instance;
} _CMsgRequestItemPurgatory_RefundPurchase_default_instance_;
class CMsgRequestItemPurgatory_RefundPurchaseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestItemPurgatory_RefundPurchaseResponse> _instance;
} _CMsgRequestItemPurgatory_RefundPurchaseResponse_default_instance_;
class CMsgCraftingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCraftingResponse> _instance;
} _CMsgCraftingResponse_default_instance_;
class CMsgGCRequestStoreSalesDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCRequestStoreSalesData> _instance;
} _CMsgGCRequestStoreSalesData_default_instance_;
class CMsgGCRequestStoreSalesDataResponse_PriceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCRequestStoreSalesDataResponse_Price> _instance;
} _CMsgGCRequestStoreSalesDataResponse_Price_default_instance_;
class CMsgGCRequestStoreSalesDataResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCRequestStoreSalesDataResponse> _instance;
} _CMsgGCRequestStoreSalesDataResponse_default_instance_;
class CMsgGCRequestStoreSalesDataUpToDateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCRequestStoreSalesDataUpToDateResponse> _instance;
} _CMsgGCRequestStoreSalesDataUpToDateResponse_default_instance_;
class CMsgGCToGCPingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCPingRequest> _instance;
} _CMsgGCToGCPingRequest_default_instance_;
class CMsgGCToGCPingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCPingResponse> _instance;
} _CMsgGCToGCPingResponse_default_instance_;
class CMsgGCToGCGetUserSessionServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGetUserSessionServer> _instance;
} _CMsgGCToGCGetUserSessionServer_default_instance_;
class CMsgGCToGCGetUserSessionServerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGetUserSessionServerResponse> _instance;
} _CMsgGCToGCGetUserSessionServerResponse_default_instance_;
class CMsgGCToGCGetUserServerMembersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGetUserServerMembers> _instance;
} _CMsgGCToGCGetUserServerMembers_default_instance_;
class CMsgGCToGCGetUserServerMembersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGetUserServerMembersResponse> _instance;
} _CMsgGCToGCGetUserServerMembersResponse_default_instance_;
class CMsgLookupMultipleAccountNamesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgLookupMultipleAccountNames> _instance;
} _CMsgLookupMultipleAccountNames_default_instance_;
class CMsgLookupMultipleAccountNamesResponse_AccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgLookupMultipleAccountNamesResponse_Account> _instance;
} _CMsgLookupMultipleAccountNamesResponse_Account_default_instance_;
class CMsgLookupMultipleAccountNamesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgLookupMultipleAccountNamesResponse> _instance;
} _CMsgLookupMultipleAccountNamesResponse_default_instance_;
class CMsgRequestCrateItemsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestCrateItems> _instance;
} _CMsgRequestCrateItems_default_instance_;
class CMsgRequestCrateItemsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestCrateItemsResponse> _instance;
} _CMsgRequestCrateItemsResponse_default_instance_;
class CMsgRequestCrateEscalationLevelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestCrateEscalationLevel> _instance;
} _CMsgRequestCrateEscalationLevel_default_instance_;
class CMsgRequestCrateEscalationLevelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestCrateEscalationLevelResponse> _instance;
} _CMsgRequestCrateEscalationLevelResponse_default_instance_;
class CMsgGCToGCCanUseDropRateBonusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCCanUseDropRateBonus> _instance;
} _CMsgGCToGCCanUseDropRateBonus_default_instance_;
class CMsgSQLAddDropRateBonusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSQLAddDropRateBonus> _instance;
} _CMsgSQLAddDropRateBonus_default_instance_;
class CMsgSQLUpgradeBattleBoosterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSQLUpgradeBattleBooster> _instance;
} _CMsgSQLUpgradeBattleBooster_default_instance_;
class CMsgGCToGCRefreshSOCacheDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCRefreshSOCache> _instance;
} _CMsgGCToGCRefreshSOCache_default_instance_;
class CMsgGCToGCCheckAccountTradeStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCCheckAccountTradeStatus> _instance;
} _CMsgGCToGCCheckAccountTradeStatus_default_instance_;
class CMsgGCToGCCheckAccountTradeStatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCCheckAccountTradeStatusResponse> _instance;
} _CMsgGCToGCCheckAccountTradeStatusResponse_default_instance_;
class CMsgGCToGCAddSubscriptionTimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCAddSubscriptionTime> _instance;
} _CMsgGCToGCAddSubscriptionTime_default_instance_;
class CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute> _instance;
} _CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_default_instance_;
class CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry> _instance;
} _CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_default_instance_;
class CMsgGCToGCGrantAccountRolledItems_ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGrantAccountRolledItems_Item> _instance;
} _CMsgGCToGCGrantAccountRolledItems_Item_default_instance_;
class CMsgGCToGCGrantAccountRolledItemsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGrantAccountRolledItems> _instance;
} _CMsgGCToGCGrantAccountRolledItems_default_instance_;
class CMsgGCToGCGrantSelfMadeItemToAccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGrantSelfMadeItemToAccount> _instance;
} _CMsgGCToGCGrantSelfMadeItemToAccount_default_instance_;
class CMsgUseItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgUseItem> _instance;
} _CMsgUseItem_default_instance_;
class CMsgServerUseItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgServerUseItem> _instance;
} _CMsgServerUseItem_default_instance_;
class CMsgUseMultipleItemsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgUseMultipleItems> _instance;
} _CMsgUseMultipleItems_default_instance_;
class CMsgGCPartnerBalanceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCPartnerBalanceRequest> _instance;
} _CMsgGCPartnerBalanceRequest_default_instance_;
class CMsgGCPartnerBalanceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCPartnerBalanceResponse> _instance;
} _CMsgGCPartnerBalanceResponse_default_instance_;
class CGCStoreRechargeRedirect_LineItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCStoreRechargeRedirect_LineItem> _instance;
} _CGCStoreRechargeRedirect_LineItem_default_instance_;
class CMsgGCPartnerRechargeRedirectURLRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCPartnerRechargeRedirectURLRequest> _instance;
} _CMsgGCPartnerRechargeRedirectURLRequest_default_instance_;
class CMsgGCPartnerRechargeRedirectURLResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCPartnerRechargeRedirectURLResponse> _instance;
} _CMsgGCPartnerRechargeRedirectURLResponse_default_instance_;
class CMsgGCEconSQLWorkItemEmbeddedRollbackDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCEconSQLWorkItemEmbeddedRollbackData> _instance;
} _CMsgGCEconSQLWorkItemEmbeddedRollbackData_default_instance_;
class CMsgCraftStatueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCraftStatue> _instance;
} _CMsgCraftStatue_default_instance_;
class CMsgRedeemCodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRedeemCode> _instance;
} _CMsgRedeemCode_default_instance_;
class CMsgRedeemCodeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgRedeemCodeResponse> _instance;
} _CMsgRedeemCodeResponse_default_instance_;
class CMsgDevNewItemRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDevNewItemRequest> _instance;
} _CMsgDevNewItemRequest_default_instance_;
class CMsgDevNewItemRequestResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDevNewItemRequestResponse> _instance;
} _CMsgDevNewItemRequestResponse_default_instance_;
class CMsgDevUnlockAllItemStylesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDevUnlockAllItemStyles> _instance;
} _CMsgDevUnlockAllItemStyles_default_instance_;
class CMsgDevUnlockAllItemStylesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDevUnlockAllItemStylesResponse> _instance;
} _CMsgDevUnlockAllItemStylesResponse_default_instance_;
class CMsgGCGetAccountSubscriptionItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCGetAccountSubscriptionItem> _instance;
} _CMsgGCGetAccountSubscriptionItem_default_instance_;
class CMsgGCGetAccountSubscriptionItemResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCGetAccountSubscriptionItemResponse> _instance;
} _CMsgGCGetAccountSubscriptionItemResponse_default_instance_;
class CMsgGCAddGiftItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCAddGiftItem> _instance;
} _CMsgGCAddGiftItem_default_instance_;
class CMsgClientToGCWrapAndDeliverGiftDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCWrapAndDeliverGift> _instance;
} _CMsgClientToGCWrapAndDeliverGift_default_instance_;
class CMsgClientToGCWrapAndDeliverGiftResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCWrapAndDeliverGiftResponse> _instance;
} _CMsgClientToGCWrapAndDeliverGiftResponse_default_instance_;
class CMsgClientToGCUnwrapGiftDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnwrapGift> _instance;
} _CMsgClientToGCUnwrapGift_default_instance_;
class CMsgClientToGCGetGiftPermissionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCGetGiftPermissions> _instance;
} _CMsgClientToGCGetGiftPermissions_default_instance_;
class CMsgClientToGCGetGiftPermissionsResponse_FriendPermissionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCGetGiftPermissionsResponse_FriendPermission> _instance;
} _CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_default_instance_;
class CMsgClientToGCGetGiftPermissionsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCGetGiftPermissionsResponse> _instance;
} _CMsgClientToGCGetGiftPermissionsResponse_default_instance_;
class CMsgClientToGCUnpackBundleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnpackBundle> _instance;
} _CMsgClientToGCUnpackBundle_default_instance_;
class CMsgClientToGCUnpackBundleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnpackBundleResponse> _instance;
} _CMsgClientToGCUnpackBundleResponse_default_instance_;
class CMsgGCToClientStoreTransactionCompletedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToClientStoreTransactionCompleted> _instance;
} _CMsgGCToClientStoreTransactionCompleted_default_instance_;
class CMsgClientToGCEquipItemsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCEquipItems> _instance;
} _CMsgClientToGCEquipItems_default_instance_;
class CMsgClientToGCEquipItemsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCEquipItemsResponse> _instance;
} _CMsgClientToGCEquipItemsResponse_default_instance_;
class CMsgClientToGCSetItemStyleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCSetItemStyle> _instance;
} _CMsgClientToGCSetItemStyle_default_instance_;
class CMsgClientToGCSetItemStyleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCSetItemStyleResponse> _instance;
} _CMsgClientToGCSetItemStyleResponse_default_instance_;
class CMsgClientToGCUnlockItemStyleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnlockItemStyle> _instance;
} _CMsgClientToGCUnlockItemStyle_default_instance_;
class CMsgClientToGCUnlockItemStyleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnlockItemStyleResponse> _instance;
} _CMsgClientToGCUnlockItemStyleResponse_default_instance_;
class CMsgClientToGCSetItemInventoryCategoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCSetItemInventoryCategory> _instance;
} _CMsgClientToGCSetItemInventoryCategory_default_instance_;
class CMsgClientToGCUnlockCrateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnlockCrate> _instance;
} _CMsgClientToGCUnlockCrate_default_instance_;
class CMsgClientToGCUnlockCrateResponse_ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnlockCrateResponse_Item> _instance;
} _CMsgClientToGCUnlockCrateResponse_Item_default_instance_;
class CMsgClientToGCUnlockCrateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnlockCrateResponse> _instance;
} _CMsgClientToGCUnlockCrateResponse_default_instance_;
class CMsgClientToGCRemoveItemAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCRemoveItemAttribute> _instance;
} _CMsgClientToGCRemoveItemAttribute_default_instance_;
class CMsgClientToGCRemoveItemAttributeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCRemoveItemAttributeResponse> _instance;
} _CMsgClientToGCRemoveItemAttributeResponse_default_instance_;
class CMsgClientToGCNameItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCNameItem> _instance;
} _CMsgClientToGCNameItem_default_instance_;
class CMsgClientToGCNameItemResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCNameItemResponse> _instance;
} _CMsgClientToGCNameItemResponse_default_instance_;
class CMsgGCSetItemPositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCSetItemPosition> _instance;
} _CMsgGCSetItemPosition_default_instance_;
class CAttribute_ItemDynamicRecipeComponentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CAttribute_ItemDynamicRecipeComponent> _instance;
} _CAttribute_ItemDynamicRecipeComponent_default_instance_;
class CProtoItemSocketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket> _instance;
} _CProtoItemSocket_default_instance_;
class CProtoItemSocket_EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_Empty> _instance;
} _CProtoItemSocket_Empty_default_instance_;
class CProtoItemSocket_EffectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_Effect> _instance;
} _CProtoItemSocket_Effect_default_instance_;
class CProtoItemSocket_ColorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_Color> _instance;
} _CProtoItemSocket_Color_default_instance_;
class CProtoItemSocket_StrangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_Strange> _instance;
} _CProtoItemSocket_Strange_default_instance_;
class CProtoItemSocket_SpectatorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_Spectator> _instance;
} _CProtoItemSocket_Spectator_default_instance_;
class CProtoItemSocket_AssetModifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_AssetModifier> _instance;
} _CProtoItemSocket_AssetModifier_default_instance_;
class CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLYDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY> _instance;
} _CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_default_instance_;
class CProtoItemSocket_AutographDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_Autograph> _instance;
} _CProtoItemSocket_Autograph_default_instance_;
class CProtoItemSocket_StaticVisualsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_StaticVisuals> _instance;
} _CProtoItemSocket_StaticVisuals_default_instance_;
class CAttribute_StringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CAttribute_String> _instance;
} _CAttribute_String_default_instance_;
class CWorkshop_GetItemDailyRevenue_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetItemDailyRevenue_Request> _instance;
} _CWorkshop_GetItemDailyRevenue_Request_default_instance_;
class CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue> _instance;
} _CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_default_instance_;
class CWorkshop_GetItemDailyRevenue_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetItemDailyRevenue_Response> _instance;
} _CWorkshop_GetItemDailyRevenue_Response_default_instance_;
class CWorkshop_GetPackageDailyRevenue_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetPackageDailyRevenue_Request> _instance;
} _CWorkshop_GetPackageDailyRevenue_Request_default_instance_;
class CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue> _instance;
} _CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_default_instance_;
class CWorkshop_GetPackageDailyRevenue_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetPackageDailyRevenue_Response> _instance;
} _CWorkshop_GetPackageDailyRevenue_Response_default_instance_;
class CMsgSQLGCToGCGrantBackpackSlotsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgSQLGCToGCGrantBackpackSlots> _instance;
} _CMsgSQLGCToGCGrantBackpackSlots_default_instance_;
class CMsgClientToGCLookupAccountNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCLookupAccountName> _instance;
} _CMsgClientToGCLookupAccountName_default_instance_;
class CMsgClientToGCLookupAccountNameResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCLookupAccountNameResponse> _instance;
} _CMsgClientToGCLookupAccountNameResponse_default_instance_;
class CMsgClientToGCCreateStaticRecipe_ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCCreateStaticRecipe_Item> _instance;
} _CMsgClientToGCCreateStaticRecipe_Item_default_instance_;
class CMsgClientToGCCreateStaticRecipeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCCreateStaticRecipe> _instance;
} _CMsgClientToGCCreateStaticRecipe_default_instance_;
class CMsgClientToGCCreateStaticRecipeResponse_OutputItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCCreateStaticRecipeResponse_OutputItem> _instance;
} _CMsgClientToGCCreateStaticRecipeResponse_OutputItem_default_instance_;
class CMsgClientToGCCreateStaticRecipeResponse_InputErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCCreateStaticRecipeResponse_InputError> _instance;
} _CMsgClientToGCCreateStaticRecipeResponse_InputError_default_instance_;
class CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput> _instance;
} _CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_default_instance_;
class CMsgClientToGCCreateStaticRecipeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCCreateStaticRecipeResponse> _instance;
} _CMsgClientToGCCreateStaticRecipeResponse_default_instance_;
class CMsgProcessTransactionOrder_ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgProcessTransactionOrder_Item> _instance;
} _CMsgProcessTransactionOrder_Item_default_instance_;
class CMsgProcessTransactionOrderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgProcessTransactionOrder> _instance;
} _CMsgProcessTransactionOrder_default_instance_;
class CMsgGCToGCStoreProcessCDKeyTransactionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCStoreProcessCDKeyTransaction> _instance;
} _CMsgGCToGCStoreProcessCDKeyTransaction_default_instance_;
class CMsgGCToGCStoreProcessCDKeyTransactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCStoreProcessCDKeyTransactionResponse> _instance;
} _CMsgGCToGCStoreProcessCDKeyTransactionResponse_default_instance_;
class CMsgGCToGCStoreProcessSettlementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCStoreProcessSettlement> _instance;
} _CMsgGCToGCStoreProcessSettlement_default_instance_;
class CMsgGCToGCStoreProcessSettlementResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCStoreProcessSettlementResponse> _instance;
} _CMsgGCToGCStoreProcessSettlementResponse_default_instance_;
class CMsgGCToGCBroadcastConsoleCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCBroadcastConsoleCommand> _instance;
} _CMsgGCToGCBroadcastConsoleCommand_default_instance_;
class CMsgGCToGCConsoleOutput_OutputLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCConsoleOutput_OutputLine> _instance;
} _CMsgGCToGCConsoleOutput_OutputLine_default_instance_;
class CMsgGCToGCConsoleOutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCConsoleOutput> _instance;
} _CMsgGCToGCConsoleOutput_default_instance_;
class CMsgItemAges_MaxItemIDTimestampDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgItemAges_MaxItemIDTimestamp> _instance;
} _CMsgItemAges_MaxItemIDTimestamp_default_instance_;
class CMsgItemAgesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgItemAges> _instance;
} _CMsgItemAges_default_instance_;
class CMsgGCToGCInternalTestMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCInternalTestMsg> _instance;
} _CMsgGCToGCInternalTestMsg_default_instance_;
class CMsgGCToGCClientServerVersionsUpdatedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCClientServerVersionsUpdated> _instance;
} _CMsgGCToGCClientServerVersionsUpdated_default_instance_;
class CMsgGCToGCBroadcastMessageFromSubDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCBroadcastMessageFromSub> _instance;
} _CMsgGCToGCBroadcastMessageFromSub_default_instance_;
class CMsgGCToClientCurrencyPricePoints_CurrencyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToClientCurrencyPricePoints_Currency> _instance;
} _CMsgGCToClientCurrencyPricePoints_Currency_default_instance_;
class CMsgGCToClientCurrencyPricePointsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToClientCurrencyPricePoints> _instance;
} _CMsgGCToClientCurrencyPricePoints_default_instance_;
class CMsgBannedWordListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgBannedWordList> _instance;
} _CMsgBannedWordList_default_instance_;
class CEcon_FlushInventoryCache_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEcon_FlushInventoryCache_Request> _instance;
} _CEcon_FlushInventoryCache_Request_default_instance_;
class CEcon_FlushInventoryCache_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CEcon_FlushInventoryCache_Response> _instance;
} _CEcon_FlushInventoryCache_Response_default_instance_;
class CMsgGCToGCFlushSteamInventoryCache_KeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCFlushSteamInventoryCache_Key> _instance;
} _CMsgGCToGCFlushSteamInventoryCache_Key_default_instance_;
class CMsgGCToGCFlushSteamInventoryCacheDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCFlushSteamInventoryCache> _instance;
} _CMsgGCToGCFlushSteamInventoryCache_default_instance_;
class CMsgGCToGCUpdateSubscriptionItemsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCUpdateSubscriptionItems> _instance;
} _CMsgGCToGCUpdateSubscriptionItems_default_instance_;
}  // namespace dota
}  // namespace proto
static void InitDefaultsCMsgApplyAutograph_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgApplyAutograph_default_instance_;
    new (ptr) ::proto::dota::CMsgApplyAutograph();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgApplyAutograph::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgApplyAutograph_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgApplyAutograph_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgAdjustItemEquippedState_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgAdjustItemEquippedState_default_instance_;
    new (ptr) ::proto::dota::CMsgAdjustItemEquippedState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgAdjustItemEquippedState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgAdjustItemEquippedState_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgAdjustItemEquippedState_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_default_instance_;
    new (ptr) ::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgEconPlayerStrangeCountAdjustment_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgEconPlayerStrangeCountAdjustment_default_instance_;
    new (ptr) ::proto::dota::CMsgEconPlayerStrangeCountAdjustment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgEconPlayerStrangeCountAdjustment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgEconPlayerStrangeCountAdjustment_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgEconPlayerStrangeCountAdjustment_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgRequestItemPurgatory_FinalizePurchase_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgRequestItemPurgatory_FinalizePurchase_default_instance_;
    new (ptr) ::proto::dota::CMsgRequestItemPurgatory_FinalizePurchase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgRequestItemPurgatory_FinalizePurchase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRequestItemPurgatory_FinalizePurchase_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRequestItemPurgatory_FinalizePurchase_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgRequestItemPurgatory_FinalizePurchaseResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgRequestItemPurgatory_FinalizePurchaseResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgRequestItemPurgatory_FinalizePurchaseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgRequestItemPurgatory_FinalizePurchaseResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRequestItemPurgatory_FinalizePurchaseResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRequestItemPurgatory_FinalizePurchaseResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgRequestItemPurgatory_RefundPurchase_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgRequestItemPurgatory_RefundPurchase_default_instance_;
    new (ptr) ::proto::dota::CMsgRequestItemPurgatory_RefundPurchase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgRequestItemPurgatory_RefundPurchase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRequestItemPurgatory_RefundPurchase_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRequestItemPurgatory_RefundPurchase_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgRequestItemPurgatory_RefundPurchaseResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgRequestItemPurgatory_RefundPurchaseResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgRequestItemPurgatory_RefundPurchaseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgRequestItemPurgatory_RefundPurchaseResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRequestItemPurgatory_RefundPurchaseResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRequestItemPurgatory_RefundPurchaseResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgCraftingResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgCraftingResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgCraftingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgCraftingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCraftingResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCraftingResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCRequestStoreSalesData_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCRequestStoreSalesData_default_instance_;
    new (ptr) ::proto::dota::CMsgGCRequestStoreSalesData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCRequestStoreSalesData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCRequestStoreSalesData_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCRequestStoreSalesData_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCRequestStoreSalesDataResponse_Price_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCRequestStoreSalesDataResponse_Price_default_instance_;
    new (ptr) ::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCRequestStoreSalesDataResponse_Price_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCRequestStoreSalesDataResponse_Price_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCRequestStoreSalesDataResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCRequestStoreSalesDataResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgGCRequestStoreSalesDataResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCRequestStoreSalesDataResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGCRequestStoreSalesDataResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGCRequestStoreSalesDataResponse_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgGCRequestStoreSalesDataResponse_Price_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgGCRequestStoreSalesDataUpToDateResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCRequestStoreSalesDataUpToDateResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgGCRequestStoreSalesDataUpToDateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCRequestStoreSalesDataUpToDateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCRequestStoreSalesDataUpToDateResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCRequestStoreSalesDataUpToDateResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCPingRequest_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCPingRequest_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCPingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCPingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCPingRequest_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCPingRequest_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCPingResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCPingResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCPingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCPingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCPingResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCPingResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCGetUserSessionServer_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCGetUserSessionServer_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCGetUserSessionServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCGetUserSessionServer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCGetUserSessionServer_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCGetUserSessionServer_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCGetUserSessionServerResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCGetUserSessionServerResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCGetUserSessionServerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCGetUserSessionServerResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCGetUserSessionServerResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCGetUserSessionServerResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCGetUserServerMembers_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCGetUserServerMembers_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCGetUserServerMembers();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCGetUserServerMembers::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCGetUserServerMembers_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCGetUserServerMembers_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCGetUserServerMembersResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCGetUserServerMembersResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCGetUserServerMembersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCGetUserServerMembersResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCGetUserServerMembersResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCGetUserServerMembersResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgLookupMultipleAccountNames_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgLookupMultipleAccountNames_default_instance_;
    new (ptr) ::proto::dota::CMsgLookupMultipleAccountNames();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgLookupMultipleAccountNames::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgLookupMultipleAccountNames_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgLookupMultipleAccountNames_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgLookupMultipleAccountNamesResponse_Account_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgLookupMultipleAccountNamesResponse_Account_default_instance_;
    new (ptr) ::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgLookupMultipleAccountNamesResponse_Account_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgLookupMultipleAccountNamesResponse_Account_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgLookupMultipleAccountNamesResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgLookupMultipleAccountNamesResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgLookupMultipleAccountNamesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgLookupMultipleAccountNamesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgLookupMultipleAccountNamesResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgLookupMultipleAccountNamesResponse_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgLookupMultipleAccountNamesResponse_Account_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgRequestCrateItems_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgRequestCrateItems_default_instance_;
    new (ptr) ::proto::dota::CMsgRequestCrateItems();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgRequestCrateItems::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRequestCrateItems_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRequestCrateItems_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgRequestCrateItemsResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgRequestCrateItemsResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgRequestCrateItemsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgRequestCrateItemsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRequestCrateItemsResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRequestCrateItemsResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgRequestCrateEscalationLevel_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgRequestCrateEscalationLevel_default_instance_;
    new (ptr) ::proto::dota::CMsgRequestCrateEscalationLevel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgRequestCrateEscalationLevel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRequestCrateEscalationLevel_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRequestCrateEscalationLevel_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgRequestCrateEscalationLevelResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgRequestCrateEscalationLevelResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgRequestCrateEscalationLevelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgRequestCrateEscalationLevelResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRequestCrateEscalationLevelResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRequestCrateEscalationLevelResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCCanUseDropRateBonus_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCCanUseDropRateBonus_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCCanUseDropRateBonus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCCanUseDropRateBonus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCCanUseDropRateBonus_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCCanUseDropRateBonus_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgSQLAddDropRateBonus_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgSQLAddDropRateBonus_default_instance_;
    new (ptr) ::proto::dota::CMsgSQLAddDropRateBonus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgSQLAddDropRateBonus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSQLAddDropRateBonus_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSQLAddDropRateBonus_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgSQLUpgradeBattleBooster_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgSQLUpgradeBattleBooster_default_instance_;
    new (ptr) ::proto::dota::CMsgSQLUpgradeBattleBooster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgSQLUpgradeBattleBooster::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSQLUpgradeBattleBooster_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSQLUpgradeBattleBooster_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCRefreshSOCache_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCRefreshSOCache_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCRefreshSOCache();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCRefreshSOCache::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCRefreshSOCache_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCRefreshSOCache_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCCheckAccountTradeStatus_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCCheckAccountTradeStatus_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCCheckAccountTradeStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCCheckAccountTradeStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCCheckAccountTradeStatus_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCCheckAccountTradeStatus_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCCheckAccountTradeStatusResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCCheckAccountTradeStatusResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCCheckAccountTradeStatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCCheckAccountTradeStatusResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCCheckAccountTradeStatusResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCCheckAccountTradeStatusResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCAddSubscriptionTime_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCAddSubscriptionTime_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCAddSubscriptionTime();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCAddSubscriptionTime::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCAddSubscriptionTime_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCAddSubscriptionTime_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCGrantAccountRolledItems_Item_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCGrantAccountRolledItems_Item_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CMsgGCToGCGrantAccountRolledItems_Item_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCMsgGCToGCGrantAccountRolledItems_Item_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_econ_5fgcmessages_2eproto.base,
      &scc_info_CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgGCToGCGrantAccountRolledItems_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCGrantAccountRolledItems_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCGrantAccountRolledItems();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCGrantAccountRolledItems::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGCToGCGrantAccountRolledItems_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGCToGCGrantAccountRolledItems_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgGCToGCGrantAccountRolledItems_Item_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgGCToGCGrantSelfMadeItemToAccount_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCGrantSelfMadeItemToAccount_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCGrantSelfMadeItemToAccount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCGrantSelfMadeItemToAccount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCGrantSelfMadeItemToAccount_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCGrantSelfMadeItemToAccount_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgUseItem_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgUseItem_default_instance_;
    new (ptr) ::proto::dota::CMsgUseItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgUseItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgUseItem_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgUseItem_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgServerUseItem_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgServerUseItem_default_instance_;
    new (ptr) ::proto::dota::CMsgServerUseItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgServerUseItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgServerUseItem_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgServerUseItem_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgUseItem_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgUseMultipleItems_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgUseMultipleItems_default_instance_;
    new (ptr) ::proto::dota::CMsgUseMultipleItems();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgUseMultipleItems::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgUseMultipleItems_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgUseMultipleItems_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCPartnerBalanceRequest_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCPartnerBalanceRequest_default_instance_;
    new (ptr) ::proto::dota::CMsgGCPartnerBalanceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCPartnerBalanceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCPartnerBalanceRequest_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCPartnerBalanceRequest_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCPartnerBalanceResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCPartnerBalanceResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgGCPartnerBalanceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCPartnerBalanceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCPartnerBalanceResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCPartnerBalanceResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCGCStoreRechargeRedirect_LineItem_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CGCStoreRechargeRedirect_LineItem_default_instance_;
    new (ptr) ::proto::dota::CGCStoreRechargeRedirect_LineItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CGCStoreRechargeRedirect_LineItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CGCStoreRechargeRedirect_LineItem_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCGCStoreRechargeRedirect_LineItem_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCPartnerRechargeRedirectURLRequest_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCPartnerRechargeRedirectURLRequest_default_instance_;
    new (ptr) ::proto::dota::CMsgGCPartnerRechargeRedirectURLRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCPartnerRechargeRedirectURLRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGCPartnerRechargeRedirectURLRequest_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGCPartnerRechargeRedirectURLRequest_econ_5fgcmessages_2eproto}, {
      &scc_info_CGCStoreRechargeRedirect_LineItem_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgGCPartnerRechargeRedirectURLResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCPartnerRechargeRedirectURLResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgGCPartnerRechargeRedirectURLResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCPartnerRechargeRedirectURLResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCPartnerRechargeRedirectURLResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCPartnerRechargeRedirectURLResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCEconSQLWorkItemEmbeddedRollbackData_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCEconSQLWorkItemEmbeddedRollbackData_default_instance_;
    new (ptr) ::proto::dota::CMsgGCEconSQLWorkItemEmbeddedRollbackData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCEconSQLWorkItemEmbeddedRollbackData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCEconSQLWorkItemEmbeddedRollbackData_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCEconSQLWorkItemEmbeddedRollbackData_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgCraftStatue_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgCraftStatue_default_instance_;
    new (ptr) ::proto::dota::CMsgCraftStatue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgCraftStatue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCraftStatue_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCraftStatue_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgRedeemCode_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgRedeemCode_default_instance_;
    new (ptr) ::proto::dota::CMsgRedeemCode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgRedeemCode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRedeemCode_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRedeemCode_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgRedeemCodeResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgRedeemCodeResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgRedeemCodeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgRedeemCodeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgRedeemCodeResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgRedeemCodeResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgDevNewItemRequest_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDevNewItemRequest_default_instance_;
    new (ptr) ::proto::dota::CMsgDevNewItemRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDevNewItemRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDevNewItemRequest_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDevNewItemRequest_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgDevNewItemRequestResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDevNewItemRequestResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgDevNewItemRequestResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDevNewItemRequestResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDevNewItemRequestResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDevNewItemRequestResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgDevUnlockAllItemStyles_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDevUnlockAllItemStyles_default_instance_;
    new (ptr) ::proto::dota::CMsgDevUnlockAllItemStyles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDevUnlockAllItemStyles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDevUnlockAllItemStyles_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDevUnlockAllItemStyles_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgDevUnlockAllItemStylesResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgDevUnlockAllItemStylesResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgDevUnlockAllItemStylesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgDevUnlockAllItemStylesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDevUnlockAllItemStylesResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDevUnlockAllItemStylesResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCGetAccountSubscriptionItem_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCGetAccountSubscriptionItem_default_instance_;
    new (ptr) ::proto::dota::CMsgGCGetAccountSubscriptionItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCGetAccountSubscriptionItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCGetAccountSubscriptionItem_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCGetAccountSubscriptionItem_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCGetAccountSubscriptionItemResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCGetAccountSubscriptionItemResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgGCGetAccountSubscriptionItemResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCGetAccountSubscriptionItemResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCGetAccountSubscriptionItemResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCGetAccountSubscriptionItemResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCAddGiftItem_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCAddGiftItem_default_instance_;
    new (ptr) ::proto::dota::CMsgGCAddGiftItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCAddGiftItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCAddGiftItem_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCAddGiftItem_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCWrapAndDeliverGift_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCWrapAndDeliverGift_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCWrapAndDeliverGift();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCWrapAndDeliverGift::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCWrapAndDeliverGift_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCWrapAndDeliverGift_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCWrapAndDeliverGiftResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCWrapAndDeliverGiftResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCWrapAndDeliverGiftResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCWrapAndDeliverGiftResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCWrapAndDeliverGiftResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCWrapAndDeliverGiftResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCUnwrapGift_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCUnwrapGift_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCUnwrapGift();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCUnwrapGift::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCUnwrapGift_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCUnwrapGift_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCGetGiftPermissions_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCGetGiftPermissions_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCGetGiftPermissions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCGetGiftPermissions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCGetGiftPermissions_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCGetGiftPermissions_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCGetGiftPermissionsResponse_FriendPermission_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCGetGiftPermissionsResponse_FriendPermission_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCGetGiftPermissionsResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCGetGiftPermissionsResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCGetGiftPermissionsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCGetGiftPermissionsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientToGCGetGiftPermissionsResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientToGCGetGiftPermissionsResponse_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgClientToGCUnpackBundle_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCUnpackBundle_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCUnpackBundle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCUnpackBundle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCUnpackBundle_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCUnpackBundle_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCUnpackBundleResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCUnpackBundleResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCUnpackBundleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCUnpackBundleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCUnpackBundleResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCUnpackBundleResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToClientStoreTransactionCompleted_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToClientStoreTransactionCompleted_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToClientStoreTransactionCompleted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToClientStoreTransactionCompleted::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToClientStoreTransactionCompleted_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToClientStoreTransactionCompleted_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCEquipItems_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCEquipItems_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCEquipItems();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCEquipItems::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientToGCEquipItems_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientToGCEquipItems_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgAdjustItemEquippedState_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgClientToGCEquipItemsResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCEquipItemsResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCEquipItemsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCEquipItemsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCEquipItemsResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCEquipItemsResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCSetItemStyle_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCSetItemStyle_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCSetItemStyle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCSetItemStyle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCSetItemStyle_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCSetItemStyle_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCSetItemStyleResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCSetItemStyleResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCSetItemStyleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCSetItemStyleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCSetItemStyleResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCSetItemStyleResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCUnlockItemStyle_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCUnlockItemStyle_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCUnlockItemStyle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCUnlockItemStyle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCUnlockItemStyle_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCUnlockItemStyle_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCUnlockItemStyleResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCUnlockItemStyleResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCUnlockItemStyleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCUnlockItemStyleResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCUnlockItemStyleResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCUnlockItemStyleResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCSetItemInventoryCategory_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCSetItemInventoryCategory_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCSetItemInventoryCategory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCSetItemInventoryCategory::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCSetItemInventoryCategory_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCSetItemInventoryCategory_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCUnlockCrate_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCUnlockCrate_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCUnlockCrate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCUnlockCrate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCUnlockCrate_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCUnlockCrate_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCUnlockCrateResponse_Item_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCUnlockCrateResponse_Item_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCUnlockCrateResponse_Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCUnlockCrateResponse_Item::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCUnlockCrateResponse_Item_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCUnlockCrateResponse_Item_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCUnlockCrateResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCUnlockCrateResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCUnlockCrateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCUnlockCrateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientToGCUnlockCrateResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientToGCUnlockCrateResponse_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgClientToGCUnlockCrateResponse_Item_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgClientToGCRemoveItemAttribute_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCRemoveItemAttribute_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCRemoveItemAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCRemoveItemAttribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCRemoveItemAttribute_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCRemoveItemAttribute_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCRemoveItemAttributeResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCRemoveItemAttributeResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCRemoveItemAttributeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCRemoveItemAttributeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCRemoveItemAttributeResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCRemoveItemAttributeResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCNameItem_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCNameItem_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCNameItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCNameItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCNameItem_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCNameItem_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCNameItemResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCNameItemResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCNameItemResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCNameItemResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCNameItemResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCNameItemResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCSetItemPosition_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCSetItemPosition_default_instance_;
    new (ptr) ::proto::dota::CMsgGCSetItemPosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCSetItemPosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCSetItemPosition_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCSetItemPosition_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCAttribute_ItemDynamicRecipeComponent_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CAttribute_ItemDynamicRecipeComponent_default_instance_;
    new (ptr) ::proto::dota::CAttribute_ItemDynamicRecipeComponent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CAttribute_ItemDynamicRecipeComponent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CAttribute_ItemDynamicRecipeComponent_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCAttribute_ItemDynamicRecipeComponent_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCProtoItemSocket_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CProtoItemSocket_default_instance_;
    new (ptr) ::proto::dota::CProtoItemSocket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CProtoItemSocket::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CProtoItemSocket_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCProtoItemSocket_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCProtoItemSocket_Empty_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CProtoItemSocket_Empty_default_instance_;
    new (ptr) ::proto::dota::CProtoItemSocket_Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CProtoItemSocket_Empty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CProtoItemSocket_Empty_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCProtoItemSocket_Empty_econ_5fgcmessages_2eproto}, {
      &scc_info_CProtoItemSocket_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCProtoItemSocket_Effect_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CProtoItemSocket_Effect_default_instance_;
    new (ptr) ::proto::dota::CProtoItemSocket_Effect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CProtoItemSocket_Effect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CProtoItemSocket_Effect_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCProtoItemSocket_Effect_econ_5fgcmessages_2eproto}, {
      &scc_info_CProtoItemSocket_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCProtoItemSocket_Color_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CProtoItemSocket_Color_default_instance_;
    new (ptr) ::proto::dota::CProtoItemSocket_Color();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CProtoItemSocket_Color::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CProtoItemSocket_Color_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCProtoItemSocket_Color_econ_5fgcmessages_2eproto}, {
      &scc_info_CProtoItemSocket_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCProtoItemSocket_Strange_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CProtoItemSocket_Strange_default_instance_;
    new (ptr) ::proto::dota::CProtoItemSocket_Strange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CProtoItemSocket_Strange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CProtoItemSocket_Strange_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCProtoItemSocket_Strange_econ_5fgcmessages_2eproto}, {
      &scc_info_CProtoItemSocket_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCProtoItemSocket_Spectator_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CProtoItemSocket_Spectator_default_instance_;
    new (ptr) ::proto::dota::CProtoItemSocket_Spectator();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CProtoItemSocket_Spectator::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CProtoItemSocket_Spectator_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCProtoItemSocket_Spectator_econ_5fgcmessages_2eproto}, {
      &scc_info_CProtoItemSocket_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCProtoItemSocket_AssetModifier_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CProtoItemSocket_AssetModifier_default_instance_;
    new (ptr) ::proto::dota::CProtoItemSocket_AssetModifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CProtoItemSocket_AssetModifier::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CProtoItemSocket_AssetModifier_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCProtoItemSocket_AssetModifier_econ_5fgcmessages_2eproto}, {
      &scc_info_CProtoItemSocket_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_default_instance_;
    new (ptr) ::proto::dota::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_econ_5fgcmessages_2eproto}, {
      &scc_info_CProtoItemSocket_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCProtoItemSocket_Autograph_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CProtoItemSocket_Autograph_default_instance_;
    new (ptr) ::proto::dota::CProtoItemSocket_Autograph();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CProtoItemSocket_Autograph::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CProtoItemSocket_Autograph_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCProtoItemSocket_Autograph_econ_5fgcmessages_2eproto}, {
      &scc_info_CProtoItemSocket_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCProtoItemSocket_StaticVisuals_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CProtoItemSocket_StaticVisuals_default_instance_;
    new (ptr) ::proto::dota::CProtoItemSocket_StaticVisuals();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CProtoItemSocket_StaticVisuals::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CProtoItemSocket_StaticVisuals_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCProtoItemSocket_StaticVisuals_econ_5fgcmessages_2eproto}, {
      &scc_info_CProtoItemSocket_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCAttribute_String_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CAttribute_String_default_instance_;
    new (ptr) ::proto::dota::CAttribute_String();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CAttribute_String::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CAttribute_String_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCAttribute_String_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCWorkshop_GetItemDailyRevenue_Request_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CWorkshop_GetItemDailyRevenue_Request_default_instance_;
    new (ptr) ::proto::dota::CWorkshop_GetItemDailyRevenue_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CWorkshop_GetItemDailyRevenue_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CWorkshop_GetItemDailyRevenue_Request_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCWorkshop_GetItemDailyRevenue_Request_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_default_instance_;
    new (ptr) ::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCWorkshop_GetItemDailyRevenue_Response_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CWorkshop_GetItemDailyRevenue_Response_default_instance_;
    new (ptr) ::proto::dota::CWorkshop_GetItemDailyRevenue_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CWorkshop_GetItemDailyRevenue_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CWorkshop_GetItemDailyRevenue_Response_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCWorkshop_GetItemDailyRevenue_Response_econ_5fgcmessages_2eproto}, {
      &scc_info_CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCWorkshop_GetPackageDailyRevenue_Request_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CWorkshop_GetPackageDailyRevenue_Request_default_instance_;
    new (ptr) ::proto::dota::CWorkshop_GetPackageDailyRevenue_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CWorkshop_GetPackageDailyRevenue_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CWorkshop_GetPackageDailyRevenue_Request_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCWorkshop_GetPackageDailyRevenue_Request_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_default_instance_;
    new (ptr) ::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCWorkshop_GetPackageDailyRevenue_Response_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CWorkshop_GetPackageDailyRevenue_Response_default_instance_;
    new (ptr) ::proto::dota::CWorkshop_GetPackageDailyRevenue_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CWorkshop_GetPackageDailyRevenue_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CWorkshop_GetPackageDailyRevenue_Response_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCWorkshop_GetPackageDailyRevenue_Response_econ_5fgcmessages_2eproto}, {
      &scc_info_CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgSQLGCToGCGrantBackpackSlots_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgSQLGCToGCGrantBackpackSlots_default_instance_;
    new (ptr) ::proto::dota::CMsgSQLGCToGCGrantBackpackSlots();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgSQLGCToGCGrantBackpackSlots::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgSQLGCToGCGrantBackpackSlots_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgSQLGCToGCGrantBackpackSlots_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCLookupAccountName_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCLookupAccountName_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCLookupAccountName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCLookupAccountName::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCLookupAccountName_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCLookupAccountName_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCLookupAccountNameResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCLookupAccountNameResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCLookupAccountNameResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCLookupAccountNameResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCLookupAccountNameResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCLookupAccountNameResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCCreateStaticRecipe_Item_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCCreateStaticRecipe_Item_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCCreateStaticRecipe_Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCCreateStaticRecipe_Item::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCCreateStaticRecipe_Item_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCCreateStaticRecipe_Item_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCCreateStaticRecipe_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCCreateStaticRecipe_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCCreateStaticRecipe();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCCreateStaticRecipe::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientToGCCreateStaticRecipe_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientToGCCreateStaticRecipe_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgClientToGCCreateStaticRecipe_Item_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgClientToGCCreateStaticRecipeResponse_OutputItem_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCCreateStaticRecipeResponse_OutputItem_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCCreateStaticRecipeResponse_OutputItem_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCCreateStaticRecipeResponse_OutputItem_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCCreateStaticRecipeResponse_InputError_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCCreateStaticRecipeResponse_InputError_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCCreateStaticRecipeResponse_InputError_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCCreateStaticRecipeResponse_InputError_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgClientToGCCreateStaticRecipeResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgClientToGCCreateStaticRecipeResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CMsgClientToGCCreateStaticRecipeResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCMsgClientToGCCreateStaticRecipeResponse_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgClientToGCCreateStaticRecipeResponse_OutputItem_econ_5fgcmessages_2eproto.base,
      &scc_info_CMsgClientToGCCreateStaticRecipeResponse_InputError_econ_5fgcmessages_2eproto.base,
      &scc_info_CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgProcessTransactionOrder_Item_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgProcessTransactionOrder_Item_default_instance_;
    new (ptr) ::proto::dota::CMsgProcessTransactionOrder_Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgProcessTransactionOrder_Item::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgProcessTransactionOrder_Item_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgProcessTransactionOrder_Item_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgProcessTransactionOrder_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgProcessTransactionOrder_default_instance_;
    new (ptr) ::proto::dota::CMsgProcessTransactionOrder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgProcessTransactionOrder::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgProcessTransactionOrder_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgProcessTransactionOrder_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgProcessTransactionOrder_Item_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgGCToGCStoreProcessCDKeyTransaction_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCStoreProcessCDKeyTransaction_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCStoreProcessCDKeyTransaction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCStoreProcessCDKeyTransaction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGCToGCStoreProcessCDKeyTransaction_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGCToGCStoreProcessCDKeyTransaction_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgProcessTransactionOrder_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgGCToGCStoreProcessCDKeyTransactionResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCStoreProcessCDKeyTransactionResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCStoreProcessCDKeyTransactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCStoreProcessCDKeyTransactionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCStoreProcessCDKeyTransactionResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCStoreProcessCDKeyTransactionResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCStoreProcessSettlement_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCStoreProcessSettlement_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCStoreProcessSettlement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCStoreProcessSettlement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGCToGCStoreProcessSettlement_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGCToGCStoreProcessSettlement_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgProcessTransactionOrder_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgGCToGCStoreProcessSettlementResponse_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCStoreProcessSettlementResponse_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCStoreProcessSettlementResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCStoreProcessSettlementResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCStoreProcessSettlementResponse_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCStoreProcessSettlementResponse_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCBroadcastConsoleCommand_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCBroadcastConsoleCommand_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCBroadcastConsoleCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCBroadcastConsoleCommand::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCBroadcastConsoleCommand_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCBroadcastConsoleCommand_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCConsoleOutput_OutputLine_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCConsoleOutput_OutputLine_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCConsoleOutput_OutputLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCConsoleOutput_OutputLine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCConsoleOutput_OutputLine_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCConsoleOutput_OutputLine_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCConsoleOutput_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCConsoleOutput_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCConsoleOutput();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCConsoleOutput::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGCToGCConsoleOutput_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGCToGCConsoleOutput_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgGCToGCConsoleOutput_OutputLine_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgItemAges_MaxItemIDTimestamp_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgItemAges_MaxItemIDTimestamp_default_instance_;
    new (ptr) ::proto::dota::CMsgItemAges_MaxItemIDTimestamp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgItemAges_MaxItemIDTimestamp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgItemAges_MaxItemIDTimestamp_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgItemAges_MaxItemIDTimestamp_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgItemAges_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgItemAges_default_instance_;
    new (ptr) ::proto::dota::CMsgItemAges();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgItemAges::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgItemAges_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgItemAges_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgItemAges_MaxItemIDTimestamp_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgGCToGCInternalTestMsg_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCInternalTestMsg_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCInternalTestMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCInternalTestMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCInternalTestMsg_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCInternalTestMsg_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCClientServerVersionsUpdated_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCClientServerVersionsUpdated_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCClientServerVersionsUpdated();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCClientServerVersionsUpdated::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCClientServerVersionsUpdated_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCClientServerVersionsUpdated_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCBroadcastMessageFromSub_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCBroadcastMessageFromSub_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCBroadcastMessageFromSub();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCBroadcastMessageFromSub::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCBroadcastMessageFromSub_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCBroadcastMessageFromSub_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToClientCurrencyPricePoints_Currency_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToClientCurrencyPricePoints_Currency_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToClientCurrencyPricePoints_Currency();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToClientCurrencyPricePoints_Currency::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToClientCurrencyPricePoints_Currency_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToClientCurrencyPricePoints_Currency_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToClientCurrencyPricePoints_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToClientCurrencyPricePoints_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToClientCurrencyPricePoints();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToClientCurrencyPricePoints::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGCToClientCurrencyPricePoints_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGCToClientCurrencyPricePoints_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgGCToClientCurrencyPricePoints_Currency_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgBannedWordList_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgBannedWordList_default_instance_;
    new (ptr) ::proto::dota::CMsgBannedWordList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgBannedWordList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgBannedWordList_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgBannedWordList_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCEcon_FlushInventoryCache_Request_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CEcon_FlushInventoryCache_Request_default_instance_;
    new (ptr) ::proto::dota::CEcon_FlushInventoryCache_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CEcon_FlushInventoryCache_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CEcon_FlushInventoryCache_Request_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCEcon_FlushInventoryCache_Request_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCEcon_FlushInventoryCache_Response_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CEcon_FlushInventoryCache_Response_default_instance_;
    new (ptr) ::proto::dota::CEcon_FlushInventoryCache_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CEcon_FlushInventoryCache_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CEcon_FlushInventoryCache_Response_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCEcon_FlushInventoryCache_Response_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCFlushSteamInventoryCache_Key_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCFlushSteamInventoryCache_Key_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCFlushSteamInventoryCache_Key();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCFlushSteamInventoryCache_Key::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCFlushSteamInventoryCache_Key_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCFlushSteamInventoryCache_Key_econ_5fgcmessages_2eproto}, {}};

static void InitDefaultsCMsgGCToGCFlushSteamInventoryCache_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCFlushSteamInventoryCache_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCFlushSteamInventoryCache();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCFlushSteamInventoryCache::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGCToGCFlushSteamInventoryCache_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGCToGCFlushSteamInventoryCache_econ_5fgcmessages_2eproto}, {
      &scc_info_CMsgGCToGCFlushSteamInventoryCache_Key_econ_5fgcmessages_2eproto.base,}};

static void InitDefaultsCMsgGCToGCUpdateSubscriptionItems_econ_5fgcmessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::dota::_CMsgGCToGCUpdateSubscriptionItems_default_instance_;
    new (ptr) ::proto::dota::CMsgGCToGCUpdateSubscriptionItems();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::dota::CMsgGCToGCUpdateSubscriptionItems::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCToGCUpdateSubscriptionItems_econ_5fgcmessages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCToGCUpdateSubscriptionItems_econ_5fgcmessages_2eproto}, {}};

void InitDefaults_econ_5fgcmessages_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgApplyAutograph_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgAdjustItemEquippedState_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgEconPlayerStrangeCountAdjustment_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRequestItemPurgatory_FinalizePurchase_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRequestItemPurgatory_FinalizePurchaseResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRequestItemPurgatory_RefundPurchase_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRequestItemPurgatory_RefundPurchaseResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCraftingResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCRequestStoreSalesData_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCRequestStoreSalesDataResponse_Price_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCRequestStoreSalesDataResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCRequestStoreSalesDataUpToDateResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCPingRequest_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCPingResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCGetUserSessionServer_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCGetUserSessionServerResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCGetUserServerMembers_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCGetUserServerMembersResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgLookupMultipleAccountNames_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgLookupMultipleAccountNamesResponse_Account_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgLookupMultipleAccountNamesResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRequestCrateItems_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRequestCrateItemsResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRequestCrateEscalationLevel_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRequestCrateEscalationLevelResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCCanUseDropRateBonus_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSQLAddDropRateBonus_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSQLUpgradeBattleBooster_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCRefreshSOCache_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCCheckAccountTradeStatus_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCCheckAccountTradeStatusResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCAddSubscriptionTime_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCGrantAccountRolledItems_Item_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCGrantAccountRolledItems_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCGrantSelfMadeItemToAccount_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgUseItem_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgServerUseItem_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgUseMultipleItems_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCPartnerBalanceRequest_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCPartnerBalanceResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CGCStoreRechargeRedirect_LineItem_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCPartnerRechargeRedirectURLRequest_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCPartnerRechargeRedirectURLResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCEconSQLWorkItemEmbeddedRollbackData_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCraftStatue_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRedeemCode_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgRedeemCodeResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDevNewItemRequest_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDevNewItemRequestResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDevUnlockAllItemStyles_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDevUnlockAllItemStylesResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCGetAccountSubscriptionItem_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCGetAccountSubscriptionItemResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCAddGiftItem_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCWrapAndDeliverGift_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCWrapAndDeliverGiftResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCUnwrapGift_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCGetGiftPermissions_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCGetGiftPermissionsResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCUnpackBundle_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCUnpackBundleResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToClientStoreTransactionCompleted_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCEquipItems_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCEquipItemsResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCSetItemStyle_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCSetItemStyleResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCUnlockItemStyle_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCUnlockItemStyleResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCSetItemInventoryCategory_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCUnlockCrate_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCUnlockCrateResponse_Item_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCUnlockCrateResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCRemoveItemAttribute_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCRemoveItemAttributeResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCNameItem_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCNameItemResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCSetItemPosition_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CAttribute_ItemDynamicRecipeComponent_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CProtoItemSocket_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CProtoItemSocket_Empty_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CProtoItemSocket_Effect_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CProtoItemSocket_Color_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CProtoItemSocket_Strange_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CProtoItemSocket_Spectator_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CProtoItemSocket_AssetModifier_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CProtoItemSocket_Autograph_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CProtoItemSocket_StaticVisuals_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CAttribute_String_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CWorkshop_GetItemDailyRevenue_Request_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CWorkshop_GetItemDailyRevenue_Response_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CWorkshop_GetPackageDailyRevenue_Request_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CWorkshop_GetPackageDailyRevenue_Response_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgSQLGCToGCGrantBackpackSlots_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCLookupAccountName_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCLookupAccountNameResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCCreateStaticRecipe_Item_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCCreateStaticRecipe_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCCreateStaticRecipeResponse_OutputItem_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCCreateStaticRecipeResponse_InputError_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientToGCCreateStaticRecipeResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgProcessTransactionOrder_Item_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgProcessTransactionOrder_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCStoreProcessCDKeyTransaction_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCStoreProcessCDKeyTransactionResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCStoreProcessSettlement_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCStoreProcessSettlementResponse_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCBroadcastConsoleCommand_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCConsoleOutput_OutputLine_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCConsoleOutput_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgItemAges_MaxItemIDTimestamp_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgItemAges_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCInternalTestMsg_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCClientServerVersionsUpdated_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCBroadcastMessageFromSub_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToClientCurrencyPricePoints_Currency_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToClientCurrencyPricePoints_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgBannedWordList_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEcon_FlushInventoryCache_Request_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CEcon_FlushInventoryCache_Response_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCFlushSteamInventoryCache_Key_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCFlushSteamInventoryCache_econ_5fgcmessages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCToGCUpdateSubscriptionItems_econ_5fgcmessages_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_econ_5fgcmessages_2eproto[130];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_econ_5fgcmessages_2eproto[13];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_econ_5fgcmessages_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_econ_5fgcmessages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgApplyAutograph, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgApplyAutograph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgApplyAutograph, autograph_item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgApplyAutograph, item_item_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgAdjustItemEquippedState, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgAdjustItemEquippedState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgAdjustItemEquippedState, item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgAdjustItemEquippedState, new_class_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgAdjustItemEquippedState, new_slot_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgAdjustItemEquippedState, style_index_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, event_type_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, adjustment_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgEconPlayerStrangeCountAdjustment, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgEconPlayerStrangeCountAdjustment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgEconPlayerStrangeCountAdjustment, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgEconPlayerStrangeCountAdjustment, strange_count_adjustments_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgEconPlayerStrangeCountAdjustment, turbo_mode_),
  0,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestItemPurgatory_FinalizePurchase, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestItemPurgatory_FinalizePurchase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestItemPurgatory_FinalizePurchase, item_ids_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestItemPurgatory_FinalizePurchaseResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestItemPurgatory_FinalizePurchaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestItemPurgatory_FinalizePurchaseResponse, result_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestItemPurgatory_FinalizePurchaseResponse, item_ids_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestItemPurgatory_RefundPurchase, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestItemPurgatory_RefundPurchase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestItemPurgatory_RefundPurchase, item_ids_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestItemPurgatory_RefundPurchaseResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestItemPurgatory_RefundPurchaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestItemPurgatory_RefundPurchaseResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgCraftingResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgCraftingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgCraftingResponse, item_ids_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesData, version_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesData, currency_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price, item_def_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price, price_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesDataResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesDataResponse, sale_price_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesDataResponse, version_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesDataResponse, expiration_time_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesDataUpToDateResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesDataUpToDateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesDataUpToDateResponse, version_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCRequestStoreSalesDataUpToDateResponse, expiration_time_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCPingRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCPingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCPingResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCPingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGetUserSessionServer, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGetUserSessionServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGetUserSessionServer, account_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGetUserSessionServerResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGetUserSessionServerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGetUserSessionServerResponse, server_steam_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGetUserSessionServerResponse, is_online_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGetUserServerMembers, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGetUserServerMembers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGetUserServerMembers, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGetUserServerMembers, max_spectators_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGetUserServerMembersResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGetUserServerMembersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGetUserServerMembersResponse, member_account_id_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgLookupMultipleAccountNames, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgLookupMultipleAccountNames, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgLookupMultipleAccountNames, accountids_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account, accountid_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account, persona_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgLookupMultipleAccountNamesResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgLookupMultipleAccountNamesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgLookupMultipleAccountNamesResponse, accounts_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateItems, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateItems, crate_item_def_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateItemsResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateItemsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateItemsResponse, response_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateItemsResponse, item_defs_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateItemsResponse, peek_item_defs_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateEscalationLevel, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateEscalationLevel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateEscalationLevel, crate_item_def_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateEscalationLevelResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateEscalationLevelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateEscalationLevelResponse, response_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateEscalationLevelResponse, escalation_level0_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateEscalationLevelResponse, escalation_level1_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateEscalationLevelResponse, escalation_level2_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRequestCrateEscalationLevelResponse, escalation_level3_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCCanUseDropRateBonus, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCCanUseDropRateBonus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCCanUseDropRateBonus, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCCanUseDropRateBonus, drop_rate_bonus_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCCanUseDropRateBonus, booster_type_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCCanUseDropRateBonus, exclusive_item_def_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCCanUseDropRateBonus, allow_equal_rate_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLAddDropRateBonus, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLAddDropRateBonus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLAddDropRateBonus, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLAddDropRateBonus, item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLAddDropRateBonus, item_def_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLAddDropRateBonus, drop_rate_bonus_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLAddDropRateBonus, booster_type_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLAddDropRateBonus, seconds_duration_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLAddDropRateBonus, end_time_stamp_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLUpgradeBattleBooster, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLUpgradeBattleBooster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLUpgradeBattleBooster, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLUpgradeBattleBooster, item_def_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLUpgradeBattleBooster, bonus_to_add_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLUpgradeBattleBooster, booster_type_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCRefreshSOCache, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCRefreshSOCache, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCRefreshSOCache, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCRefreshSOCache, reload_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCCheckAccountTradeStatus, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCCheckAccountTradeStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCCheckAccountTradeStatus, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCCheckAccountTradeStatus, initiator_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCCheckAccountTradeStatusResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCCheckAccountTradeStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCCheckAccountTradeStatusResponse, can_trade_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCCheckAccountTradeStatusResponse, error_code_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCAddSubscriptionTime, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCAddSubscriptionTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCAddSubscriptionTime, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCAddSubscriptionTime, matching_subscription_def_indexes_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCAddSubscriptionTime, additional_seconds_),
  0,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, name_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, value_uint32_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, value_float_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, value_string_),
  0,
  2,
  3,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, owner_account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, audit_action_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, audit_data_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item, item_def_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item, loot_lists_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item, ignore_limit_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item, origin_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item, dynamic_attributes_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item, additional_audit_entries_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item, inventory_token_),
  0,
  ~0u,
  1,
  2,
  ~0u,
  ~0u,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems, items_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems, audit_action_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantAccountRolledItems, audit_data_),
  0,
  ~0u,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantSelfMadeItemToAccount, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantSelfMadeItemToAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantSelfMadeItemToAccount, item_def_index_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCGrantSelfMadeItemToAccount, accountid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgUseItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgUseItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgUseItem, item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgUseItem, target_steam_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgUseItem, gift__potential_targets_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgUseItem, duel__class_lock_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgUseItem, initiator_steam_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgUseItem, itempack__ack_immediately_),
  0,
  1,
  ~0u,
  3,
  2,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgServerUseItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgServerUseItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgServerUseItem, initiator_account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgServerUseItem, use_item_msg_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgUseMultipleItems, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgUseMultipleItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgUseMultipleItems, item_ids_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCPartnerBalanceRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCPartnerBalanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCPartnerBalanceResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCPartnerBalanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCPartnerBalanceResponse, result_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCPartnerBalanceResponse, balance_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CGCStoreRechargeRedirect_LineItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CGCStoreRechargeRedirect_LineItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CGCStoreRechargeRedirect_LineItem, item_def_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CGCStoreRechargeRedirect_LineItem, quantity_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCPartnerRechargeRedirectURLRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCPartnerRechargeRedirectURLRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCPartnerRechargeRedirectURLRequest, line_items_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCPartnerRechargeRedirectURLResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCPartnerRechargeRedirectURLResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCPartnerRechargeRedirectURLResponse, result_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCPartnerRechargeRedirectURLResponse, url_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCEconSQLWorkItemEmbeddedRollbackData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCEconSQLWorkItemEmbeddedRollbackData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCEconSQLWorkItemEmbeddedRollbackData, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCEconSQLWorkItemEmbeddedRollbackData, deleted_item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCEconSQLWorkItemEmbeddedRollbackData, old_audit_action_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCEconSQLWorkItemEmbeddedRollbackData, new_audit_action_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCEconSQLWorkItemEmbeddedRollbackData, expected_audit_action_),
  1,
  0,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgCraftStatue, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgCraftStatue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgCraftStatue, heroid_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgCraftStatue, sequencename_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgCraftStatue, cycle_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgCraftStatue, description_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgCraftStatue, pedestal_itemdef_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgCraftStatue, toolid_),
  2,
  0,
  3,
  1,
  5,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRedeemCode, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRedeemCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRedeemCode, code_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRedeemCodeResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRedeemCodeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRedeemCodeResponse, response_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgRedeemCodeResponse, item_id_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDevNewItemRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDevNewItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDevNewItemRequest, item_def_name_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDevNewItemRequest, loot_list_name_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDevNewItemRequest, attr_def_name_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDevNewItemRequest, attr_value_),
  0,
  1,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDevNewItemRequestResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDevNewItemRequestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDevNewItemRequestResponse, success_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDevUnlockAllItemStyles, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDevUnlockAllItemStyles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDevUnlockAllItemStyles, item_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDevUnlockAllItemStylesResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDevUnlockAllItemStylesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgDevUnlockAllItemStylesResponse, success_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCGetAccountSubscriptionItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCGetAccountSubscriptionItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCGetAccountSubscriptionItem, account_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCGetAccountSubscriptionItemResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCGetAccountSubscriptionItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCGetAccountSubscriptionItemResponse, def_index_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCAddGiftItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCAddGiftItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCAddGiftItem, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCAddGiftItem, item_id_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCWrapAndDeliverGift, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCWrapAndDeliverGift, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCWrapAndDeliverGift, item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCWrapAndDeliverGift, give_to_account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCWrapAndDeliverGift, gift_message_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCWrapAndDeliverGiftResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCWrapAndDeliverGiftResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCWrapAndDeliverGiftResponse, response_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCWrapAndDeliverGiftResponse, gifting_charge_uses_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCWrapAndDeliverGiftResponse, gifting_charge_max_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCWrapAndDeliverGiftResponse, gifting_uses_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCWrapAndDeliverGiftResponse, gifting_max_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCWrapAndDeliverGiftResponse, gifting_window_hours_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCWrapAndDeliverGiftResponse, trade_restriction_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnwrapGift, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnwrapGift, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnwrapGift, item_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCGetGiftPermissions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCGetGiftPermissions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission, permission_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCGetGiftPermissionsResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCGetGiftPermissionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCGetGiftPermissionsResponse, is_unlimited_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCGetGiftPermissionsResponse, has_two_factor_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCGetGiftPermissionsResponse, sender_permission_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCGetGiftPermissionsResponse, friendship_age_requirement_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCGetGiftPermissionsResponse, friendship_age_requirement_two_factor_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCGetGiftPermissionsResponse, friend_permissions_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnpackBundle, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnpackBundle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnpackBundle, item_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnpackBundleResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnpackBundleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnpackBundleResponse, unpacked_item_ids_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnpackBundleResponse, response_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnpackBundleResponse, unpacked_item_def_indexes_),
  ~0u,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToClientStoreTransactionCompleted, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToClientStoreTransactionCompleted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToClientStoreTransactionCompleted, txn_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToClientStoreTransactionCompleted, item_ids_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCEquipItems, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCEquipItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCEquipItems, equips_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCEquipItemsResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCEquipItemsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCEquipItemsResponse, so_cache_version_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCSetItemStyle, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCSetItemStyle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCSetItemStyle, item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCSetItemStyle, style_index_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCSetItemStyleResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCSetItemStyleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCSetItemStyleResponse, response_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockItemStyle, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockItemStyle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockItemStyle, item_to_unlock_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockItemStyle, style_index_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockItemStyle, consumable_item_ids_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockItemStyleResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockItemStyleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockItemStyleResponse, response_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockItemStyleResponse, item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockItemStyleResponse, style_index_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockItemStyleResponse, style_prereq_),
  1,
  0,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCSetItemInventoryCategory, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCSetItemInventoryCategory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCSetItemInventoryCategory, item_ids_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCSetItemInventoryCategory, set_to_value_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCSetItemInventoryCategory, remove_categories_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCSetItemInventoryCategory, add_categories_),
  ~0u,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockCrate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockCrate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockCrate, crate_item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockCrate, key_item_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockCrateResponse_Item, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockCrateResponse_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockCrateResponse_Item, item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockCrateResponse_Item, def_index_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockCrateResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockCrateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockCrateResponse, result_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCUnlockCrateResponse, granted_items_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCRemoveItemAttribute, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCRemoveItemAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCRemoveItemAttribute, item_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCRemoveItemAttributeResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCRemoveItemAttributeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCRemoveItemAttributeResponse, response_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCRemoveItemAttributeResponse, item_id_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCNameItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCNameItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCNameItem, subject_item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCNameItem, tool_item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCNameItem, name_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCNameItemResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCNameItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCNameItemResponse, response_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCNameItemResponse, item_id_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCSetItemPosition, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCSetItemPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCSetItemPosition, item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCSetItemPosition, new_position_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CAttribute_ItemDynamicRecipeComponent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CAttribute_ItemDynamicRecipeComponent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CAttribute_ItemDynamicRecipeComponent, item_def_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CAttribute_ItemDynamicRecipeComponent, item_quality_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CAttribute_ItemDynamicRecipeComponent, item_flags_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CAttribute_ItemDynamicRecipeComponent, attributes_string_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CAttribute_ItemDynamicRecipeComponent, item_count_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CAttribute_ItemDynamicRecipeComponent, items_fulfilled_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CAttribute_ItemDynamicRecipeComponent, item_rarity_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CAttribute_ItemDynamicRecipeComponent, lootlist_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CAttribute_ItemDynamicRecipeComponent, fulfilled_item_id_),
  2,
  3,
  4,
  0,
  5,
  6,
  7,
  1,
  8,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket, item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket, attr_def_index_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket, required_type_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket, required_hero_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket, gem_def_index_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket, not_tradable_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket, required_item_slot_),
  2,
  3,
  4,
  0,
  5,
  6,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Empty, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Empty, socket_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Effect, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Effect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Effect, socket_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Effect, effect_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Color, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Color, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Color, socket_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Color, red_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Color, green_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Color, blue_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Strange, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Strange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Strange, socket_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Strange, strange_type_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Strange, strange_value_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Spectator, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Spectator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Spectator, socket_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Spectator, games_viewed_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Spectator, corporation_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Spectator, league_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Spectator, team_id_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_AssetModifier, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_AssetModifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_AssetModifier, socket_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_AssetModifier, asset_modifier_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, socket_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, asset_modifier_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, anim_modifier_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, ability_effect_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Autograph, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Autograph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Autograph, socket_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Autograph, autograph_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Autograph, autograph_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_Autograph, autograph_score_),
  1,
  0,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_StaticVisuals, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_StaticVisuals, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CProtoItemSocket_StaticVisuals, socket_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CAttribute_String, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CAttribute_String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CAttribute_String, value_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetItemDailyRevenue_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetItemDailyRevenue_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetItemDailyRevenue_Request, appid_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetItemDailyRevenue_Request, item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetItemDailyRevenue_Request, date_start_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetItemDailyRevenue_Request, date_end_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, country_code_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, date_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, revenue_usd_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, units_),
  0,
  2,
  1,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetItemDailyRevenue_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetItemDailyRevenue_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetItemDailyRevenue_Response, country_revenue_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetPackageDailyRevenue_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetPackageDailyRevenue_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetPackageDailyRevenue_Request, packageid_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetPackageDailyRevenue_Request, date_start_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetPackageDailyRevenue_Request, date_end_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue, country_code_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue, date_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue, revenue_usd_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue, units_),
  0,
  2,
  1,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetPackageDailyRevenue_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetPackageDailyRevenue_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CWorkshop_GetPackageDailyRevenue_Response, country_revenue_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLGCToGCGrantBackpackSlots, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLGCToGCGrantBackpackSlots, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLGCToGCGrantBackpackSlots, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgSQLGCToGCGrantBackpackSlots, add_slots_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCLookupAccountName, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCLookupAccountName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCLookupAccountName, account_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCLookupAccountNameResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCLookupAccountNameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCLookupAccountNameResponse, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCLookupAccountNameResponse, account_name_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipe_Item, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipe_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipe_Item, item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipe_Item, slot_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipe, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipe, items_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipe, recipe_def_index_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem, def_index_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem, item_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem, slot_id_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError, slot_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError, error_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput, slot_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput, value_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse, response_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse, output_items_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse, input_errors_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse, additional_outputs_),
  0,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder_Item, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder_Item, item_def_index_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder_Item, item_price_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder_Item, quantity_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder_Item, category_desc_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder_Item, store_purchase_type_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder_Item, source_reference_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder_Item, parent_stack_index_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder_Item, default_price_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder_Item, is_user_facing_),
  1,
  2,
  3,
  0,
  4,
  5,
  6,
  7,
  8,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder, txn_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder, steam_txn_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder, partner_txn_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder, steam_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder, time_stamp_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder, watermark_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder, purchase_report_status_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder, currency_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgProcessTransactionOrder, items_),
  0,
  1,
  2,
  3,
  5,
  4,
  6,
  7,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCStoreProcessCDKeyTransaction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCStoreProcessCDKeyTransaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCStoreProcessCDKeyTransaction, order_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCStoreProcessCDKeyTransaction, reason_code_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCStoreProcessCDKeyTransactionResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCStoreProcessCDKeyTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCStoreProcessCDKeyTransactionResponse, success_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCStoreProcessSettlement, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCStoreProcessSettlement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCStoreProcessSettlement, order_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCStoreProcessSettlement, partner_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCStoreProcessSettlementResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCStoreProcessSettlementResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCStoreProcessSettlementResponse, success_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCBroadcastConsoleCommand, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCBroadcastConsoleCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCBroadcastConsoleCommand, con_command_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCBroadcastConsoleCommand, report_output_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCBroadcastConsoleCommand, sending_gc_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCBroadcastConsoleCommand, output_initiator_),
  0,
  2,
  3,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCConsoleOutput_OutputLine, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCConsoleOutput_OutputLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCConsoleOutput_OutputLine, text_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCConsoleOutput_OutputLine, spew_level_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCConsoleOutput, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCConsoleOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCConsoleOutput, initiator_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCConsoleOutput, sending_gc_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCConsoleOutput, msgs_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgItemAges_MaxItemIDTimestamp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgItemAges_MaxItemIDTimestamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgItemAges_MaxItemIDTimestamp, timestamp_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgItemAges_MaxItemIDTimestamp, max_item_id_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgItemAges, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgItemAges, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgItemAges, max_item_id_timestamps_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCInternalTestMsg, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCInternalTestMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCInternalTestMsg, sending_gc_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCInternalTestMsg, sender_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCInternalTestMsg, context_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCInternalTestMsg, message_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCInternalTestMsg, message_body_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCInternalTestMsg, job_id_source_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCInternalTestMsg, job_id_target_),
  2,
  1,
  3,
  6,
  0,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCClientServerVersionsUpdated, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCClientServerVersionsUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCClientServerVersionsUpdated, client_min_allowed_version_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCClientServerVersionsUpdated, client_active_version_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCClientServerVersionsUpdated, server_active_version_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCClientServerVersionsUpdated, server_deployed_version_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCBroadcastMessageFromSub, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCBroadcastMessageFromSub, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCBroadcastMessageFromSub, msg_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCBroadcastMessageFromSub, serialized_msg_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCBroadcastMessageFromSub, account_id_list_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCBroadcastMessageFromSub, steam_id_list_),
  1,
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToClientCurrencyPricePoints_Currency, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToClientCurrencyPricePoints_Currency, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToClientCurrencyPricePoints_Currency, currency_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToClientCurrencyPricePoints_Currency, currency_price_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToClientCurrencyPricePoints, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToClientCurrencyPricePoints, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToClientCurrencyPricePoints, price_key_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToClientCurrencyPricePoints, currencies_),
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgBannedWordList, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgBannedWordList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgBannedWordList, version_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgBannedWordList, banned_words_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CEcon_FlushInventoryCache_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CEcon_FlushInventoryCache_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CEcon_FlushInventoryCache_Request, steamid_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CEcon_FlushInventoryCache_Request, appid_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CEcon_FlushInventoryCache_Request, contextid_),
  0,
  2,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CEcon_FlushInventoryCache_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CEcon_FlushInventoryCache_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CEcon_FlushInventoryCache_Response, success_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCFlushSteamInventoryCache_Key, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCFlushSteamInventoryCache_Key, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCFlushSteamInventoryCache_Key, steamid_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCFlushSteamInventoryCache_Key, contextid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCFlushSteamInventoryCache, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCFlushSteamInventoryCache, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCFlushSteamInventoryCache, keys_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCUpdateSubscriptionItems, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCUpdateSubscriptionItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCUpdateSubscriptionItems, account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::dota::CMsgGCToGCUpdateSubscriptionItems, always_notify_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::proto::dota::CMsgApplyAutograph)},
  { 9, 18, sizeof(::proto::dota::CMsgAdjustItemEquippedState)},
  { 22, 30, sizeof(::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment)},
  { 33, 41, sizeof(::proto::dota::CMsgEconPlayerStrangeCountAdjustment)},
  { 44, 50, sizeof(::proto::dota::CMsgRequestItemPurgatory_FinalizePurchase)},
  { 51, 58, sizeof(::proto::dota::CMsgRequestItemPurgatory_FinalizePurchaseResponse)},
  { 60, 66, sizeof(::proto::dota::CMsgRequestItemPurgatory_RefundPurchase)},
  { 67, 73, sizeof(::proto::dota::CMsgRequestItemPurgatory_RefundPurchaseResponse)},
  { 74, 80, sizeof(::proto::dota::CMsgCraftingResponse)},
  { 81, 88, sizeof(::proto::dota::CMsgGCRequestStoreSalesData)},
  { 90, 97, sizeof(::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price)},
  { 99, 107, sizeof(::proto::dota::CMsgGCRequestStoreSalesDataResponse)},
  { 110, 117, sizeof(::proto::dota::CMsgGCRequestStoreSalesDataUpToDateResponse)},
  { 119, 124, sizeof(::proto::dota::CMsgGCToGCPingRequest)},
  { 124, 129, sizeof(::proto::dota::CMsgGCToGCPingResponse)},
  { 129, 135, sizeof(::proto::dota::CMsgGCToGCGetUserSessionServer)},
  { 136, 143, sizeof(::proto::dota::CMsgGCToGCGetUserSessionServerResponse)},
  { 145, 152, sizeof(::proto::dota::CMsgGCToGCGetUserServerMembers)},
  { 154, 160, sizeof(::proto::dota::CMsgGCToGCGetUserServerMembersResponse)},
  { 161, 167, sizeof(::proto::dota::CMsgLookupMultipleAccountNames)},
  { 168, 175, sizeof(::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account)},
  { 177, 183, sizeof(::proto::dota::CMsgLookupMultipleAccountNamesResponse)},
  { 184, 190, sizeof(::proto::dota::CMsgRequestCrateItems)},
  { 191, 199, sizeof(::proto::dota::CMsgRequestCrateItemsResponse)},
  { 202, 208, sizeof(::proto::dota::CMsgRequestCrateEscalationLevel)},
  { 209, 219, sizeof(::proto::dota::CMsgRequestCrateEscalationLevelResponse)},
  { 224, 234, sizeof(::proto::dota::CMsgGCToGCCanUseDropRateBonus)},
  { 239, 251, sizeof(::proto::dota::CMsgSQLAddDropRateBonus)},
  { 258, 267, sizeof(::proto::dota::CMsgSQLUpgradeBattleBooster)},
  { 271, 278, sizeof(::proto::dota::CMsgGCToGCRefreshSOCache)},
  { 280, 287, sizeof(::proto::dota::CMsgGCToGCCheckAccountTradeStatus)},
  { 289, 296, sizeof(::proto::dota::CMsgGCToGCCheckAccountTradeStatusResponse)},
  { 298, 306, sizeof(::proto::dota::CMsgGCToGCAddSubscriptionTime)},
  { 309, 318, sizeof(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute)},
  { 322, 330, sizeof(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry)},
  { 333, 345, sizeof(::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item)},
  { 352, 361, sizeof(::proto::dota::CMsgGCToGCGrantAccountRolledItems)},
  { 365, 372, sizeof(::proto::dota::CMsgGCToGCGrantSelfMadeItemToAccount)},
  { 374, 385, sizeof(::proto::dota::CMsgUseItem)},
  { 391, 398, sizeof(::proto::dota::CMsgServerUseItem)},
  { 400, 406, sizeof(::proto::dota::CMsgUseMultipleItems)},
  { 407, 412, sizeof(::proto::dota::CMsgGCPartnerBalanceRequest)},
  { 412, 419, sizeof(::proto::dota::CMsgGCPartnerBalanceResponse)},
  { 421, 428, sizeof(::proto::dota::CGCStoreRechargeRedirect_LineItem)},
  { 430, 436, sizeof(::proto::dota::CMsgGCPartnerRechargeRedirectURLRequest)},
  { 437, 444, sizeof(::proto::dota::CMsgGCPartnerRechargeRedirectURLResponse)},
  { 446, 456, sizeof(::proto::dota::CMsgGCEconSQLWorkItemEmbeddedRollbackData)},
  { 461, 472, sizeof(::proto::dota::CMsgCraftStatue)},
  { 478, 484, sizeof(::proto::dota::CMsgRedeemCode)},
  { 485, 492, sizeof(::proto::dota::CMsgRedeemCodeResponse)},
  { 494, 503, sizeof(::proto::dota::CMsgDevNewItemRequest)},
  { 507, 513, sizeof(::proto::dota::CMsgDevNewItemRequestResponse)},
  { 514, 520, sizeof(::proto::dota::CMsgDevUnlockAllItemStyles)},
  { 521, 527, sizeof(::proto::dota::CMsgDevUnlockAllItemStylesResponse)},
  { 528, 534, sizeof(::proto::dota::CMsgGCGetAccountSubscriptionItem)},
  { 535, 541, sizeof(::proto::dota::CMsgGCGetAccountSubscriptionItemResponse)},
  { 542, 549, sizeof(::proto::dota::CMsgGCAddGiftItem)},
  { 551, 559, sizeof(::proto::dota::CMsgClientToGCWrapAndDeliverGift)},
  { 562, 574, sizeof(::proto::dota::CMsgClientToGCWrapAndDeliverGiftResponse)},
  { 581, 587, sizeof(::proto::dota::CMsgClientToGCUnwrapGift)},
  { 588, 593, sizeof(::proto::dota::CMsgClientToGCGetGiftPermissions)},
  { 593, 600, sizeof(::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission)},
  { 602, 613, sizeof(::proto::dota::CMsgClientToGCGetGiftPermissionsResponse)},
  { 619, 625, sizeof(::proto::dota::CMsgClientToGCUnpackBundle)},
  { 626, 634, sizeof(::proto::dota::CMsgClientToGCUnpackBundleResponse)},
  { 637, 644, sizeof(::proto::dota::CMsgGCToClientStoreTransactionCompleted)},
  { 646, 652, sizeof(::proto::dota::CMsgClientToGCEquipItems)},
  { 653, 659, sizeof(::proto::dota::CMsgClientToGCEquipItemsResponse)},
  { 660, 667, sizeof(::proto::dota::CMsgClientToGCSetItemStyle)},
  { 669, 675, sizeof(::proto::dota::CMsgClientToGCSetItemStyleResponse)},
  { 676, 684, sizeof(::proto::dota::CMsgClientToGCUnlockItemStyle)},
  { 687, 696, sizeof(::proto::dota::CMsgClientToGCUnlockItemStyleResponse)},
  { 700, 709, sizeof(::proto::dota::CMsgClientToGCSetItemInventoryCategory)},
  { 713, 720, sizeof(::proto::dota::CMsgClientToGCUnlockCrate)},
  { 722, 729, sizeof(::proto::dota::CMsgClientToGCUnlockCrateResponse_Item)},
  { 731, 738, sizeof(::proto::dota::CMsgClientToGCUnlockCrateResponse)},
  { 740, 746, sizeof(::proto::dota::CMsgClientToGCRemoveItemAttribute)},
  { 747, 754, sizeof(::proto::dota::CMsgClientToGCRemoveItemAttributeResponse)},
  { 756, 764, sizeof(::proto::dota::CMsgClientToGCNameItem)},
  { 767, 774, sizeof(::proto::dota::CMsgClientToGCNameItemResponse)},
  { 776, 783, sizeof(::proto::dota::CMsgGCSetItemPosition)},
  { 785, 799, sizeof(::proto::dota::CAttribute_ItemDynamicRecipeComponent)},
  { 808, 820, sizeof(::proto::dota::CProtoItemSocket)},
  { 827, 833, sizeof(::proto::dota::CProtoItemSocket_Empty)},
  { 834, 841, sizeof(::proto::dota::CProtoItemSocket_Effect)},
  { 843, 852, sizeof(::proto::dota::CProtoItemSocket_Color)},
  { 856, 864, sizeof(::proto::dota::CProtoItemSocket_Strange)},
  { 867, 877, sizeof(::proto::dota::CProtoItemSocket_Spectator)},
  { 882, 889, sizeof(::proto::dota::CProtoItemSocket_AssetModifier)},
  { 891, 900, sizeof(::proto::dota::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)},
  { 904, 913, sizeof(::proto::dota::CProtoItemSocket_Autograph)},
  { 917, 923, sizeof(::proto::dota::CProtoItemSocket_StaticVisuals)},
  { 924, 930, sizeof(::proto::dota::CAttribute_String)},
  { 931, 940, sizeof(::proto::dota::CWorkshop_GetItemDailyRevenue_Request)},
  { 944, 953, sizeof(::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue)},
  { 957, 963, sizeof(::proto::dota::CWorkshop_GetItemDailyRevenue_Response)},
  { 964, 972, sizeof(::proto::dota::CWorkshop_GetPackageDailyRevenue_Request)},
  { 975, 984, sizeof(::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue)},
  { 988, 994, sizeof(::proto::dota::CWorkshop_GetPackageDailyRevenue_Response)},
  { 995, 1002, sizeof(::proto::dota::CMsgSQLGCToGCGrantBackpackSlots)},
  { 1004, 1010, sizeof(::proto::dota::CMsgClientToGCLookupAccountName)},
  { 1011, 1018, sizeof(::proto::dota::CMsgClientToGCLookupAccountNameResponse)},
  { 1020, 1027, sizeof(::proto::dota::CMsgClientToGCCreateStaticRecipe_Item)},
  { 1029, 1036, sizeof(::proto::dota::CMsgClientToGCCreateStaticRecipe)},
  { 1038, 1046, sizeof(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem)},
  { 1049, 1056, sizeof(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError)},
  { 1058, 1065, sizeof(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput)},
  { 1067, 1076, sizeof(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse)},
  { 1080, 1094, sizeof(::proto::dota::CMsgProcessTransactionOrder_Item)},
  { 1103, 1117, sizeof(::proto::dota::CMsgProcessTransactionOrder)},
  { 1126, 1133, sizeof(::proto::dota::CMsgGCToGCStoreProcessCDKeyTransaction)},
  { 1135, 1141, sizeof(::proto::dota::CMsgGCToGCStoreProcessCDKeyTransactionResponse)},
  { 1142, 1149, sizeof(::proto::dota::CMsgGCToGCStoreProcessSettlement)},
  { 1151, 1157, sizeof(::proto::dota::CMsgGCToGCStoreProcessSettlementResponse)},
  { 1158, 1167, sizeof(::proto::dota::CMsgGCToGCBroadcastConsoleCommand)},
  { 1171, 1178, sizeof(::proto::dota::CMsgGCToGCConsoleOutput_OutputLine)},
  { 1180, 1188, sizeof(::proto::dota::CMsgGCToGCConsoleOutput)},
  { 1191, 1198, sizeof(::proto::dota::CMsgItemAges_MaxItemIDTimestamp)},
  { 1200, 1206, sizeof(::proto::dota::CMsgItemAges)},
  { 1207, 1219, sizeof(::proto::dota::CMsgGCToGCInternalTestMsg)},
  { 1226, 1235, sizeof(::proto::dota::CMsgGCToGCClientServerVersionsUpdated)},
  { 1239, 1248, sizeof(::proto::dota::CMsgGCToGCBroadcastMessageFromSub)},
  { 1252, 1259, sizeof(::proto::dota::CMsgGCToClientCurrencyPricePoints_Currency)},
  { 1261, 1268, sizeof(::proto::dota::CMsgGCToClientCurrencyPricePoints)},
  { 1270, 1277, sizeof(::proto::dota::CMsgBannedWordList)},
  { 1279, 1287, sizeof(::proto::dota::CEcon_FlushInventoryCache_Request)},
  { 1290, 1296, sizeof(::proto::dota::CEcon_FlushInventoryCache_Response)},
  { 1297, 1304, sizeof(::proto::dota::CMsgGCToGCFlushSteamInventoryCache_Key)},
  { 1306, 1312, sizeof(::proto::dota::CMsgGCToGCFlushSteamInventoryCache)},
  { 1313, 1320, sizeof(::proto::dota::CMsgGCToGCUpdateSubscriptionItems)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgApplyAutograph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgAdjustItemEquippedState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgEconPlayerStrangeCountAdjustment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgRequestItemPurgatory_FinalizePurchase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgRequestItemPurgatory_FinalizePurchaseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgRequestItemPurgatory_RefundPurchase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgRequestItemPurgatory_RefundPurchaseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgCraftingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCRequestStoreSalesData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCRequestStoreSalesDataResponse_Price_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCRequestStoreSalesDataResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCRequestStoreSalesDataUpToDateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCPingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCPingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCGetUserSessionServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCGetUserSessionServerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCGetUserServerMembers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCGetUserServerMembersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgLookupMultipleAccountNames_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgLookupMultipleAccountNamesResponse_Account_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgLookupMultipleAccountNamesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgRequestCrateItems_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgRequestCrateItemsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgRequestCrateEscalationLevel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgRequestCrateEscalationLevelResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCCanUseDropRateBonus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgSQLAddDropRateBonus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgSQLUpgradeBattleBooster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCRefreshSOCache_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCCheckAccountTradeStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCCheckAccountTradeStatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCAddSubscriptionTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCGrantAccountRolledItems_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCGrantAccountRolledItems_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCGrantSelfMadeItemToAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgUseItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgServerUseItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgUseMultipleItems_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCPartnerBalanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCPartnerBalanceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CGCStoreRechargeRedirect_LineItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCPartnerRechargeRedirectURLRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCPartnerRechargeRedirectURLResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCEconSQLWorkItemEmbeddedRollbackData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgCraftStatue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgRedeemCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgRedeemCodeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDevNewItemRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDevNewItemRequestResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDevUnlockAllItemStyles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgDevUnlockAllItemStylesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCGetAccountSubscriptionItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCGetAccountSubscriptionItemResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCAddGiftItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCWrapAndDeliverGift_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCWrapAndDeliverGiftResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCUnwrapGift_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCGetGiftPermissions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCGetGiftPermissionsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCUnpackBundle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCUnpackBundleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToClientStoreTransactionCompleted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCEquipItems_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCEquipItemsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCSetItemStyle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCSetItemStyleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCUnlockItemStyle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCUnlockItemStyleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCSetItemInventoryCategory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCUnlockCrate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCUnlockCrateResponse_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCUnlockCrateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCRemoveItemAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCRemoveItemAttributeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCNameItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCNameItemResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCSetItemPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CAttribute_ItemDynamicRecipeComponent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CProtoItemSocket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CProtoItemSocket_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CProtoItemSocket_Effect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CProtoItemSocket_Color_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CProtoItemSocket_Strange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CProtoItemSocket_Spectator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CProtoItemSocket_AssetModifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CProtoItemSocket_Autograph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CProtoItemSocket_StaticVisuals_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CAttribute_String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CWorkshop_GetItemDailyRevenue_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CWorkshop_GetItemDailyRevenue_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CWorkshop_GetPackageDailyRevenue_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CWorkshop_GetPackageDailyRevenue_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgSQLGCToGCGrantBackpackSlots_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCLookupAccountName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCLookupAccountNameResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCCreateStaticRecipe_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCCreateStaticRecipe_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCCreateStaticRecipeResponse_OutputItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCCreateStaticRecipeResponse_InputError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgClientToGCCreateStaticRecipeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgProcessTransactionOrder_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgProcessTransactionOrder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCStoreProcessCDKeyTransaction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCStoreProcessCDKeyTransactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCStoreProcessSettlement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCStoreProcessSettlementResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCBroadcastConsoleCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCConsoleOutput_OutputLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCConsoleOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgItemAges_MaxItemIDTimestamp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgItemAges_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCInternalTestMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCClientServerVersionsUpdated_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCBroadcastMessageFromSub_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToClientCurrencyPricePoints_Currency_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToClientCurrencyPricePoints_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgBannedWordList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CEcon_FlushInventoryCache_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CEcon_FlushInventoryCache_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCFlushSteamInventoryCache_Key_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCFlushSteamInventoryCache_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::dota::_CMsgGCToGCUpdateSubscriptionItems_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_econ_5fgcmessages_2eproto = {
  {}, AddDescriptors_econ_5fgcmessages_2eproto, "econ_gcmessages.proto", schemas,
  file_default_instances, TableStruct_econ_5fgcmessages_2eproto::offsets,
  file_level_metadata_econ_5fgcmessages_2eproto, 130, file_level_enum_descriptors_econ_5fgcmessages_2eproto, file_level_service_descriptors_econ_5fgcmessages_2eproto,
};

const char descriptor_table_protodef_econ_5fgcmessages_2eproto[] =
  "\n\025econ_gcmessages.proto\022\nproto.dota\032\023ste"
  "ammessages.proto\032\027econ_shared_enums.prot"
  "o\"E\n\022CMsgApplyAutograph\022\031\n\021autograph_ite"
  "m_id\030\001 \001(\004\022\024\n\014item_item_id\030\002 \001(\004\"h\n\033CMsg"
  "AdjustItemEquippedState\022\017\n\007item_id\030\001 \001(\004"
  "\022\021\n\tnew_class\030\002 \001(\r\022\020\n\010new_slot\030\003 \001(\r\022\023\n"
  "\013style_index\030\004 \001(\r\"\217\002\n$CMsgEconPlayerStr"
  "angeCountAdjustment\022\022\n\naccount_id\030\001 \001(\r\022"
  "k\n\031strange_count_adjustments\030\002 \003(\0132H.pro"
  "to.dota.CMsgEconPlayerStrangeCountAdjust"
  "ment.CStrangeCountAdjustment\022\022\n\nturbo_mo"
  "de\030\003 \001(\010\032R\n\027CStrangeCountAdjustment\022\022\n\ne"
  "vent_type\030\001 \001(\r\022\017\n\007item_id\030\002 \001(\004\022\022\n\nadju"
  "stment\030\003 \001(\r\"=\n)CMsgRequestItemPurgatory"
  "_FinalizePurchase\022\020\n\010item_ids\030\001 \003(\004\"U\n1C"
  "MsgRequestItemPurgatory_FinalizePurchase"
  "Response\022\016\n\006result\030\001 \001(\r\022\020\n\010item_ids\030\002 \003"
  "(\004\";\n\'CMsgRequestItemPurgatory_RefundPur"
  "chase\022\020\n\010item_ids\030\001 \003(\004\"A\n/CMsgRequestIt"
  "emPurgatory_RefundPurchaseResponse\022\016\n\006re"
  "sult\030\001 \001(\r\"(\n\024CMsgCraftingResponse\022\020\n\010it"
  "em_ids\030\001 \003(\004\"@\n\033CMsgGCRequestStoreSalesD"
  "ata\022\017\n\007version\030\001 \001(\r\022\020\n\010currency\030\002 \001(\r\"\304"
  "\001\n#CMsgGCRequestStoreSalesDataResponse\022I"
  "\n\nsale_price\030\001 \003(\01325.proto.dota.CMsgGCRe"
  "questStoreSalesDataResponse.Price\022\017\n\007ver"
  "sion\030\002 \001(\r\022\027\n\017expiration_time\030\003 \001(\r\032(\n\005P"
  "rice\022\020\n\010item_def\030\001 \001(\r\022\r\n\005price\030\002 \001(\r\"W\n"
  "+CMsgGCRequestStoreSalesDataUpToDateResp"
  "onse\022\017\n\007version\030\001 \001(\r\022\027\n\017expiration_time"
  "\030\002 \001(\r\"\027\n\025CMsgGCToGCPingRequest\"\030\n\026CMsgG"
  "CToGCPingResponse\"4\n\036CMsgGCToGCGetUserSe"
  "ssionServer\022\022\n\naccount_id\030\001 \001(\r\"T\n&CMsgG"
  "CToGCGetUserSessionServerResponse\022\027\n\017ser"
  "ver_steam_id\030\001 \001(\006\022\021\n\tis_online\030\002 \001(\010\"L\n"
  "\036CMsgGCToGCGetUserServerMembers\022\022\n\naccou"
  "nt_id\030\001 \001(\r\022\026\n\016max_spectators\030\002 \001(\r\"C\n&C"
  "MsgGCToGCGetUserServerMembersResponse\022\031\n"
  "\021member_account_id\030\001 \003(\r\"8\n\036CMsgLookupMu"
  "ltipleAccountNames\022\026\n\naccountids\030\001 \003(\rB\002"
  "\020\001\"\245\001\n&CMsgLookupMultipleAccountNamesRes"
  "ponse\022L\n\010accounts\030\001 \003(\0132:.proto.dota.CMs"
  "gLookupMultipleAccountNamesResponse.Acco"
  "unt\032-\n\007Account\022\021\n\taccountid\030\001 \001(\r\022\017\n\007per"
  "sona\030\002 \001(\t\"/\n\025CMsgRequestCrateItems\022\026\n\016c"
  "rate_item_def\030\001 \001(\r\"\206\001\n\035CMsgRequestCrate"
  "ItemsResponse\022\020\n\010response\030\001 \001(\r\022\021\n\titem_"
  "defs\030\002 \003(\r\022\026\n\016peek_item_defs\030\003 \003(\r\"(\n\007ER"
  "esult\022\017\n\013k_Succeeded\020\000\022\014\n\010k_Failed\020\001\"9\n\037"
  "CMsgRequestCrateEscalationLevel\022\026\n\016crate"
  "_item_def\030\001 \001(\r\"\321\001\n\'CMsgRequestCrateEsca"
  "lationLevelResponse\022\020\n\010response\030\001 \001(\r\022\031\n"
  "\021escalation_level0\030\002 \001(\r\022\031\n\021escalation_l"
  "evel1\030\003 \001(\r\022\031\n\021escalation_level2\030\004 \001(\r\022\031"
  "\n\021escalation_level3\030\005 \001(\r\"(\n\007EResult\022\017\n\013"
  "k_Succeeded\020\000\022\014\n\010k_Failed\020\001\"\230\001\n\035CMsgGCTo"
  "GCCanUseDropRateBonus\022\022\n\naccount_id\030\001 \001("
  "\r\022\027\n\017drop_rate_bonus\030\002 \001(\002\022\024\n\014booster_ty"
  "pe\030\003 \001(\r\022\032\n\022exclusive_item_def\030\004 \001(\r\022\030\n\020"
  "allow_equal_rate\030\005 \001(\010\"\261\001\n\027CMsgSQLAddDro"
  "pRateBonus\022\022\n\naccount_id\030\001 \001(\r\022\017\n\007item_i"
  "d\030\002 \001(\004\022\020\n\010item_def\030\003 \001(\r\022\027\n\017drop_rate_b"
  "onus\030\004 \001(\002\022\024\n\014booster_type\030\005 \001(\r\022\030\n\020seco"
  "nds_duration\030\006 \001(\r\022\026\n\016end_time_stamp\030\007 \001"
  "(\r\"o\n\033CMsgSQLUpgradeBattleBooster\022\022\n\nacc"
  "ount_id\030\001 \001(\r\022\020\n\010item_def\030\002 \001(\r\022\024\n\014bonus"
  "_to_add\030\003 \001(\002\022\024\n\014booster_type\030\004 \001(\r\">\n\030C"
  "MsgGCToGCRefreshSOCache\022\022\n\naccount_id\030\001 "
  "\001(\r\022\016\n\006reload\030\002 \001(\010\"J\n!CMsgGCToGCCheckAc"
  "countTradeStatus\022\022\n\naccount_id\030\001 \001(\r\022\021\n\t"
  "initiator\030\002 \001(\010\"R\n)CMsgGCToGCCheckAccoun"
  "tTradeStatusResponse\022\021\n\tcan_trade\030\001 \001(\010\022"
  "\022\n\nerror_code\030\002 \001(\r\"z\n\035CMsgGCToGCAddSubs"
  "criptionTime\022\022\n\naccount_id\030\001 \001(\r\022)\n!matc"
  "hing_subscription_def_indexes\030\002 \003(\r\022\032\n\022a"
  "dditional_seconds\030\003 \001(\r\"\235\005\n!CMsgGCToGCGr"
  "antAccountRolledItems\022\022\n\naccount_id\030\001 \001("
  "\r\022A\n\005items\030\002 \003(\01322.proto.dota.CMsgGCToGC"
  "GrantAccountRolledItems.Item\022\024\n\014audit_ac"
  "tion\030\003 \001(\r\022\022\n\naudit_data\030\004 \001(\004\032\366\003\n\004Item\022"
  "\020\n\010item_def\030\001 \001(\r\022\022\n\nloot_lists\030\002 \003(\t\022\024\n"
  "\014ignore_limit\030\003 \001(\010\022\016\n\006origin\030\004 \001(\r\022_\n\022d"
  "ynamic_attributes\030\005 \003(\0132C.proto.dota.CMs"
  "gGCToGCGrantAccountRolledItems.Item.Dyna"
  "micAttribute\022i\n\030additional_audit_entries"
  "\030\006 \003(\0132G.proto.dota.CMsgGCToGCGrantAccou"
  "ntRolledItems.Item.AdditionalAuditEntry\022"
  "\027\n\017inventory_token\030\007 \001(\r\032a\n\020DynamicAttri"
  "bute\022\014\n\004name\030\001 \001(\t\022\024\n\014value_uint32\030\002 \001(\r"
  "\022\023\n\013value_float\030\003 \001(\002\022\024\n\014value_string\030\004 "
  "\001(\t\032Z\n\024AdditionalAuditEntry\022\030\n\020owner_acc"
  "ount_id\030\001 \001(\r\022\024\n\014audit_action\030\002 \001(\r\022\022\n\na"
  "udit_data\030\003 \001(\004\"Q\n$CMsgGCToGCGrantSelfMa"
  "deItemToAccount\022\026\n\016item_def_index\030\001 \001(\r\022"
  "\021\n\taccountid\030\002 \001(\r\"\261\001\n\013CMsgUseItem\022\017\n\007it"
  "em_id\030\001 \001(\004\022\027\n\017target_steam_id\030\002 \001(\006\022\037\n\027"
  "gift__potential_targets\030\003 \003(\r\022\030\n\020duel__c"
  "lass_lock\030\004 \001(\r\022\032\n\022initiator_steam_id\030\005 "
  "\001(\004\022!\n\031itempack__ack_immediately\030\006 \001(\010\"`"
  "\n\021CMsgServerUseItem\022\034\n\024initiator_account"
  "_id\030\001 \001(\r\022-\n\014use_item_msg\030\002 \001(\0132\027.proto."
  "dota.CMsgUseItem\"(\n\024CMsgUseMultipleItems"
  "\022\020\n\010item_ids\030\001 \003(\004\"\035\n\033CMsgGCPartnerBalan"
  "ceRequest\"{\n\034CMsgGCPartnerBalanceRespons"
  "e\022J\n\006result\030\001 \001(\0162%.proto.dota.EGCPartne"
  "rRequestResponse:\023k_EPartnerRequestOK\022\017\n"
  "\007balance\030\002 \001(\r\"J\n!CGCStoreRechargeRedire"
  "ct_LineItem\022\023\n\013item_def_id\030\001 \001(\r\022\020\n\010quan"
  "tity\030\002 \001(\r\"l\n\'CMsgGCPartnerRechargeRedir"
  "ectURLRequest\022A\n\nline_items\030\001 \003(\0132-.prot"
  "o.dota.CGCStoreRechargeRedirect_LineItem"
  "\"\203\001\n(CMsgGCPartnerRechargeRedirectURLRes"
  "ponse\022J\n\006result\030\001 \001(\0162%.proto.dota.EGCPa"
  "rtnerRequestResponse:\023k_EPartnerRequestO"
  "K\022\013\n\003url\030\002 \001(\t\"\253\001\n)CMsgGCEconSQLWorkItem"
  "EmbeddedRollbackData\022\022\n\naccount_id\030\001 \001(\r"
  "\022\027\n\017deleted_item_id\030\002 \001(\004\022\030\n\020old_audit_a"
  "ction\030\003 \001(\r\022\030\n\020new_audit_action\030\004 \001(\r\022\035\n"
  "\025expected_audit_action\030\005 \001(\r\"\205\001\n\017CMsgCra"
  "ftStatue\022\016\n\006heroid\030\001 \001(\r\022\024\n\014sequencename"
  "\030\002 \001(\t\022\r\n\005cycle\030\003 \001(\002\022\023\n\013description\030\004 \001"
  "(\t\022\030\n\020pedestal_itemdef\030\005 \001(\r\022\016\n\006toolid\030\006"
  " \001(\004\"\036\n\016CMsgRedeemCode\022\014\n\004code\030\001 \001(\t\"\255\001\n"
  "\026CMsgRedeemCodeResponse\022\020\n\010response\030\001 \001("
  "\r\022\017\n\007item_id\030\002 \001(\004\"p\n\013EResultCode\022\017\n\013k_S"
  "ucceeded\020\000\022\031\n\025k_Failed_CodeNotFound\020\001\022\034\n"
  "\030k_Failed_CodeAlreadyUsed\020\002\022\027\n\023k_Failed_"
  "OtherError\020\003\"q\n\025CMsgDevNewItemRequest\022\025\n"
  "\ritem_def_name\030\003 \001(\t\022\026\n\016loot_list_name\030\004"
  " \001(\t\022\025\n\rattr_def_name\030\005 \003(\t\022\022\n\nattr_valu"
  "e\030\006 \003(\t\"0\n\035CMsgDevNewItemRequestResponse"
  "\022\017\n\007success\030\001 \001(\010\"-\n\032CMsgDevUnlockAllIte"
  "mStyles\022\017\n\007item_id\030\001 \001(\004\"5\n\"CMsgDevUnloc"
  "kAllItemStylesResponse\022\017\n\007success\030\001 \001(\010\""
  "6\n CMsgGCGetAccountSubscriptionItem\022\022\n\na"
  "ccount_id\030\001 \001(\r\"=\n(CMsgGCGetAccountSubsc"
  "riptionItemResponse\022\021\n\tdef_index\030\001 \001(\r\"8"
  "\n\021CMsgGCAddGiftItem\022\022\n\naccount_id\030\001 \001(\r\022"
  "\017\n\007item_id\030\002 \001(\004\"e\n CMsgClientToGCWrapAn"
  "dDeliverGift\022\017\n\007item_id\030\001 \001(\004\022\032\n\022give_to"
  "_account_id\030\002 \001(\r\022\024\n\014gift_message\030\003 \001(\t\""
  "\332\002\n(CMsgClientToGCWrapAndDeliverGiftResp"
  "onse\022@\n\010response\030\001 \001(\0162\032.proto.dota.EGCM"
  "sgResponse:\022k_EGCMsgResponseOK\022\033\n\023giftin"
  "g_charge_uses\030\002 \001(\r\022\032\n\022gifting_charge_ma"
  "x\030\003 \001(\005\022\024\n\014gifting_uses\030\004 \001(\r\022\023\n\013gifting"
  "_max\030\005 \001(\005\022\034\n\024gifting_window_hours\030\006 \001(\r"
  "\022j\n\021trade_restriction\030\007 \001(\0162\'.proto.dota"
  ".EGCMsgInitiateTradeResponse:&k_EGCMsgIn"
  "itiateTradeResponse_Accepted\"+\n\030CMsgClie"
  "ntToGCUnwrapGift\022\017\n\007item_id\030\001 \001(\004\"\"\n CMs"
  "gClientToGCGetGiftPermissions\"\210\004\n(CMsgCl"
  "ientToGCGetGiftPermissionsResponse\022\024\n\014is"
  "_unlimited\030\001 \001(\010\022\026\n\016has_two_factor\030\003 \001(\010"
  "\022j\n\021sender_permission\030\006 \001(\0162\'.proto.dota"
  ".EGCMsgInitiateTradeResponse:&k_EGCMsgIn"
  "itiateTradeResponse_Accepted\022\"\n\032friendsh"
  "ip_age_requirement\030\007 \001(\r\022-\n%friendship_a"
  "ge_requirement_two_factor\030\010 \001(\r\022a\n\022frien"
  "d_permissions\030\t \003(\0132E.proto.dota.CMsgCli"
  "entToGCGetGiftPermissionsResponse.Friend"
  "Permission\032\213\001\n\020FriendPermission\022\022\n\naccou"
  "nt_id\030\001 \001(\r\022c\n\npermission\030\002 \001(\0162\'.proto."
  "dota.EGCMsgInitiateTradeResponse:&k_EGCM"
  "sgInitiateTradeResponse_Accepted\"-\n\032CMsg"
  "ClientToGCUnpackBundle\022\017\n\007item_id\030\001 \001(\004\""
  "\210\004\n\"CMsgClientToGCUnpackBundleResponse\022\031"
  "\n\021unpacked_item_ids\030\001 \003(\004\022h\n\010response\030\002 "
  "\001(\0162<.proto.dota.CMsgClientToGCUnpackBun"
  "dleResponse.EUnpackBundle:\030k_UnpackBundl"
  "e_Succeeded\022!\n\031unpacked_item_def_indexes"
  "\030\003 \003(\r\"\271\002\n\rEUnpackBundle\022\034\n\030k_UnpackBund"
  "le_Succeeded\020\000\022)\n%k_UnpackBundle_Failed_"
  "ItemIsNotBundle\020\001\0225\n1k_UnpackBundle_Fail"
  "ed_UnableToCreateContainedItem\020\002\022&\n\"k_Un"
  "packBundle_Failed_SOCacheError\020\003\022\'\n#k_Un"
  "packBundle_Failed_ItemIsInvalid\020\004\022)\n%k_U"
  "npackBundle_Failed_BadItemQuantity\020\005\022,\n("
  "k_UnpackBundle_Failed_UnableToDeleteItem"
  "\020\006\"K\n\'CMsgGCToClientStoreTransactionComp"
  "leted\022\016\n\006txn_id\030\001 \001(\004\022\020\n\010item_ids\030\002 \003(\004\""
  "S\n\030CMsgClientToGCEquipItems\0227\n\006equips\030\001 "
  "\003(\0132\'.proto.dota.CMsgAdjustItemEquippedS"
  "tate\"\?\n CMsgClientToGCEquipItemsResponse"
  "\022\033\n\023so_cache_version_id\030\001 \001(\006\"B\n\032CMsgCli"
  "entToGCSetItemStyle\022\017\n\007item_id\030\001 \001(\004\022\023\n\013"
  "style_index\030\002 \001(\r\"\351\001\n\"CMsgClientToGCSetI"
  "temStyleResponse\022`\n\010response\030\001 \001(\01628.pro"
  "to.dota.CMsgClientToGCSetItemStyleRespon"
  "se.ESetStyle:\024k_SetStyle_Succeeded\"a\n\tES"
  "etStyle\022\030\n\024k_SetStyle_Succeeded\020\000\022\025\n\021k_S"
  "etStyle_Failed\020\001\022#\n\037k_SetStyle_Failed_St"
  "yleIsLocked\020\002\"i\n\035CMsgClientToGCUnlockIte"
  "mStyle\022\026\n\016item_to_unlock\030\001 \001(\004\022\023\n\013style_"
  "index\030\002 \001(\r\022\033\n\023consumable_item_ids\030\003 \003(\004"
  "\"\255\005\n%CMsgClientToGCUnlockItemStyleRespon"
  "se\022i\n\010response\030\001 \001(\0162>.proto.dota.CMsgCl"
  "ientToGCUnlockItemStyleResponse.EUnlockS"
  "tyle:\027k_UnlockStyle_Succeeded\022\017\n\007item_id"
  "\030\002 \001(\004\022\023\n\013style_index\030\003 \001(\r\022\024\n\014style_pre"
  "req\030\004 \001(\r\"\334\003\n\014EUnlockStyle\022\033\n\027k_UnlockSt"
  "yle_Succeeded\020\000\022\037\n\033k_UnlockStyle_Failed_"
  "PreReq\020\001\022#\n\037k_UnlockStyle_Failed_CantAff"
  "ord\020\002\022#\n\037k_UnlockStyle_Failed_CantCommit"
  "\020\003\022&\n\"k_UnlockStyle_Failed_CantLockCache"
  "\020\004\022)\n%k_UnlockStyle_Failed_CantAffordAtt"
  "rib\020\005\022&\n\"k_UnlockStyle_Failed_CantAfford"
  "Gem\020\006\022*\n&k_UnlockStyle_Failed_NoCompendi"
  "umLevel\020\007\022(\n$k_UnlockStyle_Failed_Alread"
  "yUnlocked\020\010\022#\n\037k_UnlockStyle_Failed_Othe"
  "rError\020\t\022&\n\"k_UnlockStyle_Failed_ItemIsI"
  "nvalid\020\n\022&\n\"k_UnlockStyle_Failed_ToolIsI"
  "nvalid\020\013\"\203\001\n&CMsgClientToGCSetItemInvent"
  "oryCategory\022\020\n\010item_ids\030\001 \003(\004\022\024\n\014set_to_"
  "value\030\002 \001(\r\022\031\n\021remove_categories\030\003 \001(\r\022\026"
  "\n\016add_categories\030\004 \001(\r\"G\n\031CMsgClientToGC"
  "UnlockCrate\022\025\n\rcrate_item_id\030\001 \001(\004\022\023\n\013ke"
  "y_item_id\030\002 \001(\004\"\332\001\n!CMsgClientToGCUnlock"
  "CrateResponse\022>\n\006result\030\001 \001(\0162\032.proto.do"
  "ta.EGCMsgResponse:\022k_EGCMsgResponseOK\022I\n"
  "\rgranted_items\030\002 \003(\01322.proto.dota.CMsgCl"
  "ientToGCUnlockCrateResponse.Item\032*\n\004Item"
  "\022\017\n\007item_id\030\001 \001(\004\022\021\n\tdef_index\030\002 \001(\r\"4\n!"
  "CMsgClientToGCRemoveItemAttribute\022\017\n\007ite"
  "m_id\030\001 \001(\004\"\275\003\n)CMsgClientToGCRemoveItemA"
  "ttributeResponse\022}\n\010response\030\001 \001(\0162J.pro"
  "to.dota.CMsgClientToGCRemoveItemAttribut"
  "eResponse.ERemoveItemAttribute:\037k_Remove"
  "ItemAttribute_Succeeded\022\017\n\007item_id\030\002 \001(\004"
  "\"\377\001\n\024ERemoveItemAttribute\022#\n\037k_RemoveIte"
  "mAttribute_Succeeded\020\000\022 \n\034k_RemoveItemAt"
  "tribute_Failed\020\001\022.\n*k_RemoveItemAttribut"
  "e_Failed_ItemIsInvalid\020\002\0229\n5k_RemoveItem"
  "Attribute_Failed_AttributeCannotBeRemove"
  "d\020\003\0225\n1k_RemoveItemAttribute_Failed_Attr"
  "ibuteDoesntExist\020\004\"U\n\026CMsgClientToGCName"
  "Item\022\027\n\017subject_item_id\030\001 \001(\004\022\024\n\014tool_it"
  "em_id\030\002 \001(\004\022\014\n\004name\030\003 \001(\t\"\275\002\n\036CMsgClient"
  "ToGCNameItemResponse\022\\\n\010response\030\001 \001(\01624"
  ".proto.dota.CMsgClientToGCNameItemRespon"
  "se.ENameItem:\024k_NameItem_Succeeded\022\017\n\007it"
  "em_id\030\002 \001(\004\"\253\001\n\tENameItem\022\030\n\024k_NameItem_"
  "Succeeded\020\000\022\025\n\021k_NameItem_Failed\020\001\022#\n\037k_"
  "NameItem_Failed_ToolIsInvalid\020\002\022#\n\037k_Nam"
  "eItem_Failed_ItemIsInvalid\020\003\022#\n\037k_NameIt"
  "em_Failed_NameIsInvalid\020\004\">\n\025CMsgGCSetIt"
  "emPosition\022\017\n\007item_id\030\001 \001(\004\022\024\n\014new_posit"
  "ion\030\002 \001(\r\"\355\001\n%CAttribute_ItemDynamicReci"
  "peComponent\022\020\n\010item_def\030\001 \001(\r\022\024\n\014item_qu"
  "ality\030\002 \001(\r\022\022\n\nitem_flags\030\003 \001(\r\022\031\n\021attri"
  "butes_string\030\004 \001(\t\022\022\n\nitem_count\030\005 \001(\r\022\027"
  "\n\017items_fulfilled\030\006 \001(\r\022\023\n\013item_rarity\030\007"
  " \001(\r\022\020\n\010lootlist\030\010 \001(\t\022\031\n\021fulfilled_item"
  "_id\030\t \001(\004\"\262\001\n\020CProtoItemSocket\022\017\n\007item_i"
  "d\030\001 \001(\004\022\026\n\016attr_def_index\030\002 \001(\r\022\025\n\rrequi"
  "red_type\030\003 \001(\r\022\025\n\rrequired_hero\030\004 \001(\t\022\025\n"
  "\rgem_def_index\030\005 \001(\r\022\024\n\014not_tradable\030\006 \001"
  "(\010\022\032\n\022required_item_slot\030\007 \001(\t\"F\n\026CProto"
  "ItemSocket_Empty\022,\n\006socket\030\001 \001(\0132\034.proto"
  ".dota.CProtoItemSocket\"W\n\027CProtoItemSock"
  "et_Effect\022,\n\006socket\030\001 \001(\0132\034.proto.dota.C"
  "ProtoItemSocket\022\016\n\006effect\030\002 \001(\r\"p\n\026CProt"
  "oItemSocket_Color\022,\n\006socket\030\001 \001(\0132\034.prot"
  "o.dota.CProtoItemSocket\022\013\n\003red\030\002 \001(\r\022\r\n\005"
  "green\030\003 \001(\r\022\014\n\004blue\030\004 \001(\r\"u\n\030CProtoItemS"
  "ocket_Strange\022,\n\006socket\030\001 \001(\0132\034.proto.do"
  "ta.CProtoItemSocket\022\024\n\014strange_type\030\002 \001("
  "\r\022\025\n\rstrange_value\030\003 \001(\r\"\234\001\n\032CProtoItemS"
  "ocket_Spectator\022,\n\006socket\030\001 \001(\0132\034.proto."
  "dota.CProtoItemSocket\022\024\n\014games_viewed\030\002 "
  "\001(\r\022\026\n\016corporation_id\030\003 \001(\r\022\021\n\tleague_id"
  "\030\004 \001(\r\022\017\n\007team_id\030\005 \001(\r\"f\n\036CProtoItemSoc"
  "ket_AssetModifier\022,\n\006socket\030\001 \001(\0132\034.prot"
  "o.dota.CProtoItemSocket\022\026\n\016asset_modifie"
  "r\030\002 \001(\r\"\262\001\n;CProtoItemSocket_AssetModifi"
  "er_DESERIALIZE_FROM_STRING_ONLY\022,\n\006socke"
  "t\030\001 \001(\0132\034.proto.dota.CProtoItemSocket\022\026\n"
  "\016asset_modifier\030\002 \001(\r\022\025\n\ranim_modifier\030\003"
  " \001(\r\022\026\n\016ability_effect\030\004 \001(\r\"\214\001\n\032CProtoI"
  "temSocket_Autograph\022,\n\006socket\030\001 \001(\0132\034.pr"
  "oto.dota.CProtoItemSocket\022\021\n\tautograph\030\002"
  " \001(\t\022\024\n\014autograph_id\030\003 \001(\r\022\027\n\017autograph_"
  "score\030\004 \001(\r\"N\n\036CProtoItemSocket_StaticVi"
  "suals\022,\n\006socket\030\001 \001(\0132\034.proto.dota.CProt"
  "oItemSocket\"\"\n\021CAttribute_String\022\r\n\005valu"
  "e\030\001 \001(\t\"m\n%CWorkshop_GetItemDailyRevenue"
  "_Request\022\r\n\005appid\030\001 \001(\r\022\017\n\007item_id\030\002 \001(\r"
  "\022\022\n\ndate_start\030\003 \001(\r\022\020\n\010date_end\030\004 \001(\r\"\350"
  "\001\n&CWorkshop_GetItemDailyRevenue_Respons"
  "e\022_\n\017country_revenue\030\001 \003(\0132F.proto.dota."
  "CWorkshop_GetItemDailyRevenue_Response.C"
  "ountryDailyRevenue\032]\n\023CountryDailyRevenu"
  "e\022\024\n\014country_code\030\001 \001(\t\022\014\n\004date\030\002 \001(\r\022\023\n"
  "\013revenue_usd\030\003 \001(\003\022\r\n\005units\030\004 \001(\005\"c\n(CWo"
  "rkshop_GetPackageDailyRevenue_Request\022\021\n"
  "\tpackageid\030\001 \001(\r\022\022\n\ndate_start\030\002 \001(\r\022\020\n\010"
  "date_end\030\003 \001(\r\"\356\001\n)CWorkshop_GetPackageD"
  "ailyRevenue_Response\022b\n\017country_revenue\030"
  "\001 \003(\0132I.proto.dota.CWorkshop_GetPackageD"
  "ailyRevenue_Response.CountryDailyRevenue"
  "\032]\n\023CountryDailyRevenue\022\024\n\014country_code\030"
  "\001 \001(\t\022\014\n\004date\030\002 \001(\r\022\023\n\013revenue_usd\030\003 \001(\003"
  "\022\r\n\005units\030\004 \001(\005\"H\n\037CMsgSQLGCToGCGrantBac"
  "kpackSlots\022\022\n\naccount_id\030\001 \001(\r\022\021\n\tadd_sl"
  "ots\030\002 \001(\r\"5\n\037CMsgClientToGCLookupAccount"
  "Name\022\022\n\naccount_id\030\001 \001(\r\"S\n\'CMsgClientTo"
  "GCLookupAccountNameResponse\022\022\n\naccount_i"
  "d\030\001 \001(\r\022\024\n\014account_name\030\002 \001(\t\"\250\001\n CMsgCl"
  "ientToGCCreateStaticRecipe\022@\n\005items\030\001 \003("
  "\01321.proto.dota.CMsgClientToGCCreateStati"
  "cRecipe.Item\022\030\n\020recipe_def_index\030\002 \001(\r\032("
  "\n\004Item\022\017\n\007item_id\030\001 \001(\004\022\017\n\007slot_id\030\002 \001(\r"
  "\"\317\006\n(CMsgClientToGCCreateStaticRecipeRes"
  "ponse\022c\n\010response\030\001 \001(\0162>.proto.dota.CMs"
  "gClientToGCCreateStaticRecipeResponse.ER"
  "esponse:\021eResponse_Success\022U\n\014output_ite"
  "ms\030\002 \003(\0132\?.proto.dota.CMsgClientToGCCrea"
  "teStaticRecipeResponse.OutputItem\022U\n\014inp"
  "ut_errors\030\003 \003(\0132\?.proto.dota.CMsgClientT"
  "oGCCreateStaticRecipeResponse.InputError"
  "\022a\n\022additional_outputs\030\004 \003(\0132E.proto.dot"
  "a.CMsgClientToGCCreateStaticRecipeRespon"
  "se.AdditionalOutput\032A\n\nOutputItem\022\021\n\tdef"
  "_index\030\001 \001(\r\022\017\n\007item_id\030\002 \001(\004\022\017\n\007slot_id"
  "\030\003 \001(\r\032\177\n\nInputError\022\017\n\007slot_id\030\001 \001(\r\022`\n"
  "\005error\030\002 \001(\0162>.proto.dota.CMsgClientToGC"
  "CreateStaticRecipeResponse.EResponse:\021eR"
  "esponse_Success\0322\n\020AdditionalOutput\022\017\n\007s"
  "lot_id\030\001 \001(\r\022\r\n\005value\030\002 \001(\004\"\264\001\n\tERespons"
  "e\022\025\n\021eResponse_Success\020\000\022\036\n\032eResponse_Of"
  "feringDisabled\020\001\022\032\n\026eResponse_InvalidIte"
  "ms\020\002\022\033\n\027eResponse_InternalError\020\003\022\033\n\027eRe"
  "sponse_MissingLeague\020\004\022\032\n\026eResponse_Miss"
  "ingEvent\020\005\"\346\003\n\033CMsgProcessTransactionOrd"
  "er\022\016\n\006txn_id\030\001 \001(\004\022\024\n\014steam_txn_id\030\002 \001(\004"
  "\022\026\n\016partner_txn_id\030\003 \001(\004\022\020\n\010steam_id\030\004 \001"
  "(\006\022\022\n\ntime_stamp\030\005 \001(\r\022\021\n\twatermark\030\006 \001("
  "\004\022\036\n\026purchase_report_status\030\007 \001(\005\022\020\n\010cur"
  "rency\030\010 \001(\r\022;\n\005items\030\t \003(\0132,.proto.dota."
  "CMsgProcessTransactionOrder.Item\032\340\001\n\004Ite"
  "m\022\026\n\016item_def_index\030\001 \001(\r\022\022\n\nitem_price\030"
  "\002 \001(\r\022\020\n\010quantity\030\003 \001(\r\022\025\n\rcategory_desc"
  "\030\004 \001(\t\022\033\n\023store_purchase_type\030\005 \001(\r\022\033\n\023s"
  "ource_reference_id\030\006 \001(\004\022\032\n\022parent_stack"
  "_index\030\007 \001(\005\022\025\n\rdefault_price\030\010 \001(\010\022\026\n\016i"
  "s_user_facing\030\t \001(\010\"u\n&CMsgGCToGCStorePr"
  "ocessCDKeyTransaction\0226\n\005order\030\001 \001(\0132\'.p"
  "roto.dota.CMsgProcessTransactionOrder\022\023\n"
  "\013reason_code\030\002 \001(\r\"A\n.CMsgGCToGCStorePro"
  "cessCDKeyTransactionResponse\022\017\n\007success\030"
  "\001 \001(\010\"k\n CMsgGCToGCStoreProcessSettlemen"
  "t\0226\n\005order\030\001 \001(\0132\'.proto.dota.CMsgProces"
  "sTransactionOrder\022\017\n\007partner\030\002 \001(\r\";\n(CM"
  "sgGCToGCStoreProcessSettlementResponse\022\017"
  "\n\007success\030\001 \001(\010\"}\n!CMsgGCToGCBroadcastCo"
  "nsoleCommand\022\023\n\013con_command\030\001 \001(\t\022\025\n\rrep"
  "ort_output\030\002 \001(\010\022\022\n\nsending_gc\030\003 \001(\r\022\030\n\020"
  "output_initiator\030\004 \001(\t\"\256\001\n\027CMsgGCToGCCon"
  "soleOutput\022\021\n\tinitiator\030\001 \001(\t\022\022\n\nsending"
  "_gc\030\002 \001(\r\022<\n\004msgs\030\003 \003(\0132..proto.dota.CMs"
  "gGCToGCConsoleOutput.OutputLine\032.\n\nOutpu"
  "tLine\022\014\n\004text\030\001 \001(\t\022\022\n\nspew_level\030\002 \001(\r\""
  "\231\001\n\014CMsgItemAges\022K\n\026max_item_id_timestam"
  "ps\030\001 \003(\0132+.proto.dota.CMsgItemAges.MaxIt"
  "emIDTimestamp\032<\n\022MaxItemIDTimestamp\022\021\n\tt"
  "imestamp\030\001 \001(\r\022\023\n\013max_item_id\030\002 \001(\004\"\253\001\n\031"
  "CMsgGCToGCInternalTestMsg\022\022\n\nsending_gc\030"
  "\001 \001(\r\022\021\n\tsender_id\030\002 \001(\006\022\017\n\007context\030\003 \001("
  "\r\022\022\n\nmessage_id\030\004 \001(\r\022\024\n\014message_body\030\005 "
  "\001(\014\022\025\n\rjob_id_source\030\006 \001(\006\022\025\n\rjob_id_tar"
  "get\030\007 \001(\006\"\252\001\n%CMsgGCToGCClientServerVers"
  "ionsUpdated\022\"\n\032client_min_allowed_versio"
  "n\030\001 \001(\r\022\035\n\025client_active_version\030\002 \001(\r\022\035"
  "\n\025server_active_version\030\003 \001(\r\022\037\n\027server_"
  "deployed_version\030\004 \001(\r\"\203\001\n!CMsgGCToGCBro"
  "adcastMessageFromSub\022\016\n\006msg_id\030\001 \001(\r\022\026\n\016"
  "serialized_msg\030\002 \001(\014\022\033\n\017account_id_list\030"
  "\003 \003(\rB\002\020\001\022\031\n\rsteam_id_list\030\004 \003(\006B\002\020\001\"\303\001\n"
  "!CMsgGCToClientCurrencyPricePoints\022\025\n\tpr"
  "ice_key\030\001 \003(\004B\002\020\001\022J\n\ncurrencies\030\002 \003(\01326."
  "proto.dota.CMsgGCToClientCurrencyPricePo"
  "ints.Currency\032;\n\010Currency\022\023\n\013currency_id"
  "\030\001 \001(\r\022\032\n\016currency_price\030\002 \003(\004B\002\020\001\";\n\022CM"
  "sgBannedWordList\022\017\n\007version\030\001 \001(\r\022\024\n\014ban"
  "ned_words\030\002 \003(\t\"V\n!CEcon_FlushInventoryC"
  "ache_Request\022\017\n\007steamid\030\001 \001(\004\022\r\n\005appid\030\002"
  " \001(\r\022\021\n\tcontextid\030\003 \001(\004\"5\n\"CEcon_FlushIn"
  "ventoryCache_Response\022\017\n\007success\030\001 \001(\010\"\221"
  "\001\n\"CMsgGCToGCFlushSteamInventoryCache\022@\n"
  "\004keys\030\001 \003(\01322.proto.dota.CMsgGCToGCFlush"
  "SteamInventoryCache.Key\032)\n\003Key\022\017\n\007steami"
  "d\030\001 \001(\004\022\021\n\tcontextid\030\002 \001(\004\"N\n!CMsgGCToGC"
  "UpdateSubscriptionItems\022\022\n\naccount_id\030\001 "
  "\001(\r\022\025\n\ralways_notify\030\002 \001(\010*\3136\n\nEGCItemMs"
  "g\022\021\n\014k_EMsgGCBase\020\350\007\022\034\n\027k_EMsgGCSetItemP"
  "osition\020\351\007\022\023\n\016k_EMsgGCDelete\020\354\007\022$\n\037k_EMs"
  "gGCVerifyCacheSubscription\020\355\007\022\035\n\030k_EMsgC"
  "lientToGCNameItem\020\356\007\022\026\n\021k_EMsgGCPaintIte"
  "m\020\361\007\022\036\n\031k_EMsgGCPaintItemResponse\020\362\007\022\"\n\035"
  "k_EMsgGCGoldenWrenchBroadcast\020\363\007\022\030\n\023k_EM"
  "sgGCMOTDRequest\020\364\007\022 \n\033k_EMsgGCMOTDReques"
  "tResponse\020\365\007\022\'\n\"k_EMsgGCAddItemToSocket_"
  "DEPRECATED\020\366\007\022/\n*k_EMsgGCAddItemToSocket"
  "Response_DEPRECATED\020\367\007\022+\n&k_EMsgGCAddSoc"
  "ketToBaseItem_DEPRECATED\020\370\007\022\'\n\"k_EMsgGCA"
  "ddSocketToItem_DEPRECATED\020\371\007\022/\n*k_EMsgGC"
  "AddSocketToItemResponse_DEPRECATED\020\372\007\022\031\n"
  "\024k_EMsgGCNameBaseItem\020\373\007\022!\n\034k_EMsgGCName"
  "BaseItemResponse\020\374\007\022(\n#k_EMsgGCRemoveSoc"
  "ketItem_DEPRECATED\020\375\007\0220\n+k_EMsgGCRemoveS"
  "ocketItemResponse_DEPRECATED\020\376\007\022!\n\034k_EMs"
  "gGCCustomizeItemTexture\020\377\007\022)\n$k_EMsgGCCu"
  "stomizeItemTextureResponse\020\200\010\022\033\n\026k_EMsgG"
  "CUseItemRequest\020\201\010\022\034\n\027k_EMsgGCUseItemRes"
  "ponse\020\202\010\022\030\n\023k_EMsgGCGiftedItems\020\203\010\022\033\n\026k_"
  "EMsgGCRemoveItemName\020\206\010\022\034\n\027k_EMsgGCRemov"
  "eItemPaint\020\207\010\022\036\n\031k_EMsgGCUnwrapGiftReque"
  "st\020\215\010\022\037\n\032k_EMsgGCUnwrapGiftResponse\020\216\010\022$"
  "\n\037k_EMsgGCSetItemStyle_DEPRECATED\020\217\010\022\036\n\031"
  "k_EMsgGCUsedClaimCodeItem\020\220\010\022\026\n\021k_EMsgGC"
  "SortItems\020\221\010\022*\n%k_EMsgGC_RevolvingLootLi"
  "st_DEPRECATED\020\222\010\022\035\n\030k_EMsgGCUpdateItemSc"
  "hema\020\231\010\022 \n\033k_EMsgGCRemoveCustomTexture\020\233"
  "\010\022(\n#k_EMsgGCRemoveCustomTextureResponse"
  "\020\234\010\022\035\n\030k_EMsgGCRemoveMakersMark\020\235\010\022%\n k_"
  "EMsgGCRemoveMakersMarkResponse\020\236\010\022#\n\036k_E"
  "MsgGCRemoveUniqueCraftIndex\020\237\010\022+\n&k_EMsg"
  "GCRemoveUniqueCraftIndexResponse\020\240\010\022\033\n\026k"
  "_EMsgGCSaxxyBroadcast\020\241\010\022!\n\034k_EMsgGCBack"
  "packSortFinished\020\242\010\022$\n\037k_EMsgGCAdjustIte"
  "mEquippedState\020\243\010\022\030\n\023k_EMsgGCCollectItem"
  "\020\245\010\022\035\n\030k_EMsgGCItemAcknowledged\020\246\010\022)\n$k_"
  "EMsgGCPresets_SelectPresetForClass\020\247\010\022$\n"
  "\037k_EMsgGCPresets_SetItemPosition\020\250\010\022.\n)k"
  "_EMsgGCPresets_SelectPresetForClassReply"
  "\020\253\010\022%\n k_EMsgClientToGCNameItemResponse\020"
  "\254\010\022#\n\036k_EMsgGCApplyConsumableEffects\020\255\010\022"
  "\036\n\031k_EMsgGCShowItemsPickedUp\020\257\010\022&\n!k_EMs"
  "gGCClientDisplayNotification\020\260\010\022\035\n\030k_EMs"
  "gGCApplyStrangePart\020\261\010\022(\n#k_EMsgGC_Incre"
  "mentKillCountResponse\020\263\010\022 \n\033k_EMsgGCAppl"
  "yPennantUpgrade\020\264\010\022\035\n\030k_EMsgGCSetItemPos"
  "itions\020\265\010\022)\n$k_EMsgGCSetItemPositions_Ra"
  "teLimited\020\310\010\022\034\n\027k_EMsgGCApplyEggEssence\020"
  "\266\010\022#\n\036k_EMsgGCNameEggEssenceResponse\020\267\010\022"
  "*\n%k_EMsgGCFulfillDynamicRecipeComponent"
  "\020\272\010\0222\n-k_EMsgGCFulfillDynamicRecipeCompo"
  "nentResponse\020\273\010\022$\n\037k_EMsgGCClientRequest"
  "MarketData\020\274\010\022,\n\'k_EMsgGCClientRequestMa"
  "rketDataResponse\020\275\010\022\030\n\023k_EMsgGCExtractGe"
  "ms\020\276\010\022\026\n\021k_EMsgGCAddSocket\020\277\010\022\034\n\027k_EMsgG"
  "CAddItemToSocket\020\300\010\022$\n\037k_EMsgGCAddItemTo"
  "SocketResponse\020\301\010\022\036\n\031k_EMsgGCAddSocketRe"
  "sponse\020\302\010\022!\n\034k_EMsgGCResetStrangeGemCoun"
  "t\020\303\010\022\036\n\031k_EMsgGCRequestCrateItems\020\304\010\022&\n!"
  "k_EMsgGCRequestCrateItemsResponse\020\305\010\022 \n\033"
  "k_EMsgGCExtractGemsResponse\020\306\010\022)\n$k_EMsg"
  "GCResetStrangeGemCountResponse\020\307\010\022!\n\034k_E"
  "MsgGCServerUseItemRequest\020\317\010\022\030\n\023k_EMsgGC"
  "AddGiftItem\020\320\010\022\"\n\035k_EMsgGCRemoveItemGift"
  "Message\020\321\010\022*\n%k_EMsgGCRemoveItemGiftMess"
  "ageResponse\020\322\010\022&\n!k_EMsgGCRemoveItemGift"
  "erAccountId\020\323\010\022.\n)k_EMsgGCRemoveItemGift"
  "erAccountIdResponse\020\324\010\022/\n*k_EMsgClientTo"
  "GCRemoveItemGifterAttributes\020\325\010\022#\n\036k_EMs"
  "gClientToGCRemoveItemName\020\326\010\022*\n%k_EMsgCl"
  "ientToGCRemoveItemDescription\020\327\010\0220\n+k_EM"
  "sgClientToGCRemoveItemAttributeResponse\020"
  "\330\010\022\030\n\023k_EMsgGCTradingBase\020\334\013\022)\n$k_EMsgGC"
  "Trading_InitiateTradeRequest\020\335\013\022*\n%k_EMs"
  "gGCTrading_InitiateTradeResponse\020\336\013\022!\n\034k"
  "_EMsgGCTrading_StartSession\020\337\013\022\"\n\035k_EMsg"
  "GCTrading_SessionClosed\020\345\013\0221\n,k_EMsgGCTr"
  "ading_InitiateTradeRequestResponse\020\352\013\022)\n"
  "$k_EMsgGCServerBrowser_FavoriteServer\020\301\014"
  "\022*\n%k_EMsgGCServerBrowser_BlacklistServe"
  "r\020\302\014\022\036\n\031k_EMsgGCServerRentalsBase\020\244\r\022\037\n\032"
  "k_EMsgGCDev_NewItemRequest\020\321\017\022\'\n\"k_EMsgG"
  "CDev_NewItemRequestResponse\020\322\017\022+\n&k_EMsg"
  "GCDev_UnlockAllItemStylesRequest\020\323\017\022,\n\'k"
  "_EMsgGCDev_UnlockAllItemStylesResponse\020\324"
  "\017\022\"\n\035k_EMsgGCStorePurchaseFinalize\020\310\023\022*\n"
  "%k_EMsgGCStorePurchaseFinalizeResponse\020\311"
  "\023\022 \n\033k_EMsgGCStorePurchaseCancel\020\312\023\022(\n#k"
  "_EMsgGCStorePurchaseCancelResponse\020\313\023\022\036\n"
  "\031k_EMsgGCStorePurchaseInit\020\316\023\022&\n!k_EMsgG"
  "CStorePurchaseInitResponse\020\317\023\022&\n!k_EMsgG"
  "CToGCBannedWordListUpdated\020\323\023\022\036\n\031k_EMsgG"
  "CToGCDirtySDOCache\020\324\023\022&\n!k_EMsgGCToGCDir"
  "tyMultipleSDOCache\020\325\023\022\"\n\035k_EMsgGCToGCUpd"
  "ateSQLKeyValue\020\326\023\022(\n#k_EMsgGCToGCBroadca"
  "stConsoleCommand\020\331\023\022!\n\034k_EMsgGCServerVer"
  "sionUpdated\020\332\023\022\033\n\026k_EMsgGCApplyAutograph"
  "\020\333\023\022%\n k_EMsgGCToGCWebAPIAccountChanged\020"
  "\334\023\022!\n\034k_EMsgGCClientVersionUpdated\020\340\023\022+\n"
  "&k_EMsgGCItemPurgatory_FinalizePurchase\020"
  "\343\023\0223\n.k_EMsgGCItemPurgatory_FinalizePurc"
  "haseResponse\020\344\023\022)\n$k_EMsgGCItemPurgatory"
  "_RefundPurchase\020\345\023\0221\n,k_EMsgGCItemPurgat"
  "ory_RefundPurchaseResponse\020\346\023\022.\n)k_EMsgG"
  "CToGCPlayerStrangeCountAdjustments\020\347\023\022\"\n"
  "\035k_EMsgGCRequestStoreSalesData\020\350\023\022*\n%k_E"
  "MsgGCRequestStoreSalesDataResponse\020\351\023\0222\n"
  "-k_EMsgGCRequestStoreSalesDataUpToDateRe"
  "sponse\020\352\023\022\034\n\027k_EMsgGCToGCPingRequest\020\353\023\022"
  "\035\n\030k_EMsgGCToGCPingResponse\020\354\023\022%\n k_EMsg"
  "GCToGCGetUserSessionServer\020\355\023\022-\n(k_EMsgG"
  "CToGCGetUserSessionServerResponse\020\356\023\022%\n "
  "k_EMsgGCToGCGetUserServerMembers\020\357\023\022-\n(k"
  "_EMsgGCToGCGetUserServerMembersResponse\020"
  "\360\023\022 \n\033k_EMsgGCToGCGetUserPCBangNo\020\361\023\022(\n#"
  "k_EMsgGCToGCGetUserPCBangNoResponse\020\362\023\022$"
  "\n\037k_EMsgGCToGCCanUseDropRateBonus\020\363\023\022\036\n\031"
  "k_EMsgSQLAddDropRateBonus\020\364\023\022\037\n\032k_EMsgGC"
  "ToGCRefreshSOCache\020\365\023\022&\n!k_EMsgGCToGCApp"
  "lyLocalizationDiff\020\366\023\022.\n)k_EMsgGCToGCApp"
  "lyLocalizationDiffResponse\020\367\023\022(\n#k_EMsgG"
  "CToGCCheckAccountTradeStatus\020\370\023\0220\n+k_EMs"
  "gGCToGCCheckAccountTradeStatusResponse\020\371"
  "\023\022(\n#k_EMsgGCToGCGrantAccountRolledItems"
  "\020\372\023\022+\n&k_EMsgGCToGCGrantSelfMadeItemToAc"
  "count\020\373\023\022\"\n\035k_EMsgGCPartnerBalanceReques"
  "t\020\375\023\022#\n\036k_EMsgGCPartnerBalanceResponse\020\376"
  "\023\022.\n)k_EMsgGCPartnerRechargeRedirectURLR"
  "equest\020\377\023\022/\n*k_EMsgGCPartnerRechargeRedi"
  "rectURLResponse\020\200\024\022\030\n\023k_EMsgGCStatueCraf"
  "t\020\201\024\022\027\n\022k_EMsgGCRedeemCode\020\202\024\022\037\n\032k_EMsgG"
  "CRedeemCodeResponse\020\203\024\022(\n#k_EMsgGCToGCIt"
  "emConsumptionRollback\020\204\024\022\'\n\"k_EMsgClient"
  "ToGCWrapAndDeliverGift\020\205\024\022/\n*k_EMsgClien"
  "tToGCWrapAndDeliverGiftResponse\020\206\024\022)\n$k_"
  "EMsgClientToGCUnpackBundleResponse\020\207\024\022.\n"
  ")k_EMsgGCToClientStoreTransactionComplet"
  "ed\020\210\024\022\037\n\032k_EMsgClientToGCEquipItems\020\211\024\022\'"
  "\n\"k_EMsgClientToGCEquipItemsResponse\020\212\024\022"
  "$\n\037k_EMsgClientToGCUnlockItemStyle\020\213\024\022,\n"
  "\'k_EMsgClientToGCUnlockItemStyleResponse"
  "\020\214\024\022-\n(k_EMsgClientToGCSetItemInventoryC"
  "ategory\020\215\024\022 \n\033k_EMsgClientToGCUnlockCrat"
  "e\020\216\024\022(\n#k_EMsgClientToGCUnlockCrateRespo"
  "nse\020\217\024\022!\n\034k_EMsgClientToGCUnpackBundle\020\220"
  "\024\022!\n\034k_EMsgClientToGCSetItemStyle\020\221\024\022)\n$"
  "k_EMsgClientToGCSetItemStyleResponse\020\222\024\022"
  "&\n!k_EMsgSQLGCToGCGrantBackpackSlots\020\224\024\022"
  "&\n!k_EMsgClientToGCLookupAccountName\020\225\024\022"
  ".\n)k_EMsgClientToGCLookupAccountNameResp"
  "onse\020\226\024\022#\n\036k_EMsgGCToGCDevRevokeUserItem"
  "s\020\227\024\022\'\n\"k_EMsgClientToGCCreateStaticReci"
  "pe\020\230\024\022/\n*k_EMsgClientToGCCreateStaticRec"
  "ipeResponse\020\231\024\022-\n(k_EMsgGCToGCStoreProce"
  "ssCDKeyTransaction\020\232\024\0225\n0k_EMsgGCToGCSto"
  "reProcessCDKeyTransactionResponse\020\233\024\022\'\n\""
  "k_EMsgGCToGCStoreProcessSettlement\020\234\024\022/\n"
  "*k_EMsgGCToGCStoreProcessSettlementRespo"
  "nse\020\235\024\022\036\n\031k_EMsgGCToGCConsoleOutput\020\236\024\022\035"
  "\n\030k_EMsgGCToClientItemAges\020\237\024\022 \n\033k_EMsgG"
  "CToGCInternalTestMsg\020\240\024\022,\n\'k_EMsgGCToGCC"
  "lientServerVersionsUpdated\020\241\024\022$\n\037k_EMsgG"
  "CUseMultipleItemsRequest\020\242\024\022\'\n\"k_EMsgGCG"
  "etAccountSubscriptionItem\020\243\024\022/\n*k_EMsgGC"
  "GetAccountSubscriptionItemResponse\020\244\024\022(\n"
  "#k_EMsgGCToGCBroadcastMessageFromSub\020\246\024\022"
  "(\n#k_EMsgGCToClientCurrencyPricePoints\020\247"
  "\024\022$\n\037k_EMsgGCToGCAddSubscriptionTime\020\250\024\022"
  ")\n$k_EMsgGCToGCFlushSteamInventoryCache\020"
  "\251\024\022(\n#k_EMsgGCRequestCrateEscalationLeve"
  "l\020\252\024\0220\n+k_EMsgGCRequestCrateEscalationLe"
  "velResponse\020\253\024\022(\n#k_EMsgGCToGCUpdateSubs"
  "criptionItems\020\254\024*\363\002\n\037EItemPurgatoryRespo"
  "nse_Finalize\022.\n*k_ItemPurgatoryResponse_"
  "Finalize_Succeeded\020\000\0226\n2k_ItemPurgatoryR"
  "esponse_Finalize_Failed_Incomplete\020\001\022\?\n;"
  "k_ItemPurgatoryResponse_Finalize_Failed_"
  "ItemsNotInPurgatory\020\002\022=\n9k_ItemPurgatory"
  "Response_Finalize_Failed_CouldNotFindIte"
  "ms\020\003\0225\n1k_ItemPurgatoryResponse_Finalize"
  "_Failed_NoSOCache\020\004\0221\n-k_ItemPurgatoryRe"
  "sponse_Finalize_BackpackFull\020\005*\260\002\n\035EItem"
  "PurgatoryResponse_Refund\022,\n(k_ItemPurgat"
  "oryResponse_Refund_Succeeded\020\000\022<\n8k_Item"
  "PurgatoryResponse_Refund_Failed_ItemNotI"
  "nPurgatory\020\001\022:\n6k_ItemPurgatoryResponse_"
  "Refund_Failed_CouldNotFindItem\020\002\0223\n/k_It"
  "emPurgatoryResponse_Refund_Failed_NoSOCa"
  "che\020\003\0222\n.k_ItemPurgatoryResponse_Refund_"
  "Failed_NoDetail\020\004*\271\n\n\033EGCMsgInitiateTrad"
  "eResponse\022*\n&k_EGCMsgInitiateTradeRespon"
  "se_Accepted\020\000\022*\n&k_EGCMsgInitiateTradeRe"
  "sponse_Declined\020\001\0226\n2k_EGCMsgInitiateTra"
  "deResponse_VAC_Banned_Initiator\020\002\0223\n/k_E"
  "GCMsgInitiateTradeResponse_VAC_Banned_Ta"
  "rget\020\003\0228\n4k_EGCMsgInitiateTradeResponse_"
  "Target_Already_Trading\020\004\022*\n&k_EGCMsgInit"
  "iateTradeResponse_Disabled\020\005\022-\n)k_EGCMsg"
  "InitiateTradeResponse_NotLoggedIn\020\006\022(\n$k"
  "_EGCMsgInitiateTradeResponse_Cancel\020\007\022)\n"
  "%k_EGCMsgInitiateTradeResponse_TooSoon\020\010"
  "\0220\n,k_EGCMsgInitiateTradeResponse_TooSoo"
  "nPenalty\020\t\0228\n4k_EGCMsgInitiateTradeRespo"
  "nse_Trade_Banned_Initiator\020\n\0225\n1k_EGCMsg"
  "InitiateTradeResponse_Trade_Banned_Targe"
  "t\020\013\022C\n\?k_EGCMsgInitiateTradeResponse_Fre"
  "e_Account_Initiator_DEPRECATED\020\014\022:\n6k_EG"
  "CMsgInitiateTradeResponse_Shared_Account"
  "_Initiator\020\r\0225\n1k_EGCMsgInitiateTradeRes"
  "ponse_Service_Unavailable\020\016\0220\n,k_EGCMsgI"
  "nitiateTradeResponse_Target_Blocked\020\017\0223\n"
  "/k_EGCMsgInitiateTradeResponse_NeedVerif"
  "iedEmail\020\020\0220\n,k_EGCMsgInitiateTradeRespo"
  "nse_NeedSteamGuard\020\021\0224\n0k_EGCMsgInitiate"
  "TradeResponse_SteamGuardDuration\020\022\0221\n-k_"
  "EGCMsgInitiateTradeResponse_TheyCannotTr"
  "ade\020\023\0227\n3k_EGCMsgInitiateTradeResponse_R"
  "ecent_Password_Reset\020\024\0222\n.k_EGCMsgInitia"
  "teTradeResponse_Using_New_Device\020\025\0225\n1k_"
  "EGCMsgInitiateTradeResponse_Sent_Invalid"
  "_Cookie\020\026\0221\n-k_EGCMsgInitiateTradeRespon"
  "se_TooRecentFriend\020\027\0227\n3k_EGCMsgInitiate"
  "TradeResponse_WalledFundsNotTrusted\020\030B\005H"
  "\001\200\001\000"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_econ_5fgcmessages_2eproto = {
  false, InitDefaults_econ_5fgcmessages_2eproto, 
  descriptor_table_protodef_econ_5fgcmessages_2eproto,
  "econ_gcmessages.proto", &assign_descriptors_table_econ_5fgcmessages_2eproto, 24764,
};

void AddDescriptors_econ_5fgcmessages_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_steammessages_2eproto,
    ::AddDescriptors_econ_5fshared_5fenums_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_econ_5fgcmessages_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_econ_5fgcmessages_2eproto = []() { AddDescriptors_econ_5fgcmessages_2eproto(); return true; }();
namespace proto {
namespace dota {
const ::google::protobuf::EnumDescriptor* CMsgRequestCrateItemsResponse_EResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[0];
}
bool CMsgRequestCrateItemsResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgRequestCrateItemsResponse_EResult CMsgRequestCrateItemsResponse::k_Succeeded;
const CMsgRequestCrateItemsResponse_EResult CMsgRequestCrateItemsResponse::k_Failed;
const CMsgRequestCrateItemsResponse_EResult CMsgRequestCrateItemsResponse::EResult_MIN;
const CMsgRequestCrateItemsResponse_EResult CMsgRequestCrateItemsResponse::EResult_MAX;
const int CMsgRequestCrateItemsResponse::EResult_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgRequestCrateEscalationLevelResponse_EResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[1];
}
bool CMsgRequestCrateEscalationLevelResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgRequestCrateEscalationLevelResponse_EResult CMsgRequestCrateEscalationLevelResponse::k_Succeeded;
const CMsgRequestCrateEscalationLevelResponse_EResult CMsgRequestCrateEscalationLevelResponse::k_Failed;
const CMsgRequestCrateEscalationLevelResponse_EResult CMsgRequestCrateEscalationLevelResponse::EResult_MIN;
const CMsgRequestCrateEscalationLevelResponse_EResult CMsgRequestCrateEscalationLevelResponse::EResult_MAX;
const int CMsgRequestCrateEscalationLevelResponse::EResult_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgRedeemCodeResponse_EResultCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[2];
}
bool CMsgRedeemCodeResponse_EResultCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::k_Succeeded;
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::k_Failed_CodeNotFound;
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::k_Failed_CodeAlreadyUsed;
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::k_Failed_OtherError;
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::EResultCode_MIN;
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::EResultCode_MAX;
const int CMsgRedeemCodeResponse::EResultCode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgClientToGCUnpackBundleResponse_EUnpackBundle_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[3];
}
bool CMsgClientToGCUnpackBundleResponse_EUnpackBundle_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Succeeded;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_ItemIsNotBundle;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_UnableToCreateContainedItem;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_SOCacheError;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_ItemIsInvalid;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_BadItemQuantity;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_UnableToDeleteItem;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::EUnpackBundle_MIN;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::EUnpackBundle_MAX;
const int CMsgClientToGCUnpackBundleResponse::EUnpackBundle_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgClientToGCSetItemStyleResponse_ESetStyle_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[4];
}
bool CMsgClientToGCSetItemStyleResponse_ESetStyle_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::k_SetStyle_Succeeded;
const CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::k_SetStyle_Failed;
const CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::k_SetStyle_Failed_StyleIsLocked;
const CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::ESetStyle_MIN;
const CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::ESetStyle_MAX;
const int CMsgClientToGCSetItemStyleResponse::ESetStyle_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[5];
}
bool CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Succeeded;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_PreReq;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantAfford;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantCommit;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantLockCache;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantAffordAttrib;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantAffordGem;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_NoCompendiumLevel;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_AlreadyUnlocked;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_OtherError;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_ItemIsInvalid;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_ToolIsInvalid;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::EUnlockStyle_MIN;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::EUnlockStyle_MAX;
const int CMsgClientToGCUnlockItemStyleResponse::EUnlockStyle_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[6];
}
bool CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::k_RemoveItemAttribute_Succeeded;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::k_RemoveItemAttribute_Failed;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::k_RemoveItemAttribute_Failed_ItemIsInvalid;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::k_RemoveItemAttribute_Failed_AttributeCannotBeRemoved;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::k_RemoveItemAttribute_Failed_AttributeDoesntExist;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::ERemoveItemAttribute_MIN;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::ERemoveItemAttribute_MAX;
const int CMsgClientToGCRemoveItemAttributeResponse::ERemoveItemAttribute_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgClientToGCNameItemResponse_ENameItem_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[7];
}
bool CMsgClientToGCNameItemResponse_ENameItem_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::k_NameItem_Succeeded;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::k_NameItem_Failed;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::k_NameItem_Failed_ToolIsInvalid;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::k_NameItem_Failed_ItemIsInvalid;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::k_NameItem_Failed_NameIsInvalid;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::ENameItem_MIN;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::ENameItem_MAX;
const int CMsgClientToGCNameItemResponse::ENameItem_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[8];
}
bool CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_Success;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_OfferingDisabled;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_InvalidItems;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_InternalError;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_MissingLeague;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_MissingEvent;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::EResponse_MIN;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::EResponse_MAX;
const int CMsgClientToGCCreateStaticRecipeResponse::EResponse_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EGCItemMsg_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[9];
}
bool EGCItemMsg_IsValid(int value) {
  switch (value) {
    case 1000:
    case 1001:
    case 1004:
    case 1005:
    case 1006:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1018:
    case 1019:
    case 1020:
    case 1021:
    case 1022:
    case 1023:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1030:
    case 1031:
    case 1037:
    case 1038:
    case 1039:
    case 1040:
    case 1041:
    case 1042:
    case 1049:
    case 1051:
    case 1052:
    case 1053:
    case 1054:
    case 1055:
    case 1056:
    case 1057:
    case 1058:
    case 1059:
    case 1061:
    case 1062:
    case 1063:
    case 1064:
    case 1067:
    case 1068:
    case 1069:
    case 1071:
    case 1072:
    case 1073:
    case 1075:
    case 1076:
    case 1077:
    case 1078:
    case 1079:
    case 1082:
    case 1083:
    case 1084:
    case 1085:
    case 1086:
    case 1087:
    case 1088:
    case 1089:
    case 1090:
    case 1091:
    case 1092:
    case 1093:
    case 1094:
    case 1095:
    case 1096:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1112:
    case 1500:
    case 1501:
    case 1502:
    case 1503:
    case 1509:
    case 1514:
    case 1601:
    case 1602:
    case 1700:
    case 2001:
    case 2002:
    case 2003:
    case 2004:
    case 2504:
    case 2505:
    case 2506:
    case 2507:
    case 2510:
    case 2511:
    case 2515:
    case 2516:
    case 2517:
    case 2518:
    case 2521:
    case 2522:
    case 2523:
    case 2524:
    case 2528:
    case 2531:
    case 2532:
    case 2533:
    case 2534:
    case 2535:
    case 2536:
    case 2537:
    case 2538:
    case 2539:
    case 2540:
    case 2541:
    case 2542:
    case 2543:
    case 2544:
    case 2545:
    case 2546:
    case 2547:
    case 2548:
    case 2549:
    case 2550:
    case 2551:
    case 2552:
    case 2553:
    case 2554:
    case 2555:
    case 2557:
    case 2558:
    case 2559:
    case 2560:
    case 2561:
    case 2562:
    case 2563:
    case 2564:
    case 2565:
    case 2566:
    case 2567:
    case 2568:
    case 2569:
    case 2570:
    case 2571:
    case 2572:
    case 2573:
    case 2574:
    case 2575:
    case 2576:
    case 2577:
    case 2578:
    case 2580:
    case 2581:
    case 2582:
    case 2583:
    case 2584:
    case 2585:
    case 2586:
    case 2587:
    case 2588:
    case 2589:
    case 2590:
    case 2591:
    case 2592:
    case 2593:
    case 2594:
    case 2595:
    case 2596:
    case 2598:
    case 2599:
    case 2600:
    case 2601:
    case 2602:
    case 2603:
    case 2604:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EItemPurgatoryResponse_Finalize_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[10];
}
bool EItemPurgatoryResponse_Finalize_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EItemPurgatoryResponse_Refund_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[11];
}
bool EItemPurgatoryResponse_Refund_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EGCMsgInitiateTradeResponse_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_econ_5fgcmessages_2eproto);
  return file_level_enum_descriptors_econ_5fgcmessages_2eproto[12];
}
bool EGCMsgInitiateTradeResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CMsgApplyAutograph::InitAsDefaultInstance() {
}
class CMsgApplyAutograph::HasBitSetters {
 public:
  static void set_has_autograph_item_id(CMsgApplyAutograph* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_item_item_id(CMsgApplyAutograph* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgApplyAutograph::kAutographItemIdFieldNumber;
const int CMsgApplyAutograph::kItemItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgApplyAutograph::CMsgApplyAutograph()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgApplyAutograph)
}
CMsgApplyAutograph::CMsgApplyAutograph(const CMsgApplyAutograph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&autograph_item_id_, &from.autograph_item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_item_id_) -
    reinterpret_cast<char*>(&autograph_item_id_)) + sizeof(item_item_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgApplyAutograph)
}

void CMsgApplyAutograph::SharedCtor() {
  ::memset(&autograph_item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_item_id_) -
      reinterpret_cast<char*>(&autograph_item_id_)) + sizeof(item_item_id_));
}

CMsgApplyAutograph::~CMsgApplyAutograph() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgApplyAutograph)
  SharedDtor();
}

void CMsgApplyAutograph::SharedDtor() {
}

void CMsgApplyAutograph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgApplyAutograph& CMsgApplyAutograph::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgApplyAutograph_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgApplyAutograph::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgApplyAutograph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&autograph_item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_item_id_) -
        reinterpret_cast<char*>(&autograph_item_id_)) + sizeof(item_item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgApplyAutograph::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgApplyAutograph*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 autograph_item_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_autograph_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 item_item_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_item_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgApplyAutograph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgApplyAutograph)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 autograph_item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_autograph_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &autograph_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_item_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgApplyAutograph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgApplyAutograph)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgApplyAutograph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgApplyAutograph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 autograph_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->autograph_item_id(), output);
  }

  // optional uint64 item_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgApplyAutograph)
}

::google::protobuf::uint8* CMsgApplyAutograph::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgApplyAutograph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 autograph_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->autograph_item_id(), target);
  }

  // optional uint64 item_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgApplyAutograph)
  return target;
}

size_t CMsgApplyAutograph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgApplyAutograph)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 autograph_item_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->autograph_item_id());
    }

    // optional uint64 item_item_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgApplyAutograph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgApplyAutograph)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgApplyAutograph* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgApplyAutograph>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgApplyAutograph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgApplyAutograph)
    MergeFrom(*source);
  }
}

void CMsgApplyAutograph::MergeFrom(const CMsgApplyAutograph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgApplyAutograph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      autograph_item_id_ = from.autograph_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_item_id_ = from.item_item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgApplyAutograph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgApplyAutograph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgApplyAutograph::CopyFrom(const CMsgApplyAutograph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgApplyAutograph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgApplyAutograph::IsInitialized() const {
  return true;
}

void CMsgApplyAutograph::Swap(CMsgApplyAutograph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgApplyAutograph::InternalSwap(CMsgApplyAutograph* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(autograph_item_id_, other->autograph_item_id_);
  swap(item_item_id_, other->item_item_id_);
}

::google::protobuf::Metadata CMsgApplyAutograph::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgAdjustItemEquippedState::InitAsDefaultInstance() {
}
class CMsgAdjustItemEquippedState::HasBitSetters {
 public:
  static void set_has_item_id(CMsgAdjustItemEquippedState* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_new_class(CMsgAdjustItemEquippedState* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_new_slot(CMsgAdjustItemEquippedState* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_style_index(CMsgAdjustItemEquippedState* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAdjustItemEquippedState::kItemIdFieldNumber;
const int CMsgAdjustItemEquippedState::kNewClassFieldNumber;
const int CMsgAdjustItemEquippedState::kNewSlotFieldNumber;
const int CMsgAdjustItemEquippedState::kStyleIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAdjustItemEquippedState::CMsgAdjustItemEquippedState()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgAdjustItemEquippedState)
}
CMsgAdjustItemEquippedState::CMsgAdjustItemEquippedState(const CMsgAdjustItemEquippedState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&style_index_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(style_index_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgAdjustItemEquippedState)
}

void CMsgAdjustItemEquippedState::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&style_index_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(style_index_));
}

CMsgAdjustItemEquippedState::~CMsgAdjustItemEquippedState() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgAdjustItemEquippedState)
  SharedDtor();
}

void CMsgAdjustItemEquippedState::SharedDtor() {
}

void CMsgAdjustItemEquippedState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgAdjustItemEquippedState& CMsgAdjustItemEquippedState::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgAdjustItemEquippedState_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgAdjustItemEquippedState::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgAdjustItemEquippedState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&style_index_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(style_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgAdjustItemEquippedState::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgAdjustItemEquippedState*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 new_class = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_new_class(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 new_slot = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_new_slot(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 style_index = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_style_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgAdjustItemEquippedState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgAdjustItemEquippedState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 new_class = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_new_class(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_class_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 new_slot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_new_slot(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 style_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_style_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgAdjustItemEquippedState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgAdjustItemEquippedState)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgAdjustItemEquippedState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgAdjustItemEquippedState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 new_class = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->new_class(), output);
  }

  // optional uint32 new_slot = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->new_slot(), output);
  }

  // optional uint32 style_index = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->style_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgAdjustItemEquippedState)
}

::google::protobuf::uint8* CMsgAdjustItemEquippedState::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgAdjustItemEquippedState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 new_class = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->new_class(), target);
  }

  // optional uint32 new_slot = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->new_slot(), target);
  }

  // optional uint32 style_index = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->style_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgAdjustItemEquippedState)
  return target;
}

size_t CMsgAdjustItemEquippedState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgAdjustItemEquippedState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint64 item_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 new_class = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_class());
    }

    // optional uint32 new_slot = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_slot());
    }

    // optional uint32 style_index = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAdjustItemEquippedState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgAdjustItemEquippedState)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAdjustItemEquippedState* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgAdjustItemEquippedState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgAdjustItemEquippedState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgAdjustItemEquippedState)
    MergeFrom(*source);
  }
}

void CMsgAdjustItemEquippedState::MergeFrom(const CMsgAdjustItemEquippedState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgAdjustItemEquippedState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      new_class_ = from.new_class_;
    }
    if (cached_has_bits & 0x00000004u) {
      new_slot_ = from.new_slot_;
    }
    if (cached_has_bits & 0x00000008u) {
      style_index_ = from.style_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAdjustItemEquippedState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgAdjustItemEquippedState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAdjustItemEquippedState::CopyFrom(const CMsgAdjustItemEquippedState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgAdjustItemEquippedState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAdjustItemEquippedState::IsInitialized() const {
  return true;
}

void CMsgAdjustItemEquippedState::Swap(CMsgAdjustItemEquippedState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAdjustItemEquippedState::InternalSwap(CMsgAdjustItemEquippedState* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
  swap(new_class_, other->new_class_);
  swap(new_slot_, other->new_slot_);
  swap(style_index_, other->style_index_);
}

::google::protobuf::Metadata CMsgAdjustItemEquippedState::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::InitAsDefaultInstance() {
}
class CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::HasBitSetters {
 public:
  static void set_has_event_type(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_item_id(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_adjustment(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::kEventTypeFieldNumber;
const int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::kItemIdFieldNumber;
const int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::kAdjustmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
}
CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&adjustment_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(adjustment_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&adjustment_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(adjustment_));
}

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::~CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  SharedDtor();
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SharedDtor() {
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&adjustment_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(adjustment_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 event_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_event_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 adjustment = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_adjustment(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 event_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_event_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 adjustment = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_adjustment(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &adjustment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 event_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->event_type(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  // optional uint32 adjustment = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->adjustment(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
}

::google::protobuf::uint8* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 event_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->event_type(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  // optional uint32 adjustment = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->adjustment(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  return target;
}

size_t CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 item_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 event_type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->event_type());
    }

    // optional uint32 adjustment = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->adjustment());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
    MergeFrom(*source);
  }
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::MergeFrom(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      event_type_ = from.event_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      adjustment_ = from.adjustment_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CopyFrom(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::IsInitialized() const {
  return true;
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::Swap(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::InternalSwap(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
  swap(event_type_, other->event_type_);
  swap(adjustment_, other->adjustment_);
}

::google::protobuf::Metadata CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgEconPlayerStrangeCountAdjustment::InitAsDefaultInstance() {
}
class CMsgEconPlayerStrangeCountAdjustment::HasBitSetters {
 public:
  static void set_has_account_id(CMsgEconPlayerStrangeCountAdjustment* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_turbo_mode(CMsgEconPlayerStrangeCountAdjustment* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgEconPlayerStrangeCountAdjustment::kAccountIdFieldNumber;
const int CMsgEconPlayerStrangeCountAdjustment::kStrangeCountAdjustmentsFieldNumber;
const int CMsgEconPlayerStrangeCountAdjustment::kTurboModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgEconPlayerStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
}
CMsgEconPlayerStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment(const CMsgEconPlayerStrangeCountAdjustment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      strange_count_adjustments_(from.strange_count_adjustments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&turbo_mode_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(turbo_mode_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
}

void CMsgEconPlayerStrangeCountAdjustment::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgEconPlayerStrangeCountAdjustment_econ_5fgcmessages_2eproto.base);
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&turbo_mode_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(turbo_mode_));
}

CMsgEconPlayerStrangeCountAdjustment::~CMsgEconPlayerStrangeCountAdjustment() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  SharedDtor();
}

void CMsgEconPlayerStrangeCountAdjustment::SharedDtor() {
}

void CMsgEconPlayerStrangeCountAdjustment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgEconPlayerStrangeCountAdjustment& CMsgEconPlayerStrangeCountAdjustment::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgEconPlayerStrangeCountAdjustment_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgEconPlayerStrangeCountAdjustment::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strange_count_adjustments_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&turbo_mode_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(turbo_mode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgEconPlayerStrangeCountAdjustment::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgEconPlayerStrangeCountAdjustment*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::_InternalParse;
          object = msg->add_strange_count_adjustments();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // optional bool turbo_mode = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_turbo_mode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgEconPlayerStrangeCountAdjustment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_strange_count_adjustments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool turbo_mode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_turbo_mode(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &turbo_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgEconPlayerStrangeCountAdjustment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // repeated .proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->strange_count_adjustments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->strange_count_adjustments(static_cast<int>(i)),
      output);
  }

  // optional bool turbo_mode = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->turbo_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
}

::google::protobuf::uint8* CMsgEconPlayerStrangeCountAdjustment::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // repeated .proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->strange_count_adjustments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->strange_count_adjustments(static_cast<int>(i)), target);
  }

  // optional bool turbo_mode = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->turbo_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  return target;
}

size_t CMsgEconPlayerStrangeCountAdjustment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->strange_count_adjustments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->strange_count_adjustments(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional bool turbo_mode = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgEconPlayerStrangeCountAdjustment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgEconPlayerStrangeCountAdjustment* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgEconPlayerStrangeCountAdjustment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
    MergeFrom(*source);
  }
}

void CMsgEconPlayerStrangeCountAdjustment::MergeFrom(const CMsgEconPlayerStrangeCountAdjustment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  strange_count_adjustments_.MergeFrom(from.strange_count_adjustments_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      turbo_mode_ = from.turbo_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgEconPlayerStrangeCountAdjustment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgEconPlayerStrangeCountAdjustment::CopyFrom(const CMsgEconPlayerStrangeCountAdjustment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgEconPlayerStrangeCountAdjustment::IsInitialized() const {
  return true;
}

void CMsgEconPlayerStrangeCountAdjustment::Swap(CMsgEconPlayerStrangeCountAdjustment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgEconPlayerStrangeCountAdjustment::InternalSwap(CMsgEconPlayerStrangeCountAdjustment* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&strange_count_adjustments_)->InternalSwap(CastToBase(&other->strange_count_adjustments_));
  swap(account_id_, other->account_id_);
  swap(turbo_mode_, other->turbo_mode_);
}

::google::protobuf::Metadata CMsgEconPlayerStrangeCountAdjustment::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgRequestItemPurgatory_FinalizePurchase::InitAsDefaultInstance() {
}
class CMsgRequestItemPurgatory_FinalizePurchase::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRequestItemPurgatory_FinalizePurchase::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestItemPurgatory_FinalizePurchase::CMsgRequestItemPurgatory_FinalizePurchase()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
}
CMsgRequestItemPurgatory_FinalizePurchase::CMsgRequestItemPurgatory_FinalizePurchase(const CMsgRequestItemPurgatory_FinalizePurchase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
}

void CMsgRequestItemPurgatory_FinalizePurchase::SharedCtor() {
}

CMsgRequestItemPurgatory_FinalizePurchase::~CMsgRequestItemPurgatory_FinalizePurchase() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  SharedDtor();
}

void CMsgRequestItemPurgatory_FinalizePurchase::SharedDtor() {
}

void CMsgRequestItemPurgatory_FinalizePurchase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgRequestItemPurgatory_FinalizePurchase& CMsgRequestItemPurgatory_FinalizePurchase::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgRequestItemPurgatory_FinalizePurchase_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgRequestItemPurgatory_FinalizePurchase::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgRequestItemPurgatory_FinalizePurchase::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgRequestItemPurgatory_FinalizePurchase*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_item_ids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
        object = msg->mutable_item_ids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgRequestItemPurgatory_FinalizePurchase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgRequestItemPurgatory_FinalizePurchase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_FinalizePurchase::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  return target;
}

size_t CMsgRequestItemPurgatory_FinalizePurchase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRequestItemPurgatory_FinalizePurchase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_FinalizePurchase* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgRequestItemPurgatory_FinalizePurchase>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_FinalizePurchase::MergeFrom(const CMsgRequestItemPurgatory_FinalizePurchase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
}

void CMsgRequestItemPurgatory_FinalizePurchase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_FinalizePurchase::CopyFrom(const CMsgRequestItemPurgatory_FinalizePurchase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_FinalizePurchase::IsInitialized() const {
  return true;
}

void CMsgRequestItemPurgatory_FinalizePurchase::Swap(CMsgRequestItemPurgatory_FinalizePurchase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestItemPurgatory_FinalizePurchase::InternalSwap(CMsgRequestItemPurgatory_FinalizePurchase* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  item_ids_.InternalSwap(&other->item_ids_);
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_FinalizePurchase::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::InitAsDefaultInstance() {
}
class CMsgRequestItemPurgatory_FinalizePurchaseResponse::HasBitSetters {
 public:
  static void set_has_result(CMsgRequestItemPurgatory_FinalizePurchaseResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRequestItemPurgatory_FinalizePurchaseResponse::kResultFieldNumber;
const int CMsgRequestItemPurgatory_FinalizePurchaseResponse::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestItemPurgatory_FinalizePurchaseResponse::CMsgRequestItemPurgatory_FinalizePurchaseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
}
CMsgRequestItemPurgatory_FinalizePurchaseResponse::CMsgRequestItemPurgatory_FinalizePurchaseResponse(const CMsgRequestItemPurgatory_FinalizePurchaseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SharedCtor() {
  result_ = 0u;
}

CMsgRequestItemPurgatory_FinalizePurchaseResponse::~CMsgRequestItemPurgatory_FinalizePurchaseResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  SharedDtor();
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SharedDtor() {
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgRequestItemPurgatory_FinalizePurchaseResponse& CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgRequestItemPurgatory_FinalizePurchaseResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgRequestItemPurgatory_FinalizePurchaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_ids_.Clear();
  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgRequestItemPurgatory_FinalizePurchaseResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgRequestItemPurgatory_FinalizePurchaseResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_result(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint64 item_ids = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_item_ids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
        object = msg->mutable_item_ids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgRequestItemPurgatory_FinalizePurchaseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_result(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 item_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // repeated uint64 item_ids = 2;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_FinalizePurchaseResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // repeated uint64 item_ids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  return target;
}

size_t CMsgRequestItemPurgatory_FinalizePurchaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 item_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  // optional uint32 result = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_FinalizePurchaseResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgRequestItemPurgatory_FinalizePurchaseResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::MergeFrom(const CMsgRequestItemPurgatory_FinalizePurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::CopyFrom(const CMsgRequestItemPurgatory_FinalizePurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_FinalizePurchaseResponse::IsInitialized() const {
  return true;
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::Swap(CMsgRequestItemPurgatory_FinalizePurchaseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestItemPurgatory_FinalizePurchaseResponse::InternalSwap(CMsgRequestItemPurgatory_FinalizePurchaseResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  item_ids_.InternalSwap(&other->item_ids_);
  swap(result_, other->result_);
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_FinalizePurchaseResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgRequestItemPurgatory_RefundPurchase::InitAsDefaultInstance() {
}
class CMsgRequestItemPurgatory_RefundPurchase::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRequestItemPurgatory_RefundPurchase::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestItemPurgatory_RefundPurchase::CMsgRequestItemPurgatory_RefundPurchase()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
}
CMsgRequestItemPurgatory_RefundPurchase::CMsgRequestItemPurgatory_RefundPurchase(const CMsgRequestItemPurgatory_RefundPurchase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
}

void CMsgRequestItemPurgatory_RefundPurchase::SharedCtor() {
}

CMsgRequestItemPurgatory_RefundPurchase::~CMsgRequestItemPurgatory_RefundPurchase() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  SharedDtor();
}

void CMsgRequestItemPurgatory_RefundPurchase::SharedDtor() {
}

void CMsgRequestItemPurgatory_RefundPurchase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgRequestItemPurgatory_RefundPurchase& CMsgRequestItemPurgatory_RefundPurchase::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgRequestItemPurgatory_RefundPurchase_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgRequestItemPurgatory_RefundPurchase::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgRequestItemPurgatory_RefundPurchase::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgRequestItemPurgatory_RefundPurchase*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_item_ids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
        object = msg->mutable_item_ids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgRequestItemPurgatory_RefundPurchase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgRequestItemPurgatory_RefundPurchase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_RefundPurchase::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  return target;
}

size_t CMsgRequestItemPurgatory_RefundPurchase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRequestItemPurgatory_RefundPurchase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_RefundPurchase* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgRequestItemPurgatory_RefundPurchase>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_RefundPurchase::MergeFrom(const CMsgRequestItemPurgatory_RefundPurchase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
}

void CMsgRequestItemPurgatory_RefundPurchase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_RefundPurchase::CopyFrom(const CMsgRequestItemPurgatory_RefundPurchase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_RefundPurchase::IsInitialized() const {
  return true;
}

void CMsgRequestItemPurgatory_RefundPurchase::Swap(CMsgRequestItemPurgatory_RefundPurchase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestItemPurgatory_RefundPurchase::InternalSwap(CMsgRequestItemPurgatory_RefundPurchase* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  item_ids_.InternalSwap(&other->item_ids_);
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_RefundPurchase::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgRequestItemPurgatory_RefundPurchaseResponse::InitAsDefaultInstance() {
}
class CMsgRequestItemPurgatory_RefundPurchaseResponse::HasBitSetters {
 public:
  static void set_has_result(CMsgRequestItemPurgatory_RefundPurchaseResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRequestItemPurgatory_RefundPurchaseResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestItemPurgatory_RefundPurchaseResponse::CMsgRequestItemPurgatory_RefundPurchaseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
}
CMsgRequestItemPurgatory_RefundPurchaseResponse::CMsgRequestItemPurgatory_RefundPurchaseResponse(const CMsgRequestItemPurgatory_RefundPurchaseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SharedCtor() {
  result_ = 0u;
}

CMsgRequestItemPurgatory_RefundPurchaseResponse::~CMsgRequestItemPurgatory_RefundPurchaseResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  SharedDtor();
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SharedDtor() {
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgRequestItemPurgatory_RefundPurchaseResponse& CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgRequestItemPurgatory_RefundPurchaseResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgRequestItemPurgatory_RefundPurchaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgRequestItemPurgatory_RefundPurchaseResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgRequestItemPurgatory_RefundPurchaseResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_result(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgRequestItemPurgatory_RefundPurchaseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_result(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_RefundPurchaseResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  return target;
}

size_t CMsgRequestItemPurgatory_RefundPurchaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 result = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_RefundPurchaseResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgRequestItemPurgatory_RefundPurchaseResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::MergeFrom(const CMsgRequestItemPurgatory_RefundPurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::CopyFrom(const CMsgRequestItemPurgatory_RefundPurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_RefundPurchaseResponse::IsInitialized() const {
  return true;
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::Swap(CMsgRequestItemPurgatory_RefundPurchaseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestItemPurgatory_RefundPurchaseResponse::InternalSwap(CMsgRequestItemPurgatory_RefundPurchaseResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_RefundPurchaseResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgCraftingResponse::InitAsDefaultInstance() {
}
class CMsgCraftingResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCraftingResponse::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCraftingResponse::CMsgCraftingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgCraftingResponse)
}
CMsgCraftingResponse::CMsgCraftingResponse(const CMsgCraftingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgCraftingResponse)
}

void CMsgCraftingResponse::SharedCtor() {
}

CMsgCraftingResponse::~CMsgCraftingResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgCraftingResponse)
  SharedDtor();
}

void CMsgCraftingResponse::SharedDtor() {
}

void CMsgCraftingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgCraftingResponse& CMsgCraftingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgCraftingResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgCraftingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgCraftingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgCraftingResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgCraftingResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_item_ids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
        object = msg->mutable_item_ids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgCraftingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgCraftingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgCraftingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgCraftingResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgCraftingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgCraftingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgCraftingResponse)
}

::google::protobuf::uint8* CMsgCraftingResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgCraftingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgCraftingResponse)
  return target;
}

size_t CMsgCraftingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgCraftingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCraftingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgCraftingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCraftingResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgCraftingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgCraftingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgCraftingResponse)
    MergeFrom(*source);
  }
}

void CMsgCraftingResponse::MergeFrom(const CMsgCraftingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgCraftingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
}

void CMsgCraftingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgCraftingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCraftingResponse::CopyFrom(const CMsgCraftingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgCraftingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCraftingResponse::IsInitialized() const {
  return true;
}

void CMsgCraftingResponse::Swap(CMsgCraftingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCraftingResponse::InternalSwap(CMsgCraftingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  item_ids_.InternalSwap(&other->item_ids_);
}

::google::protobuf::Metadata CMsgCraftingResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCRequestStoreSalesData::InitAsDefaultInstance() {
}
class CMsgGCRequestStoreSalesData::HasBitSetters {
 public:
  static void set_has_version(CMsgGCRequestStoreSalesData* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_currency(CMsgGCRequestStoreSalesData* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCRequestStoreSalesData::kVersionFieldNumber;
const int CMsgGCRequestStoreSalesData::kCurrencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCRequestStoreSalesData::CMsgGCRequestStoreSalesData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCRequestStoreSalesData)
}
CMsgGCRequestStoreSalesData::CMsgGCRequestStoreSalesData(const CMsgGCRequestStoreSalesData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&currency_) -
    reinterpret_cast<char*>(&version_)) + sizeof(currency_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCRequestStoreSalesData)
}

void CMsgGCRequestStoreSalesData::SharedCtor() {
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&currency_) -
      reinterpret_cast<char*>(&version_)) + sizeof(currency_));
}

CMsgGCRequestStoreSalesData::~CMsgGCRequestStoreSalesData() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCRequestStoreSalesData)
  SharedDtor();
}

void CMsgGCRequestStoreSalesData::SharedDtor() {
}

void CMsgGCRequestStoreSalesData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCRequestStoreSalesData& CMsgGCRequestStoreSalesData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCRequestStoreSalesData_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCRequestStoreSalesData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCRequestStoreSalesData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&currency_) -
        reinterpret_cast<char*>(&version_)) + sizeof(currency_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCRequestStoreSalesData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCRequestStoreSalesData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 currency = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_currency(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCRequestStoreSalesData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCRequestStoreSalesData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 currency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_currency(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCRequestStoreSalesData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCRequestStoreSalesData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCRequestStoreSalesData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCRequestStoreSalesData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional uint32 currency = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->currency(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCRequestStoreSalesData)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCRequestStoreSalesData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional uint32 currency = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->currency(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCRequestStoreSalesData)
  return target;
}

size_t CMsgGCRequestStoreSalesData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCRequestStoreSalesData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 version = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 currency = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currency());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCRequestStoreSalesData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCRequestStoreSalesData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesData* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCRequestStoreSalesData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCRequestStoreSalesData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCRequestStoreSalesData)
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesData::MergeFrom(const CMsgGCRequestStoreSalesData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCRequestStoreSalesData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000002u) {
      currency_ = from.currency_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCRequestStoreSalesData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCRequestStoreSalesData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesData::CopyFrom(const CMsgGCRequestStoreSalesData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCRequestStoreSalesData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesData::IsInitialized() const {
  return true;
}

void CMsgGCRequestStoreSalesData::Swap(CMsgGCRequestStoreSalesData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRequestStoreSalesData::InternalSwap(CMsgGCRequestStoreSalesData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(version_, other->version_);
  swap(currency_, other->currency_);
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCRequestStoreSalesDataResponse_Price::InitAsDefaultInstance() {
}
class CMsgGCRequestStoreSalesDataResponse_Price::HasBitSetters {
 public:
  static void set_has_item_def(CMsgGCRequestStoreSalesDataResponse_Price* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_price(CMsgGCRequestStoreSalesDataResponse_Price* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCRequestStoreSalesDataResponse_Price::kItemDefFieldNumber;
const int CMsgGCRequestStoreSalesDataResponse_Price::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCRequestStoreSalesDataResponse_Price::CMsgGCRequestStoreSalesDataResponse_Price()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
}
CMsgGCRequestStoreSalesDataResponse_Price::CMsgGCRequestStoreSalesDataResponse_Price(const CMsgGCRequestStoreSalesDataResponse_Price& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_def_, &from.item_def_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&item_def_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
}

void CMsgGCRequestStoreSalesDataResponse_Price::SharedCtor() {
  ::memset(&item_def_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&item_def_)) + sizeof(price_));
}

CMsgGCRequestStoreSalesDataResponse_Price::~CMsgGCRequestStoreSalesDataResponse_Price() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  SharedDtor();
}

void CMsgGCRequestStoreSalesDataResponse_Price::SharedDtor() {
}

void CMsgGCRequestStoreSalesDataResponse_Price::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCRequestStoreSalesDataResponse_Price& CMsgGCRequestStoreSalesDataResponse_Price::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCRequestStoreSalesDataResponse_Price_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCRequestStoreSalesDataResponse_Price::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&item_def_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&price_) -
        reinterpret_cast<char*>(&item_def_)) + sizeof(price_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCRequestStoreSalesDataResponse_Price::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCRequestStoreSalesDataResponse_Price*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 item_def = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_def(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 price = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_price(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCRequestStoreSalesDataResponse_Price::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_def(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_price(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCRequestStoreSalesDataResponse_Price::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def(), output);
  }

  // optional uint32 price = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->price(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesDataResponse_Price::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def(), target);
  }

  // optional uint32 price = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->price(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  return target;
}

size_t CMsgGCRequestStoreSalesDataResponse_Price::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 item_def = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional uint32 price = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCRequestStoreSalesDataResponse_Price::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesDataResponse_Price* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCRequestStoreSalesDataResponse_Price>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesDataResponse_Price::MergeFrom(const CMsgGCRequestStoreSalesDataResponse_Price& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      item_def_ = from.item_def_;
    }
    if (cached_has_bits & 0x00000002u) {
      price_ = from.price_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCRequestStoreSalesDataResponse_Price::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesDataResponse_Price::CopyFrom(const CMsgGCRequestStoreSalesDataResponse_Price& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesDataResponse_Price::IsInitialized() const {
  return true;
}

void CMsgGCRequestStoreSalesDataResponse_Price::Swap(CMsgGCRequestStoreSalesDataResponse_Price* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRequestStoreSalesDataResponse_Price::InternalSwap(CMsgGCRequestStoreSalesDataResponse_Price* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_def_, other->item_def_);
  swap(price_, other->price_);
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesDataResponse_Price::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCRequestStoreSalesDataResponse::InitAsDefaultInstance() {
}
class CMsgGCRequestStoreSalesDataResponse::HasBitSetters {
 public:
  static void set_has_version(CMsgGCRequestStoreSalesDataResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_expiration_time(CMsgGCRequestStoreSalesDataResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCRequestStoreSalesDataResponse::kSalePriceFieldNumber;
const int CMsgGCRequestStoreSalesDataResponse::kVersionFieldNumber;
const int CMsgGCRequestStoreSalesDataResponse::kExpirationTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCRequestStoreSalesDataResponse::CMsgGCRequestStoreSalesDataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCRequestStoreSalesDataResponse)
}
CMsgGCRequestStoreSalesDataResponse::CMsgGCRequestStoreSalesDataResponse(const CMsgGCRequestStoreSalesDataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      sale_price_(from.sale_price_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&expiration_time_) -
    reinterpret_cast<char*>(&version_)) + sizeof(expiration_time_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCRequestStoreSalesDataResponse)
}

void CMsgGCRequestStoreSalesDataResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCRequestStoreSalesDataResponse_econ_5fgcmessages_2eproto.base);
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expiration_time_) -
      reinterpret_cast<char*>(&version_)) + sizeof(expiration_time_));
}

CMsgGCRequestStoreSalesDataResponse::~CMsgGCRequestStoreSalesDataResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  SharedDtor();
}

void CMsgGCRequestStoreSalesDataResponse::SharedDtor() {
}

void CMsgGCRequestStoreSalesDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCRequestStoreSalesDataResponse& CMsgGCRequestStoreSalesDataResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCRequestStoreSalesDataResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCRequestStoreSalesDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sale_price_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&expiration_time_) -
        reinterpret_cast<char*>(&version_)) + sizeof(expiration_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCRequestStoreSalesDataResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCRequestStoreSalesDataResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.dota.CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price::_InternalParse;
          object = msg->add_sale_price();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // optional uint32 version = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 expiration_time = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_expiration_time(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCRequestStoreSalesDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sale_price()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 expiration_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_expiration_time(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expiration_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCRequestStoreSalesDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sale_price_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->sale_price(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // optional uint32 expiration_time = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->expiration_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCRequestStoreSalesDataResponse)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesDataResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sale_price_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sale_price(static_cast<int>(i)), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // optional uint32 expiration_time = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->expiration_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  return target;
}

size_t CMsgGCRequestStoreSalesDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sale_price_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sale_price(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 version = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 expiration_time = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expiration_time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCRequestStoreSalesDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesDataResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCRequestStoreSalesDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCRequestStoreSalesDataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCRequestStoreSalesDataResponse)
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesDataResponse::MergeFrom(const CMsgGCRequestStoreSalesDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sale_price_.MergeFrom(from.sale_price_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000002u) {
      expiration_time_ = from.expiration_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCRequestStoreSalesDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesDataResponse::CopyFrom(const CMsgGCRequestStoreSalesDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesDataResponse::IsInitialized() const {
  return true;
}

void CMsgGCRequestStoreSalesDataResponse::Swap(CMsgGCRequestStoreSalesDataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRequestStoreSalesDataResponse::InternalSwap(CMsgGCRequestStoreSalesDataResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&sale_price_)->InternalSwap(CastToBase(&other->sale_price_));
  swap(version_, other->version_);
  swap(expiration_time_, other->expiration_time_);
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesDataResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCRequestStoreSalesDataUpToDateResponse::InitAsDefaultInstance() {
}
class CMsgGCRequestStoreSalesDataUpToDateResponse::HasBitSetters {
 public:
  static void set_has_version(CMsgGCRequestStoreSalesDataUpToDateResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_expiration_time(CMsgGCRequestStoreSalesDataUpToDateResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCRequestStoreSalesDataUpToDateResponse::kVersionFieldNumber;
const int CMsgGCRequestStoreSalesDataUpToDateResponse::kExpirationTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCRequestStoreSalesDataUpToDateResponse::CMsgGCRequestStoreSalesDataUpToDateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
}
CMsgGCRequestStoreSalesDataUpToDateResponse::CMsgGCRequestStoreSalesDataUpToDateResponse(const CMsgGCRequestStoreSalesDataUpToDateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&expiration_time_) -
    reinterpret_cast<char*>(&version_)) + sizeof(expiration_time_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SharedCtor() {
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expiration_time_) -
      reinterpret_cast<char*>(&version_)) + sizeof(expiration_time_));
}

CMsgGCRequestStoreSalesDataUpToDateResponse::~CMsgGCRequestStoreSalesDataUpToDateResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  SharedDtor();
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SharedDtor() {
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCRequestStoreSalesDataUpToDateResponse& CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCRequestStoreSalesDataUpToDateResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCRequestStoreSalesDataUpToDateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&expiration_time_) -
        reinterpret_cast<char*>(&version_)) + sizeof(expiration_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCRequestStoreSalesDataUpToDateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCRequestStoreSalesDataUpToDateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 expiration_time = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_expiration_time(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCRequestStoreSalesDataUpToDateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 expiration_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_expiration_time(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expiration_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCRequestStoreSalesDataUpToDateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional uint32 expiration_time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->expiration_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesDataUpToDateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional uint32 expiration_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->expiration_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  return target;
}

size_t CMsgGCRequestStoreSalesDataUpToDateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 version = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 expiration_time = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expiration_time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesDataUpToDateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCRequestStoreSalesDataUpToDateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::MergeFrom(const CMsgGCRequestStoreSalesDataUpToDateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000002u) {
      expiration_time_ = from.expiration_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::CopyFrom(const CMsgGCRequestStoreSalesDataUpToDateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesDataUpToDateResponse::IsInitialized() const {
  return true;
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::Swap(CMsgGCRequestStoreSalesDataUpToDateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRequestStoreSalesDataUpToDateResponse::InternalSwap(CMsgGCRequestStoreSalesDataUpToDateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(version_, other->version_);
  swap(expiration_time_, other->expiration_time_);
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesDataUpToDateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCPingRequest::InitAsDefaultInstance() {
}
class CMsgGCToGCPingRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCPingRequest::CMsgGCToGCPingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCPingRequest)
}
CMsgGCToGCPingRequest::CMsgGCToGCPingRequest(const CMsgGCToGCPingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCPingRequest)
}

void CMsgGCToGCPingRequest::SharedCtor() {
}

CMsgGCToGCPingRequest::~CMsgGCToGCPingRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCPingRequest)
  SharedDtor();
}

void CMsgGCToGCPingRequest::SharedDtor() {
}

void CMsgGCToGCPingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCPingRequest& CMsgGCToGCPingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCPingRequest_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCPingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCPingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCPingRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCPingRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCPingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCPingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCPingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCPingRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCPingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCPingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCPingRequest)
}

::google::protobuf::uint8* CMsgGCToGCPingRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCPingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCPingRequest)
  return target;
}

size_t CMsgGCToGCPingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCPingRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCPingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCPingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCPingRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCPingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCPingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCPingRequest)
    MergeFrom(*source);
  }
}

void CMsgGCToGCPingRequest::MergeFrom(const CMsgGCToGCPingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCPingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgGCToGCPingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCPingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCPingRequest::CopyFrom(const CMsgGCToGCPingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCPingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCPingRequest::IsInitialized() const {
  return true;
}

void CMsgGCToGCPingRequest::Swap(CMsgGCToGCPingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCPingRequest::InternalSwap(CMsgGCToGCPingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CMsgGCToGCPingRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCPingResponse::InitAsDefaultInstance() {
}
class CMsgGCToGCPingResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCPingResponse::CMsgGCToGCPingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCPingResponse)
}
CMsgGCToGCPingResponse::CMsgGCToGCPingResponse(const CMsgGCToGCPingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCPingResponse)
}

void CMsgGCToGCPingResponse::SharedCtor() {
}

CMsgGCToGCPingResponse::~CMsgGCToGCPingResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCPingResponse)
  SharedDtor();
}

void CMsgGCToGCPingResponse::SharedDtor() {
}

void CMsgGCToGCPingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCPingResponse& CMsgGCToGCPingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCPingResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCPingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCPingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCPingResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCPingResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCPingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCPingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCPingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCPingResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCPingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCPingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCPingResponse)
}

::google::protobuf::uint8* CMsgGCToGCPingResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCPingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCPingResponse)
  return target;
}

size_t CMsgGCToGCPingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCPingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCPingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCPingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCPingResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCPingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCPingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCPingResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCPingResponse::MergeFrom(const CMsgGCToGCPingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCPingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgGCToGCPingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCPingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCPingResponse::CopyFrom(const CMsgGCToGCPingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCPingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCPingResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCPingResponse::Swap(CMsgGCToGCPingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCPingResponse::InternalSwap(CMsgGCToGCPingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CMsgGCToGCPingResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCGetUserSessionServer::InitAsDefaultInstance() {
}
class CMsgGCToGCGetUserSessionServer::HasBitSetters {
 public:
  static void set_has_account_id(CMsgGCToGCGetUserSessionServer* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGetUserSessionServer::kAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGetUserSessionServer::CMsgGCToGCGetUserSessionServer()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGetUserSessionServer)
}
CMsgGCToGCGetUserSessionServer::CMsgGCToGCGetUserSessionServer(const CMsgGCToGCGetUserSessionServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_id_ = from.account_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGetUserSessionServer)
}

void CMsgGCToGCGetUserSessionServer::SharedCtor() {
  account_id_ = 0u;
}

CMsgGCToGCGetUserSessionServer::~CMsgGCToGCGetUserSessionServer() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGetUserSessionServer)
  SharedDtor();
}

void CMsgGCToGCGetUserSessionServer::SharedDtor() {
}

void CMsgGCToGCGetUserSessionServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCGetUserSessionServer& CMsgGCToGCGetUserSessionServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCGetUserSessionServer_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCGetUserSessionServer::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCGetUserSessionServer::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCGetUserSessionServer*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCGetUserSessionServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGetUserSessionServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGetUserSessionServer)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCGetUserSessionServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGetUserSessionServer)
}

::google::protobuf::uint8* CMsgGCToGCGetUserSessionServer::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGetUserSessionServer)
  return target;
}

size_t CMsgGCToGCGetUserSessionServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 account_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCGetUserSessionServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGetUserSessionServer* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCGetUserSessionServer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGetUserSessionServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGetUserSessionServer)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserSessionServer::MergeFrom(const CMsgGCToGCGetUserSessionServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_account_id()) {
    set_account_id(from.account_id());
  }
}

void CMsgGCToGCGetUserSessionServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserSessionServer::CopyFrom(const CMsgGCToGCGetUserSessionServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserSessionServer::IsInitialized() const {
  return true;
}

void CMsgGCToGCGetUserSessionServer::Swap(CMsgGCToGCGetUserSessionServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGetUserSessionServer::InternalSwap(CMsgGCToGCGetUserSessionServer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(account_id_, other->account_id_);
}

::google::protobuf::Metadata CMsgGCToGCGetUserSessionServer::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCGetUserSessionServerResponse::InitAsDefaultInstance() {
}
class CMsgGCToGCGetUserSessionServerResponse::HasBitSetters {
 public:
  static void set_has_server_steam_id(CMsgGCToGCGetUserSessionServerResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_is_online(CMsgGCToGCGetUserSessionServerResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGetUserSessionServerResponse::kServerSteamIdFieldNumber;
const int CMsgGCToGCGetUserSessionServerResponse::kIsOnlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGetUserSessionServerResponse::CMsgGCToGCGetUserSessionServerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
}
CMsgGCToGCGetUserSessionServerResponse::CMsgGCToGCGetUserSessionServerResponse(const CMsgGCToGCGetUserSessionServerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&server_steam_id_, &from.server_steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_online_) -
    reinterpret_cast<char*>(&server_steam_id_)) + sizeof(is_online_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
}

void CMsgGCToGCGetUserSessionServerResponse::SharedCtor() {
  ::memset(&server_steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_online_) -
      reinterpret_cast<char*>(&server_steam_id_)) + sizeof(is_online_));
}

CMsgGCToGCGetUserSessionServerResponse::~CMsgGCToGCGetUserSessionServerResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  SharedDtor();
}

void CMsgGCToGCGetUserSessionServerResponse::SharedDtor() {
}

void CMsgGCToGCGetUserSessionServerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCGetUserSessionServerResponse& CMsgGCToGCGetUserSessionServerResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCGetUserSessionServerResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCGetUserSessionServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&server_steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_online_) -
        reinterpret_cast<char*>(&server_steam_id_)) + sizeof(is_online_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCGetUserSessionServerResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCGetUserSessionServerResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 server_steam_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_server_steam_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional bool is_online = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_is_online(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCGetUserSessionServerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 server_steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_server_steam_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &server_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_online = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_is_online(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCGetUserSessionServerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 server_steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->server_steam_id(), output);
  }

  // optional bool is_online = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_online(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
}

::google::protobuf::uint8* CMsgGCToGCGetUserSessionServerResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 server_steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->server_steam_id(), target);
  }

  // optional bool is_online = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_online(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  return target;
}

size_t CMsgGCToGCGetUserSessionServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 server_steam_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional bool is_online = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCGetUserSessionServerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGetUserSessionServerResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCGetUserSessionServerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserSessionServerResponse::MergeFrom(const CMsgGCToGCGetUserSessionServerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      server_steam_id_ = from.server_steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_online_ = from.is_online_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGetUserSessionServerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserSessionServerResponse::CopyFrom(const CMsgGCToGCGetUserSessionServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserSessionServerResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCGetUserSessionServerResponse::Swap(CMsgGCToGCGetUserSessionServerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGetUserSessionServerResponse::InternalSwap(CMsgGCToGCGetUserSessionServerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(server_steam_id_, other->server_steam_id_);
  swap(is_online_, other->is_online_);
}

::google::protobuf::Metadata CMsgGCToGCGetUserSessionServerResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCGetUserServerMembers::InitAsDefaultInstance() {
}
class CMsgGCToGCGetUserServerMembers::HasBitSetters {
 public:
  static void set_has_account_id(CMsgGCToGCGetUserServerMembers* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_max_spectators(CMsgGCToGCGetUserServerMembers* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGetUserServerMembers::kAccountIdFieldNumber;
const int CMsgGCToGCGetUserServerMembers::kMaxSpectatorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGetUserServerMembers::CMsgGCToGCGetUserServerMembers()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGetUserServerMembers)
}
CMsgGCToGCGetUserServerMembers::CMsgGCToGCGetUserServerMembers(const CMsgGCToGCGetUserServerMembers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_spectators_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(max_spectators_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGetUserServerMembers)
}

void CMsgGCToGCGetUserServerMembers::SharedCtor() {
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_spectators_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(max_spectators_));
}

CMsgGCToGCGetUserServerMembers::~CMsgGCToGCGetUserServerMembers() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGetUserServerMembers)
  SharedDtor();
}

void CMsgGCToGCGetUserServerMembers::SharedDtor() {
}

void CMsgGCToGCGetUserServerMembers::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCGetUserServerMembers& CMsgGCToGCGetUserServerMembers::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCGetUserServerMembers_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCGetUserServerMembers::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_spectators_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(max_spectators_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCGetUserServerMembers::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCGetUserServerMembers*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 max_spectators = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_max_spectators(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCGetUserServerMembers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 max_spectators = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_max_spectators(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_spectators_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGetUserServerMembers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGetUserServerMembers)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCGetUserServerMembers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 max_spectators = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->max_spectators(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGetUserServerMembers)
}

::google::protobuf::uint8* CMsgGCToGCGetUserServerMembers::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 max_spectators = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->max_spectators(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGetUserServerMembers)
  return target;
}

size_t CMsgGCToGCGetUserServerMembers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 max_spectators = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_spectators());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCGetUserServerMembers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGetUserServerMembers* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCGetUserServerMembers>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGetUserServerMembers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGetUserServerMembers)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserServerMembers::MergeFrom(const CMsgGCToGCGetUserServerMembers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      max_spectators_ = from.max_spectators_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGetUserServerMembers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserServerMembers::CopyFrom(const CMsgGCToGCGetUserServerMembers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserServerMembers::IsInitialized() const {
  return true;
}

void CMsgGCToGCGetUserServerMembers::Swap(CMsgGCToGCGetUserServerMembers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGetUserServerMembers::InternalSwap(CMsgGCToGCGetUserServerMembers* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(account_id_, other->account_id_);
  swap(max_spectators_, other->max_spectators_);
}

::google::protobuf::Metadata CMsgGCToGCGetUserServerMembers::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCGetUserServerMembersResponse::InitAsDefaultInstance() {
}
class CMsgGCToGCGetUserServerMembersResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGetUserServerMembersResponse::kMemberAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGetUserServerMembersResponse::CMsgGCToGCGetUserServerMembersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
}
CMsgGCToGCGetUserServerMembersResponse::CMsgGCToGCGetUserServerMembersResponse(const CMsgGCToGCGetUserServerMembersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      member_account_id_(from.member_account_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
}

void CMsgGCToGCGetUserServerMembersResponse::SharedCtor() {
}

CMsgGCToGCGetUserServerMembersResponse::~CMsgGCToGCGetUserServerMembersResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  SharedDtor();
}

void CMsgGCToGCGetUserServerMembersResponse::SharedDtor() {
}

void CMsgGCToGCGetUserServerMembersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCGetUserServerMembersResponse& CMsgGCToGCGetUserServerMembersResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCGetUserServerMembersResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCGetUserServerMembersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  member_account_id_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCGetUserServerMembersResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCGetUserServerMembersResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 member_account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_member_account_id(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_member_account_id();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCGetUserServerMembersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 member_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_member_account_id())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_member_account_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCGetUserServerMembersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 member_account_id = 1;
  for (int i = 0, n = this->member_account_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->member_account_id(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
}

::google::protobuf::uint8* CMsgGCToGCGetUserServerMembersResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 member_account_id = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->member_account_id_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  return target;
}

size_t CMsgGCToGCGetUserServerMembersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 member_account_id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->member_account_id_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->member_account_id_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCGetUserServerMembersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGetUserServerMembersResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCGetUserServerMembersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserServerMembersResponse::MergeFrom(const CMsgGCToGCGetUserServerMembersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_account_id_.MergeFrom(from.member_account_id_);
}

void CMsgGCToGCGetUserServerMembersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserServerMembersResponse::CopyFrom(const CMsgGCToGCGetUserServerMembersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserServerMembersResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCGetUserServerMembersResponse::Swap(CMsgGCToGCGetUserServerMembersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGetUserServerMembersResponse::InternalSwap(CMsgGCToGCGetUserServerMembersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  member_account_id_.InternalSwap(&other->member_account_id_);
}

::google::protobuf::Metadata CMsgGCToGCGetUserServerMembersResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgLookupMultipleAccountNames::InitAsDefaultInstance() {
}
class CMsgLookupMultipleAccountNames::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgLookupMultipleAccountNames::kAccountidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgLookupMultipleAccountNames::CMsgLookupMultipleAccountNames()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgLookupMultipleAccountNames)
}
CMsgLookupMultipleAccountNames::CMsgLookupMultipleAccountNames(const CMsgLookupMultipleAccountNames& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      accountids_(from.accountids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgLookupMultipleAccountNames)
}

void CMsgLookupMultipleAccountNames::SharedCtor() {
}

CMsgLookupMultipleAccountNames::~CMsgLookupMultipleAccountNames() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgLookupMultipleAccountNames)
  SharedDtor();
}

void CMsgLookupMultipleAccountNames::SharedDtor() {
}

void CMsgLookupMultipleAccountNames::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgLookupMultipleAccountNames& CMsgLookupMultipleAccountNames::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgLookupMultipleAccountNames_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgLookupMultipleAccountNames::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgLookupMultipleAccountNames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgLookupMultipleAccountNames::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgLookupMultipleAccountNames*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 accountids = 1 [packed = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 10) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_accountids();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        do {
          msg->add_accountids(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgLookupMultipleAccountNames::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgLookupMultipleAccountNames)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 accountids = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_accountids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_accountids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgLookupMultipleAccountNames)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgLookupMultipleAccountNames)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgLookupMultipleAccountNames::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgLookupMultipleAccountNames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 accountids = 1 [packed = true];
  if (this->accountids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_accountids_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->accountids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->accountids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgLookupMultipleAccountNames)
}

::google::protobuf::uint8* CMsgLookupMultipleAccountNames::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgLookupMultipleAccountNames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 accountids = 1 [packed = true];
  if (this->accountids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _accountids_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->accountids_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgLookupMultipleAccountNames)
  return target;
}

size_t CMsgLookupMultipleAccountNames::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgLookupMultipleAccountNames)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 accountids = 1 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->accountids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _accountids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgLookupMultipleAccountNames::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgLookupMultipleAccountNames)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLookupMultipleAccountNames* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgLookupMultipleAccountNames>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgLookupMultipleAccountNames)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgLookupMultipleAccountNames)
    MergeFrom(*source);
  }
}

void CMsgLookupMultipleAccountNames::MergeFrom(const CMsgLookupMultipleAccountNames& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgLookupMultipleAccountNames)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accountids_.MergeFrom(from.accountids_);
}

void CMsgLookupMultipleAccountNames::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgLookupMultipleAccountNames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLookupMultipleAccountNames::CopyFrom(const CMsgLookupMultipleAccountNames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgLookupMultipleAccountNames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLookupMultipleAccountNames::IsInitialized() const {
  return true;
}

void CMsgLookupMultipleAccountNames::Swap(CMsgLookupMultipleAccountNames* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgLookupMultipleAccountNames::InternalSwap(CMsgLookupMultipleAccountNames* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  accountids_.InternalSwap(&other->accountids_);
}

::google::protobuf::Metadata CMsgLookupMultipleAccountNames::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgLookupMultipleAccountNamesResponse_Account::InitAsDefaultInstance() {
}
class CMsgLookupMultipleAccountNamesResponse_Account::HasBitSetters {
 public:
  static void set_has_accountid(CMsgLookupMultipleAccountNamesResponse_Account* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_persona(CMsgLookupMultipleAccountNamesResponse_Account* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgLookupMultipleAccountNamesResponse_Account::kAccountidFieldNumber;
const int CMsgLookupMultipleAccountNamesResponse_Account::kPersonaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgLookupMultipleAccountNamesResponse_Account::CMsgLookupMultipleAccountNamesResponse_Account()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
}
CMsgLookupMultipleAccountNamesResponse_Account::CMsgLookupMultipleAccountNamesResponse_Account(const CMsgLookupMultipleAccountNamesResponse_Account& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  persona_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_persona()) {
    persona_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_);
  }
  accountid_ = from.accountid_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
}

void CMsgLookupMultipleAccountNamesResponse_Account::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgLookupMultipleAccountNamesResponse_Account_econ_5fgcmessages_2eproto.base);
  persona_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_ = 0u;
}

CMsgLookupMultipleAccountNamesResponse_Account::~CMsgLookupMultipleAccountNamesResponse_Account() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  SharedDtor();
}

void CMsgLookupMultipleAccountNamesResponse_Account::SharedDtor() {
  persona_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgLookupMultipleAccountNamesResponse_Account::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgLookupMultipleAccountNamesResponse_Account& CMsgLookupMultipleAccountNamesResponse_Account::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgLookupMultipleAccountNamesResponse_Account_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgLookupMultipleAccountNamesResponse_Account::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    persona_.ClearNonDefaultToEmptyNoArena();
  }
  accountid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgLookupMultipleAccountNamesResponse_Account::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgLookupMultipleAccountNamesResponse_Account*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 accountid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_accountid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string persona = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.persona");
        object = msg->mutable_persona();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgLookupMultipleAccountNamesResponse_Account::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 accountid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_accountid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string persona = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona().data(), static_cast<int>(this->persona().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.persona");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgLookupMultipleAccountNamesResponse_Account::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accountid(), output);
  }

  // optional string persona = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona().data(), static_cast<int>(this->persona().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.persona");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->persona(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
}

::google::protobuf::uint8* CMsgLookupMultipleAccountNamesResponse_Account::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accountid(), target);
  }

  // optional string persona = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona().data(), static_cast<int>(this->persona().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.persona");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->persona(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  return target;
}

size_t CMsgLookupMultipleAccountNamesResponse_Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string persona = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona());
    }

    // optional uint32 accountid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgLookupMultipleAccountNamesResponse_Account::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLookupMultipleAccountNamesResponse_Account* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgLookupMultipleAccountNamesResponse_Account>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
    MergeFrom(*source);
  }
}

void CMsgLookupMultipleAccountNamesResponse_Account::MergeFrom(const CMsgLookupMultipleAccountNamesResponse_Account& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      persona_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_);
    }
    if (cached_has_bits & 0x00000002u) {
      accountid_ = from.accountid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgLookupMultipleAccountNamesResponse_Account::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLookupMultipleAccountNamesResponse_Account::CopyFrom(const CMsgLookupMultipleAccountNamesResponse_Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLookupMultipleAccountNamesResponse_Account::IsInitialized() const {
  return true;
}

void CMsgLookupMultipleAccountNamesResponse_Account::Swap(CMsgLookupMultipleAccountNamesResponse_Account* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgLookupMultipleAccountNamesResponse_Account::InternalSwap(CMsgLookupMultipleAccountNamesResponse_Account* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  persona_.Swap(&other->persona_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(accountid_, other->accountid_);
}

::google::protobuf::Metadata CMsgLookupMultipleAccountNamesResponse_Account::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgLookupMultipleAccountNamesResponse::InitAsDefaultInstance() {
}
class CMsgLookupMultipleAccountNamesResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgLookupMultipleAccountNamesResponse::kAccountsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgLookupMultipleAccountNamesResponse::CMsgLookupMultipleAccountNamesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgLookupMultipleAccountNamesResponse)
}
CMsgLookupMultipleAccountNamesResponse::CMsgLookupMultipleAccountNamesResponse(const CMsgLookupMultipleAccountNamesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      accounts_(from.accounts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgLookupMultipleAccountNamesResponse)
}

void CMsgLookupMultipleAccountNamesResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgLookupMultipleAccountNamesResponse_econ_5fgcmessages_2eproto.base);
}

CMsgLookupMultipleAccountNamesResponse::~CMsgLookupMultipleAccountNamesResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  SharedDtor();
}

void CMsgLookupMultipleAccountNamesResponse::SharedDtor() {
}

void CMsgLookupMultipleAccountNamesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgLookupMultipleAccountNamesResponse& CMsgLookupMultipleAccountNamesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgLookupMultipleAccountNamesResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgLookupMultipleAccountNamesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accounts_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgLookupMultipleAccountNamesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgLookupMultipleAccountNamesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.dota.CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account::_InternalParse;
          object = msg->add_accounts();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgLookupMultipleAccountNamesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_accounts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgLookupMultipleAccountNamesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accounts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->accounts(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgLookupMultipleAccountNamesResponse)
}

::google::protobuf::uint8* CMsgLookupMultipleAccountNamesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accounts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->accounts(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  return target;
}

size_t CMsgLookupMultipleAccountNamesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->accounts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->accounts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgLookupMultipleAccountNamesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLookupMultipleAccountNamesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgLookupMultipleAccountNamesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgLookupMultipleAccountNamesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgLookupMultipleAccountNamesResponse)
    MergeFrom(*source);
  }
}

void CMsgLookupMultipleAccountNamesResponse::MergeFrom(const CMsgLookupMultipleAccountNamesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accounts_.MergeFrom(from.accounts_);
}

void CMsgLookupMultipleAccountNamesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLookupMultipleAccountNamesResponse::CopyFrom(const CMsgLookupMultipleAccountNamesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLookupMultipleAccountNamesResponse::IsInitialized() const {
  return true;
}

void CMsgLookupMultipleAccountNamesResponse::Swap(CMsgLookupMultipleAccountNamesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgLookupMultipleAccountNamesResponse::InternalSwap(CMsgLookupMultipleAccountNamesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&accounts_)->InternalSwap(CastToBase(&other->accounts_));
}

::google::protobuf::Metadata CMsgLookupMultipleAccountNamesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgRequestCrateItems::InitAsDefaultInstance() {
}
class CMsgRequestCrateItems::HasBitSetters {
 public:
  static void set_has_crate_item_def(CMsgRequestCrateItems* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRequestCrateItems::kCrateItemDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestCrateItems::CMsgRequestCrateItems()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRequestCrateItems)
}
CMsgRequestCrateItems::CMsgRequestCrateItems(const CMsgRequestCrateItems& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  crate_item_def_ = from.crate_item_def_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRequestCrateItems)
}

void CMsgRequestCrateItems::SharedCtor() {
  crate_item_def_ = 0u;
}

CMsgRequestCrateItems::~CMsgRequestCrateItems() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRequestCrateItems)
  SharedDtor();
}

void CMsgRequestCrateItems::SharedDtor() {
}

void CMsgRequestCrateItems::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgRequestCrateItems& CMsgRequestCrateItems::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgRequestCrateItems_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgRequestCrateItems::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRequestCrateItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crate_item_def_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgRequestCrateItems::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgRequestCrateItems*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 crate_item_def = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_crate_item_def(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgRequestCrateItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRequestCrateItems)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 crate_item_def = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_crate_item_def(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crate_item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRequestCrateItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRequestCrateItems)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgRequestCrateItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRequestCrateItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 crate_item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->crate_item_def(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRequestCrateItems)
}

::google::protobuf::uint8* CMsgRequestCrateItems::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRequestCrateItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 crate_item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->crate_item_def(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRequestCrateItems)
  return target;
}

size_t CMsgRequestCrateItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRequestCrateItems)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 crate_item_def = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->crate_item_def());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRequestCrateItems::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRequestCrateItems)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestCrateItems* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgRequestCrateItems>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRequestCrateItems)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRequestCrateItems)
    MergeFrom(*source);
  }
}

void CMsgRequestCrateItems::MergeFrom(const CMsgRequestCrateItems& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRequestCrateItems)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_crate_item_def()) {
    set_crate_item_def(from.crate_item_def());
  }
}

void CMsgRequestCrateItems::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRequestCrateItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestCrateItems::CopyFrom(const CMsgRequestCrateItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRequestCrateItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestCrateItems::IsInitialized() const {
  return true;
}

void CMsgRequestCrateItems::Swap(CMsgRequestCrateItems* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestCrateItems::InternalSwap(CMsgRequestCrateItems* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(crate_item_def_, other->crate_item_def_);
}

::google::protobuf::Metadata CMsgRequestCrateItems::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgRequestCrateItemsResponse::InitAsDefaultInstance() {
}
class CMsgRequestCrateItemsResponse::HasBitSetters {
 public:
  static void set_has_response(CMsgRequestCrateItemsResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRequestCrateItemsResponse::kResponseFieldNumber;
const int CMsgRequestCrateItemsResponse::kItemDefsFieldNumber;
const int CMsgRequestCrateItemsResponse::kPeekItemDefsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestCrateItemsResponse::CMsgRequestCrateItemsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRequestCrateItemsResponse)
}
CMsgRequestCrateItemsResponse::CMsgRequestCrateItemsResponse(const CMsgRequestCrateItemsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      item_defs_(from.item_defs_),
      peek_item_defs_(from.peek_item_defs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_ = from.response_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRequestCrateItemsResponse)
}

void CMsgRequestCrateItemsResponse::SharedCtor() {
  response_ = 0u;
}

CMsgRequestCrateItemsResponse::~CMsgRequestCrateItemsResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRequestCrateItemsResponse)
  SharedDtor();
}

void CMsgRequestCrateItemsResponse::SharedDtor() {
}

void CMsgRequestCrateItemsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgRequestCrateItemsResponse& CMsgRequestCrateItemsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgRequestCrateItemsResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgRequestCrateItemsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRequestCrateItemsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_defs_.Clear();
  peek_item_defs_.Clear();
  response_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgRequestCrateItemsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgRequestCrateItemsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 response = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_response(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 item_defs = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_item_defs(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_item_defs();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // repeated uint32 peek_item_defs = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 24) {
          do {
            msg->add_peek_item_defs(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_peek_item_defs();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgRequestCrateItemsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRequestCrateItemsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 response = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_response(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &response_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 item_defs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_item_defs())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_item_defs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 peek_item_defs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_peek_item_defs())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_peek_item_defs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRequestCrateItemsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRequestCrateItemsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgRequestCrateItemsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRequestCrateItemsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->response(), output);
  }

  // repeated uint32 item_defs = 2;
  for (int i = 0, n = this->item_defs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->item_defs(i), output);
  }

  // repeated uint32 peek_item_defs = 3;
  for (int i = 0, n = this->peek_item_defs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->peek_item_defs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRequestCrateItemsResponse)
}

::google::protobuf::uint8* CMsgRequestCrateItemsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRequestCrateItemsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->response(), target);
  }

  // repeated uint32 item_defs = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->item_defs_, target);

  // repeated uint32 peek_item_defs = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->peek_item_defs_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRequestCrateItemsResponse)
  return target;
}

size_t CMsgRequestCrateItemsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRequestCrateItemsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 item_defs = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->item_defs_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_defs_size());
    total_size += data_size;
  }

  // repeated uint32 peek_item_defs = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->peek_item_defs_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->peek_item_defs_size());
    total_size += data_size;
  }

  // optional uint32 response = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->response());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRequestCrateItemsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRequestCrateItemsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestCrateItemsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgRequestCrateItemsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRequestCrateItemsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRequestCrateItemsResponse)
    MergeFrom(*source);
  }
}

void CMsgRequestCrateItemsResponse::MergeFrom(const CMsgRequestCrateItemsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRequestCrateItemsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_defs_.MergeFrom(from.item_defs_);
  peek_item_defs_.MergeFrom(from.peek_item_defs_);
  if (from.has_response()) {
    set_response(from.response());
  }
}

void CMsgRequestCrateItemsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRequestCrateItemsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestCrateItemsResponse::CopyFrom(const CMsgRequestCrateItemsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRequestCrateItemsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestCrateItemsResponse::IsInitialized() const {
  return true;
}

void CMsgRequestCrateItemsResponse::Swap(CMsgRequestCrateItemsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestCrateItemsResponse::InternalSwap(CMsgRequestCrateItemsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  item_defs_.InternalSwap(&other->item_defs_);
  peek_item_defs_.InternalSwap(&other->peek_item_defs_);
  swap(response_, other->response_);
}

::google::protobuf::Metadata CMsgRequestCrateItemsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgRequestCrateEscalationLevel::InitAsDefaultInstance() {
}
class CMsgRequestCrateEscalationLevel::HasBitSetters {
 public:
  static void set_has_crate_item_def(CMsgRequestCrateEscalationLevel* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRequestCrateEscalationLevel::kCrateItemDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestCrateEscalationLevel::CMsgRequestCrateEscalationLevel()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRequestCrateEscalationLevel)
}
CMsgRequestCrateEscalationLevel::CMsgRequestCrateEscalationLevel(const CMsgRequestCrateEscalationLevel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  crate_item_def_ = from.crate_item_def_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRequestCrateEscalationLevel)
}

void CMsgRequestCrateEscalationLevel::SharedCtor() {
  crate_item_def_ = 0u;
}

CMsgRequestCrateEscalationLevel::~CMsgRequestCrateEscalationLevel() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRequestCrateEscalationLevel)
  SharedDtor();
}

void CMsgRequestCrateEscalationLevel::SharedDtor() {
}

void CMsgRequestCrateEscalationLevel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgRequestCrateEscalationLevel& CMsgRequestCrateEscalationLevel::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgRequestCrateEscalationLevel_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgRequestCrateEscalationLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRequestCrateEscalationLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crate_item_def_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgRequestCrateEscalationLevel::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgRequestCrateEscalationLevel*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 crate_item_def = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_crate_item_def(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgRequestCrateEscalationLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRequestCrateEscalationLevel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 crate_item_def = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_crate_item_def(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crate_item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRequestCrateEscalationLevel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRequestCrateEscalationLevel)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgRequestCrateEscalationLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRequestCrateEscalationLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 crate_item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->crate_item_def(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRequestCrateEscalationLevel)
}

::google::protobuf::uint8* CMsgRequestCrateEscalationLevel::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRequestCrateEscalationLevel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 crate_item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->crate_item_def(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRequestCrateEscalationLevel)
  return target;
}

size_t CMsgRequestCrateEscalationLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRequestCrateEscalationLevel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 crate_item_def = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->crate_item_def());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRequestCrateEscalationLevel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRequestCrateEscalationLevel)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestCrateEscalationLevel* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgRequestCrateEscalationLevel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRequestCrateEscalationLevel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRequestCrateEscalationLevel)
    MergeFrom(*source);
  }
}

void CMsgRequestCrateEscalationLevel::MergeFrom(const CMsgRequestCrateEscalationLevel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRequestCrateEscalationLevel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_crate_item_def()) {
    set_crate_item_def(from.crate_item_def());
  }
}

void CMsgRequestCrateEscalationLevel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRequestCrateEscalationLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestCrateEscalationLevel::CopyFrom(const CMsgRequestCrateEscalationLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRequestCrateEscalationLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestCrateEscalationLevel::IsInitialized() const {
  return true;
}

void CMsgRequestCrateEscalationLevel::Swap(CMsgRequestCrateEscalationLevel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestCrateEscalationLevel::InternalSwap(CMsgRequestCrateEscalationLevel* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(crate_item_def_, other->crate_item_def_);
}

::google::protobuf::Metadata CMsgRequestCrateEscalationLevel::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgRequestCrateEscalationLevelResponse::InitAsDefaultInstance() {
}
class CMsgRequestCrateEscalationLevelResponse::HasBitSetters {
 public:
  static void set_has_response(CMsgRequestCrateEscalationLevelResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_escalation_level0(CMsgRequestCrateEscalationLevelResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_escalation_level1(CMsgRequestCrateEscalationLevelResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_escalation_level2(CMsgRequestCrateEscalationLevelResponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_escalation_level3(CMsgRequestCrateEscalationLevelResponse* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRequestCrateEscalationLevelResponse::kResponseFieldNumber;
const int CMsgRequestCrateEscalationLevelResponse::kEscalationLevel0FieldNumber;
const int CMsgRequestCrateEscalationLevelResponse::kEscalationLevel1FieldNumber;
const int CMsgRequestCrateEscalationLevelResponse::kEscalationLevel2FieldNumber;
const int CMsgRequestCrateEscalationLevelResponse::kEscalationLevel3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestCrateEscalationLevelResponse::CMsgRequestCrateEscalationLevelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRequestCrateEscalationLevelResponse)
}
CMsgRequestCrateEscalationLevelResponse::CMsgRequestCrateEscalationLevelResponse(const CMsgRequestCrateEscalationLevelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&response_, &from.response_,
    static_cast<size_t>(reinterpret_cast<char*>(&escalation_level3_) -
    reinterpret_cast<char*>(&response_)) + sizeof(escalation_level3_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRequestCrateEscalationLevelResponse)
}

void CMsgRequestCrateEscalationLevelResponse::SharedCtor() {
  ::memset(&response_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&escalation_level3_) -
      reinterpret_cast<char*>(&response_)) + sizeof(escalation_level3_));
}

CMsgRequestCrateEscalationLevelResponse::~CMsgRequestCrateEscalationLevelResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRequestCrateEscalationLevelResponse)
  SharedDtor();
}

void CMsgRequestCrateEscalationLevelResponse::SharedDtor() {
}

void CMsgRequestCrateEscalationLevelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgRequestCrateEscalationLevelResponse& CMsgRequestCrateEscalationLevelResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgRequestCrateEscalationLevelResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgRequestCrateEscalationLevelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRequestCrateEscalationLevelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&response_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&escalation_level3_) -
        reinterpret_cast<char*>(&response_)) + sizeof(escalation_level3_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgRequestCrateEscalationLevelResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgRequestCrateEscalationLevelResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 response = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_response(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 escalation_level0 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_escalation_level0(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 escalation_level1 = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_escalation_level1(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 escalation_level2 = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_escalation_level2(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 escalation_level3 = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_escalation_level3(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgRequestCrateEscalationLevelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRequestCrateEscalationLevelResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 response = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_response(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &response_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 escalation_level0 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_escalation_level0(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &escalation_level0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 escalation_level1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_escalation_level1(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &escalation_level1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 escalation_level2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_escalation_level2(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &escalation_level2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 escalation_level3 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_escalation_level3(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &escalation_level3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRequestCrateEscalationLevelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRequestCrateEscalationLevelResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgRequestCrateEscalationLevelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRequestCrateEscalationLevelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->response(), output);
  }

  // optional uint32 escalation_level0 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->escalation_level0(), output);
  }

  // optional uint32 escalation_level1 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->escalation_level1(), output);
  }

  // optional uint32 escalation_level2 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->escalation_level2(), output);
  }

  // optional uint32 escalation_level3 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->escalation_level3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRequestCrateEscalationLevelResponse)
}

::google::protobuf::uint8* CMsgRequestCrateEscalationLevelResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRequestCrateEscalationLevelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->response(), target);
  }

  // optional uint32 escalation_level0 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->escalation_level0(), target);
  }

  // optional uint32 escalation_level1 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->escalation_level1(), target);
  }

  // optional uint32 escalation_level2 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->escalation_level2(), target);
  }

  // optional uint32 escalation_level3 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->escalation_level3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRequestCrateEscalationLevelResponse)
  return target;
}

size_t CMsgRequestCrateEscalationLevelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRequestCrateEscalationLevelResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint32 response = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->response());
    }

    // optional uint32 escalation_level0 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->escalation_level0());
    }

    // optional uint32 escalation_level1 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->escalation_level1());
    }

    // optional uint32 escalation_level2 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->escalation_level2());
    }

    // optional uint32 escalation_level3 = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->escalation_level3());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRequestCrateEscalationLevelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRequestCrateEscalationLevelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestCrateEscalationLevelResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgRequestCrateEscalationLevelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRequestCrateEscalationLevelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRequestCrateEscalationLevelResponse)
    MergeFrom(*source);
  }
}

void CMsgRequestCrateEscalationLevelResponse::MergeFrom(const CMsgRequestCrateEscalationLevelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRequestCrateEscalationLevelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      response_ = from.response_;
    }
    if (cached_has_bits & 0x00000002u) {
      escalation_level0_ = from.escalation_level0_;
    }
    if (cached_has_bits & 0x00000004u) {
      escalation_level1_ = from.escalation_level1_;
    }
    if (cached_has_bits & 0x00000008u) {
      escalation_level2_ = from.escalation_level2_;
    }
    if (cached_has_bits & 0x00000010u) {
      escalation_level3_ = from.escalation_level3_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgRequestCrateEscalationLevelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRequestCrateEscalationLevelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestCrateEscalationLevelResponse::CopyFrom(const CMsgRequestCrateEscalationLevelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRequestCrateEscalationLevelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestCrateEscalationLevelResponse::IsInitialized() const {
  return true;
}

void CMsgRequestCrateEscalationLevelResponse::Swap(CMsgRequestCrateEscalationLevelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestCrateEscalationLevelResponse::InternalSwap(CMsgRequestCrateEscalationLevelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(response_, other->response_);
  swap(escalation_level0_, other->escalation_level0_);
  swap(escalation_level1_, other->escalation_level1_);
  swap(escalation_level2_, other->escalation_level2_);
  swap(escalation_level3_, other->escalation_level3_);
}

::google::protobuf::Metadata CMsgRequestCrateEscalationLevelResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCCanUseDropRateBonus::InitAsDefaultInstance() {
}
class CMsgGCToGCCanUseDropRateBonus::HasBitSetters {
 public:
  static void set_has_account_id(CMsgGCToGCCanUseDropRateBonus* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_drop_rate_bonus(CMsgGCToGCCanUseDropRateBonus* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_booster_type(CMsgGCToGCCanUseDropRateBonus* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_exclusive_item_def(CMsgGCToGCCanUseDropRateBonus* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_allow_equal_rate(CMsgGCToGCCanUseDropRateBonus* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCCanUseDropRateBonus::kAccountIdFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kDropRateBonusFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kBoosterTypeFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kExclusiveItemDefFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kAllowEqualRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCCanUseDropRateBonus::CMsgGCToGCCanUseDropRateBonus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCCanUseDropRateBonus)
}
CMsgGCToGCCanUseDropRateBonus::CMsgGCToGCCanUseDropRateBonus(const CMsgGCToGCCanUseDropRateBonus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&allow_equal_rate_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(allow_equal_rate_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCCanUseDropRateBonus)
}

void CMsgGCToGCCanUseDropRateBonus::SharedCtor() {
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_equal_rate_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(allow_equal_rate_));
}

CMsgGCToGCCanUseDropRateBonus::~CMsgGCToGCCanUseDropRateBonus() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  SharedDtor();
}

void CMsgGCToGCCanUseDropRateBonus::SharedDtor() {
}

void CMsgGCToGCCanUseDropRateBonus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCCanUseDropRateBonus& CMsgGCToGCCanUseDropRateBonus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCCanUseDropRateBonus_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCCanUseDropRateBonus::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&allow_equal_rate_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(allow_equal_rate_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCCanUseDropRateBonus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCCanUseDropRateBonus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional float drop_rate_bonus = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_drop_rate_bonus(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // optional uint32 booster_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_booster_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 exclusive_item_def = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_exclusive_item_def(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool allow_equal_rate = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_allow_equal_rate(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCCanUseDropRateBonus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float drop_rate_bonus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {
          HasBitSetters::set_has_drop_rate_bonus(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &drop_rate_bonus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 booster_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_booster_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &booster_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 exclusive_item_def = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_exclusive_item_def(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exclusive_item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool allow_equal_rate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_allow_equal_rate(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_equal_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCCanUseDropRateBonus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional float drop_rate_bonus = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->drop_rate_bonus(), output);
  }

  // optional uint32 booster_type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->booster_type(), output);
  }

  // optional uint32 exclusive_item_def = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->exclusive_item_def(), output);
  }

  // optional bool allow_equal_rate = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->allow_equal_rate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCCanUseDropRateBonus)
}

::google::protobuf::uint8* CMsgGCToGCCanUseDropRateBonus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional float drop_rate_bonus = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->drop_rate_bonus(), target);
  }

  // optional uint32 booster_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->booster_type(), target);
  }

  // optional uint32 exclusive_item_def = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->exclusive_item_def(), target);
  }

  // optional bool allow_equal_rate = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->allow_equal_rate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  return target;
}

size_t CMsgGCToGCCanUseDropRateBonus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional float drop_rate_bonus = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional uint32 booster_type = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->booster_type());
    }

    // optional uint32 exclusive_item_def = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exclusive_item_def());
    }

    // optional bool allow_equal_rate = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCCanUseDropRateBonus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCCanUseDropRateBonus* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCCanUseDropRateBonus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCCanUseDropRateBonus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCCanUseDropRateBonus)
    MergeFrom(*source);
  }
}

void CMsgGCToGCCanUseDropRateBonus::MergeFrom(const CMsgGCToGCCanUseDropRateBonus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      drop_rate_bonus_ = from.drop_rate_bonus_;
    }
    if (cached_has_bits & 0x00000004u) {
      booster_type_ = from.booster_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      exclusive_item_def_ = from.exclusive_item_def_;
    }
    if (cached_has_bits & 0x00000010u) {
      allow_equal_rate_ = from.allow_equal_rate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCCanUseDropRateBonus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCCanUseDropRateBonus::CopyFrom(const CMsgGCToGCCanUseDropRateBonus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCCanUseDropRateBonus::IsInitialized() const {
  return true;
}

void CMsgGCToGCCanUseDropRateBonus::Swap(CMsgGCToGCCanUseDropRateBonus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCCanUseDropRateBonus::InternalSwap(CMsgGCToGCCanUseDropRateBonus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(account_id_, other->account_id_);
  swap(drop_rate_bonus_, other->drop_rate_bonus_);
  swap(booster_type_, other->booster_type_);
  swap(exclusive_item_def_, other->exclusive_item_def_);
  swap(allow_equal_rate_, other->allow_equal_rate_);
}

::google::protobuf::Metadata CMsgGCToGCCanUseDropRateBonus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgSQLAddDropRateBonus::InitAsDefaultInstance() {
}
class CMsgSQLAddDropRateBonus::HasBitSetters {
 public:
  static void set_has_account_id(CMsgSQLAddDropRateBonus* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_item_id(CMsgSQLAddDropRateBonus* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_item_def(CMsgSQLAddDropRateBonus* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_drop_rate_bonus(CMsgSQLAddDropRateBonus* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_booster_type(CMsgSQLAddDropRateBonus* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_seconds_duration(CMsgSQLAddDropRateBonus* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_end_time_stamp(CMsgSQLAddDropRateBonus* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSQLAddDropRateBonus::kAccountIdFieldNumber;
const int CMsgSQLAddDropRateBonus::kItemIdFieldNumber;
const int CMsgSQLAddDropRateBonus::kItemDefFieldNumber;
const int CMsgSQLAddDropRateBonus::kDropRateBonusFieldNumber;
const int CMsgSQLAddDropRateBonus::kBoosterTypeFieldNumber;
const int CMsgSQLAddDropRateBonus::kSecondsDurationFieldNumber;
const int CMsgSQLAddDropRateBonus::kEndTimeStampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSQLAddDropRateBonus::CMsgSQLAddDropRateBonus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSQLAddDropRateBonus)
}
CMsgSQLAddDropRateBonus::CMsgSQLAddDropRateBonus(const CMsgSQLAddDropRateBonus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_time_stamp_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(end_time_stamp_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSQLAddDropRateBonus)
}

void CMsgSQLAddDropRateBonus::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_stamp_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(end_time_stamp_));
}

CMsgSQLAddDropRateBonus::~CMsgSQLAddDropRateBonus() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSQLAddDropRateBonus)
  SharedDtor();
}

void CMsgSQLAddDropRateBonus::SharedDtor() {
}

void CMsgSQLAddDropRateBonus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgSQLAddDropRateBonus& CMsgSQLAddDropRateBonus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgSQLAddDropRateBonus_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgSQLAddDropRateBonus::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSQLAddDropRateBonus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&end_time_stamp_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(end_time_stamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgSQLAddDropRateBonus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgSQLAddDropRateBonus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 item_def = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_item_def(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional float drop_rate_bonus = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 37) goto handle_unusual;
        msg->set_drop_rate_bonus(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // optional uint32 booster_type = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_booster_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 seconds_duration = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_seconds_duration(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 end_time_stamp = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_end_time_stamp(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgSQLAddDropRateBonus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSQLAddDropRateBonus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_def = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_item_def(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float drop_rate_bonus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (37 & 0xFF)) {
          HasBitSetters::set_has_drop_rate_bonus(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &drop_rate_bonus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 booster_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_booster_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &booster_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 seconds_duration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_seconds_duration(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seconds_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 end_time_stamp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_end_time_stamp(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSQLAddDropRateBonus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSQLAddDropRateBonus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgSQLAddDropRateBonus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSQLAddDropRateBonus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  // optional uint32 item_def = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->item_def(), output);
  }

  // optional float drop_rate_bonus = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->drop_rate_bonus(), output);
  }

  // optional uint32 booster_type = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->booster_type(), output);
  }

  // optional uint32 seconds_duration = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->seconds_duration(), output);
  }

  // optional uint32 end_time_stamp = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->end_time_stamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSQLAddDropRateBonus)
}

::google::protobuf::uint8* CMsgSQLAddDropRateBonus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSQLAddDropRateBonus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  // optional uint32 item_def = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->item_def(), target);
  }

  // optional float drop_rate_bonus = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->drop_rate_bonus(), target);
  }

  // optional uint32 booster_type = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->booster_type(), target);
  }

  // optional uint32 seconds_duration = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->seconds_duration(), target);
  }

  // optional uint32 end_time_stamp = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->end_time_stamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSQLAddDropRateBonus)
  return target;
}

size_t CMsgSQLAddDropRateBonus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSQLAddDropRateBonus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional uint64 item_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 item_def = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional float drop_rate_bonus = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

    // optional uint32 booster_type = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->booster_type());
    }

    // optional uint32 seconds_duration = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seconds_duration());
    }

    // optional uint32 end_time_stamp = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->end_time_stamp());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSQLAddDropRateBonus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSQLAddDropRateBonus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSQLAddDropRateBonus* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgSQLAddDropRateBonus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSQLAddDropRateBonus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSQLAddDropRateBonus)
    MergeFrom(*source);
  }
}

void CMsgSQLAddDropRateBonus::MergeFrom(const CMsgSQLAddDropRateBonus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSQLAddDropRateBonus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_def_ = from.item_def_;
    }
    if (cached_has_bits & 0x00000008u) {
      drop_rate_bonus_ = from.drop_rate_bonus_;
    }
    if (cached_has_bits & 0x00000010u) {
      booster_type_ = from.booster_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      seconds_duration_ = from.seconds_duration_;
    }
    if (cached_has_bits & 0x00000040u) {
      end_time_stamp_ = from.end_time_stamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSQLAddDropRateBonus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSQLAddDropRateBonus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSQLAddDropRateBonus::CopyFrom(const CMsgSQLAddDropRateBonus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSQLAddDropRateBonus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSQLAddDropRateBonus::IsInitialized() const {
  return true;
}

void CMsgSQLAddDropRateBonus::Swap(CMsgSQLAddDropRateBonus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSQLAddDropRateBonus::InternalSwap(CMsgSQLAddDropRateBonus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
  swap(account_id_, other->account_id_);
  swap(item_def_, other->item_def_);
  swap(drop_rate_bonus_, other->drop_rate_bonus_);
  swap(booster_type_, other->booster_type_);
  swap(seconds_duration_, other->seconds_duration_);
  swap(end_time_stamp_, other->end_time_stamp_);
}

::google::protobuf::Metadata CMsgSQLAddDropRateBonus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgSQLUpgradeBattleBooster::InitAsDefaultInstance() {
}
class CMsgSQLUpgradeBattleBooster::HasBitSetters {
 public:
  static void set_has_account_id(CMsgSQLUpgradeBattleBooster* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_item_def(CMsgSQLUpgradeBattleBooster* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_bonus_to_add(CMsgSQLUpgradeBattleBooster* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_booster_type(CMsgSQLUpgradeBattleBooster* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSQLUpgradeBattleBooster::kAccountIdFieldNumber;
const int CMsgSQLUpgradeBattleBooster::kItemDefFieldNumber;
const int CMsgSQLUpgradeBattleBooster::kBonusToAddFieldNumber;
const int CMsgSQLUpgradeBattleBooster::kBoosterTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSQLUpgradeBattleBooster::CMsgSQLUpgradeBattleBooster()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSQLUpgradeBattleBooster)
}
CMsgSQLUpgradeBattleBooster::CMsgSQLUpgradeBattleBooster(const CMsgSQLUpgradeBattleBooster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&booster_type_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(booster_type_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSQLUpgradeBattleBooster)
}

void CMsgSQLUpgradeBattleBooster::SharedCtor() {
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&booster_type_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(booster_type_));
}

CMsgSQLUpgradeBattleBooster::~CMsgSQLUpgradeBattleBooster() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSQLUpgradeBattleBooster)
  SharedDtor();
}

void CMsgSQLUpgradeBattleBooster::SharedDtor() {
}

void CMsgSQLUpgradeBattleBooster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgSQLUpgradeBattleBooster& CMsgSQLUpgradeBattleBooster::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgSQLUpgradeBattleBooster_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgSQLUpgradeBattleBooster::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&booster_type_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(booster_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgSQLUpgradeBattleBooster::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgSQLUpgradeBattleBooster*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 item_def = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_item_def(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional float bonus_to_add = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_bonus_to_add(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // optional uint32 booster_type = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_booster_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgSQLUpgradeBattleBooster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_def = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_item_def(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float bonus_to_add = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {
          HasBitSetters::set_has_bonus_to_add(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bonus_to_add_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 booster_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_booster_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &booster_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSQLUpgradeBattleBooster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSQLUpgradeBattleBooster)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgSQLUpgradeBattleBooster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 item_def = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_def(), output);
  }

  // optional float bonus_to_add = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->bonus_to_add(), output);
  }

  // optional uint32 booster_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->booster_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSQLUpgradeBattleBooster)
}

::google::protobuf::uint8* CMsgSQLUpgradeBattleBooster::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 item_def = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_def(), target);
  }

  // optional float bonus_to_add = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->bonus_to_add(), target);
  }

  // optional uint32 booster_type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->booster_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSQLUpgradeBattleBooster)
  return target;
}

size_t CMsgSQLUpgradeBattleBooster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 item_def = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional float bonus_to_add = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional uint32 booster_type = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->booster_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSQLUpgradeBattleBooster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSQLUpgradeBattleBooster* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgSQLUpgradeBattleBooster>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSQLUpgradeBattleBooster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSQLUpgradeBattleBooster)
    MergeFrom(*source);
  }
}

void CMsgSQLUpgradeBattleBooster::MergeFrom(const CMsgSQLUpgradeBattleBooster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_def_ = from.item_def_;
    }
    if (cached_has_bits & 0x00000004u) {
      bonus_to_add_ = from.bonus_to_add_;
    }
    if (cached_has_bits & 0x00000008u) {
      booster_type_ = from.booster_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSQLUpgradeBattleBooster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSQLUpgradeBattleBooster::CopyFrom(const CMsgSQLUpgradeBattleBooster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSQLUpgradeBattleBooster::IsInitialized() const {
  return true;
}

void CMsgSQLUpgradeBattleBooster::Swap(CMsgSQLUpgradeBattleBooster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSQLUpgradeBattleBooster::InternalSwap(CMsgSQLUpgradeBattleBooster* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(account_id_, other->account_id_);
  swap(item_def_, other->item_def_);
  swap(bonus_to_add_, other->bonus_to_add_);
  swap(booster_type_, other->booster_type_);
}

::google::protobuf::Metadata CMsgSQLUpgradeBattleBooster::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCRefreshSOCache::InitAsDefaultInstance() {
}
class CMsgGCToGCRefreshSOCache::HasBitSetters {
 public:
  static void set_has_account_id(CMsgGCToGCRefreshSOCache* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_reload(CMsgGCToGCRefreshSOCache* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCRefreshSOCache::kAccountIdFieldNumber;
const int CMsgGCToGCRefreshSOCache::kReloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCRefreshSOCache::CMsgGCToGCRefreshSOCache()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCRefreshSOCache)
}
CMsgGCToGCRefreshSOCache::CMsgGCToGCRefreshSOCache(const CMsgGCToGCRefreshSOCache& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&reload_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(reload_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCRefreshSOCache)
}

void CMsgGCToGCRefreshSOCache::SharedCtor() {
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reload_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(reload_));
}

CMsgGCToGCRefreshSOCache::~CMsgGCToGCRefreshSOCache() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCRefreshSOCache)
  SharedDtor();
}

void CMsgGCToGCRefreshSOCache::SharedDtor() {
}

void CMsgGCToGCRefreshSOCache::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCRefreshSOCache& CMsgGCToGCRefreshSOCache::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCRefreshSOCache_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCRefreshSOCache::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCRefreshSOCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reload_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(reload_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCRefreshSOCache::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCRefreshSOCache*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool reload = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_reload(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCRefreshSOCache::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCRefreshSOCache)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool reload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_reload(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCRefreshSOCache)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCRefreshSOCache)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCRefreshSOCache::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCRefreshSOCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional bool reload = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reload(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCRefreshSOCache)
}

::google::protobuf::uint8* CMsgGCToGCRefreshSOCache::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCRefreshSOCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional bool reload = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reload(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCRefreshSOCache)
  return target;
}

size_t CMsgGCToGCRefreshSOCache::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCRefreshSOCache)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional bool reload = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCRefreshSOCache::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCRefreshSOCache)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCRefreshSOCache* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCRefreshSOCache>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCRefreshSOCache)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCRefreshSOCache)
    MergeFrom(*source);
  }
}

void CMsgGCToGCRefreshSOCache::MergeFrom(const CMsgGCToGCRefreshSOCache& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCRefreshSOCache)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      reload_ = from.reload_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCRefreshSOCache::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCRefreshSOCache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCRefreshSOCache::CopyFrom(const CMsgGCToGCRefreshSOCache& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCRefreshSOCache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCRefreshSOCache::IsInitialized() const {
  return true;
}

void CMsgGCToGCRefreshSOCache::Swap(CMsgGCToGCRefreshSOCache* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCRefreshSOCache::InternalSwap(CMsgGCToGCRefreshSOCache* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(account_id_, other->account_id_);
  swap(reload_, other->reload_);
}

::google::protobuf::Metadata CMsgGCToGCRefreshSOCache::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCCheckAccountTradeStatus::InitAsDefaultInstance() {
}
class CMsgGCToGCCheckAccountTradeStatus::HasBitSetters {
 public:
  static void set_has_account_id(CMsgGCToGCCheckAccountTradeStatus* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_initiator(CMsgGCToGCCheckAccountTradeStatus* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCCheckAccountTradeStatus::kAccountIdFieldNumber;
const int CMsgGCToGCCheckAccountTradeStatus::kInitiatorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCCheckAccountTradeStatus::CMsgGCToGCCheckAccountTradeStatus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
}
CMsgGCToGCCheckAccountTradeStatus::CMsgGCToGCCheckAccountTradeStatus(const CMsgGCToGCCheckAccountTradeStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&initiator_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(initiator_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
}

void CMsgGCToGCCheckAccountTradeStatus::SharedCtor() {
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&initiator_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(initiator_));
}

CMsgGCToGCCheckAccountTradeStatus::~CMsgGCToGCCheckAccountTradeStatus() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  SharedDtor();
}

void CMsgGCToGCCheckAccountTradeStatus::SharedDtor() {
}

void CMsgGCToGCCheckAccountTradeStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCCheckAccountTradeStatus& CMsgGCToGCCheckAccountTradeStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCCheckAccountTradeStatus_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCCheckAccountTradeStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&initiator_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(initiator_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCCheckAccountTradeStatus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCCheckAccountTradeStatus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool initiator = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_initiator(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCCheckAccountTradeStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool initiator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_initiator(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &initiator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCCheckAccountTradeStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional bool initiator = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->initiator(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
}

::google::protobuf::uint8* CMsgGCToGCCheckAccountTradeStatus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional bool initiator = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->initiator(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  return target;
}

size_t CMsgGCToGCCheckAccountTradeStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional bool initiator = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCCheckAccountTradeStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCCheckAccountTradeStatus* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCCheckAccountTradeStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
    MergeFrom(*source);
  }
}

void CMsgGCToGCCheckAccountTradeStatus::MergeFrom(const CMsgGCToGCCheckAccountTradeStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      initiator_ = from.initiator_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCCheckAccountTradeStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCCheckAccountTradeStatus::CopyFrom(const CMsgGCToGCCheckAccountTradeStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCCheckAccountTradeStatus::IsInitialized() const {
  return true;
}

void CMsgGCToGCCheckAccountTradeStatus::Swap(CMsgGCToGCCheckAccountTradeStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCCheckAccountTradeStatus::InternalSwap(CMsgGCToGCCheckAccountTradeStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(account_id_, other->account_id_);
  swap(initiator_, other->initiator_);
}

::google::protobuf::Metadata CMsgGCToGCCheckAccountTradeStatus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCCheckAccountTradeStatusResponse::InitAsDefaultInstance() {
}
class CMsgGCToGCCheckAccountTradeStatusResponse::HasBitSetters {
 public:
  static void set_has_can_trade(CMsgGCToGCCheckAccountTradeStatusResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_error_code(CMsgGCToGCCheckAccountTradeStatusResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCCheckAccountTradeStatusResponse::kCanTradeFieldNumber;
const int CMsgGCToGCCheckAccountTradeStatusResponse::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCCheckAccountTradeStatusResponse::CMsgGCToGCCheckAccountTradeStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
}
CMsgGCToGCCheckAccountTradeStatusResponse::CMsgGCToGCCheckAccountTradeStatusResponse(const CMsgGCToGCCheckAccountTradeStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&can_trade_, &from.can_trade_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_code_) -
    reinterpret_cast<char*>(&can_trade_)) + sizeof(error_code_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
}

void CMsgGCToGCCheckAccountTradeStatusResponse::SharedCtor() {
  ::memset(&can_trade_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&can_trade_)) + sizeof(error_code_));
}

CMsgGCToGCCheckAccountTradeStatusResponse::~CMsgGCToGCCheckAccountTradeStatusResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  SharedDtor();
}

void CMsgGCToGCCheckAccountTradeStatusResponse::SharedDtor() {
}

void CMsgGCToGCCheckAccountTradeStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCCheckAccountTradeStatusResponse& CMsgGCToGCCheckAccountTradeStatusResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCCheckAccountTradeStatusResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCCheckAccountTradeStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&can_trade_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&error_code_) -
        reinterpret_cast<char*>(&can_trade_)) + sizeof(error_code_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCCheckAccountTradeStatusResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCCheckAccountTradeStatusResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool can_trade = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_can_trade(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 error_code = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_error_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCCheckAccountTradeStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool can_trade = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_can_trade(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_trade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 error_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_error_code(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCCheckAccountTradeStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool can_trade = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->can_trade(), output);
  }

  // optional uint32 error_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->error_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
}

::google::protobuf::uint8* CMsgGCToGCCheckAccountTradeStatusResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool can_trade = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->can_trade(), target);
  }

  // optional uint32 error_code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->error_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  return target;
}

size_t CMsgGCToGCCheckAccountTradeStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool can_trade = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional uint32 error_code = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCCheckAccountTradeStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCCheckAccountTradeStatusResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCCheckAccountTradeStatusResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCCheckAccountTradeStatusResponse::MergeFrom(const CMsgGCToGCCheckAccountTradeStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      can_trade_ = from.can_trade_;
    }
    if (cached_has_bits & 0x00000002u) {
      error_code_ = from.error_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCCheckAccountTradeStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCCheckAccountTradeStatusResponse::CopyFrom(const CMsgGCToGCCheckAccountTradeStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCCheckAccountTradeStatusResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCCheckAccountTradeStatusResponse::Swap(CMsgGCToGCCheckAccountTradeStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCCheckAccountTradeStatusResponse::InternalSwap(CMsgGCToGCCheckAccountTradeStatusResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(can_trade_, other->can_trade_);
  swap(error_code_, other->error_code_);
}

::google::protobuf::Metadata CMsgGCToGCCheckAccountTradeStatusResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCAddSubscriptionTime::InitAsDefaultInstance() {
}
class CMsgGCToGCAddSubscriptionTime::HasBitSetters {
 public:
  static void set_has_account_id(CMsgGCToGCAddSubscriptionTime* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_additional_seconds(CMsgGCToGCAddSubscriptionTime* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCAddSubscriptionTime::kAccountIdFieldNumber;
const int CMsgGCToGCAddSubscriptionTime::kMatchingSubscriptionDefIndexesFieldNumber;
const int CMsgGCToGCAddSubscriptionTime::kAdditionalSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCAddSubscriptionTime::CMsgGCToGCAddSubscriptionTime()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCAddSubscriptionTime)
}
CMsgGCToGCAddSubscriptionTime::CMsgGCToGCAddSubscriptionTime(const CMsgGCToGCAddSubscriptionTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      matching_subscription_def_indexes_(from.matching_subscription_def_indexes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&additional_seconds_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(additional_seconds_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCAddSubscriptionTime)
}

void CMsgGCToGCAddSubscriptionTime::SharedCtor() {
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&additional_seconds_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(additional_seconds_));
}

CMsgGCToGCAddSubscriptionTime::~CMsgGCToGCAddSubscriptionTime() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCAddSubscriptionTime)
  SharedDtor();
}

void CMsgGCToGCAddSubscriptionTime::SharedDtor() {
}

void CMsgGCToGCAddSubscriptionTime::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCAddSubscriptionTime& CMsgGCToGCAddSubscriptionTime::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCAddSubscriptionTime_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCAddSubscriptionTime::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCAddSubscriptionTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matching_subscription_def_indexes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&additional_seconds_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(additional_seconds_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCAddSubscriptionTime::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCAddSubscriptionTime*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 matching_subscription_def_indexes = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_matching_subscription_def_indexes(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_matching_subscription_def_indexes();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional uint32 additional_seconds = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_additional_seconds(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCAddSubscriptionTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCAddSubscriptionTime)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 matching_subscription_def_indexes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_matching_subscription_def_indexes())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_matching_subscription_def_indexes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 additional_seconds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_additional_seconds(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &additional_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCAddSubscriptionTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCAddSubscriptionTime)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCAddSubscriptionTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCAddSubscriptionTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // repeated uint32 matching_subscription_def_indexes = 2;
  for (int i = 0, n = this->matching_subscription_def_indexes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->matching_subscription_def_indexes(i), output);
  }

  // optional uint32 additional_seconds = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->additional_seconds(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCAddSubscriptionTime)
}

::google::protobuf::uint8* CMsgGCToGCAddSubscriptionTime::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCAddSubscriptionTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // repeated uint32 matching_subscription_def_indexes = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->matching_subscription_def_indexes_, target);

  // optional uint32 additional_seconds = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->additional_seconds(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCAddSubscriptionTime)
  return target;
}

size_t CMsgGCToGCAddSubscriptionTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCAddSubscriptionTime)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 matching_subscription_def_indexes = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->matching_subscription_def_indexes_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->matching_subscription_def_indexes_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 additional_seconds = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->additional_seconds());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCAddSubscriptionTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCAddSubscriptionTime)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCAddSubscriptionTime* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCAddSubscriptionTime>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCAddSubscriptionTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCAddSubscriptionTime)
    MergeFrom(*source);
  }
}

void CMsgGCToGCAddSubscriptionTime::MergeFrom(const CMsgGCToGCAddSubscriptionTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCAddSubscriptionTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  matching_subscription_def_indexes_.MergeFrom(from.matching_subscription_def_indexes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      additional_seconds_ = from.additional_seconds_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCAddSubscriptionTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCAddSubscriptionTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCAddSubscriptionTime::CopyFrom(const CMsgGCToGCAddSubscriptionTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCAddSubscriptionTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCAddSubscriptionTime::IsInitialized() const {
  return true;
}

void CMsgGCToGCAddSubscriptionTime::Swap(CMsgGCToGCAddSubscriptionTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCAddSubscriptionTime::InternalSwap(CMsgGCToGCAddSubscriptionTime* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  matching_subscription_def_indexes_.InternalSwap(&other->matching_subscription_def_indexes_);
  swap(account_id_, other->account_id_);
  swap(additional_seconds_, other->additional_seconds_);
}

::google::protobuf::Metadata CMsgGCToGCAddSubscriptionTime::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::InitAsDefaultInstance() {
}
class CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::HasBitSetters {
 public:
  static void set_has_name(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_value_uint32(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_value_float(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_value_string(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::kNameFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::kValueUint32FieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::kValueFloatFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::kValueStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
}
CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute(const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value_string()) {
    value_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_string_);
  }
  ::memcpy(&value_uint32_, &from.value_uint32_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_float_) -
    reinterpret_cast<char*>(&value_uint32_)) + sizeof(value_float_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_econ_5fgcmessages_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_uint32_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_float_) -
      reinterpret_cast<char*>(&value_uint32_)) + sizeof(value_float_));
}

CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::~CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_string_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&value_uint32_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&value_float_) -
        reinterpret_cast<char*>(&value_uint32_)) + sizeof(value_float_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 value_uint32 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_value_uint32(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional float value_float = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_value_float(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // optional string value_string = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_string");
        object = msg->mutable_value_string();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 value_uint32 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_value_uint32(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_uint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float value_float = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {
          HasBitSetters::set_has_value_float(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_float_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value_string = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value_string().data(), static_cast<int>(this->value_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 value_uint32 = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value_uint32(), output);
  }

  // optional float value_float = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->value_float(), output);
  }

  // optional string value_string = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value_string().data(), static_cast<int>(this->value_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->value_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 value_uint32 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value_uint32(), target);
  }

  // optional float value_float = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->value_float(), target);
  }

  // optional string value_string = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value_string().data(), static_cast<int>(this->value_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->value_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  return target;
}

size_t CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value_string = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value_string());
    }

    // optional uint32 value_uint32 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value_uint32());
    }

    // optional float value_float = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::MergeFrom(const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      value_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_string_);
    }
    if (cached_has_bits & 0x00000004u) {
      value_uint32_ = from.value_uint32_;
    }
    if (cached_has_bits & 0x00000008u) {
      value_float_ = from.value_float_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CopyFrom(const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::IsInitialized() const {
  return true;
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::Swap(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::InternalSwap(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_string_.Swap(&other->value_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_uint32_, other->value_uint32_);
  swap(value_float_, other->value_float_);
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::InitAsDefaultInstance() {
}
class CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::HasBitSetters {
 public:
  static void set_has_owner_account_id(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_audit_action(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_audit_data(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::kOwnerAccountIdFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::kAuditActionFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::kAuditDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
}
CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry(const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&owner_account_id_, &from.owner_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&audit_data_) -
    reinterpret_cast<char*>(&owner_account_id_)) + sizeof(audit_data_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SharedCtor() {
  ::memset(&owner_account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&audit_data_) -
      reinterpret_cast<char*>(&owner_account_id_)) + sizeof(audit_data_));
}

CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::~CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SharedDtor() {
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&owner_account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&audit_data_) -
        reinterpret_cast<char*>(&owner_account_id_)) + sizeof(audit_data_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 owner_account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_owner_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 audit_action = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_audit_action(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 audit_data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_audit_data(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 owner_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_owner_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 audit_action = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_audit_action(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &audit_action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 audit_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_audit_data(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &audit_data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->owner_account_id(), output);
  }

  // optional uint32 audit_action = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->audit_action(), output);
  }

  // optional uint64 audit_data = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->audit_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->owner_account_id(), target);
  }

  // optional uint32 audit_action = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->audit_action(), target);
  }

  // optional uint64 audit_data = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->audit_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  return target;
}

size_t CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 owner_account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

    // optional uint32 audit_action = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->audit_action());
    }

    // optional uint64 audit_data = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->audit_data());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::MergeFrom(const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      owner_account_id_ = from.owner_account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      audit_action_ = from.audit_action_;
    }
    if (cached_has_bits & 0x00000004u) {
      audit_data_ = from.audit_data_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CopyFrom(const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::IsInitialized() const {
  return true;
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::Swap(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::InternalSwap(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(owner_account_id_, other->owner_account_id_);
  swap(audit_action_, other->audit_action_);
  swap(audit_data_, other->audit_data_);
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCGrantAccountRolledItems_Item::InitAsDefaultInstance() {
}
class CMsgGCToGCGrantAccountRolledItems_Item::HasBitSetters {
 public:
  static void set_has_item_def(CMsgGCToGCGrantAccountRolledItems_Item* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ignore_limit(CMsgGCToGCGrantAccountRolledItems_Item* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_origin(CMsgGCToGCGrantAccountRolledItems_Item* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_inventory_token(CMsgGCToGCGrantAccountRolledItems_Item* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGrantAccountRolledItems_Item::kItemDefFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kLootListsFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kIgnoreLimitFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kOriginFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kDynamicAttributesFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kAdditionalAuditEntriesFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kInventoryTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGrantAccountRolledItems_Item::CMsgGCToGCGrantAccountRolledItems_Item()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
}
CMsgGCToGCGrantAccountRolledItems_Item::CMsgGCToGCGrantAccountRolledItems_Item(const CMsgGCToGCGrantAccountRolledItems_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      loot_lists_(from.loot_lists_),
      dynamic_attributes_(from.dynamic_attributes_),
      additional_audit_entries_(from.additional_audit_entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_def_, &from.item_def_,
    static_cast<size_t>(reinterpret_cast<char*>(&inventory_token_) -
    reinterpret_cast<char*>(&item_def_)) + sizeof(inventory_token_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
}

void CMsgGCToGCGrantAccountRolledItems_Item::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCToGCGrantAccountRolledItems_Item_econ_5fgcmessages_2eproto.base);
  ::memset(&item_def_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inventory_token_) -
      reinterpret_cast<char*>(&item_def_)) + sizeof(inventory_token_));
}

CMsgGCToGCGrantAccountRolledItems_Item::~CMsgGCToGCGrantAccountRolledItems_Item() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems_Item::SharedDtor() {
}

void CMsgGCToGCGrantAccountRolledItems_Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCGrantAccountRolledItems_Item& CMsgGCToGCGrantAccountRolledItems_Item::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCGrantAccountRolledItems_Item_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCGrantAccountRolledItems_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  loot_lists_.Clear();
  dynamic_attributes_.Clear();
  additional_audit_entries_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&item_def_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&inventory_token_) -
        reinterpret_cast<char*>(&item_def_)) + sizeof(inventory_token_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCGrantAccountRolledItems_Item::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCGrantAccountRolledItems_Item*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 item_def = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_def(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated string loot_lists = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists");
          object = msg->add_loot_lists();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // optional bool ignore_limit = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ignore_limit(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 origin = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_origin(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::_InternalParse;
          object = msg->add_dynamic_attributes();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::_InternalParse;
          object = msg->add_additional_audit_entries();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // optional uint32 inventory_token = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_inventory_token(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCGrantAccountRolledItems_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_def(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string loot_lists = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_loot_lists()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->loot_lists(this->loot_lists_size() - 1).data(),
            static_cast<int>(this->loot_lists(this->loot_lists_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ignore_limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ignore_limit(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 origin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_origin(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &origin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dynamic_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_additional_audit_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 inventory_token = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_inventory_token(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inventory_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCGrantAccountRolledItems_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def(), output);
  }

  // repeated string loot_lists = 2;
  for (int i = 0, n = this->loot_lists_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loot_lists(i).data(), static_cast<int>(this->loot_lists(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->loot_lists(i), output);
  }

  // optional bool ignore_limit = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->ignore_limit(), output);
  }

  // optional uint32 origin = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->origin(), output);
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dynamic_attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->dynamic_attributes(static_cast<int>(i)),
      output);
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->additional_audit_entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->additional_audit_entries(static_cast<int>(i)),
      output);
  }

  // optional uint32 inventory_token = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->inventory_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems_Item::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def(), target);
  }

  // repeated string loot_lists = 2;
  for (int i = 0, n = this->loot_lists_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loot_lists(i).data(), static_cast<int>(this->loot_lists(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->loot_lists(i), target);
  }

  // optional bool ignore_limit = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->ignore_limit(), target);
  }

  // optional uint32 origin = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->origin(), target);
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dynamic_attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->dynamic_attributes(static_cast<int>(i)), target);
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->additional_audit_entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->additional_audit_entries(static_cast<int>(i)), target);
  }

  // optional uint32 inventory_token = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->inventory_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  return target;
}

size_t CMsgGCToGCGrantAccountRolledItems_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string loot_lists = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->loot_lists_size());
  for (int i = 0, n = this->loot_lists_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->loot_lists(i));
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->dynamic_attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dynamic_attributes(static_cast<int>(i)));
    }
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->additional_audit_entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->additional_audit_entries(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 item_def = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional bool ignore_limit = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional uint32 origin = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->origin());
    }

    // optional uint32 inventory_token = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->inventory_token());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems_Item* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCGrantAccountRolledItems_Item>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item::MergeFrom(const CMsgGCToGCGrantAccountRolledItems_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  loot_lists_.MergeFrom(from.loot_lists_);
  dynamic_attributes_.MergeFrom(from.dynamic_attributes_);
  additional_audit_entries_.MergeFrom(from.additional_audit_entries_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      item_def_ = from.item_def_;
    }
    if (cached_has_bits & 0x00000002u) {
      ignore_limit_ = from.ignore_limit_;
    }
    if (cached_has_bits & 0x00000004u) {
      origin_ = from.origin_;
    }
    if (cached_has_bits & 0x00000008u) {
      inventory_token_ = from.inventory_token_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems_Item::CopyFrom(const CMsgGCToGCGrantAccountRolledItems_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems_Item::IsInitialized() const {
  return true;
}

void CMsgGCToGCGrantAccountRolledItems_Item::Swap(CMsgGCToGCGrantAccountRolledItems_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGrantAccountRolledItems_Item::InternalSwap(CMsgGCToGCGrantAccountRolledItems_Item* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  loot_lists_.InternalSwap(CastToBase(&other->loot_lists_));
  CastToBase(&dynamic_attributes_)->InternalSwap(CastToBase(&other->dynamic_attributes_));
  CastToBase(&additional_audit_entries_)->InternalSwap(CastToBase(&other->additional_audit_entries_));
  swap(item_def_, other->item_def_);
  swap(ignore_limit_, other->ignore_limit_);
  swap(origin_, other->origin_);
  swap(inventory_token_, other->inventory_token_);
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems_Item::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCGrantAccountRolledItems::InitAsDefaultInstance() {
}
class CMsgGCToGCGrantAccountRolledItems::HasBitSetters {
 public:
  static void set_has_account_id(CMsgGCToGCGrantAccountRolledItems* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_audit_action(CMsgGCToGCGrantAccountRolledItems* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_audit_data(CMsgGCToGCGrantAccountRolledItems* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGrantAccountRolledItems::kAccountIdFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems::kItemsFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems::kAuditActionFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems::kAuditDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGrantAccountRolledItems::CMsgGCToGCGrantAccountRolledItems()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems)
}
CMsgGCToGCGrantAccountRolledItems::CMsgGCToGCGrantAccountRolledItems(const CMsgGCToGCGrantAccountRolledItems& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&audit_data_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(audit_data_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems)
}

void CMsgGCToGCGrantAccountRolledItems::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCToGCGrantAccountRolledItems_econ_5fgcmessages_2eproto.base);
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&audit_data_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(audit_data_));
}

CMsgGCToGCGrantAccountRolledItems::~CMsgGCToGCGrantAccountRolledItems() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems::SharedDtor() {
}

void CMsgGCToGCGrantAccountRolledItems::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCGrantAccountRolledItems& CMsgGCToGCGrantAccountRolledItems::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCGrantAccountRolledItems_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCGrantAccountRolledItems::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&audit_data_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(audit_data_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCGrantAccountRolledItems::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCGrantAccountRolledItems*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item items = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item::_InternalParse;
          object = msg->add_items();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // optional uint32 audit_action = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_audit_action(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 audit_data = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_audit_data(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCGrantAccountRolledItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 audit_action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_audit_action(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &audit_action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 audit_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_audit_data(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &audit_data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCGrantAccountRolledItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->items(static_cast<int>(i)),
      output);
  }

  // optional uint32 audit_action = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->audit_action(), output);
  }

  // optional uint64 audit_data = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->audit_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGrantAccountRolledItems)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->items(static_cast<int>(i)), target);
  }

  // optional uint32 audit_action = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->audit_action(), target);
  }

  // optional uint64 audit_data = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->audit_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  return target;
}

size_t CMsgGCToGCGrantAccountRolledItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item items = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 audit_action = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->audit_action());
    }

    // optional uint64 audit_data = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->audit_data());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCGrantAccountRolledItems>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGrantAccountRolledItems)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGrantAccountRolledItems)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems::MergeFrom(const CMsgGCToGCGrantAccountRolledItems& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      audit_action_ = from.audit_action_;
    }
    if (cached_has_bits & 0x00000004u) {
      audit_data_ = from.audit_data_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGrantAccountRolledItems::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems::CopyFrom(const CMsgGCToGCGrantAccountRolledItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems::IsInitialized() const {
  return true;
}

void CMsgGCToGCGrantAccountRolledItems::Swap(CMsgGCToGCGrantAccountRolledItems* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGrantAccountRolledItems::InternalSwap(CMsgGCToGCGrantAccountRolledItems* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  swap(account_id_, other->account_id_);
  swap(audit_action_, other->audit_action_);
  swap(audit_data_, other->audit_data_);
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCGrantSelfMadeItemToAccount::InitAsDefaultInstance() {
}
class CMsgGCToGCGrantSelfMadeItemToAccount::HasBitSetters {
 public:
  static void set_has_item_def_index(CMsgGCToGCGrantSelfMadeItemToAccount* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_accountid(CMsgGCToGCGrantSelfMadeItemToAccount* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGrantSelfMadeItemToAccount::kItemDefIndexFieldNumber;
const int CMsgGCToGCGrantSelfMadeItemToAccount::kAccountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGrantSelfMadeItemToAccount::CMsgGCToGCGrantSelfMadeItemToAccount()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
}
CMsgGCToGCGrantSelfMadeItemToAccount::CMsgGCToGCGrantSelfMadeItemToAccount(const CMsgGCToGCGrantSelfMadeItemToAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_def_index_, &from.item_def_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&item_def_index_)) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SharedCtor() {
  ::memset(&item_def_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&item_def_index_)) + sizeof(accountid_));
}

CMsgGCToGCGrantSelfMadeItemToAccount::~CMsgGCToGCGrantSelfMadeItemToAccount() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  SharedDtor();
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SharedDtor() {
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCGrantSelfMadeItemToAccount& CMsgGCToGCGrantSelfMadeItemToAccount::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCGrantSelfMadeItemToAccount_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCGrantSelfMadeItemToAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&item_def_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&accountid_) -
        reinterpret_cast<char*>(&item_def_index_)) + sizeof(accountid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCGrantSelfMadeItemToAccount::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCGrantSelfMadeItemToAccount*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 item_def_index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_def_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 accountid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_accountid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCGrantSelfMadeItemToAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_def_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 accountid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_accountid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCGrantSelfMadeItemToAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def_index(), output);
  }

  // optional uint32 accountid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->accountid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
}

::google::protobuf::uint8* CMsgGCToGCGrantSelfMadeItemToAccount::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def_index(), target);
  }

  // optional uint32 accountid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->accountid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  return target;
}

size_t CMsgGCToGCGrantSelfMadeItemToAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 item_def_index = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def_index());
    }

    // optional uint32 accountid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCGrantSelfMadeItemToAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGrantSelfMadeItemToAccount* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCGrantSelfMadeItemToAccount>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantSelfMadeItemToAccount::MergeFrom(const CMsgGCToGCGrantSelfMadeItemToAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      item_def_index_ = from.item_def_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      accountid_ = from.accountid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGrantSelfMadeItemToAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantSelfMadeItemToAccount::CopyFrom(const CMsgGCToGCGrantSelfMadeItemToAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantSelfMadeItemToAccount::IsInitialized() const {
  return true;
}

void CMsgGCToGCGrantSelfMadeItemToAccount::Swap(CMsgGCToGCGrantSelfMadeItemToAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGrantSelfMadeItemToAccount::InternalSwap(CMsgGCToGCGrantSelfMadeItemToAccount* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_def_index_, other->item_def_index_);
  swap(accountid_, other->accountid_);
}

::google::protobuf::Metadata CMsgGCToGCGrantSelfMadeItemToAccount::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgUseItem::InitAsDefaultInstance() {
}
class CMsgUseItem::HasBitSetters {
 public:
  static void set_has_item_id(CMsgUseItem* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_target_steam_id(CMsgUseItem* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_duel__class_lock(CMsgUseItem* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_initiator_steam_id(CMsgUseItem* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_itempack__ack_immediately(CMsgUseItem* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgUseItem::kItemIdFieldNumber;
const int CMsgUseItem::kTargetSteamIdFieldNumber;
const int CMsgUseItem::kGiftPotentialTargetsFieldNumber;
const int CMsgUseItem::kDuelClassLockFieldNumber;
const int CMsgUseItem::kInitiatorSteamIdFieldNumber;
const int CMsgUseItem::kItempackAckImmediatelyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgUseItem::CMsgUseItem()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgUseItem)
}
CMsgUseItem::CMsgUseItem(const CMsgUseItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      gift__potential_targets_(from.gift__potential_targets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&itempack__ack_immediately_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(itempack__ack_immediately_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgUseItem)
}

void CMsgUseItem::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itempack__ack_immediately_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(itempack__ack_immediately_));
}

CMsgUseItem::~CMsgUseItem() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgUseItem)
  SharedDtor();
}

void CMsgUseItem::SharedDtor() {
}

void CMsgUseItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgUseItem& CMsgUseItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgUseItem_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgUseItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgUseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gift__potential_targets_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&itempack__ack_immediately_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(itempack__ack_immediately_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgUseItem::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgUseItem*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 target_steam_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_target_steam_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // repeated uint32 gift__potential_targets = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 24) {
          do {
            msg->add_gift__potential_targets(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_gift__potential_targets();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional uint32 duel__class_lock = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_duel__class_lock(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 initiator_steam_id = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_initiator_steam_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool itempack__ack_immediately = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_itempack__ack_immediately(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgUseItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgUseItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 target_steam_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {
          HasBitSetters::set_has_target_steam_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &target_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 gift__potential_targets = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_gift__potential_targets())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gift__potential_targets())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 duel__class_lock = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_duel__class_lock(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duel__class_lock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 initiator_steam_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_initiator_steam_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &initiator_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool itempack__ack_immediately = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_itempack__ack_immediately(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &itempack__ack_immediately_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgUseItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgUseItem)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgUseItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgUseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional fixed64 target_steam_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->target_steam_id(), output);
  }

  // repeated uint32 gift__potential_targets = 3;
  for (int i = 0, n = this->gift__potential_targets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->gift__potential_targets(i), output);
  }

  // optional uint32 duel__class_lock = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->duel__class_lock(), output);
  }

  // optional uint64 initiator_steam_id = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->initiator_steam_id(), output);
  }

  // optional bool itempack__ack_immediately = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->itempack__ack_immediately(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgUseItem)
}

::google::protobuf::uint8* CMsgUseItem::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgUseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional fixed64 target_steam_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->target_steam_id(), target);
  }

  // repeated uint32 gift__potential_targets = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->gift__potential_targets_, target);

  // optional uint32 duel__class_lock = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->duel__class_lock(), target);
  }

  // optional uint64 initiator_steam_id = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->initiator_steam_id(), target);
  }

  // optional bool itempack__ack_immediately = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->itempack__ack_immediately(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgUseItem)
  return target;
}

size_t CMsgUseItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgUseItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 gift__potential_targets = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->gift__potential_targets_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->gift__potential_targets_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint64 item_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional fixed64 target_steam_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional uint64 initiator_steam_id = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->initiator_steam_id());
    }

    // optional uint32 duel__class_lock = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->duel__class_lock());
    }

    // optional bool itempack__ack_immediately = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgUseItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgUseItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgUseItem* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgUseItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgUseItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgUseItem)
    MergeFrom(*source);
  }
}

void CMsgUseItem::MergeFrom(const CMsgUseItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgUseItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gift__potential_targets_.MergeFrom(from.gift__potential_targets_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_steam_id_ = from.target_steam_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      initiator_steam_id_ = from.initiator_steam_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      duel__class_lock_ = from.duel__class_lock_;
    }
    if (cached_has_bits & 0x00000010u) {
      itempack__ack_immediately_ = from.itempack__ack_immediately_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgUseItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgUseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgUseItem::CopyFrom(const CMsgUseItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgUseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgUseItem::IsInitialized() const {
  return true;
}

void CMsgUseItem::Swap(CMsgUseItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgUseItem::InternalSwap(CMsgUseItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  gift__potential_targets_.InternalSwap(&other->gift__potential_targets_);
  swap(item_id_, other->item_id_);
  swap(target_steam_id_, other->target_steam_id_);
  swap(initiator_steam_id_, other->initiator_steam_id_);
  swap(duel__class_lock_, other->duel__class_lock_);
  swap(itempack__ack_immediately_, other->itempack__ack_immediately_);
}

::google::protobuf::Metadata CMsgUseItem::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgServerUseItem::InitAsDefaultInstance() {
  ::proto::dota::_CMsgServerUseItem_default_instance_._instance.get_mutable()->use_item_msg_ = const_cast< ::proto::dota::CMsgUseItem*>(
      ::proto::dota::CMsgUseItem::internal_default_instance());
}
class CMsgServerUseItem::HasBitSetters {
 public:
  static void set_has_initiator_account_id(CMsgServerUseItem* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::proto::dota::CMsgUseItem& use_item_msg(const CMsgServerUseItem* msg);
  static void set_has_use_item_msg(CMsgServerUseItem* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::proto::dota::CMsgUseItem&
CMsgServerUseItem::HasBitSetters::use_item_msg(const CMsgServerUseItem* msg) {
  return *msg->use_item_msg_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgServerUseItem::kInitiatorAccountIdFieldNumber;
const int CMsgServerUseItem::kUseItemMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgServerUseItem::CMsgServerUseItem()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgServerUseItem)
}
CMsgServerUseItem::CMsgServerUseItem(const CMsgServerUseItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_use_item_msg()) {
    use_item_msg_ = new ::proto::dota::CMsgUseItem(*from.use_item_msg_);
  } else {
    use_item_msg_ = nullptr;
  }
  initiator_account_id_ = from.initiator_account_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgServerUseItem)
}

void CMsgServerUseItem::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgServerUseItem_econ_5fgcmessages_2eproto.base);
  ::memset(&use_item_msg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&initiator_account_id_) -
      reinterpret_cast<char*>(&use_item_msg_)) + sizeof(initiator_account_id_));
}

CMsgServerUseItem::~CMsgServerUseItem() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgServerUseItem)
  SharedDtor();
}

void CMsgServerUseItem::SharedDtor() {
  if (this != internal_default_instance()) delete use_item_msg_;
}

void CMsgServerUseItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgServerUseItem& CMsgServerUseItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgServerUseItem_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgServerUseItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgServerUseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(use_item_msg_ != nullptr);
    use_item_msg_->Clear();
  }
  initiator_account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgServerUseItem::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgServerUseItem*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 initiator_account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_initiator_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .proto.dota.CMsgUseItem use_item_msg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::dota::CMsgUseItem::_InternalParse;
        object = msg->mutable_use_item_msg();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgServerUseItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgServerUseItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 initiator_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_initiator_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &initiator_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.CMsgUseItem use_item_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_use_item_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgServerUseItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgServerUseItem)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgServerUseItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgServerUseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 initiator_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->initiator_account_id(), output);
  }

  // optional .proto.dota.CMsgUseItem use_item_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::use_item_msg(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgServerUseItem)
}

::google::protobuf::uint8* CMsgServerUseItem::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgServerUseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 initiator_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->initiator_account_id(), target);
  }

  // optional .proto.dota.CMsgUseItem use_item_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::use_item_msg(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgServerUseItem)
  return target;
}

size_t CMsgServerUseItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgServerUseItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .proto.dota.CMsgUseItem use_item_msg = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *use_item_msg_);
    }

    // optional uint32 initiator_account_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->initiator_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgServerUseItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgServerUseItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgServerUseItem* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgServerUseItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgServerUseItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgServerUseItem)
    MergeFrom(*source);
  }
}

void CMsgServerUseItem::MergeFrom(const CMsgServerUseItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgServerUseItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_use_item_msg()->::proto::dota::CMsgUseItem::MergeFrom(from.use_item_msg());
    }
    if (cached_has_bits & 0x00000002u) {
      initiator_account_id_ = from.initiator_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgServerUseItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgServerUseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgServerUseItem::CopyFrom(const CMsgServerUseItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgServerUseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgServerUseItem::IsInitialized() const {
  return true;
}

void CMsgServerUseItem::Swap(CMsgServerUseItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgServerUseItem::InternalSwap(CMsgServerUseItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(use_item_msg_, other->use_item_msg_);
  swap(initiator_account_id_, other->initiator_account_id_);
}

::google::protobuf::Metadata CMsgServerUseItem::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgUseMultipleItems::InitAsDefaultInstance() {
}
class CMsgUseMultipleItems::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgUseMultipleItems::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgUseMultipleItems::CMsgUseMultipleItems()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgUseMultipleItems)
}
CMsgUseMultipleItems::CMsgUseMultipleItems(const CMsgUseMultipleItems& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgUseMultipleItems)
}

void CMsgUseMultipleItems::SharedCtor() {
}

CMsgUseMultipleItems::~CMsgUseMultipleItems() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgUseMultipleItems)
  SharedDtor();
}

void CMsgUseMultipleItems::SharedDtor() {
}

void CMsgUseMultipleItems::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgUseMultipleItems& CMsgUseMultipleItems::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgUseMultipleItems_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgUseMultipleItems::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgUseMultipleItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgUseMultipleItems::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgUseMultipleItems*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_item_ids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
        object = msg->mutable_item_ids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgUseMultipleItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgUseMultipleItems)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgUseMultipleItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgUseMultipleItems)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgUseMultipleItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgUseMultipleItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgUseMultipleItems)
}

::google::protobuf::uint8* CMsgUseMultipleItems::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgUseMultipleItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgUseMultipleItems)
  return target;
}

size_t CMsgUseMultipleItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgUseMultipleItems)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgUseMultipleItems::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgUseMultipleItems)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgUseMultipleItems* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgUseMultipleItems>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgUseMultipleItems)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgUseMultipleItems)
    MergeFrom(*source);
  }
}

void CMsgUseMultipleItems::MergeFrom(const CMsgUseMultipleItems& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgUseMultipleItems)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
}

void CMsgUseMultipleItems::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgUseMultipleItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgUseMultipleItems::CopyFrom(const CMsgUseMultipleItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgUseMultipleItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgUseMultipleItems::IsInitialized() const {
  return true;
}

void CMsgUseMultipleItems::Swap(CMsgUseMultipleItems* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgUseMultipleItems::InternalSwap(CMsgUseMultipleItems* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  item_ids_.InternalSwap(&other->item_ids_);
}

::google::protobuf::Metadata CMsgUseMultipleItems::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCPartnerBalanceRequest::InitAsDefaultInstance() {
}
class CMsgGCPartnerBalanceRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCPartnerBalanceRequest::CMsgGCPartnerBalanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCPartnerBalanceRequest)
}
CMsgGCPartnerBalanceRequest::CMsgGCPartnerBalanceRequest(const CMsgGCPartnerBalanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCPartnerBalanceRequest)
}

void CMsgGCPartnerBalanceRequest::SharedCtor() {
}

CMsgGCPartnerBalanceRequest::~CMsgGCPartnerBalanceRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCPartnerBalanceRequest)
  SharedDtor();
}

void CMsgGCPartnerBalanceRequest::SharedDtor() {
}

void CMsgGCPartnerBalanceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCPartnerBalanceRequest& CMsgGCPartnerBalanceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCPartnerBalanceRequest_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCPartnerBalanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCPartnerBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCPartnerBalanceRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCPartnerBalanceRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCPartnerBalanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCPartnerBalanceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCPartnerBalanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCPartnerBalanceRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCPartnerBalanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCPartnerBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCPartnerBalanceRequest)
}

::google::protobuf::uint8* CMsgGCPartnerBalanceRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCPartnerBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCPartnerBalanceRequest)
  return target;
}

size_t CMsgGCPartnerBalanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCPartnerBalanceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCPartnerBalanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCPartnerBalanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCPartnerBalanceRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCPartnerBalanceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCPartnerBalanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCPartnerBalanceRequest)
    MergeFrom(*source);
  }
}

void CMsgGCPartnerBalanceRequest::MergeFrom(const CMsgGCPartnerBalanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCPartnerBalanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgGCPartnerBalanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCPartnerBalanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerBalanceRequest::CopyFrom(const CMsgGCPartnerBalanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCPartnerBalanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerBalanceRequest::IsInitialized() const {
  return true;
}

void CMsgGCPartnerBalanceRequest::Swap(CMsgGCPartnerBalanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCPartnerBalanceRequest::InternalSwap(CMsgGCPartnerBalanceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CMsgGCPartnerBalanceRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCPartnerBalanceResponse::InitAsDefaultInstance() {
}
class CMsgGCPartnerBalanceResponse::HasBitSetters {
 public:
  static void set_has_result(CMsgGCPartnerBalanceResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_balance(CMsgGCPartnerBalanceResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCPartnerBalanceResponse::kResultFieldNumber;
const int CMsgGCPartnerBalanceResponse::kBalanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCPartnerBalanceResponse::CMsgGCPartnerBalanceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCPartnerBalanceResponse)
}
CMsgGCPartnerBalanceResponse::CMsgGCPartnerBalanceResponse(const CMsgGCPartnerBalanceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&balance_, &from.balance_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&balance_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCPartnerBalanceResponse)
}

void CMsgGCPartnerBalanceResponse::SharedCtor() {
  balance_ = 0u;
  result_ = 1;
}

CMsgGCPartnerBalanceResponse::~CMsgGCPartnerBalanceResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCPartnerBalanceResponse)
  SharedDtor();
}

void CMsgGCPartnerBalanceResponse::SharedDtor() {
}

void CMsgGCPartnerBalanceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCPartnerBalanceResponse& CMsgGCPartnerBalanceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCPartnerBalanceResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCPartnerBalanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCPartnerBalanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    balance_ = 0u;
    result_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCPartnerBalanceResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCPartnerBalanceResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::EGCPartnerRequestResponse_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_result(static_cast<::proto::dota::EGCPartnerRequestResponse>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 balance = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_balance(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCPartnerBalanceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCPartnerBalanceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::EGCPartnerRequestResponse_IsValid(value)) {
            set_result(static_cast< ::proto::dota::EGCPartnerRequestResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 balance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_balance(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCPartnerBalanceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCPartnerBalanceResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCPartnerBalanceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCPartnerBalanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional uint32 balance = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->balance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCPartnerBalanceResponse)
}

::google::protobuf::uint8* CMsgGCPartnerBalanceResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCPartnerBalanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional uint32 balance = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->balance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCPartnerBalanceResponse)
  return target;
}

size_t CMsgGCPartnerBalanceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCPartnerBalanceResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 balance = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->balance());
    }

    // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCPartnerBalanceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCPartnerBalanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCPartnerBalanceResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCPartnerBalanceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCPartnerBalanceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCPartnerBalanceResponse)
    MergeFrom(*source);
  }
}

void CMsgGCPartnerBalanceResponse::MergeFrom(const CMsgGCPartnerBalanceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCPartnerBalanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      balance_ = from.balance_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCPartnerBalanceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCPartnerBalanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerBalanceResponse::CopyFrom(const CMsgGCPartnerBalanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCPartnerBalanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerBalanceResponse::IsInitialized() const {
  return true;
}

void CMsgGCPartnerBalanceResponse::Swap(CMsgGCPartnerBalanceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCPartnerBalanceResponse::InternalSwap(CMsgGCPartnerBalanceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(balance_, other->balance_);
  swap(result_, other->result_);
}

::google::protobuf::Metadata CMsgGCPartnerBalanceResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CGCStoreRechargeRedirect_LineItem::InitAsDefaultInstance() {
}
class CGCStoreRechargeRedirect_LineItem::HasBitSetters {
 public:
  static void set_has_item_def_id(CGCStoreRechargeRedirect_LineItem* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_quantity(CGCStoreRechargeRedirect_LineItem* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCStoreRechargeRedirect_LineItem::kItemDefIdFieldNumber;
const int CGCStoreRechargeRedirect_LineItem::kQuantityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCStoreRechargeRedirect_LineItem::CGCStoreRechargeRedirect_LineItem()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CGCStoreRechargeRedirect_LineItem)
}
CGCStoreRechargeRedirect_LineItem::CGCStoreRechargeRedirect_LineItem(const CGCStoreRechargeRedirect_LineItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_def_id_, &from.item_def_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&quantity_) -
    reinterpret_cast<char*>(&item_def_id_)) + sizeof(quantity_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CGCStoreRechargeRedirect_LineItem)
}

void CGCStoreRechargeRedirect_LineItem::SharedCtor() {
  ::memset(&item_def_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quantity_) -
      reinterpret_cast<char*>(&item_def_id_)) + sizeof(quantity_));
}

CGCStoreRechargeRedirect_LineItem::~CGCStoreRechargeRedirect_LineItem() {
  // @@protoc_insertion_point(destructor:proto.dota.CGCStoreRechargeRedirect_LineItem)
  SharedDtor();
}

void CGCStoreRechargeRedirect_LineItem::SharedDtor() {
}

void CGCStoreRechargeRedirect_LineItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CGCStoreRechargeRedirect_LineItem& CGCStoreRechargeRedirect_LineItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CGCStoreRechargeRedirect_LineItem_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CGCStoreRechargeRedirect_LineItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&item_def_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&quantity_) -
        reinterpret_cast<char*>(&item_def_id_)) + sizeof(quantity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CGCStoreRechargeRedirect_LineItem::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CGCStoreRechargeRedirect_LineItem*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 item_def_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_def_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 quantity = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_quantity(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CGCStoreRechargeRedirect_LineItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_def_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 quantity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_quantity(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CGCStoreRechargeRedirect_LineItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CGCStoreRechargeRedirect_LineItem)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CGCStoreRechargeRedirect_LineItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def_id(), output);
  }

  // optional uint32 quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quantity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CGCStoreRechargeRedirect_LineItem)
}

::google::protobuf::uint8* CGCStoreRechargeRedirect_LineItem::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def_id(), target);
  }

  // optional uint32 quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->quantity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CGCStoreRechargeRedirect_LineItem)
  return target;
}

size_t CGCStoreRechargeRedirect_LineItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 item_def_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def_id());
    }

    // optional uint32 quantity = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quantity());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CGCStoreRechargeRedirect_LineItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCStoreRechargeRedirect_LineItem* source =
      ::google::protobuf::DynamicCastToGenerated<CGCStoreRechargeRedirect_LineItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CGCStoreRechargeRedirect_LineItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CGCStoreRechargeRedirect_LineItem)
    MergeFrom(*source);
  }
}

void CGCStoreRechargeRedirect_LineItem::MergeFrom(const CGCStoreRechargeRedirect_LineItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      item_def_id_ = from.item_def_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      quantity_ = from.quantity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CGCStoreRechargeRedirect_LineItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCStoreRechargeRedirect_LineItem::CopyFrom(const CGCStoreRechargeRedirect_LineItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCStoreRechargeRedirect_LineItem::IsInitialized() const {
  return true;
}

void CGCStoreRechargeRedirect_LineItem::Swap(CGCStoreRechargeRedirect_LineItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCStoreRechargeRedirect_LineItem::InternalSwap(CGCStoreRechargeRedirect_LineItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_def_id_, other->item_def_id_);
  swap(quantity_, other->quantity_);
}

::google::protobuf::Metadata CGCStoreRechargeRedirect_LineItem::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCPartnerRechargeRedirectURLRequest::InitAsDefaultInstance() {
}
class CMsgGCPartnerRechargeRedirectURLRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCPartnerRechargeRedirectURLRequest::kLineItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCPartnerRechargeRedirectURLRequest::CMsgGCPartnerRechargeRedirectURLRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
}
CMsgGCPartnerRechargeRedirectURLRequest::CMsgGCPartnerRechargeRedirectURLRequest(const CMsgGCPartnerRechargeRedirectURLRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      line_items_(from.line_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
}

void CMsgGCPartnerRechargeRedirectURLRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCPartnerRechargeRedirectURLRequest_econ_5fgcmessages_2eproto.base);
}

CMsgGCPartnerRechargeRedirectURLRequest::~CMsgGCPartnerRechargeRedirectURLRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  SharedDtor();
}

void CMsgGCPartnerRechargeRedirectURLRequest::SharedDtor() {
}

void CMsgGCPartnerRechargeRedirectURLRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCPartnerRechargeRedirectURLRequest& CMsgGCPartnerRechargeRedirectURLRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCPartnerRechargeRedirectURLRequest_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCPartnerRechargeRedirectURLRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  line_items_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCPartnerRechargeRedirectURLRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCPartnerRechargeRedirectURLRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.dota.CGCStoreRechargeRedirect_LineItem line_items = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CGCStoreRechargeRedirect_LineItem::_InternalParse;
          object = msg->add_line_items();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCPartnerRechargeRedirectURLRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CGCStoreRechargeRedirect_LineItem line_items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_line_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCPartnerRechargeRedirectURLRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CGCStoreRechargeRedirect_LineItem line_items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->line_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->line_items(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
}

::google::protobuf::uint8* CMsgGCPartnerRechargeRedirectURLRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CGCStoreRechargeRedirect_LineItem line_items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->line_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->line_items(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  return target;
}

size_t CMsgGCPartnerRechargeRedirectURLRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CGCStoreRechargeRedirect_LineItem line_items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->line_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->line_items(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCPartnerRechargeRedirectURLRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCPartnerRechargeRedirectURLRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCPartnerRechargeRedirectURLRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
    MergeFrom(*source);
  }
}

void CMsgGCPartnerRechargeRedirectURLRequest::MergeFrom(const CMsgGCPartnerRechargeRedirectURLRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  line_items_.MergeFrom(from.line_items_);
}

void CMsgGCPartnerRechargeRedirectURLRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerRechargeRedirectURLRequest::CopyFrom(const CMsgGCPartnerRechargeRedirectURLRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerRechargeRedirectURLRequest::IsInitialized() const {
  return true;
}

void CMsgGCPartnerRechargeRedirectURLRequest::Swap(CMsgGCPartnerRechargeRedirectURLRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCPartnerRechargeRedirectURLRequest::InternalSwap(CMsgGCPartnerRechargeRedirectURLRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&line_items_)->InternalSwap(CastToBase(&other->line_items_));
}

::google::protobuf::Metadata CMsgGCPartnerRechargeRedirectURLRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCPartnerRechargeRedirectURLResponse::InitAsDefaultInstance() {
}
class CMsgGCPartnerRechargeRedirectURLResponse::HasBitSetters {
 public:
  static void set_has_result(CMsgGCPartnerRechargeRedirectURLResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_url(CMsgGCPartnerRechargeRedirectURLResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCPartnerRechargeRedirectURLResponse::kResultFieldNumber;
const int CMsgGCPartnerRechargeRedirectURLResponse::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCPartnerRechargeRedirectURLResponse::CMsgGCPartnerRechargeRedirectURLResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
}
CMsgGCPartnerRechargeRedirectURLResponse::CMsgGCPartnerRechargeRedirectURLResponse(const CMsgGCPartnerRechargeRedirectURLResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
}

void CMsgGCPartnerRechargeRedirectURLResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCPartnerRechargeRedirectURLResponse_econ_5fgcmessages_2eproto.base);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 1;
}

CMsgGCPartnerRechargeRedirectURLResponse::~CMsgGCPartnerRechargeRedirectURLResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  SharedDtor();
}

void CMsgGCPartnerRechargeRedirectURLResponse::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCPartnerRechargeRedirectURLResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCPartnerRechargeRedirectURLResponse& CMsgGCPartnerRechargeRedirectURLResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCPartnerRechargeRedirectURLResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCPartnerRechargeRedirectURLResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    result_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCPartnerRechargeRedirectURLResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCPartnerRechargeRedirectURLResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::EGCPartnerRequestResponse_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_result(static_cast<::proto::dota::EGCPartnerRequestResponse>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string url = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.url");
        object = msg->mutable_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCPartnerRechargeRedirectURLResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::EGCPartnerRequestResponse_IsValid(value)) {
            set_result(static_cast< ::proto::dota::EGCPartnerRequestResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCPartnerRechargeRedirectURLResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
}

::google::protobuf::uint8* CMsgGCPartnerRechargeRedirectURLResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  return target;
}

size_t CMsgGCPartnerRechargeRedirectURLResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string url = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCPartnerRechargeRedirectURLResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCPartnerRechargeRedirectURLResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCPartnerRechargeRedirectURLResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
    MergeFrom(*source);
  }
}

void CMsgGCPartnerRechargeRedirectURLResponse::MergeFrom(const CMsgGCPartnerRechargeRedirectURLResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCPartnerRechargeRedirectURLResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerRechargeRedirectURLResponse::CopyFrom(const CMsgGCPartnerRechargeRedirectURLResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerRechargeRedirectURLResponse::IsInitialized() const {
  return true;
}

void CMsgGCPartnerRechargeRedirectURLResponse::Swap(CMsgGCPartnerRechargeRedirectURLResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCPartnerRechargeRedirectURLResponse::InternalSwap(CMsgGCPartnerRechargeRedirectURLResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
}

::google::protobuf::Metadata CMsgGCPartnerRechargeRedirectURLResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::InitAsDefaultInstance() {
}
class CMsgGCEconSQLWorkItemEmbeddedRollbackData::HasBitSetters {
 public:
  static void set_has_account_id(CMsgGCEconSQLWorkItemEmbeddedRollbackData* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_deleted_item_id(CMsgGCEconSQLWorkItemEmbeddedRollbackData* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_old_audit_action(CMsgGCEconSQLWorkItemEmbeddedRollbackData* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_new_audit_action(CMsgGCEconSQLWorkItemEmbeddedRollbackData* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_expected_audit_action(CMsgGCEconSQLWorkItemEmbeddedRollbackData* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCEconSQLWorkItemEmbeddedRollbackData::kAccountIdFieldNumber;
const int CMsgGCEconSQLWorkItemEmbeddedRollbackData::kDeletedItemIdFieldNumber;
const int CMsgGCEconSQLWorkItemEmbeddedRollbackData::kOldAuditActionFieldNumber;
const int CMsgGCEconSQLWorkItemEmbeddedRollbackData::kNewAuditActionFieldNumber;
const int CMsgGCEconSQLWorkItemEmbeddedRollbackData::kExpectedAuditActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCEconSQLWorkItemEmbeddedRollbackData::CMsgGCEconSQLWorkItemEmbeddedRollbackData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
}
CMsgGCEconSQLWorkItemEmbeddedRollbackData::CMsgGCEconSQLWorkItemEmbeddedRollbackData(const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&deleted_item_id_, &from.deleted_item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&expected_audit_action_) -
    reinterpret_cast<char*>(&deleted_item_id_)) + sizeof(expected_audit_action_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SharedCtor() {
  ::memset(&deleted_item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expected_audit_action_) -
      reinterpret_cast<char*>(&deleted_item_id_)) + sizeof(expected_audit_action_));
}

CMsgGCEconSQLWorkItemEmbeddedRollbackData::~CMsgGCEconSQLWorkItemEmbeddedRollbackData() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  SharedDtor();
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SharedDtor() {
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCEconSQLWorkItemEmbeddedRollbackData& CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCEconSQLWorkItemEmbeddedRollbackData_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCEconSQLWorkItemEmbeddedRollbackData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&deleted_item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&expected_audit_action_) -
        reinterpret_cast<char*>(&deleted_item_id_)) + sizeof(expected_audit_action_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCEconSQLWorkItemEmbeddedRollbackData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCEconSQLWorkItemEmbeddedRollbackData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 deleted_item_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_deleted_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 old_audit_action = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_old_audit_action(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 new_audit_action = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_new_audit_action(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 expected_audit_action = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_expected_audit_action(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 deleted_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_deleted_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deleted_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 old_audit_action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_old_audit_action(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &old_audit_action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 new_audit_action = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_new_audit_action(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_audit_action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 expected_audit_action = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_expected_audit_action(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expected_audit_action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint64 deleted_item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->deleted_item_id(), output);
  }

  // optional uint32 old_audit_action = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->old_audit_action(), output);
  }

  // optional uint32 new_audit_action = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->new_audit_action(), output);
  }

  // optional uint32 expected_audit_action = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->expected_audit_action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
}

::google::protobuf::uint8* CMsgGCEconSQLWorkItemEmbeddedRollbackData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint64 deleted_item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->deleted_item_id(), target);
  }

  // optional uint32 old_audit_action = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->old_audit_action(), target);
  }

  // optional uint32 new_audit_action = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->new_audit_action(), target);
  }

  // optional uint32 expected_audit_action = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->expected_audit_action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  return target;
}

size_t CMsgGCEconSQLWorkItemEmbeddedRollbackData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint64 deleted_item_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->deleted_item_id());
    }

    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 old_audit_action = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->old_audit_action());
    }

    // optional uint32 new_audit_action = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_audit_action());
    }

    // optional uint32 expected_audit_action = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expected_audit_action());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCEconSQLWorkItemEmbeddedRollbackData* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCEconSQLWorkItemEmbeddedRollbackData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
    MergeFrom(*source);
  }
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::MergeFrom(const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      deleted_item_id_ = from.deleted_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      old_audit_action_ = from.old_audit_action_;
    }
    if (cached_has_bits & 0x00000008u) {
      new_audit_action_ = from.new_audit_action_;
    }
    if (cached_has_bits & 0x00000010u) {
      expected_audit_action_ = from.expected_audit_action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::CopyFrom(const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::IsInitialized() const {
  return true;
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::Swap(CMsgGCEconSQLWorkItemEmbeddedRollbackData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCEconSQLWorkItemEmbeddedRollbackData::InternalSwap(CMsgGCEconSQLWorkItemEmbeddedRollbackData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(deleted_item_id_, other->deleted_item_id_);
  swap(account_id_, other->account_id_);
  swap(old_audit_action_, other->old_audit_action_);
  swap(new_audit_action_, other->new_audit_action_);
  swap(expected_audit_action_, other->expected_audit_action_);
}

::google::protobuf::Metadata CMsgGCEconSQLWorkItemEmbeddedRollbackData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgCraftStatue::InitAsDefaultInstance() {
}
class CMsgCraftStatue::HasBitSetters {
 public:
  static void set_has_heroid(CMsgCraftStatue* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_sequencename(CMsgCraftStatue* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_cycle(CMsgCraftStatue* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_description(CMsgCraftStatue* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pedestal_itemdef(CMsgCraftStatue* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_toolid(CMsgCraftStatue* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCraftStatue::kHeroidFieldNumber;
const int CMsgCraftStatue::kSequencenameFieldNumber;
const int CMsgCraftStatue::kCycleFieldNumber;
const int CMsgCraftStatue::kDescriptionFieldNumber;
const int CMsgCraftStatue::kPedestalItemdefFieldNumber;
const int CMsgCraftStatue::kToolidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCraftStatue::CMsgCraftStatue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgCraftStatue)
}
CMsgCraftStatue::CMsgCraftStatue(const CMsgCraftStatue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sequencename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sequencename()) {
    sequencename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequencename_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&heroid_, &from.heroid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pedestal_itemdef_) -
    reinterpret_cast<char*>(&heroid_)) + sizeof(pedestal_itemdef_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgCraftStatue)
}

void CMsgCraftStatue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgCraftStatue_econ_5fgcmessages_2eproto.base);
  sequencename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&heroid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pedestal_itemdef_) -
      reinterpret_cast<char*>(&heroid_)) + sizeof(pedestal_itemdef_));
}

CMsgCraftStatue::~CMsgCraftStatue() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgCraftStatue)
  SharedDtor();
}

void CMsgCraftStatue::SharedDtor() {
  sequencename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgCraftStatue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgCraftStatue& CMsgCraftStatue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgCraftStatue_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgCraftStatue::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgCraftStatue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      sequencename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      description_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&heroid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pedestal_itemdef_) -
        reinterpret_cast<char*>(&heroid_)) + sizeof(pedestal_itemdef_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgCraftStatue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgCraftStatue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 heroid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_heroid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string sequencename = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgCraftStatue.sequencename");
        object = msg->mutable_sequencename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional float cycle = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_cycle(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // optional string description = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgCraftStatue.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pedestal_itemdef = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_pedestal_itemdef(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 toolid = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_toolid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgCraftStatue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgCraftStatue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 heroid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_heroid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sequencename = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequencename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sequencename().data(), static_cast<int>(this->sequencename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgCraftStatue.sequencename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float cycle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {
          HasBitSetters::set_has_cycle(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cycle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgCraftStatue.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pedestal_itemdef = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_pedestal_itemdef(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pedestal_itemdef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 toolid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_toolid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &toolid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgCraftStatue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgCraftStatue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgCraftStatue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgCraftStatue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 heroid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  // optional string sequencename = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sequencename().data(), static_cast<int>(this->sequencename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgCraftStatue.sequencename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sequencename(), output);
  }

  // optional float cycle = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->cycle(), output);
  }

  // optional string description = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgCraftStatue.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // optional uint32 pedestal_itemdef = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pedestal_itemdef(), output);
  }

  // optional uint64 toolid = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->toolid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgCraftStatue)
}

::google::protobuf::uint8* CMsgCraftStatue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgCraftStatue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 heroid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  // optional string sequencename = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sequencename().data(), static_cast<int>(this->sequencename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgCraftStatue.sequencename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sequencename(), target);
  }

  // optional float cycle = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->cycle(), target);
  }

  // optional string description = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgCraftStatue.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // optional uint32 pedestal_itemdef = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pedestal_itemdef(), target);
  }

  // optional uint64 toolid = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->toolid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgCraftStatue)
  return target;
}

size_t CMsgCraftStatue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgCraftStatue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string sequencename = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sequencename());
    }

    // optional string description = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional uint32 heroid = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

    // optional float cycle = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

    // optional uint64 toolid = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->toolid());
    }

    // optional uint32 pedestal_itemdef = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pedestal_itemdef());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCraftStatue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgCraftStatue)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCraftStatue* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgCraftStatue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgCraftStatue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgCraftStatue)
    MergeFrom(*source);
  }
}

void CMsgCraftStatue::MergeFrom(const CMsgCraftStatue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgCraftStatue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      sequencename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequencename_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000004u) {
      heroid_ = from.heroid_;
    }
    if (cached_has_bits & 0x00000008u) {
      cycle_ = from.cycle_;
    }
    if (cached_has_bits & 0x00000010u) {
      toolid_ = from.toolid_;
    }
    if (cached_has_bits & 0x00000020u) {
      pedestal_itemdef_ = from.pedestal_itemdef_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCraftStatue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgCraftStatue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCraftStatue::CopyFrom(const CMsgCraftStatue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgCraftStatue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCraftStatue::IsInitialized() const {
  return true;
}

void CMsgCraftStatue::Swap(CMsgCraftStatue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCraftStatue::InternalSwap(CMsgCraftStatue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  sequencename_.Swap(&other->sequencename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(heroid_, other->heroid_);
  swap(cycle_, other->cycle_);
  swap(toolid_, other->toolid_);
  swap(pedestal_itemdef_, other->pedestal_itemdef_);
}

::google::protobuf::Metadata CMsgCraftStatue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgRedeemCode::InitAsDefaultInstance() {
}
class CMsgRedeemCode::HasBitSetters {
 public:
  static void set_has_code(CMsgRedeemCode* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRedeemCode::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRedeemCode::CMsgRedeemCode()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRedeemCode)
}
CMsgRedeemCode::CMsgRedeemCode(const CMsgRedeemCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRedeemCode)
}

void CMsgRedeemCode::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgRedeemCode_econ_5fgcmessages_2eproto.base);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgRedeemCode::~CMsgRedeemCode() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRedeemCode)
  SharedDtor();
}

void CMsgRedeemCode::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgRedeemCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgRedeemCode& CMsgRedeemCode::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgRedeemCode_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgRedeemCode::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRedeemCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    code_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgRedeemCode::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgRedeemCode*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgRedeemCode.code");
        object = msg->mutable_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgRedeemCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRedeemCode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgRedeemCode.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRedeemCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRedeemCode)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgRedeemCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRedeemCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgRedeemCode.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRedeemCode)
}

::google::protobuf::uint8* CMsgRedeemCode::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRedeemCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgRedeemCode.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRedeemCode)
  return target;
}

size_t CMsgRedeemCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRedeemCode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string code = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRedeemCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRedeemCode)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRedeemCode* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgRedeemCode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRedeemCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRedeemCode)
    MergeFrom(*source);
  }
}

void CMsgRedeemCode::MergeFrom(const CMsgRedeemCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRedeemCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_code()) {
    _has_bits_[0] |= 0x00000001u;
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
}

void CMsgRedeemCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRedeemCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRedeemCode::CopyFrom(const CMsgRedeemCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRedeemCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRedeemCode::IsInitialized() const {
  return true;
}

void CMsgRedeemCode::Swap(CMsgRedeemCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRedeemCode::InternalSwap(CMsgRedeemCode* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CMsgRedeemCode::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgRedeemCodeResponse::InitAsDefaultInstance() {
}
class CMsgRedeemCodeResponse::HasBitSetters {
 public:
  static void set_has_response(CMsgRedeemCodeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_item_id(CMsgRedeemCodeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRedeemCodeResponse::kResponseFieldNumber;
const int CMsgRedeemCodeResponse::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRedeemCodeResponse::CMsgRedeemCodeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRedeemCodeResponse)
}
CMsgRedeemCodeResponse::CMsgRedeemCodeResponse(const CMsgRedeemCodeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(response_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRedeemCodeResponse)
}

void CMsgRedeemCodeResponse::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(response_));
}

CMsgRedeemCodeResponse::~CMsgRedeemCodeResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRedeemCodeResponse)
  SharedDtor();
}

void CMsgRedeemCodeResponse::SharedDtor() {
}

void CMsgRedeemCodeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgRedeemCodeResponse& CMsgRedeemCodeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgRedeemCodeResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgRedeemCodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRedeemCodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&response_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(response_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgRedeemCodeResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgRedeemCodeResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 response = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_response(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgRedeemCodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRedeemCodeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 response = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_response(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &response_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRedeemCodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRedeemCodeResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgRedeemCodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRedeemCodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->response(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRedeemCodeResponse)
}

::google::protobuf::uint8* CMsgRedeemCodeResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRedeemCodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->response(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRedeemCodeResponse)
  return target;
}

size_t CMsgRedeemCodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRedeemCodeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 item_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 response = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->response());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgRedeemCodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRedeemCodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRedeemCodeResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgRedeemCodeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRedeemCodeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRedeemCodeResponse)
    MergeFrom(*source);
  }
}

void CMsgRedeemCodeResponse::MergeFrom(const CMsgRedeemCodeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRedeemCodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      response_ = from.response_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgRedeemCodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRedeemCodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRedeemCodeResponse::CopyFrom(const CMsgRedeemCodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRedeemCodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRedeemCodeResponse::IsInitialized() const {
  return true;
}

void CMsgRedeemCodeResponse::Swap(CMsgRedeemCodeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRedeemCodeResponse::InternalSwap(CMsgRedeemCodeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
  swap(response_, other->response_);
}

::google::protobuf::Metadata CMsgRedeemCodeResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDevNewItemRequest::InitAsDefaultInstance() {
}
class CMsgDevNewItemRequest::HasBitSetters {
 public:
  static void set_has_item_def_name(CMsgDevNewItemRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_loot_list_name(CMsgDevNewItemRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDevNewItemRequest::kItemDefNameFieldNumber;
const int CMsgDevNewItemRequest::kLootListNameFieldNumber;
const int CMsgDevNewItemRequest::kAttrDefNameFieldNumber;
const int CMsgDevNewItemRequest::kAttrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDevNewItemRequest::CMsgDevNewItemRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDevNewItemRequest)
}
CMsgDevNewItemRequest::CMsgDevNewItemRequest(const CMsgDevNewItemRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      attr_def_name_(from.attr_def_name_),
      attr_value_(from.attr_value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_def_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_item_def_name()) {
    item_def_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_def_name_);
  }
  loot_list_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_loot_list_name()) {
    loot_list_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loot_list_name_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDevNewItemRequest)
}

void CMsgDevNewItemRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDevNewItemRequest_econ_5fgcmessages_2eproto.base);
  item_def_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loot_list_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgDevNewItemRequest::~CMsgDevNewItemRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDevNewItemRequest)
  SharedDtor();
}

void CMsgDevNewItemRequest::SharedDtor() {
  item_def_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loot_list_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDevNewItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDevNewItemRequest& CMsgDevNewItemRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDevNewItemRequest_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgDevNewItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDevNewItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attr_def_name_.Clear();
  attr_value_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      item_def_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      loot_list_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDevNewItemRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDevNewItemRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string item_def_name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDevNewItemRequest.item_def_name");
        object = msg->mutable_item_def_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string loot_list_name = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDevNewItemRequest.loot_list_name");
        object = msg->mutable_loot_list_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string attr_def_name = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDevNewItemRequest.attr_def_name");
          object = msg->add_attr_def_name();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // repeated string attr_value = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("proto.dota.CMsgDevNewItemRequest.attr_value");
          object = msg->add_attr_value();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDevNewItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDevNewItemRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_def_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_def_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_def_name().data(), static_cast<int>(this->item_def_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDevNewItemRequest.item_def_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string loot_list_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loot_list_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->loot_list_name().data(), static_cast<int>(this->loot_list_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDevNewItemRequest.loot_list_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string attr_def_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_attr_def_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attr_def_name(this->attr_def_name_size() - 1).data(),
            static_cast<int>(this->attr_def_name(this->attr_def_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDevNewItemRequest.attr_def_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string attr_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_attr_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attr_value(this->attr_value_size() - 1).data(),
            static_cast<int>(this->attr_value(this->attr_value_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDevNewItemRequest.attr_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDevNewItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDevNewItemRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDevNewItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDevNewItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string item_def_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_def_name().data(), static_cast<int>(this->item_def_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.item_def_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_def_name(), output);
  }

  // optional string loot_list_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loot_list_name().data(), static_cast<int>(this->loot_list_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.loot_list_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->loot_list_name(), output);
  }

  // repeated string attr_def_name = 5;
  for (int i = 0, n = this->attr_def_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attr_def_name(i).data(), static_cast<int>(this->attr_def_name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.attr_def_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->attr_def_name(i), output);
  }

  // repeated string attr_value = 6;
  for (int i = 0, n = this->attr_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attr_value(i).data(), static_cast<int>(this->attr_value(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.attr_value");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->attr_value(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDevNewItemRequest)
}

::google::protobuf::uint8* CMsgDevNewItemRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDevNewItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string item_def_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_def_name().data(), static_cast<int>(this->item_def_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.item_def_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_def_name(), target);
  }

  // optional string loot_list_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loot_list_name().data(), static_cast<int>(this->loot_list_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.loot_list_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->loot_list_name(), target);
  }

  // repeated string attr_def_name = 5;
  for (int i = 0, n = this->attr_def_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attr_def_name(i).data(), static_cast<int>(this->attr_def_name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.attr_def_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->attr_def_name(i), target);
  }

  // repeated string attr_value = 6;
  for (int i = 0, n = this->attr_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attr_value(i).data(), static_cast<int>(this->attr_value(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.attr_value");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->attr_value(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDevNewItemRequest)
  return target;
}

size_t CMsgDevNewItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDevNewItemRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string attr_def_name = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attr_def_name_size());
  for (int i = 0, n = this->attr_def_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->attr_def_name(i));
  }

  // repeated string attr_value = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attr_value_size());
  for (int i = 0, n = this->attr_value_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->attr_value(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string item_def_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_def_name());
    }

    // optional string loot_list_name = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->loot_list_name());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDevNewItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDevNewItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDevNewItemRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDevNewItemRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDevNewItemRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDevNewItemRequest)
    MergeFrom(*source);
  }
}

void CMsgDevNewItemRequest::MergeFrom(const CMsgDevNewItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDevNewItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attr_def_name_.MergeFrom(from.attr_def_name_);
  attr_value_.MergeFrom(from.attr_value_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      item_def_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_def_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      loot_list_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loot_list_name_);
    }
  }
}

void CMsgDevNewItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDevNewItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDevNewItemRequest::CopyFrom(const CMsgDevNewItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDevNewItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDevNewItemRequest::IsInitialized() const {
  return true;
}

void CMsgDevNewItemRequest::Swap(CMsgDevNewItemRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDevNewItemRequest::InternalSwap(CMsgDevNewItemRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  attr_def_name_.InternalSwap(CastToBase(&other->attr_def_name_));
  attr_value_.InternalSwap(CastToBase(&other->attr_value_));
  item_def_name_.Swap(&other->item_def_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  loot_list_name_.Swap(&other->loot_list_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CMsgDevNewItemRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDevNewItemRequestResponse::InitAsDefaultInstance() {
}
class CMsgDevNewItemRequestResponse::HasBitSetters {
 public:
  static void set_has_success(CMsgDevNewItemRequestResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDevNewItemRequestResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDevNewItemRequestResponse::CMsgDevNewItemRequestResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDevNewItemRequestResponse)
}
CMsgDevNewItemRequestResponse::CMsgDevNewItemRequestResponse(const CMsgDevNewItemRequestResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDevNewItemRequestResponse)
}

void CMsgDevNewItemRequestResponse::SharedCtor() {
  success_ = false;
}

CMsgDevNewItemRequestResponse::~CMsgDevNewItemRequestResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDevNewItemRequestResponse)
  SharedDtor();
}

void CMsgDevNewItemRequestResponse::SharedDtor() {
}

void CMsgDevNewItemRequestResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDevNewItemRequestResponse& CMsgDevNewItemRequestResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDevNewItemRequestResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgDevNewItemRequestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDevNewItemRequestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDevNewItemRequestResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDevNewItemRequestResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool success = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDevNewItemRequestResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDevNewItemRequestResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDevNewItemRequestResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDevNewItemRequestResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDevNewItemRequestResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDevNewItemRequestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDevNewItemRequestResponse)
}

::google::protobuf::uint8* CMsgDevNewItemRequestResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDevNewItemRequestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDevNewItemRequestResponse)
  return target;
}

size_t CMsgDevNewItemRequestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDevNewItemRequestResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool success = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDevNewItemRequestResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDevNewItemRequestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDevNewItemRequestResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDevNewItemRequestResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDevNewItemRequestResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDevNewItemRequestResponse)
    MergeFrom(*source);
  }
}

void CMsgDevNewItemRequestResponse::MergeFrom(const CMsgDevNewItemRequestResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDevNewItemRequestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void CMsgDevNewItemRequestResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDevNewItemRequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDevNewItemRequestResponse::CopyFrom(const CMsgDevNewItemRequestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDevNewItemRequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDevNewItemRequestResponse::IsInitialized() const {
  return true;
}

void CMsgDevNewItemRequestResponse::Swap(CMsgDevNewItemRequestResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDevNewItemRequestResponse::InternalSwap(CMsgDevNewItemRequestResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(success_, other->success_);
}

::google::protobuf::Metadata CMsgDevNewItemRequestResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDevUnlockAllItemStyles::InitAsDefaultInstance() {
}
class CMsgDevUnlockAllItemStyles::HasBitSetters {
 public:
  static void set_has_item_id(CMsgDevUnlockAllItemStyles* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDevUnlockAllItemStyles::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDevUnlockAllItemStyles::CMsgDevUnlockAllItemStyles()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDevUnlockAllItemStyles)
}
CMsgDevUnlockAllItemStyles::CMsgDevUnlockAllItemStyles(const CMsgDevUnlockAllItemStyles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_id_ = from.item_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDevUnlockAllItemStyles)
}

void CMsgDevUnlockAllItemStyles::SharedCtor() {
  item_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgDevUnlockAllItemStyles::~CMsgDevUnlockAllItemStyles() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDevUnlockAllItemStyles)
  SharedDtor();
}

void CMsgDevUnlockAllItemStyles::SharedDtor() {
}

void CMsgDevUnlockAllItemStyles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDevUnlockAllItemStyles& CMsgDevUnlockAllItemStyles::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDevUnlockAllItemStyles_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgDevUnlockAllItemStyles::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDevUnlockAllItemStyles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDevUnlockAllItemStyles::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDevUnlockAllItemStyles*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDevUnlockAllItemStyles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDevUnlockAllItemStyles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDevUnlockAllItemStyles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDevUnlockAllItemStyles)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDevUnlockAllItemStyles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDevUnlockAllItemStyles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDevUnlockAllItemStyles)
}

::google::protobuf::uint8* CMsgDevUnlockAllItemStyles::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDevUnlockAllItemStyles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDevUnlockAllItemStyles)
  return target;
}

size_t CMsgDevUnlockAllItemStyles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDevUnlockAllItemStyles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 item_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDevUnlockAllItemStyles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDevUnlockAllItemStyles)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDevUnlockAllItemStyles* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDevUnlockAllItemStyles>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDevUnlockAllItemStyles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDevUnlockAllItemStyles)
    MergeFrom(*source);
  }
}

void CMsgDevUnlockAllItemStyles::MergeFrom(const CMsgDevUnlockAllItemStyles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDevUnlockAllItemStyles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item_id()) {
    set_item_id(from.item_id());
  }
}

void CMsgDevUnlockAllItemStyles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDevUnlockAllItemStyles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDevUnlockAllItemStyles::CopyFrom(const CMsgDevUnlockAllItemStyles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDevUnlockAllItemStyles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDevUnlockAllItemStyles::IsInitialized() const {
  return true;
}

void CMsgDevUnlockAllItemStyles::Swap(CMsgDevUnlockAllItemStyles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDevUnlockAllItemStyles::InternalSwap(CMsgDevUnlockAllItemStyles* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
}

::google::protobuf::Metadata CMsgDevUnlockAllItemStyles::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDevUnlockAllItemStylesResponse::InitAsDefaultInstance() {
}
class CMsgDevUnlockAllItemStylesResponse::HasBitSetters {
 public:
  static void set_has_success(CMsgDevUnlockAllItemStylesResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDevUnlockAllItemStylesResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDevUnlockAllItemStylesResponse::CMsgDevUnlockAllItemStylesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDevUnlockAllItemStylesResponse)
}
CMsgDevUnlockAllItemStylesResponse::CMsgDevUnlockAllItemStylesResponse(const CMsgDevUnlockAllItemStylesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDevUnlockAllItemStylesResponse)
}

void CMsgDevUnlockAllItemStylesResponse::SharedCtor() {
  success_ = false;
}

CMsgDevUnlockAllItemStylesResponse::~CMsgDevUnlockAllItemStylesResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDevUnlockAllItemStylesResponse)
  SharedDtor();
}

void CMsgDevUnlockAllItemStylesResponse::SharedDtor() {
}

void CMsgDevUnlockAllItemStylesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDevUnlockAllItemStylesResponse& CMsgDevUnlockAllItemStylesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDevUnlockAllItemStylesResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgDevUnlockAllItemStylesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDevUnlockAllItemStylesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDevUnlockAllItemStylesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDevUnlockAllItemStylesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool success = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDevUnlockAllItemStylesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDevUnlockAllItemStylesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDevUnlockAllItemStylesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDevUnlockAllItemStylesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDevUnlockAllItemStylesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDevUnlockAllItemStylesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDevUnlockAllItemStylesResponse)
}

::google::protobuf::uint8* CMsgDevUnlockAllItemStylesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDevUnlockAllItemStylesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDevUnlockAllItemStylesResponse)
  return target;
}

size_t CMsgDevUnlockAllItemStylesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDevUnlockAllItemStylesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool success = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDevUnlockAllItemStylesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDevUnlockAllItemStylesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDevUnlockAllItemStylesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDevUnlockAllItemStylesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDevUnlockAllItemStylesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDevUnlockAllItemStylesResponse)
    MergeFrom(*source);
  }
}

void CMsgDevUnlockAllItemStylesResponse::MergeFrom(const CMsgDevUnlockAllItemStylesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDevUnlockAllItemStylesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void CMsgDevUnlockAllItemStylesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDevUnlockAllItemStylesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDevUnlockAllItemStylesResponse::CopyFrom(const CMsgDevUnlockAllItemStylesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDevUnlockAllItemStylesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDevUnlockAllItemStylesResponse::IsInitialized() const {
  return true;
}

void CMsgDevUnlockAllItemStylesResponse::Swap(CMsgDevUnlockAllItemStylesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDevUnlockAllItemStylesResponse::InternalSwap(CMsgDevUnlockAllItemStylesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(success_, other->success_);
}

::google::protobuf::Metadata CMsgDevUnlockAllItemStylesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCGetAccountSubscriptionItem::InitAsDefaultInstance() {
}
class CMsgGCGetAccountSubscriptionItem::HasBitSetters {
 public:
  static void set_has_account_id(CMsgGCGetAccountSubscriptionItem* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCGetAccountSubscriptionItem::kAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCGetAccountSubscriptionItem::CMsgGCGetAccountSubscriptionItem()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCGetAccountSubscriptionItem)
}
CMsgGCGetAccountSubscriptionItem::CMsgGCGetAccountSubscriptionItem(const CMsgGCGetAccountSubscriptionItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_id_ = from.account_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCGetAccountSubscriptionItem)
}

void CMsgGCGetAccountSubscriptionItem::SharedCtor() {
  account_id_ = 0u;
}

CMsgGCGetAccountSubscriptionItem::~CMsgGCGetAccountSubscriptionItem() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCGetAccountSubscriptionItem)
  SharedDtor();
}

void CMsgGCGetAccountSubscriptionItem::SharedDtor() {
}

void CMsgGCGetAccountSubscriptionItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCGetAccountSubscriptionItem& CMsgGCGetAccountSubscriptionItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCGetAccountSubscriptionItem_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCGetAccountSubscriptionItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCGetAccountSubscriptionItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCGetAccountSubscriptionItem::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCGetAccountSubscriptionItem*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCGetAccountSubscriptionItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCGetAccountSubscriptionItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCGetAccountSubscriptionItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCGetAccountSubscriptionItem)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCGetAccountSubscriptionItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCGetAccountSubscriptionItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCGetAccountSubscriptionItem)
}

::google::protobuf::uint8* CMsgGCGetAccountSubscriptionItem::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCGetAccountSubscriptionItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCGetAccountSubscriptionItem)
  return target;
}

size_t CMsgGCGetAccountSubscriptionItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCGetAccountSubscriptionItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 account_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCGetAccountSubscriptionItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCGetAccountSubscriptionItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCGetAccountSubscriptionItem* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCGetAccountSubscriptionItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCGetAccountSubscriptionItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCGetAccountSubscriptionItem)
    MergeFrom(*source);
  }
}

void CMsgGCGetAccountSubscriptionItem::MergeFrom(const CMsgGCGetAccountSubscriptionItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCGetAccountSubscriptionItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_account_id()) {
    set_account_id(from.account_id());
  }
}

void CMsgGCGetAccountSubscriptionItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCGetAccountSubscriptionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetAccountSubscriptionItem::CopyFrom(const CMsgGCGetAccountSubscriptionItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCGetAccountSubscriptionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetAccountSubscriptionItem::IsInitialized() const {
  return true;
}

void CMsgGCGetAccountSubscriptionItem::Swap(CMsgGCGetAccountSubscriptionItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetAccountSubscriptionItem::InternalSwap(CMsgGCGetAccountSubscriptionItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(account_id_, other->account_id_);
}

::google::protobuf::Metadata CMsgGCGetAccountSubscriptionItem::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCGetAccountSubscriptionItemResponse::InitAsDefaultInstance() {
}
class CMsgGCGetAccountSubscriptionItemResponse::HasBitSetters {
 public:
  static void set_has_def_index(CMsgGCGetAccountSubscriptionItemResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCGetAccountSubscriptionItemResponse::kDefIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCGetAccountSubscriptionItemResponse::CMsgGCGetAccountSubscriptionItemResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
}
CMsgGCGetAccountSubscriptionItemResponse::CMsgGCGetAccountSubscriptionItemResponse(const CMsgGCGetAccountSubscriptionItemResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  def_index_ = from.def_index_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
}

void CMsgGCGetAccountSubscriptionItemResponse::SharedCtor() {
  def_index_ = 0u;
}

CMsgGCGetAccountSubscriptionItemResponse::~CMsgGCGetAccountSubscriptionItemResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
  SharedDtor();
}

void CMsgGCGetAccountSubscriptionItemResponse::SharedDtor() {
}

void CMsgGCGetAccountSubscriptionItemResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCGetAccountSubscriptionItemResponse& CMsgGCGetAccountSubscriptionItemResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCGetAccountSubscriptionItemResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCGetAccountSubscriptionItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  def_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCGetAccountSubscriptionItemResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCGetAccountSubscriptionItemResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 def_index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_def_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCGetAccountSubscriptionItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 def_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_def_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCGetAccountSubscriptionItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 def_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->def_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
}

::google::protobuf::uint8* CMsgGCGetAccountSubscriptionItemResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 def_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->def_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
  return target;
}

size_t CMsgGCGetAccountSubscriptionItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 def_index = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->def_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCGetAccountSubscriptionItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCGetAccountSubscriptionItemResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCGetAccountSubscriptionItemResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
    MergeFrom(*source);
  }
}

void CMsgGCGetAccountSubscriptionItemResponse::MergeFrom(const CMsgGCGetAccountSubscriptionItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_def_index()) {
    set_def_index(from.def_index());
  }
}

void CMsgGCGetAccountSubscriptionItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetAccountSubscriptionItemResponse::CopyFrom(const CMsgGCGetAccountSubscriptionItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCGetAccountSubscriptionItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetAccountSubscriptionItemResponse::IsInitialized() const {
  return true;
}

void CMsgGCGetAccountSubscriptionItemResponse::Swap(CMsgGCGetAccountSubscriptionItemResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetAccountSubscriptionItemResponse::InternalSwap(CMsgGCGetAccountSubscriptionItemResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(def_index_, other->def_index_);
}

::google::protobuf::Metadata CMsgGCGetAccountSubscriptionItemResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCAddGiftItem::InitAsDefaultInstance() {
}
class CMsgGCAddGiftItem::HasBitSetters {
 public:
  static void set_has_account_id(CMsgGCAddGiftItem* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_item_id(CMsgGCAddGiftItem* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCAddGiftItem::kAccountIdFieldNumber;
const int CMsgGCAddGiftItem::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCAddGiftItem::CMsgGCAddGiftItem()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCAddGiftItem)
}
CMsgGCAddGiftItem::CMsgGCAddGiftItem(const CMsgGCAddGiftItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&account_id_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(account_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCAddGiftItem)
}

void CMsgGCAddGiftItem::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&account_id_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(account_id_));
}

CMsgGCAddGiftItem::~CMsgGCAddGiftItem() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCAddGiftItem)
  SharedDtor();
}

void CMsgGCAddGiftItem::SharedDtor() {
}

void CMsgGCAddGiftItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCAddGiftItem& CMsgGCAddGiftItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCAddGiftItem_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCAddGiftItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCAddGiftItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&account_id_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCAddGiftItem::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCAddGiftItem*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCAddGiftItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCAddGiftItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCAddGiftItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCAddGiftItem)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCAddGiftItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCAddGiftItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCAddGiftItem)
}

::google::protobuf::uint8* CMsgGCAddGiftItem::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCAddGiftItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCAddGiftItem)
  return target;
}

size_t CMsgGCAddGiftItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCAddGiftItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 item_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCAddGiftItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCAddGiftItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCAddGiftItem* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCAddGiftItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCAddGiftItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCAddGiftItem)
    MergeFrom(*source);
  }
}

void CMsgGCAddGiftItem::MergeFrom(const CMsgGCAddGiftItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCAddGiftItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      account_id_ = from.account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCAddGiftItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCAddGiftItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCAddGiftItem::CopyFrom(const CMsgGCAddGiftItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCAddGiftItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCAddGiftItem::IsInitialized() const {
  return true;
}

void CMsgGCAddGiftItem::Swap(CMsgGCAddGiftItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCAddGiftItem::InternalSwap(CMsgGCAddGiftItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
  swap(account_id_, other->account_id_);
}

::google::protobuf::Metadata CMsgGCAddGiftItem::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCWrapAndDeliverGift::InitAsDefaultInstance() {
}
class CMsgClientToGCWrapAndDeliverGift::HasBitSetters {
 public:
  static void set_has_item_id(CMsgClientToGCWrapAndDeliverGift* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_give_to_account_id(CMsgClientToGCWrapAndDeliverGift* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_gift_message(CMsgClientToGCWrapAndDeliverGift* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCWrapAndDeliverGift::kItemIdFieldNumber;
const int CMsgClientToGCWrapAndDeliverGift::kGiveToAccountIdFieldNumber;
const int CMsgClientToGCWrapAndDeliverGift::kGiftMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCWrapAndDeliverGift::CMsgClientToGCWrapAndDeliverGift()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCWrapAndDeliverGift)
}
CMsgClientToGCWrapAndDeliverGift::CMsgClientToGCWrapAndDeliverGift(const CMsgClientToGCWrapAndDeliverGift& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gift_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gift_message()) {
    gift_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gift_message_);
  }
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&give_to_account_id_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(give_to_account_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCWrapAndDeliverGift)
}

void CMsgClientToGCWrapAndDeliverGift::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientToGCWrapAndDeliverGift_econ_5fgcmessages_2eproto.base);
  gift_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&give_to_account_id_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(give_to_account_id_));
}

CMsgClientToGCWrapAndDeliverGift::~CMsgClientToGCWrapAndDeliverGift() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  SharedDtor();
}

void CMsgClientToGCWrapAndDeliverGift::SharedDtor() {
  gift_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientToGCWrapAndDeliverGift::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCWrapAndDeliverGift& CMsgClientToGCWrapAndDeliverGift::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCWrapAndDeliverGift_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCWrapAndDeliverGift::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    gift_message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&give_to_account_id_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(give_to_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCWrapAndDeliverGift::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCWrapAndDeliverGift*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 give_to_account_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_give_to_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string gift_message = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgClientToGCWrapAndDeliverGift.gift_message");
        object = msg->mutable_gift_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCWrapAndDeliverGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 give_to_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_give_to_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &give_to_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gift_message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gift_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gift_message().data(), static_cast<int>(this->gift_message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgClientToGCWrapAndDeliverGift.gift_message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCWrapAndDeliverGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 give_to_account_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->give_to_account_id(), output);
  }

  // optional string gift_message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gift_message().data(), static_cast<int>(this->gift_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgClientToGCWrapAndDeliverGift.gift_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gift_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCWrapAndDeliverGift)
}

::google::protobuf::uint8* CMsgClientToGCWrapAndDeliverGift::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 give_to_account_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->give_to_account_id(), target);
  }

  // optional string gift_message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gift_message().data(), static_cast<int>(this->gift_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgClientToGCWrapAndDeliverGift.gift_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gift_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  return target;
}

size_t CMsgClientToGCWrapAndDeliverGift::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string gift_message = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gift_message());
    }

    // optional uint64 item_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 give_to_account_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->give_to_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCWrapAndDeliverGift::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCWrapAndDeliverGift* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCWrapAndDeliverGift>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCWrapAndDeliverGift)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCWrapAndDeliverGift)
    MergeFrom(*source);
  }
}

void CMsgClientToGCWrapAndDeliverGift::MergeFrom(const CMsgClientToGCWrapAndDeliverGift& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      gift_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gift_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      give_to_account_id_ = from.give_to_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCWrapAndDeliverGift::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCWrapAndDeliverGift::CopyFrom(const CMsgClientToGCWrapAndDeliverGift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCWrapAndDeliverGift::IsInitialized() const {
  return true;
}

void CMsgClientToGCWrapAndDeliverGift::Swap(CMsgClientToGCWrapAndDeliverGift* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCWrapAndDeliverGift::InternalSwap(CMsgClientToGCWrapAndDeliverGift* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  gift_message_.Swap(&other->gift_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(item_id_, other->item_id_);
  swap(give_to_account_id_, other->give_to_account_id_);
}

::google::protobuf::Metadata CMsgClientToGCWrapAndDeliverGift::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCWrapAndDeliverGiftResponse::InitAsDefaultInstance() {
}
class CMsgClientToGCWrapAndDeliverGiftResponse::HasBitSetters {
 public:
  static void set_has_response(CMsgClientToGCWrapAndDeliverGiftResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_gifting_charge_uses(CMsgClientToGCWrapAndDeliverGiftResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_gifting_charge_max(CMsgClientToGCWrapAndDeliverGiftResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_gifting_uses(CMsgClientToGCWrapAndDeliverGiftResponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_gifting_max(CMsgClientToGCWrapAndDeliverGiftResponse* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_gifting_window_hours(CMsgClientToGCWrapAndDeliverGiftResponse* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_trade_restriction(CMsgClientToGCWrapAndDeliverGiftResponse* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCWrapAndDeliverGiftResponse::kResponseFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingChargeUsesFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingChargeMaxFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingUsesFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingMaxFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingWindowHoursFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kTradeRestrictionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCWrapAndDeliverGiftResponse::CMsgClientToGCWrapAndDeliverGiftResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
}
CMsgClientToGCWrapAndDeliverGiftResponse::CMsgClientToGCWrapAndDeliverGiftResponse(const CMsgClientToGCWrapAndDeliverGiftResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&response_, &from.response_,
    static_cast<size_t>(reinterpret_cast<char*>(&trade_restriction_) -
    reinterpret_cast<char*>(&response_)) + sizeof(trade_restriction_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
}

void CMsgClientToGCWrapAndDeliverGiftResponse::SharedCtor() {
  ::memset(&response_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trade_restriction_) -
      reinterpret_cast<char*>(&response_)) + sizeof(trade_restriction_));
}

CMsgClientToGCWrapAndDeliverGiftResponse::~CMsgClientToGCWrapAndDeliverGiftResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  SharedDtor();
}

void CMsgClientToGCWrapAndDeliverGiftResponse::SharedDtor() {
}

void CMsgClientToGCWrapAndDeliverGiftResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCWrapAndDeliverGiftResponse& CMsgClientToGCWrapAndDeliverGiftResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCWrapAndDeliverGiftResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCWrapAndDeliverGiftResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&response_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&trade_restriction_) -
        reinterpret_cast<char*>(&response_)) + sizeof(trade_restriction_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCWrapAndDeliverGiftResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCWrapAndDeliverGiftResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::EGCMsgResponse_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_response(static_cast<::proto::dota::EGCMsgResponse>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 gifting_charge_uses = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_gifting_charge_uses(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 gifting_charge_max = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_gifting_charge_max(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 gifting_uses = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_gifting_uses(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 gifting_max = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_gifting_max(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 gifting_window_hours = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_gifting_window_hours(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .proto.dota.EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::EGCMsgInitiateTradeResponse_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(7, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_trade_restriction(static_cast<::proto::dota::EGCMsgInitiateTradeResponse>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCWrapAndDeliverGiftResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::EGCMsgResponse_IsValid(value)) {
            set_response(static_cast< ::proto::dota::EGCMsgResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gifting_charge_uses = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_gifting_charge_uses(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gifting_charge_uses_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gifting_charge_max = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_gifting_charge_max(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gifting_charge_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gifting_uses = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_gifting_uses(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gifting_uses_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gifting_max = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_gifting_max(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gifting_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gifting_window_hours = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_gifting_window_hours(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gifting_window_hours_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::EGCMsgInitiateTradeResponse_IsValid(value)) {
            set_trade_restriction(static_cast< ::proto::dota::EGCMsgInitiateTradeResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCWrapAndDeliverGiftResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // optional uint32 gifting_charge_uses = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gifting_charge_uses(), output);
  }

  // optional int32 gifting_charge_max = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gifting_charge_max(), output);
  }

  // optional uint32 gifting_uses = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gifting_uses(), output);
  }

  // optional int32 gifting_max = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gifting_max(), output);
  }

  // optional uint32 gifting_window_hours = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->gifting_window_hours(), output);
  }

  // optional .proto.dota.EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->trade_restriction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
}

::google::protobuf::uint8* CMsgClientToGCWrapAndDeliverGiftResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // optional uint32 gifting_charge_uses = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gifting_charge_uses(), target);
  }

  // optional int32 gifting_charge_max = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gifting_charge_max(), target);
  }

  // optional uint32 gifting_uses = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->gifting_uses(), target);
  }

  // optional int32 gifting_max = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gifting_max(), target);
  }

  // optional uint32 gifting_window_hours = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->gifting_window_hours(), target);
  }

  // optional .proto.dota.EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->trade_restriction(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  return target;
}

size_t CMsgClientToGCWrapAndDeliverGiftResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .proto.dota.EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

    // optional uint32 gifting_charge_uses = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gifting_charge_uses());
    }

    // optional int32 gifting_charge_max = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gifting_charge_max());
    }

    // optional uint32 gifting_uses = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gifting_uses());
    }

    // optional int32 gifting_max = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gifting_max());
    }

    // optional uint32 gifting_window_hours = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gifting_window_hours());
    }

    // optional .proto.dota.EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->trade_restriction());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCWrapAndDeliverGiftResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCWrapAndDeliverGiftResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCWrapAndDeliverGiftResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCWrapAndDeliverGiftResponse::MergeFrom(const CMsgClientToGCWrapAndDeliverGiftResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      response_ = from.response_;
    }
    if (cached_has_bits & 0x00000002u) {
      gifting_charge_uses_ = from.gifting_charge_uses_;
    }
    if (cached_has_bits & 0x00000004u) {
      gifting_charge_max_ = from.gifting_charge_max_;
    }
    if (cached_has_bits & 0x00000008u) {
      gifting_uses_ = from.gifting_uses_;
    }
    if (cached_has_bits & 0x00000010u) {
      gifting_max_ = from.gifting_max_;
    }
    if (cached_has_bits & 0x00000020u) {
      gifting_window_hours_ = from.gifting_window_hours_;
    }
    if (cached_has_bits & 0x00000040u) {
      trade_restriction_ = from.trade_restriction_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCWrapAndDeliverGiftResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCWrapAndDeliverGiftResponse::CopyFrom(const CMsgClientToGCWrapAndDeliverGiftResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCWrapAndDeliverGiftResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCWrapAndDeliverGiftResponse::Swap(CMsgClientToGCWrapAndDeliverGiftResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCWrapAndDeliverGiftResponse::InternalSwap(CMsgClientToGCWrapAndDeliverGiftResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(response_, other->response_);
  swap(gifting_charge_uses_, other->gifting_charge_uses_);
  swap(gifting_charge_max_, other->gifting_charge_max_);
  swap(gifting_uses_, other->gifting_uses_);
  swap(gifting_max_, other->gifting_max_);
  swap(gifting_window_hours_, other->gifting_window_hours_);
  swap(trade_restriction_, other->trade_restriction_);
}

::google::protobuf::Metadata CMsgClientToGCWrapAndDeliverGiftResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCUnwrapGift::InitAsDefaultInstance() {
}
class CMsgClientToGCUnwrapGift::HasBitSetters {
 public:
  static void set_has_item_id(CMsgClientToGCUnwrapGift* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnwrapGift::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnwrapGift::CMsgClientToGCUnwrapGift()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnwrapGift)
}
CMsgClientToGCUnwrapGift::CMsgClientToGCUnwrapGift(const CMsgClientToGCUnwrapGift& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_id_ = from.item_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnwrapGift)
}

void CMsgClientToGCUnwrapGift::SharedCtor() {
  item_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgClientToGCUnwrapGift::~CMsgClientToGCUnwrapGift() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnwrapGift)
  SharedDtor();
}

void CMsgClientToGCUnwrapGift::SharedDtor() {
}

void CMsgClientToGCUnwrapGift::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCUnwrapGift& CMsgClientToGCUnwrapGift::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCUnwrapGift_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCUnwrapGift::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnwrapGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCUnwrapGift::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCUnwrapGift*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCUnwrapGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnwrapGift)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnwrapGift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnwrapGift)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCUnwrapGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnwrapGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnwrapGift)
}

::google::protobuf::uint8* CMsgClientToGCUnwrapGift::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnwrapGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnwrapGift)
  return target;
}

size_t CMsgClientToGCUnwrapGift::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnwrapGift)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 item_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCUnwrapGift::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnwrapGift)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnwrapGift* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCUnwrapGift>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnwrapGift)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnwrapGift)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnwrapGift::MergeFrom(const CMsgClientToGCUnwrapGift& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnwrapGift)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item_id()) {
    set_item_id(from.item_id());
  }
}

void CMsgClientToGCUnwrapGift::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnwrapGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnwrapGift::CopyFrom(const CMsgClientToGCUnwrapGift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnwrapGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnwrapGift::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnwrapGift::Swap(CMsgClientToGCUnwrapGift* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnwrapGift::InternalSwap(CMsgClientToGCUnwrapGift* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
}

::google::protobuf::Metadata CMsgClientToGCUnwrapGift::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCGetGiftPermissions::InitAsDefaultInstance() {
}
class CMsgClientToGCGetGiftPermissions::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCGetGiftPermissions::CMsgClientToGCGetGiftPermissions()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCGetGiftPermissions)
}
CMsgClientToGCGetGiftPermissions::CMsgClientToGCGetGiftPermissions(const CMsgClientToGCGetGiftPermissions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCGetGiftPermissions)
}

void CMsgClientToGCGetGiftPermissions::SharedCtor() {
}

CMsgClientToGCGetGiftPermissions::~CMsgClientToGCGetGiftPermissions() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCGetGiftPermissions)
  SharedDtor();
}

void CMsgClientToGCGetGiftPermissions::SharedDtor() {
}

void CMsgClientToGCGetGiftPermissions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCGetGiftPermissions& CMsgClientToGCGetGiftPermissions::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCGetGiftPermissions_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCGetGiftPermissions::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCGetGiftPermissions::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCGetGiftPermissions*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCGetGiftPermissions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCGetGiftPermissions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCGetGiftPermissions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCGetGiftPermissions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCGetGiftPermissions)
}

::google::protobuf::uint8* CMsgClientToGCGetGiftPermissions::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCGetGiftPermissions)
  return target;
}

size_t CMsgClientToGCGetGiftPermissions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCGetGiftPermissions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCGetGiftPermissions* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCGetGiftPermissions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCGetGiftPermissions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCGetGiftPermissions)
    MergeFrom(*source);
  }
}

void CMsgClientToGCGetGiftPermissions::MergeFrom(const CMsgClientToGCGetGiftPermissions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientToGCGetGiftPermissions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGetGiftPermissions::CopyFrom(const CMsgClientToGCGetGiftPermissions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetGiftPermissions::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetGiftPermissions::Swap(CMsgClientToGCGetGiftPermissions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCGetGiftPermissions::InternalSwap(CMsgClientToGCGetGiftPermissions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CMsgClientToGCGetGiftPermissions::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::InitAsDefaultInstance() {
}
class CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::HasBitSetters {
 public:
  static void set_has_account_id(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_permission(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::kAccountIdFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::kPermissionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
}
CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission(const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&permission_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(permission_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::SharedCtor() {
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&permission_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(permission_));
}

CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::~CMsgClientToGCGetGiftPermissionsResponse_FriendPermission() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  SharedDtor();
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::SharedDtor() {
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&permission_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(permission_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCGetGiftPermissionsResponse_FriendPermission*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .proto.dota.EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::EGCMsgInitiateTradeResponse_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_permission(static_cast<::proto::dota::EGCMsgInitiateTradeResponse>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::EGCMsgInitiateTradeResponse_IsValid(value)) {
            set_permission(static_cast< ::proto::dota::EGCMsgInitiateTradeResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional .proto.dota.EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->permission(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
}

::google::protobuf::uint8* CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional .proto.dota.EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->permission(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  return target;
}

size_t CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional .proto.dota.EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->permission());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCGetGiftPermissionsResponse_FriendPermission>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
    MergeFrom(*source);
  }
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::MergeFrom(const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      permission_ = from.permission_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::CopyFrom(const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::Swap(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::InternalSwap(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(account_id_, other->account_id_);
  swap(permission_, other->permission_);
}

::google::protobuf::Metadata CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCGetGiftPermissionsResponse::InitAsDefaultInstance() {
}
class CMsgClientToGCGetGiftPermissionsResponse::HasBitSetters {
 public:
  static void set_has_is_unlimited(CMsgClientToGCGetGiftPermissionsResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_has_two_factor(CMsgClientToGCGetGiftPermissionsResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_sender_permission(CMsgClientToGCGetGiftPermissionsResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_friendship_age_requirement(CMsgClientToGCGetGiftPermissionsResponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_friendship_age_requirement_two_factor(CMsgClientToGCGetGiftPermissionsResponse* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCGetGiftPermissionsResponse::kIsUnlimitedFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse::kHasTwoFactorFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse::kSenderPermissionFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse::kFriendshipAgeRequirementFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse::kFriendshipAgeRequirementTwoFactorFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse::kFriendPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCGetGiftPermissionsResponse::CMsgClientToGCGetGiftPermissionsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
}
CMsgClientToGCGetGiftPermissionsResponse::CMsgClientToGCGetGiftPermissionsResponse(const CMsgClientToGCGetGiftPermissionsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      friend_permissions_(from.friend_permissions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_unlimited_, &from.is_unlimited_,
    static_cast<size_t>(reinterpret_cast<char*>(&friendship_age_requirement_two_factor_) -
    reinterpret_cast<char*>(&is_unlimited_)) + sizeof(friendship_age_requirement_two_factor_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
}

void CMsgClientToGCGetGiftPermissionsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientToGCGetGiftPermissionsResponse_econ_5fgcmessages_2eproto.base);
  ::memset(&is_unlimited_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friendship_age_requirement_two_factor_) -
      reinterpret_cast<char*>(&is_unlimited_)) + sizeof(friendship_age_requirement_two_factor_));
}

CMsgClientToGCGetGiftPermissionsResponse::~CMsgClientToGCGetGiftPermissionsResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  SharedDtor();
}

void CMsgClientToGCGetGiftPermissionsResponse::SharedDtor() {
}

void CMsgClientToGCGetGiftPermissionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCGetGiftPermissionsResponse& CMsgClientToGCGetGiftPermissionsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCGetGiftPermissionsResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCGetGiftPermissionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_permissions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&is_unlimited_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&friendship_age_requirement_two_factor_) -
        reinterpret_cast<char*>(&is_unlimited_)) + sizeof(friendship_age_requirement_two_factor_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCGetGiftPermissionsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCGetGiftPermissionsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool is_unlimited = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_is_unlimited(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool has_two_factor = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_has_two_factor(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .proto.dota.EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::EGCMsgInitiateTradeResponse_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(6, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_sender_permission(static_cast<::proto::dota::EGCMsgInitiateTradeResponse>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 friendship_age_requirement = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_friendship_age_requirement(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 friendship_age_requirement_two_factor = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_friendship_age_requirement_two_factor(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::_InternalParse;
          object = msg->add_friend_permissions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 74 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCGetGiftPermissionsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_unlimited = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_is_unlimited(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_unlimited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_two_factor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_has_two_factor(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_two_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::EGCMsgInitiateTradeResponse_IsValid(value)) {
            set_sender_permission(static_cast< ::proto::dota::EGCMsgInitiateTradeResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 friendship_age_requirement = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_friendship_age_requirement(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendship_age_requirement_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 friendship_age_requirement_two_factor = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_friendship_age_requirement_two_factor(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendship_age_requirement_two_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_friend_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCGetGiftPermissionsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_unlimited = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_unlimited(), output);
  }

  // optional bool has_two_factor = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->has_two_factor(), output);
  }

  // optional .proto.dota.EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->sender_permission(), output);
  }

  // optional uint32 friendship_age_requirement = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->friendship_age_requirement(), output);
  }

  // optional uint32 friendship_age_requirement_two_factor = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->friendship_age_requirement_two_factor(), output);
  }

  // repeated .proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_permissions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->friend_permissions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
}

::google::protobuf::uint8* CMsgClientToGCGetGiftPermissionsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_unlimited = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_unlimited(), target);
  }

  // optional bool has_two_factor = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->has_two_factor(), target);
  }

  // optional .proto.dota.EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->sender_permission(), target);
  }

  // optional uint32 friendship_age_requirement = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->friendship_age_requirement(), target);
  }

  // optional uint32 friendship_age_requirement_two_factor = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->friendship_age_requirement_two_factor(), target);
  }

  // repeated .proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_permissions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->friend_permissions(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  return target;
}

size_t CMsgClientToGCGetGiftPermissionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->friend_permissions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->friend_permissions(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional bool is_unlimited = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool has_two_factor = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional .proto.dota.EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->sender_permission());
    }

    // optional uint32 friendship_age_requirement = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->friendship_age_requirement());
    }

    // optional uint32 friendship_age_requirement_two_factor = 8;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->friendship_age_requirement_two_factor());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCGetGiftPermissionsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCGetGiftPermissionsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCGetGiftPermissionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCGetGiftPermissionsResponse::MergeFrom(const CMsgClientToGCGetGiftPermissionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_permissions_.MergeFrom(from.friend_permissions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      is_unlimited_ = from.is_unlimited_;
    }
    if (cached_has_bits & 0x00000002u) {
      has_two_factor_ = from.has_two_factor_;
    }
    if (cached_has_bits & 0x00000004u) {
      sender_permission_ = from.sender_permission_;
    }
    if (cached_has_bits & 0x00000008u) {
      friendship_age_requirement_ = from.friendship_age_requirement_;
    }
    if (cached_has_bits & 0x00000010u) {
      friendship_age_requirement_two_factor_ = from.friendship_age_requirement_two_factor_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCGetGiftPermissionsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGetGiftPermissionsResponse::CopyFrom(const CMsgClientToGCGetGiftPermissionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetGiftPermissionsResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetGiftPermissionsResponse::Swap(CMsgClientToGCGetGiftPermissionsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCGetGiftPermissionsResponse::InternalSwap(CMsgClientToGCGetGiftPermissionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&friend_permissions_)->InternalSwap(CastToBase(&other->friend_permissions_));
  swap(is_unlimited_, other->is_unlimited_);
  swap(has_two_factor_, other->has_two_factor_);
  swap(sender_permission_, other->sender_permission_);
  swap(friendship_age_requirement_, other->friendship_age_requirement_);
  swap(friendship_age_requirement_two_factor_, other->friendship_age_requirement_two_factor_);
}

::google::protobuf::Metadata CMsgClientToGCGetGiftPermissionsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCUnpackBundle::InitAsDefaultInstance() {
}
class CMsgClientToGCUnpackBundle::HasBitSetters {
 public:
  static void set_has_item_id(CMsgClientToGCUnpackBundle* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnpackBundle::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnpackBundle::CMsgClientToGCUnpackBundle()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnpackBundle)
}
CMsgClientToGCUnpackBundle::CMsgClientToGCUnpackBundle(const CMsgClientToGCUnpackBundle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_id_ = from.item_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnpackBundle)
}

void CMsgClientToGCUnpackBundle::SharedCtor() {
  item_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgClientToGCUnpackBundle::~CMsgClientToGCUnpackBundle() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnpackBundle)
  SharedDtor();
}

void CMsgClientToGCUnpackBundle::SharedDtor() {
}

void CMsgClientToGCUnpackBundle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCUnpackBundle& CMsgClientToGCUnpackBundle::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCUnpackBundle_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCUnpackBundle::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnpackBundle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCUnpackBundle::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCUnpackBundle*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCUnpackBundle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnpackBundle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnpackBundle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnpackBundle)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCUnpackBundle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnpackBundle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnpackBundle)
}

::google::protobuf::uint8* CMsgClientToGCUnpackBundle::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnpackBundle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnpackBundle)
  return target;
}

size_t CMsgClientToGCUnpackBundle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnpackBundle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 item_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCUnpackBundle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnpackBundle)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnpackBundle* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCUnpackBundle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnpackBundle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnpackBundle)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnpackBundle::MergeFrom(const CMsgClientToGCUnpackBundle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnpackBundle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item_id()) {
    set_item_id(from.item_id());
  }
}

void CMsgClientToGCUnpackBundle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnpackBundle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnpackBundle::CopyFrom(const CMsgClientToGCUnpackBundle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnpackBundle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnpackBundle::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnpackBundle::Swap(CMsgClientToGCUnpackBundle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnpackBundle::InternalSwap(CMsgClientToGCUnpackBundle* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
}

::google::protobuf::Metadata CMsgClientToGCUnpackBundle::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCUnpackBundleResponse::InitAsDefaultInstance() {
}
class CMsgClientToGCUnpackBundleResponse::HasBitSetters {
 public:
  static void set_has_response(CMsgClientToGCUnpackBundleResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnpackBundleResponse::kUnpackedItemIdsFieldNumber;
const int CMsgClientToGCUnpackBundleResponse::kResponseFieldNumber;
const int CMsgClientToGCUnpackBundleResponse::kUnpackedItemDefIndexesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnpackBundleResponse::CMsgClientToGCUnpackBundleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnpackBundleResponse)
}
CMsgClientToGCUnpackBundleResponse::CMsgClientToGCUnpackBundleResponse(const CMsgClientToGCUnpackBundleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      unpacked_item_ids_(from.unpacked_item_ids_),
      unpacked_item_def_indexes_(from.unpacked_item_def_indexes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_ = from.response_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnpackBundleResponse)
}

void CMsgClientToGCUnpackBundleResponse::SharedCtor() {
  response_ = 0;
}

CMsgClientToGCUnpackBundleResponse::~CMsgClientToGCUnpackBundleResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnpackBundleResponse)
  SharedDtor();
}

void CMsgClientToGCUnpackBundleResponse::SharedDtor() {
}

void CMsgClientToGCUnpackBundleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCUnpackBundleResponse& CMsgClientToGCUnpackBundleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCUnpackBundleResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCUnpackBundleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unpacked_item_ids_.Clear();
  unpacked_item_def_indexes_.Clear();
  response_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCUnpackBundleResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCUnpackBundleResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint64 unpacked_item_ids = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_unpacked_item_ids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
        object = msg->mutable_unpacked_item_ids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional .proto.dota.CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::CMsgClientToGCUnpackBundleResponse_EUnpackBundle_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_response(static_cast<::proto::dota::CMsgClientToGCUnpackBundleResponse_EUnpackBundle>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 unpacked_item_def_indexes = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 24) {
          do {
            msg->add_unpacked_item_def_indexes(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_unpacked_item_def_indexes();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCUnpackBundleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 unpacked_item_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_unpacked_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_unpacked_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgClientToGCUnpackBundleResponse_EUnpackBundle_IsValid(value)) {
            set_response(static_cast< ::proto::dota::CMsgClientToGCUnpackBundleResponse_EUnpackBundle >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unpacked_item_def_indexes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_unpacked_item_def_indexes())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unpacked_item_def_indexes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnpackBundleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnpackBundleResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCUnpackBundleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 unpacked_item_ids = 1;
  for (int i = 0, n = this->unpacked_item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->unpacked_item_ids(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->response(), output);
  }

  // repeated uint32 unpacked_item_def_indexes = 3;
  for (int i = 0, n = this->unpacked_item_def_indexes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->unpacked_item_def_indexes(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnpackBundleResponse)
}

::google::protobuf::uint8* CMsgClientToGCUnpackBundleResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 unpacked_item_ids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->unpacked_item_ids_, target);

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->response(), target);
  }

  // repeated uint32 unpacked_item_def_indexes = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->unpacked_item_def_indexes_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnpackBundleResponse)
  return target;
}

size_t CMsgClientToGCUnpackBundleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 unpacked_item_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->unpacked_item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_item_ids_size());
    total_size += data_size;
  }

  // repeated uint32 unpacked_item_def_indexes = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unpacked_item_def_indexes_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_item_def_indexes_size());
    total_size += data_size;
  }

  // optional .proto.dota.CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCUnpackBundleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnpackBundleResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCUnpackBundleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnpackBundleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnpackBundleResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnpackBundleResponse::MergeFrom(const CMsgClientToGCUnpackBundleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unpacked_item_ids_.MergeFrom(from.unpacked_item_ids_);
  unpacked_item_def_indexes_.MergeFrom(from.unpacked_item_def_indexes_);
  if (from.has_response()) {
    set_response(from.response());
  }
}

void CMsgClientToGCUnpackBundleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnpackBundleResponse::CopyFrom(const CMsgClientToGCUnpackBundleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnpackBundleResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnpackBundleResponse::Swap(CMsgClientToGCUnpackBundleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnpackBundleResponse::InternalSwap(CMsgClientToGCUnpackBundleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  unpacked_item_ids_.InternalSwap(&other->unpacked_item_ids_);
  unpacked_item_def_indexes_.InternalSwap(&other->unpacked_item_def_indexes_);
  swap(response_, other->response_);
}

::google::protobuf::Metadata CMsgClientToGCUnpackBundleResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToClientStoreTransactionCompleted::InitAsDefaultInstance() {
}
class CMsgGCToClientStoreTransactionCompleted::HasBitSetters {
 public:
  static void set_has_txn_id(CMsgGCToClientStoreTransactionCompleted* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToClientStoreTransactionCompleted::kTxnIdFieldNumber;
const int CMsgGCToClientStoreTransactionCompleted::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToClientStoreTransactionCompleted::CMsgGCToClientStoreTransactionCompleted()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToClientStoreTransactionCompleted)
}
CMsgGCToClientStoreTransactionCompleted::CMsgGCToClientStoreTransactionCompleted(const CMsgGCToClientStoreTransactionCompleted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txn_id_ = from.txn_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToClientStoreTransactionCompleted)
}

void CMsgGCToClientStoreTransactionCompleted::SharedCtor() {
  txn_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgGCToClientStoreTransactionCompleted::~CMsgGCToClientStoreTransactionCompleted() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  SharedDtor();
}

void CMsgGCToClientStoreTransactionCompleted::SharedDtor() {
}

void CMsgGCToClientStoreTransactionCompleted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToClientStoreTransactionCompleted& CMsgGCToClientStoreTransactionCompleted::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToClientStoreTransactionCompleted_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToClientStoreTransactionCompleted::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_ids_.Clear();
  txn_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToClientStoreTransactionCompleted::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToClientStoreTransactionCompleted*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 txn_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_txn_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint64 item_ids = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_item_ids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
        object = msg->mutable_item_ids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToClientStoreTransactionCompleted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 txn_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_txn_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 item_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToClientStoreTransactionCompleted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 txn_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txn_id(), output);
  }

  // repeated uint64 item_ids = 2;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToClientStoreTransactionCompleted)
}

::google::protobuf::uint8* CMsgGCToClientStoreTransactionCompleted::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 txn_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txn_id(), target);
  }

  // repeated uint64 item_ids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  return target;
}

size_t CMsgGCToClientStoreTransactionCompleted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 item_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  // optional uint64 txn_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->txn_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToClientStoreTransactionCompleted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToClientStoreTransactionCompleted* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToClientStoreTransactionCompleted>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToClientStoreTransactionCompleted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToClientStoreTransactionCompleted)
    MergeFrom(*source);
  }
}

void CMsgGCToClientStoreTransactionCompleted::MergeFrom(const CMsgGCToClientStoreTransactionCompleted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
  if (from.has_txn_id()) {
    set_txn_id(from.txn_id());
  }
}

void CMsgGCToClientStoreTransactionCompleted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToClientStoreTransactionCompleted::CopyFrom(const CMsgGCToClientStoreTransactionCompleted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientStoreTransactionCompleted::IsInitialized() const {
  return true;
}

void CMsgGCToClientStoreTransactionCompleted::Swap(CMsgGCToClientStoreTransactionCompleted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToClientStoreTransactionCompleted::InternalSwap(CMsgGCToClientStoreTransactionCompleted* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  item_ids_.InternalSwap(&other->item_ids_);
  swap(txn_id_, other->txn_id_);
}

::google::protobuf::Metadata CMsgGCToClientStoreTransactionCompleted::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCEquipItems::InitAsDefaultInstance() {
}
class CMsgClientToGCEquipItems::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCEquipItems::kEquipsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCEquipItems::CMsgClientToGCEquipItems()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCEquipItems)
}
CMsgClientToGCEquipItems::CMsgClientToGCEquipItems(const CMsgClientToGCEquipItems& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      equips_(from.equips_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCEquipItems)
}

void CMsgClientToGCEquipItems::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientToGCEquipItems_econ_5fgcmessages_2eproto.base);
}

CMsgClientToGCEquipItems::~CMsgClientToGCEquipItems() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCEquipItems)
  SharedDtor();
}

void CMsgClientToGCEquipItems::SharedDtor() {
}

void CMsgClientToGCEquipItems::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCEquipItems& CMsgClientToGCEquipItems::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCEquipItems_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCEquipItems::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCEquipItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  equips_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCEquipItems::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCEquipItems*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.dota.CMsgAdjustItemEquippedState equips = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgAdjustItemEquippedState::_InternalParse;
          object = msg->add_equips();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCEquipItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCEquipItems)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CMsgAdjustItemEquippedState equips = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_equips()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCEquipItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCEquipItems)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCEquipItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCEquipItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgAdjustItemEquippedState equips = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->equips_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->equips(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCEquipItems)
}

::google::protobuf::uint8* CMsgClientToGCEquipItems::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCEquipItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgAdjustItemEquippedState equips = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->equips_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->equips(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCEquipItems)
  return target;
}

size_t CMsgClientToGCEquipItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCEquipItems)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgAdjustItemEquippedState equips = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->equips_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->equips(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCEquipItems::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCEquipItems)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCEquipItems* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCEquipItems>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCEquipItems)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCEquipItems)
    MergeFrom(*source);
  }
}

void CMsgClientToGCEquipItems::MergeFrom(const CMsgClientToGCEquipItems& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCEquipItems)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  equips_.MergeFrom(from.equips_);
}

void CMsgClientToGCEquipItems::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCEquipItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCEquipItems::CopyFrom(const CMsgClientToGCEquipItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCEquipItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCEquipItems::IsInitialized() const {
  return true;
}

void CMsgClientToGCEquipItems::Swap(CMsgClientToGCEquipItems* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCEquipItems::InternalSwap(CMsgClientToGCEquipItems* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&equips_)->InternalSwap(CastToBase(&other->equips_));
}

::google::protobuf::Metadata CMsgClientToGCEquipItems::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCEquipItemsResponse::InitAsDefaultInstance() {
}
class CMsgClientToGCEquipItemsResponse::HasBitSetters {
 public:
  static void set_has_so_cache_version_id(CMsgClientToGCEquipItemsResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCEquipItemsResponse::kSoCacheVersionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCEquipItemsResponse::CMsgClientToGCEquipItemsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCEquipItemsResponse)
}
CMsgClientToGCEquipItemsResponse::CMsgClientToGCEquipItemsResponse(const CMsgClientToGCEquipItemsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  so_cache_version_id_ = from.so_cache_version_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCEquipItemsResponse)
}

void CMsgClientToGCEquipItemsResponse::SharedCtor() {
  so_cache_version_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgClientToGCEquipItemsResponse::~CMsgClientToGCEquipItemsResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCEquipItemsResponse)
  SharedDtor();
}

void CMsgClientToGCEquipItemsResponse::SharedDtor() {
}

void CMsgClientToGCEquipItemsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCEquipItemsResponse& CMsgClientToGCEquipItemsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCEquipItemsResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCEquipItemsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  so_cache_version_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCEquipItemsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCEquipItemsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 so_cache_version_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_so_cache_version_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCEquipItemsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 so_cache_version_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_so_cache_version_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &so_cache_version_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCEquipItemsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCEquipItemsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCEquipItemsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 so_cache_version_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->so_cache_version_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCEquipItemsResponse)
}

::google::protobuf::uint8* CMsgClientToGCEquipItemsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 so_cache_version_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->so_cache_version_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCEquipItemsResponse)
  return target;
}

size_t CMsgClientToGCEquipItemsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 so_cache_version_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCEquipItemsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCEquipItemsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCEquipItemsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCEquipItemsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCEquipItemsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCEquipItemsResponse::MergeFrom(const CMsgClientToGCEquipItemsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_so_cache_version_id()) {
    set_so_cache_version_id(from.so_cache_version_id());
  }
}

void CMsgClientToGCEquipItemsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCEquipItemsResponse::CopyFrom(const CMsgClientToGCEquipItemsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCEquipItemsResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCEquipItemsResponse::Swap(CMsgClientToGCEquipItemsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCEquipItemsResponse::InternalSwap(CMsgClientToGCEquipItemsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(so_cache_version_id_, other->so_cache_version_id_);
}

::google::protobuf::Metadata CMsgClientToGCEquipItemsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCSetItemStyle::InitAsDefaultInstance() {
}
class CMsgClientToGCSetItemStyle::HasBitSetters {
 public:
  static void set_has_item_id(CMsgClientToGCSetItemStyle* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_style_index(CMsgClientToGCSetItemStyle* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCSetItemStyle::kItemIdFieldNumber;
const int CMsgClientToGCSetItemStyle::kStyleIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCSetItemStyle::CMsgClientToGCSetItemStyle()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCSetItemStyle)
}
CMsgClientToGCSetItemStyle::CMsgClientToGCSetItemStyle(const CMsgClientToGCSetItemStyle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&style_index_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(style_index_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCSetItemStyle)
}

void CMsgClientToGCSetItemStyle::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&style_index_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(style_index_));
}

CMsgClientToGCSetItemStyle::~CMsgClientToGCSetItemStyle() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCSetItemStyle)
  SharedDtor();
}

void CMsgClientToGCSetItemStyle::SharedDtor() {
}

void CMsgClientToGCSetItemStyle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCSetItemStyle& CMsgClientToGCSetItemStyle::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCSetItemStyle_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCSetItemStyle::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCSetItemStyle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&style_index_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(style_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCSetItemStyle::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCSetItemStyle*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 style_index = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_style_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCSetItemStyle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCSetItemStyle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 style_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_style_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCSetItemStyle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCSetItemStyle)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCSetItemStyle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCSetItemStyle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 style_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->style_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCSetItemStyle)
}

::google::protobuf::uint8* CMsgClientToGCSetItemStyle::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCSetItemStyle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 style_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->style_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCSetItemStyle)
  return target;
}

size_t CMsgClientToGCSetItemStyle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCSetItemStyle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 item_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 style_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCSetItemStyle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCSetItemStyle)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSetItemStyle* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCSetItemStyle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCSetItemStyle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCSetItemStyle)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetItemStyle::MergeFrom(const CMsgClientToGCSetItemStyle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCSetItemStyle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      style_index_ = from.style_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCSetItemStyle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCSetItemStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetItemStyle::CopyFrom(const CMsgClientToGCSetItemStyle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCSetItemStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetItemStyle::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetItemStyle::Swap(CMsgClientToGCSetItemStyle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCSetItemStyle::InternalSwap(CMsgClientToGCSetItemStyle* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
  swap(style_index_, other->style_index_);
}

::google::protobuf::Metadata CMsgClientToGCSetItemStyle::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCSetItemStyleResponse::InitAsDefaultInstance() {
}
class CMsgClientToGCSetItemStyleResponse::HasBitSetters {
 public:
  static void set_has_response(CMsgClientToGCSetItemStyleResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCSetItemStyleResponse::kResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCSetItemStyleResponse::CMsgClientToGCSetItemStyleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCSetItemStyleResponse)
}
CMsgClientToGCSetItemStyleResponse::CMsgClientToGCSetItemStyleResponse(const CMsgClientToGCSetItemStyleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_ = from.response_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCSetItemStyleResponse)
}

void CMsgClientToGCSetItemStyleResponse::SharedCtor() {
  response_ = 0;
}

CMsgClientToGCSetItemStyleResponse::~CMsgClientToGCSetItemStyleResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCSetItemStyleResponse)
  SharedDtor();
}

void CMsgClientToGCSetItemStyleResponse::SharedDtor() {
}

void CMsgClientToGCSetItemStyleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCSetItemStyleResponse& CMsgClientToGCSetItemStyleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCSetItemStyleResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCSetItemStyleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  response_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCSetItemStyleResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCSetItemStyleResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::CMsgClientToGCSetItemStyleResponse_ESetStyle_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_response(static_cast<::proto::dota::CMsgClientToGCSetItemStyleResponse_ESetStyle>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCSetItemStyleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgClientToGCSetItemStyleResponse_ESetStyle_IsValid(value)) {
            set_response(static_cast< ::proto::dota::CMsgClientToGCSetItemStyleResponse_ESetStyle >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCSetItemStyleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCSetItemStyleResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCSetItemStyleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCSetItemStyleResponse)
}

::google::protobuf::uint8* CMsgClientToGCSetItemStyleResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCSetItemStyleResponse)
  return target;
}

size_t CMsgClientToGCSetItemStyleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.dota.CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCSetItemStyleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSetItemStyleResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCSetItemStyleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCSetItemStyleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCSetItemStyleResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetItemStyleResponse::MergeFrom(const CMsgClientToGCSetItemStyleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_response()) {
    set_response(from.response());
  }
}

void CMsgClientToGCSetItemStyleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetItemStyleResponse::CopyFrom(const CMsgClientToGCSetItemStyleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetItemStyleResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetItemStyleResponse::Swap(CMsgClientToGCSetItemStyleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCSetItemStyleResponse::InternalSwap(CMsgClientToGCSetItemStyleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(response_, other->response_);
}

::google::protobuf::Metadata CMsgClientToGCSetItemStyleResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCUnlockItemStyle::InitAsDefaultInstance() {
}
class CMsgClientToGCUnlockItemStyle::HasBitSetters {
 public:
  static void set_has_item_to_unlock(CMsgClientToGCUnlockItemStyle* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_style_index(CMsgClientToGCUnlockItemStyle* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnlockItemStyle::kItemToUnlockFieldNumber;
const int CMsgClientToGCUnlockItemStyle::kStyleIndexFieldNumber;
const int CMsgClientToGCUnlockItemStyle::kConsumableItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnlockItemStyle::CMsgClientToGCUnlockItemStyle()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnlockItemStyle)
}
CMsgClientToGCUnlockItemStyle::CMsgClientToGCUnlockItemStyle(const CMsgClientToGCUnlockItemStyle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      consumable_item_ids_(from.consumable_item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_to_unlock_, &from.item_to_unlock_,
    static_cast<size_t>(reinterpret_cast<char*>(&style_index_) -
    reinterpret_cast<char*>(&item_to_unlock_)) + sizeof(style_index_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnlockItemStyle)
}

void CMsgClientToGCUnlockItemStyle::SharedCtor() {
  ::memset(&item_to_unlock_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&style_index_) -
      reinterpret_cast<char*>(&item_to_unlock_)) + sizeof(style_index_));
}

CMsgClientToGCUnlockItemStyle::~CMsgClientToGCUnlockItemStyle() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnlockItemStyle)
  SharedDtor();
}

void CMsgClientToGCUnlockItemStyle::SharedDtor() {
}

void CMsgClientToGCUnlockItemStyle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCUnlockItemStyle& CMsgClientToGCUnlockItemStyle::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCUnlockItemStyle_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCUnlockItemStyle::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  consumable_item_ids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&item_to_unlock_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&style_index_) -
        reinterpret_cast<char*>(&item_to_unlock_)) + sizeof(style_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCUnlockItemStyle::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCUnlockItemStyle*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 item_to_unlock = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_to_unlock(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 style_index = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_style_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint64 consumable_item_ids = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 24) {
          do {
            msg->add_consumable_item_ids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
        object = msg->mutable_consumable_item_ids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCUnlockItemStyle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_to_unlock = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_to_unlock(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_to_unlock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 style_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_style_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 consumable_item_ids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24u, input, this->mutable_consumable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_consumable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnlockItemStyle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnlockItemStyle)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCUnlockItemStyle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_to_unlock = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_to_unlock(), output);
  }

  // optional uint32 style_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->style_index(), output);
  }

  // repeated uint64 consumable_item_ids = 3;
  for (int i = 0, n = this->consumable_item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->consumable_item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnlockItemStyle)
}

::google::protobuf::uint8* CMsgClientToGCUnlockItemStyle::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_to_unlock = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_to_unlock(), target);
  }

  // optional uint32 style_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->style_index(), target);
  }

  // repeated uint64 consumable_item_ids = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(3, this->consumable_item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnlockItemStyle)
  return target;
}

size_t CMsgClientToGCUnlockItemStyle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 consumable_item_ids = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->consumable_item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->consumable_item_ids_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 item_to_unlock = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_to_unlock());
    }

    // optional uint32 style_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCUnlockItemStyle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnlockItemStyle* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCUnlockItemStyle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnlockItemStyle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnlockItemStyle)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockItemStyle::MergeFrom(const CMsgClientToGCUnlockItemStyle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  consumable_item_ids_.MergeFrom(from.consumable_item_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      item_to_unlock_ = from.item_to_unlock_;
    }
    if (cached_has_bits & 0x00000002u) {
      style_index_ = from.style_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCUnlockItemStyle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockItemStyle::CopyFrom(const CMsgClientToGCUnlockItemStyle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockItemStyle::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnlockItemStyle::Swap(CMsgClientToGCUnlockItemStyle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnlockItemStyle::InternalSwap(CMsgClientToGCUnlockItemStyle* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  consumable_item_ids_.InternalSwap(&other->consumable_item_ids_);
  swap(item_to_unlock_, other->item_to_unlock_);
  swap(style_index_, other->style_index_);
}

::google::protobuf::Metadata CMsgClientToGCUnlockItemStyle::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCUnlockItemStyleResponse::InitAsDefaultInstance() {
}
class CMsgClientToGCUnlockItemStyleResponse::HasBitSetters {
 public:
  static void set_has_response(CMsgClientToGCUnlockItemStyleResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_item_id(CMsgClientToGCUnlockItemStyleResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_style_index(CMsgClientToGCUnlockItemStyleResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_style_prereq(CMsgClientToGCUnlockItemStyleResponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnlockItemStyleResponse::kResponseFieldNumber;
const int CMsgClientToGCUnlockItemStyleResponse::kItemIdFieldNumber;
const int CMsgClientToGCUnlockItemStyleResponse::kStyleIndexFieldNumber;
const int CMsgClientToGCUnlockItemStyleResponse::kStylePrereqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnlockItemStyleResponse::CMsgClientToGCUnlockItemStyleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
}
CMsgClientToGCUnlockItemStyleResponse::CMsgClientToGCUnlockItemStyleResponse(const CMsgClientToGCUnlockItemStyleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&style_prereq_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(style_prereq_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
}

void CMsgClientToGCUnlockItemStyleResponse::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&style_prereq_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(style_prereq_));
}

CMsgClientToGCUnlockItemStyleResponse::~CMsgClientToGCUnlockItemStyleResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  SharedDtor();
}

void CMsgClientToGCUnlockItemStyleResponse::SharedDtor() {
}

void CMsgClientToGCUnlockItemStyleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCUnlockItemStyleResponse& CMsgClientToGCUnlockItemStyleResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCUnlockItemStyleResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCUnlockItemStyleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&style_prereq_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(style_prereq_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCUnlockItemStyleResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCUnlockItemStyleResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_response(static_cast<::proto::dota::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 style_index = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_style_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 style_prereq = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_style_prereq(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCUnlockItemStyleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_IsValid(value)) {
            set_response(static_cast< ::proto::dota::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 style_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_style_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 style_prereq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_style_prereq(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_prereq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCUnlockItemStyleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  // optional uint32 style_index = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->style_index(), output);
  }

  // optional uint32 style_prereq = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->style_prereq(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
}

::google::protobuf::uint8* CMsgClientToGCUnlockItemStyleResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  // optional uint32 style_index = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->style_index(), target);
  }

  // optional uint32 style_prereq = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->style_prereq(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  return target;
}

size_t CMsgClientToGCUnlockItemStyleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint64 item_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional .proto.dota.CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

    // optional uint32 style_index = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_index());
    }

    // optional uint32 style_prereq = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_prereq());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCUnlockItemStyleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnlockItemStyleResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCUnlockItemStyleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockItemStyleResponse::MergeFrom(const CMsgClientToGCUnlockItemStyleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      response_ = from.response_;
    }
    if (cached_has_bits & 0x00000004u) {
      style_index_ = from.style_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      style_prereq_ = from.style_prereq_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCUnlockItemStyleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockItemStyleResponse::CopyFrom(const CMsgClientToGCUnlockItemStyleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockItemStyleResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnlockItemStyleResponse::Swap(CMsgClientToGCUnlockItemStyleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnlockItemStyleResponse::InternalSwap(CMsgClientToGCUnlockItemStyleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
  swap(response_, other->response_);
  swap(style_index_, other->style_index_);
  swap(style_prereq_, other->style_prereq_);
}

::google::protobuf::Metadata CMsgClientToGCUnlockItemStyleResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCSetItemInventoryCategory::InitAsDefaultInstance() {
}
class CMsgClientToGCSetItemInventoryCategory::HasBitSetters {
 public:
  static void set_has_set_to_value(CMsgClientToGCSetItemInventoryCategory* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_remove_categories(CMsgClientToGCSetItemInventoryCategory* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_add_categories(CMsgClientToGCSetItemInventoryCategory* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCSetItemInventoryCategory::kItemIdsFieldNumber;
const int CMsgClientToGCSetItemInventoryCategory::kSetToValueFieldNumber;
const int CMsgClientToGCSetItemInventoryCategory::kRemoveCategoriesFieldNumber;
const int CMsgClientToGCSetItemInventoryCategory::kAddCategoriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCSetItemInventoryCategory::CMsgClientToGCSetItemInventoryCategory()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCSetItemInventoryCategory)
}
CMsgClientToGCSetItemInventoryCategory::CMsgClientToGCSetItemInventoryCategory(const CMsgClientToGCSetItemInventoryCategory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&set_to_value_, &from.set_to_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&add_categories_) -
    reinterpret_cast<char*>(&set_to_value_)) + sizeof(add_categories_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCSetItemInventoryCategory)
}

void CMsgClientToGCSetItemInventoryCategory::SharedCtor() {
  ::memset(&set_to_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&add_categories_) -
      reinterpret_cast<char*>(&set_to_value_)) + sizeof(add_categories_));
}

CMsgClientToGCSetItemInventoryCategory::~CMsgClientToGCSetItemInventoryCategory() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  SharedDtor();
}

void CMsgClientToGCSetItemInventoryCategory::SharedDtor() {
}

void CMsgClientToGCSetItemInventoryCategory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCSetItemInventoryCategory& CMsgClientToGCSetItemInventoryCategory::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCSetItemInventoryCategory_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCSetItemInventoryCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_ids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&set_to_value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&add_categories_) -
        reinterpret_cast<char*>(&set_to_value_)) + sizeof(add_categories_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCSetItemInventoryCategory::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCSetItemInventoryCategory*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_item_ids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
        object = msg->mutable_item_ids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional uint32 set_to_value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_set_to_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 remove_categories = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_remove_categories(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 add_categories = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_add_categories(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCSetItemInventoryCategory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 set_to_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_set_to_value(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &set_to_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 remove_categories = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_remove_categories(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remove_categories_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 add_categories = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_add_categories(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &add_categories_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCSetItemInventoryCategory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 set_to_value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->set_to_value(), output);
  }

  // optional uint32 remove_categories = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->remove_categories(), output);
  }

  // optional uint32 add_categories = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->add_categories(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCSetItemInventoryCategory)
}

::google::protobuf::uint8* CMsgClientToGCSetItemInventoryCategory::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->item_ids_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 set_to_value = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->set_to_value(), target);
  }

  // optional uint32 remove_categories = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->remove_categories(), target);
  }

  // optional uint32 add_categories = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->add_categories(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  return target;
}

size_t CMsgClientToGCSetItemInventoryCategory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 set_to_value = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->set_to_value());
    }

    // optional uint32 remove_categories = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->remove_categories());
    }

    // optional uint32 add_categories = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->add_categories());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCSetItemInventoryCategory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSetItemInventoryCategory* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCSetItemInventoryCategory>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCSetItemInventoryCategory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCSetItemInventoryCategory)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetItemInventoryCategory::MergeFrom(const CMsgClientToGCSetItemInventoryCategory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      set_to_value_ = from.set_to_value_;
    }
    if (cached_has_bits & 0x00000002u) {
      remove_categories_ = from.remove_categories_;
    }
    if (cached_has_bits & 0x00000004u) {
      add_categories_ = from.add_categories_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCSetItemInventoryCategory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetItemInventoryCategory::CopyFrom(const CMsgClientToGCSetItemInventoryCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetItemInventoryCategory::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetItemInventoryCategory::Swap(CMsgClientToGCSetItemInventoryCategory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCSetItemInventoryCategory::InternalSwap(CMsgClientToGCSetItemInventoryCategory* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  item_ids_.InternalSwap(&other->item_ids_);
  swap(set_to_value_, other->set_to_value_);
  swap(remove_categories_, other->remove_categories_);
  swap(add_categories_, other->add_categories_);
}

::google::protobuf::Metadata CMsgClientToGCSetItemInventoryCategory::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCUnlockCrate::InitAsDefaultInstance() {
}
class CMsgClientToGCUnlockCrate::HasBitSetters {
 public:
  static void set_has_crate_item_id(CMsgClientToGCUnlockCrate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_key_item_id(CMsgClientToGCUnlockCrate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnlockCrate::kCrateItemIdFieldNumber;
const int CMsgClientToGCUnlockCrate::kKeyItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnlockCrate::CMsgClientToGCUnlockCrate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnlockCrate)
}
CMsgClientToGCUnlockCrate::CMsgClientToGCUnlockCrate(const CMsgClientToGCUnlockCrate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&crate_item_id_, &from.crate_item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&key_item_id_) -
    reinterpret_cast<char*>(&crate_item_id_)) + sizeof(key_item_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnlockCrate)
}

void CMsgClientToGCUnlockCrate::SharedCtor() {
  ::memset(&crate_item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_item_id_) -
      reinterpret_cast<char*>(&crate_item_id_)) + sizeof(key_item_id_));
}

CMsgClientToGCUnlockCrate::~CMsgClientToGCUnlockCrate() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnlockCrate)
  SharedDtor();
}

void CMsgClientToGCUnlockCrate::SharedDtor() {
}

void CMsgClientToGCUnlockCrate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCUnlockCrate& CMsgClientToGCUnlockCrate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCUnlockCrate_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCUnlockCrate::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnlockCrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&crate_item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&key_item_id_) -
        reinterpret_cast<char*>(&crate_item_id_)) + sizeof(key_item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCUnlockCrate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCUnlockCrate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 crate_item_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_crate_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 key_item_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_key_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCUnlockCrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnlockCrate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 crate_item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_crate_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &crate_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 key_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_key_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &key_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnlockCrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnlockCrate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCUnlockCrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnlockCrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 crate_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->crate_item_id(), output);
  }

  // optional uint64 key_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->key_item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnlockCrate)
}

::google::protobuf::uint8* CMsgClientToGCUnlockCrate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnlockCrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 crate_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->crate_item_id(), target);
  }

  // optional uint64 key_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->key_item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnlockCrate)
  return target;
}

size_t CMsgClientToGCUnlockCrate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnlockCrate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 crate_item_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->crate_item_id());
    }

    // optional uint64 key_item_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->key_item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCUnlockCrate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnlockCrate)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnlockCrate* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCUnlockCrate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnlockCrate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnlockCrate)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockCrate::MergeFrom(const CMsgClientToGCUnlockCrate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnlockCrate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      crate_item_id_ = from.crate_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      key_item_id_ = from.key_item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCUnlockCrate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnlockCrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockCrate::CopyFrom(const CMsgClientToGCUnlockCrate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnlockCrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockCrate::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnlockCrate::Swap(CMsgClientToGCUnlockCrate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnlockCrate::InternalSwap(CMsgClientToGCUnlockCrate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(crate_item_id_, other->crate_item_id_);
  swap(key_item_id_, other->key_item_id_);
}

::google::protobuf::Metadata CMsgClientToGCUnlockCrate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCUnlockCrateResponse_Item::InitAsDefaultInstance() {
}
class CMsgClientToGCUnlockCrateResponse_Item::HasBitSetters {
 public:
  static void set_has_item_id(CMsgClientToGCUnlockCrateResponse_Item* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_def_index(CMsgClientToGCUnlockCrateResponse_Item* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnlockCrateResponse_Item::kItemIdFieldNumber;
const int CMsgClientToGCUnlockCrateResponse_Item::kDefIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnlockCrateResponse_Item::CMsgClientToGCUnlockCrateResponse_Item()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
}
CMsgClientToGCUnlockCrateResponse_Item::CMsgClientToGCUnlockCrateResponse_Item(const CMsgClientToGCUnlockCrateResponse_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&def_index_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(def_index_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
}

void CMsgClientToGCUnlockCrateResponse_Item::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&def_index_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(def_index_));
}

CMsgClientToGCUnlockCrateResponse_Item::~CMsgClientToGCUnlockCrateResponse_Item() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  SharedDtor();
}

void CMsgClientToGCUnlockCrateResponse_Item::SharedDtor() {
}

void CMsgClientToGCUnlockCrateResponse_Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCUnlockCrateResponse_Item& CMsgClientToGCUnlockCrateResponse_Item::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCUnlockCrateResponse_Item_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCUnlockCrateResponse_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&def_index_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(def_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCUnlockCrateResponse_Item::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCUnlockCrateResponse_Item*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 def_index = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_def_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCUnlockCrateResponse_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 def_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_def_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCUnlockCrateResponse_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 def_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->def_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
}

::google::protobuf::uint8* CMsgClientToGCUnlockCrateResponse_Item::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 def_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->def_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  return target;
}

size_t CMsgClientToGCUnlockCrateResponse_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 item_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 def_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCUnlockCrateResponse_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnlockCrateResponse_Item* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCUnlockCrateResponse_Item>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockCrateResponse_Item::MergeFrom(const CMsgClientToGCUnlockCrateResponse_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      def_index_ = from.def_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCUnlockCrateResponse_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockCrateResponse_Item::CopyFrom(const CMsgClientToGCUnlockCrateResponse_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockCrateResponse_Item::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnlockCrateResponse_Item::Swap(CMsgClientToGCUnlockCrateResponse_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnlockCrateResponse_Item::InternalSwap(CMsgClientToGCUnlockCrateResponse_Item* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
  swap(def_index_, other->def_index_);
}

::google::protobuf::Metadata CMsgClientToGCUnlockCrateResponse_Item::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCUnlockCrateResponse::InitAsDefaultInstance() {
}
class CMsgClientToGCUnlockCrateResponse::HasBitSetters {
 public:
  static void set_has_result(CMsgClientToGCUnlockCrateResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnlockCrateResponse::kResultFieldNumber;
const int CMsgClientToGCUnlockCrateResponse::kGrantedItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnlockCrateResponse::CMsgClientToGCUnlockCrateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnlockCrateResponse)
}
CMsgClientToGCUnlockCrateResponse::CMsgClientToGCUnlockCrateResponse(const CMsgClientToGCUnlockCrateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      granted_items_(from.granted_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnlockCrateResponse)
}

void CMsgClientToGCUnlockCrateResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientToGCUnlockCrateResponse_econ_5fgcmessages_2eproto.base);
  result_ = 0;
}

CMsgClientToGCUnlockCrateResponse::~CMsgClientToGCUnlockCrateResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnlockCrateResponse)
  SharedDtor();
}

void CMsgClientToGCUnlockCrateResponse::SharedDtor() {
}

void CMsgClientToGCUnlockCrateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCUnlockCrateResponse& CMsgClientToGCUnlockCrateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCUnlockCrateResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCUnlockCrateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  granted_items_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCUnlockCrateResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCUnlockCrateResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::EGCMsgResponse_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_result(static_cast<::proto::dota::EGCMsgResponse>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.dota.CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgClientToGCUnlockCrateResponse_Item::_InternalParse;
          object = msg->add_granted_items();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCUnlockCrateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::EGCMsgResponse_IsValid(value)) {
            set_result(static_cast< ::proto::dota::EGCMsgResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_granted_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnlockCrateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnlockCrateResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCUnlockCrateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // repeated .proto.dota.CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->granted_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->granted_items(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnlockCrateResponse)
}

::google::protobuf::uint8* CMsgClientToGCUnlockCrateResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // repeated .proto.dota.CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->granted_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->granted_items(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnlockCrateResponse)
  return target;
}

size_t CMsgClientToGCUnlockCrateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->granted_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->granted_items(static_cast<int>(i)));
    }
  }

  // optional .proto.dota.EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCUnlockCrateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnlockCrateResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCUnlockCrateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnlockCrateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnlockCrateResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockCrateResponse::MergeFrom(const CMsgClientToGCUnlockCrateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  granted_items_.MergeFrom(from.granted_items_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgClientToGCUnlockCrateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockCrateResponse::CopyFrom(const CMsgClientToGCUnlockCrateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockCrateResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnlockCrateResponse::Swap(CMsgClientToGCUnlockCrateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnlockCrateResponse::InternalSwap(CMsgClientToGCUnlockCrateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&granted_items_)->InternalSwap(CastToBase(&other->granted_items_));
  swap(result_, other->result_);
}

::google::protobuf::Metadata CMsgClientToGCUnlockCrateResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCRemoveItemAttribute::InitAsDefaultInstance() {
}
class CMsgClientToGCRemoveItemAttribute::HasBitSetters {
 public:
  static void set_has_item_id(CMsgClientToGCRemoveItemAttribute* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCRemoveItemAttribute::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCRemoveItemAttribute::CMsgClientToGCRemoveItemAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCRemoveItemAttribute)
}
CMsgClientToGCRemoveItemAttribute::CMsgClientToGCRemoveItemAttribute(const CMsgClientToGCRemoveItemAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_id_ = from.item_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCRemoveItemAttribute)
}

void CMsgClientToGCRemoveItemAttribute::SharedCtor() {
  item_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgClientToGCRemoveItemAttribute::~CMsgClientToGCRemoveItemAttribute() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCRemoveItemAttribute)
  SharedDtor();
}

void CMsgClientToGCRemoveItemAttribute::SharedDtor() {
}

void CMsgClientToGCRemoveItemAttribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCRemoveItemAttribute& CMsgClientToGCRemoveItemAttribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCRemoveItemAttribute_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCRemoveItemAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCRemoveItemAttribute::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCRemoveItemAttribute*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCRemoveItemAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCRemoveItemAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCRemoveItemAttribute)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCRemoveItemAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCRemoveItemAttribute)
}

::google::protobuf::uint8* CMsgClientToGCRemoveItemAttribute::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCRemoveItemAttribute)
  return target;
}

size_t CMsgClientToGCRemoveItemAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 item_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRemoveItemAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRemoveItemAttribute* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCRemoveItemAttribute>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCRemoveItemAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCRemoveItemAttribute)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRemoveItemAttribute::MergeFrom(const CMsgClientToGCRemoveItemAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item_id()) {
    set_item_id(from.item_id());
  }
}

void CMsgClientToGCRemoveItemAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRemoveItemAttribute::CopyFrom(const CMsgClientToGCRemoveItemAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRemoveItemAttribute::IsInitialized() const {
  return true;
}

void CMsgClientToGCRemoveItemAttribute::Swap(CMsgClientToGCRemoveItemAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCRemoveItemAttribute::InternalSwap(CMsgClientToGCRemoveItemAttribute* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
}

::google::protobuf::Metadata CMsgClientToGCRemoveItemAttribute::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCRemoveItemAttributeResponse::InitAsDefaultInstance() {
}
class CMsgClientToGCRemoveItemAttributeResponse::HasBitSetters {
 public:
  static void set_has_response(CMsgClientToGCRemoveItemAttributeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_item_id(CMsgClientToGCRemoveItemAttributeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCRemoveItemAttributeResponse::kResponseFieldNumber;
const int CMsgClientToGCRemoveItemAttributeResponse::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCRemoveItemAttributeResponse::CMsgClientToGCRemoveItemAttributeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
}
CMsgClientToGCRemoveItemAttributeResponse::CMsgClientToGCRemoveItemAttributeResponse(const CMsgClientToGCRemoveItemAttributeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(response_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
}

void CMsgClientToGCRemoveItemAttributeResponse::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(response_));
}

CMsgClientToGCRemoveItemAttributeResponse::~CMsgClientToGCRemoveItemAttributeResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  SharedDtor();
}

void CMsgClientToGCRemoveItemAttributeResponse::SharedDtor() {
}

void CMsgClientToGCRemoveItemAttributeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCRemoveItemAttributeResponse& CMsgClientToGCRemoveItemAttributeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCRemoveItemAttributeResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCRemoveItemAttributeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&response_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(response_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCRemoveItemAttributeResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCRemoveItemAttributeResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_response(static_cast<::proto::dota::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCRemoveItemAttributeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_IsValid(value)) {
            set_response(static_cast< ::proto::dota::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCRemoveItemAttributeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
}

::google::protobuf::uint8* CMsgClientToGCRemoveItemAttributeResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  return target;
}

size_t CMsgClientToGCRemoveItemAttributeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 item_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional .proto.dota.CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRemoveItemAttributeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRemoveItemAttributeResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCRemoveItemAttributeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRemoveItemAttributeResponse::MergeFrom(const CMsgClientToGCRemoveItemAttributeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      response_ = from.response_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCRemoveItemAttributeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRemoveItemAttributeResponse::CopyFrom(const CMsgClientToGCRemoveItemAttributeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRemoveItemAttributeResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRemoveItemAttributeResponse::Swap(CMsgClientToGCRemoveItemAttributeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCRemoveItemAttributeResponse::InternalSwap(CMsgClientToGCRemoveItemAttributeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
  swap(response_, other->response_);
}

::google::protobuf::Metadata CMsgClientToGCRemoveItemAttributeResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCNameItem::InitAsDefaultInstance() {
}
class CMsgClientToGCNameItem::HasBitSetters {
 public:
  static void set_has_subject_item_id(CMsgClientToGCNameItem* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_tool_item_id(CMsgClientToGCNameItem* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_name(CMsgClientToGCNameItem* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCNameItem::kSubjectItemIdFieldNumber;
const int CMsgClientToGCNameItem::kToolItemIdFieldNumber;
const int CMsgClientToGCNameItem::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCNameItem::CMsgClientToGCNameItem()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCNameItem)
}
CMsgClientToGCNameItem::CMsgClientToGCNameItem(const CMsgClientToGCNameItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&subject_item_id_, &from.subject_item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&tool_item_id_) -
    reinterpret_cast<char*>(&subject_item_id_)) + sizeof(tool_item_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCNameItem)
}

void CMsgClientToGCNameItem::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientToGCNameItem_econ_5fgcmessages_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&subject_item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tool_item_id_) -
      reinterpret_cast<char*>(&subject_item_id_)) + sizeof(tool_item_id_));
}

CMsgClientToGCNameItem::~CMsgClientToGCNameItem() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCNameItem)
  SharedDtor();
}

void CMsgClientToGCNameItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientToGCNameItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCNameItem& CMsgClientToGCNameItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCNameItem_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCNameItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCNameItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&subject_item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tool_item_id_) -
        reinterpret_cast<char*>(&subject_item_id_)) + sizeof(tool_item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCNameItem::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCNameItem*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 subject_item_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_subject_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 tool_item_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_tool_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgClientToGCNameItem.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCNameItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCNameItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 subject_item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_subject_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &subject_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 tool_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_tool_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tool_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgClientToGCNameItem.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCNameItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCNameItem)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCNameItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCNameItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 subject_item_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->subject_item_id(), output);
  }

  // optional uint64 tool_item_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->tool_item_id(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgClientToGCNameItem.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCNameItem)
}

::google::protobuf::uint8* CMsgClientToGCNameItem::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCNameItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 subject_item_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->subject_item_id(), target);
  }

  // optional uint64 tool_item_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->tool_item_id(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgClientToGCNameItem.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCNameItem)
  return target;
}

size_t CMsgClientToGCNameItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCNameItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 subject_item_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->subject_item_id());
    }

    // optional uint64 tool_item_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->tool_item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCNameItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCNameItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCNameItem* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCNameItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCNameItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCNameItem)
    MergeFrom(*source);
  }
}

void CMsgClientToGCNameItem::MergeFrom(const CMsgClientToGCNameItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCNameItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      subject_item_id_ = from.subject_item_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      tool_item_id_ = from.tool_item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCNameItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCNameItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCNameItem::CopyFrom(const CMsgClientToGCNameItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCNameItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCNameItem::IsInitialized() const {
  return true;
}

void CMsgClientToGCNameItem::Swap(CMsgClientToGCNameItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCNameItem::InternalSwap(CMsgClientToGCNameItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(subject_item_id_, other->subject_item_id_);
  swap(tool_item_id_, other->tool_item_id_);
}

::google::protobuf::Metadata CMsgClientToGCNameItem::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCNameItemResponse::InitAsDefaultInstance() {
}
class CMsgClientToGCNameItemResponse::HasBitSetters {
 public:
  static void set_has_response(CMsgClientToGCNameItemResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_item_id(CMsgClientToGCNameItemResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCNameItemResponse::kResponseFieldNumber;
const int CMsgClientToGCNameItemResponse::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCNameItemResponse::CMsgClientToGCNameItemResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCNameItemResponse)
}
CMsgClientToGCNameItemResponse::CMsgClientToGCNameItemResponse(const CMsgClientToGCNameItemResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(response_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCNameItemResponse)
}

void CMsgClientToGCNameItemResponse::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(response_));
}

CMsgClientToGCNameItemResponse::~CMsgClientToGCNameItemResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCNameItemResponse)
  SharedDtor();
}

void CMsgClientToGCNameItemResponse::SharedDtor() {
}

void CMsgClientToGCNameItemResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCNameItemResponse& CMsgClientToGCNameItemResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCNameItemResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCNameItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCNameItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&response_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(response_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCNameItemResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCNameItemResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::CMsgClientToGCNameItemResponse_ENameItem_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_response(static_cast<::proto::dota::CMsgClientToGCNameItemResponse_ENameItem>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCNameItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCNameItemResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgClientToGCNameItemResponse_ENameItem_IsValid(value)) {
            set_response(static_cast< ::proto::dota::CMsgClientToGCNameItemResponse_ENameItem >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCNameItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCNameItemResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCNameItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCNameItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCNameItemResponse)
}

::google::protobuf::uint8* CMsgClientToGCNameItemResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCNameItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCNameItemResponse)
  return target;
}

size_t CMsgClientToGCNameItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCNameItemResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 item_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional .proto.dota.CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCNameItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCNameItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCNameItemResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCNameItemResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCNameItemResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCNameItemResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCNameItemResponse::MergeFrom(const CMsgClientToGCNameItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCNameItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      response_ = from.response_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCNameItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCNameItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCNameItemResponse::CopyFrom(const CMsgClientToGCNameItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCNameItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCNameItemResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCNameItemResponse::Swap(CMsgClientToGCNameItemResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCNameItemResponse::InternalSwap(CMsgClientToGCNameItemResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
  swap(response_, other->response_);
}

::google::protobuf::Metadata CMsgClientToGCNameItemResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCSetItemPosition::InitAsDefaultInstance() {
}
class CMsgGCSetItemPosition::HasBitSetters {
 public:
  static void set_has_item_id(CMsgGCSetItemPosition* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_new_position(CMsgGCSetItemPosition* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCSetItemPosition::kItemIdFieldNumber;
const int CMsgGCSetItemPosition::kNewPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCSetItemPosition::CMsgGCSetItemPosition()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCSetItemPosition)
}
CMsgGCSetItemPosition::CMsgGCSetItemPosition(const CMsgGCSetItemPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&new_position_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(new_position_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCSetItemPosition)
}

void CMsgGCSetItemPosition::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_position_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(new_position_));
}

CMsgGCSetItemPosition::~CMsgGCSetItemPosition() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCSetItemPosition)
  SharedDtor();
}

void CMsgGCSetItemPosition::SharedDtor() {
}

void CMsgGCSetItemPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCSetItemPosition& CMsgGCSetItemPosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCSetItemPosition_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCSetItemPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCSetItemPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&new_position_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(new_position_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCSetItemPosition::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCSetItemPosition*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 new_position = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_new_position(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCSetItemPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCSetItemPosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 new_position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_new_position(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCSetItemPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCSetItemPosition)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCSetItemPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCSetItemPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 new_position = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->new_position(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCSetItemPosition)
}

::google::protobuf::uint8* CMsgGCSetItemPosition::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCSetItemPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 new_position = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->new_position(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCSetItemPosition)
  return target;
}

size_t CMsgGCSetItemPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCSetItemPosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 item_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 new_position = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_position());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCSetItemPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCSetItemPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCSetItemPosition* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCSetItemPosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCSetItemPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCSetItemPosition)
    MergeFrom(*source);
  }
}

void CMsgGCSetItemPosition::MergeFrom(const CMsgGCSetItemPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCSetItemPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      new_position_ = from.new_position_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCSetItemPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCSetItemPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCSetItemPosition::CopyFrom(const CMsgGCSetItemPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCSetItemPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCSetItemPosition::IsInitialized() const {
  return true;
}

void CMsgGCSetItemPosition::Swap(CMsgGCSetItemPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCSetItemPosition::InternalSwap(CMsgGCSetItemPosition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
  swap(new_position_, other->new_position_);
}

::google::protobuf::Metadata CMsgGCSetItemPosition::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CAttribute_ItemDynamicRecipeComponent::InitAsDefaultInstance() {
}
class CAttribute_ItemDynamicRecipeComponent::HasBitSetters {
 public:
  static void set_has_item_def(CAttribute_ItemDynamicRecipeComponent* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_item_quality(CAttribute_ItemDynamicRecipeComponent* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_item_flags(CAttribute_ItemDynamicRecipeComponent* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_attributes_string(CAttribute_ItemDynamicRecipeComponent* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_item_count(CAttribute_ItemDynamicRecipeComponent* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_items_fulfilled(CAttribute_ItemDynamicRecipeComponent* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_item_rarity(CAttribute_ItemDynamicRecipeComponent* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_lootlist(CAttribute_ItemDynamicRecipeComponent* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_fulfilled_item_id(CAttribute_ItemDynamicRecipeComponent* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CAttribute_ItemDynamicRecipeComponent::kItemDefFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kItemQualityFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kItemFlagsFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kAttributesStringFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kItemCountFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kItemsFulfilledFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kItemRarityFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kLootlistFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kFulfilledItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CAttribute_ItemDynamicRecipeComponent::CAttribute_ItemDynamicRecipeComponent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CAttribute_ItemDynamicRecipeComponent)
}
CAttribute_ItemDynamicRecipeComponent::CAttribute_ItemDynamicRecipeComponent(const CAttribute_ItemDynamicRecipeComponent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attributes_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attributes_string()) {
    attributes_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attributes_string_);
  }
  lootlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lootlist()) {
    lootlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lootlist_);
  }
  ::memcpy(&item_def_, &from.item_def_,
    static_cast<size_t>(reinterpret_cast<char*>(&fulfilled_item_id_) -
    reinterpret_cast<char*>(&item_def_)) + sizeof(fulfilled_item_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CAttribute_ItemDynamicRecipeComponent)
}

void CAttribute_ItemDynamicRecipeComponent::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CAttribute_ItemDynamicRecipeComponent_econ_5fgcmessages_2eproto.base);
  attributes_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lootlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&item_def_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fulfilled_item_id_) -
      reinterpret_cast<char*>(&item_def_)) + sizeof(fulfilled_item_id_));
}

CAttribute_ItemDynamicRecipeComponent::~CAttribute_ItemDynamicRecipeComponent() {
  // @@protoc_insertion_point(destructor:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  SharedDtor();
}

void CAttribute_ItemDynamicRecipeComponent::SharedDtor() {
  attributes_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lootlist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CAttribute_ItemDynamicRecipeComponent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CAttribute_ItemDynamicRecipeComponent& CAttribute_ItemDynamicRecipeComponent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CAttribute_ItemDynamicRecipeComponent_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CAttribute_ItemDynamicRecipeComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      attributes_string_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      lootlist_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&item_def_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&item_rarity_) -
        reinterpret_cast<char*>(&item_def_)) + sizeof(item_rarity_));
  }
  fulfilled_item_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CAttribute_ItemDynamicRecipeComponent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CAttribute_ItemDynamicRecipeComponent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 item_def = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_def(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 item_quality = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_item_quality(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 item_flags = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_item_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string attributes_string = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CAttribute_ItemDynamicRecipeComponent.attributes_string");
        object = msg->mutable_attributes_string();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 item_count = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_item_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 items_fulfilled = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_items_fulfilled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 item_rarity = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_item_rarity(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string lootlist = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CAttribute_ItemDynamicRecipeComponent.lootlist");
        object = msg->mutable_lootlist();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint64 fulfilled_item_id = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_fulfilled_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CAttribute_ItemDynamicRecipeComponent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_def(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_quality = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_item_quality(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_item_flags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string attributes_string = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attributes_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attributes_string().data(), static_cast<int>(this->attributes_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CAttribute_ItemDynamicRecipeComponent.attributes_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_item_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 items_fulfilled = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_items_fulfilled(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &items_fulfilled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_rarity = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_item_rarity(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_rarity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string lootlist = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lootlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lootlist().data(), static_cast<int>(this->lootlist().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CAttribute_ItemDynamicRecipeComponent.lootlist");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 fulfilled_item_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_fulfilled_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fulfilled_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CAttribute_ItemDynamicRecipeComponent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def(), output);
  }

  // optional uint32 item_quality = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_quality(), output);
  }

  // optional uint32 item_flags = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->item_flags(), output);
  }

  // optional string attributes_string = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attributes_string().data(), static_cast<int>(this->attributes_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CAttribute_ItemDynamicRecipeComponent.attributes_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->attributes_string(), output);
  }

  // optional uint32 item_count = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->item_count(), output);
  }

  // optional uint32 items_fulfilled = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->items_fulfilled(), output);
  }

  // optional uint32 item_rarity = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->item_rarity(), output);
  }

  // optional string lootlist = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lootlist().data(), static_cast<int>(this->lootlist().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CAttribute_ItemDynamicRecipeComponent.lootlist");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->lootlist(), output);
  }

  // optional uint64 fulfilled_item_id = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->fulfilled_item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CAttribute_ItemDynamicRecipeComponent)
}

::google::protobuf::uint8* CAttribute_ItemDynamicRecipeComponent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def(), target);
  }

  // optional uint32 item_quality = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_quality(), target);
  }

  // optional uint32 item_flags = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->item_flags(), target);
  }

  // optional string attributes_string = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attributes_string().data(), static_cast<int>(this->attributes_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CAttribute_ItemDynamicRecipeComponent.attributes_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->attributes_string(), target);
  }

  // optional uint32 item_count = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->item_count(), target);
  }

  // optional uint32 items_fulfilled = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->items_fulfilled(), target);
  }

  // optional uint32 item_rarity = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->item_rarity(), target);
  }

  // optional string lootlist = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lootlist().data(), static_cast<int>(this->lootlist().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CAttribute_ItemDynamicRecipeComponent.lootlist");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->lootlist(), target);
  }

  // optional uint64 fulfilled_item_id = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->fulfilled_item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  return target;
}

size_t CAttribute_ItemDynamicRecipeComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string attributes_string = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->attributes_string());
    }

    // optional string lootlist = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lootlist());
    }

    // optional uint32 item_def = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional uint32 item_quality = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_quality());
    }

    // optional uint32 item_flags = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_flags());
    }

    // optional uint32 item_count = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_count());
    }

    // optional uint32 items_fulfilled = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->items_fulfilled());
    }

    // optional uint32 item_rarity = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_rarity());
    }

  }
  // optional uint64 fulfilled_item_id = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->fulfilled_item_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CAttribute_ItemDynamicRecipeComponent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  GOOGLE_DCHECK_NE(&from, this);
  const CAttribute_ItemDynamicRecipeComponent* source =
      ::google::protobuf::DynamicCastToGenerated<CAttribute_ItemDynamicRecipeComponent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CAttribute_ItemDynamicRecipeComponent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CAttribute_ItemDynamicRecipeComponent)
    MergeFrom(*source);
  }
}

void CAttribute_ItemDynamicRecipeComponent::MergeFrom(const CAttribute_ItemDynamicRecipeComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      attributes_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attributes_string_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      lootlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lootlist_);
    }
    if (cached_has_bits & 0x00000004u) {
      item_def_ = from.item_def_;
    }
    if (cached_has_bits & 0x00000008u) {
      item_quality_ = from.item_quality_;
    }
    if (cached_has_bits & 0x00000010u) {
      item_flags_ = from.item_flags_;
    }
    if (cached_has_bits & 0x00000020u) {
      item_count_ = from.item_count_;
    }
    if (cached_has_bits & 0x00000040u) {
      items_fulfilled_ = from.items_fulfilled_;
    }
    if (cached_has_bits & 0x00000080u) {
      item_rarity_ = from.item_rarity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_fulfilled_item_id(from.fulfilled_item_id());
  }
}

void CAttribute_ItemDynamicRecipeComponent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CAttribute_ItemDynamicRecipeComponent::CopyFrom(const CAttribute_ItemDynamicRecipeComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CAttribute_ItemDynamicRecipeComponent::IsInitialized() const {
  return true;
}

void CAttribute_ItemDynamicRecipeComponent::Swap(CAttribute_ItemDynamicRecipeComponent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CAttribute_ItemDynamicRecipeComponent::InternalSwap(CAttribute_ItemDynamicRecipeComponent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  attributes_string_.Swap(&other->attributes_string_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lootlist_.Swap(&other->lootlist_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(item_def_, other->item_def_);
  swap(item_quality_, other->item_quality_);
  swap(item_flags_, other->item_flags_);
  swap(item_count_, other->item_count_);
  swap(items_fulfilled_, other->items_fulfilled_);
  swap(item_rarity_, other->item_rarity_);
  swap(fulfilled_item_id_, other->fulfilled_item_id_);
}

::google::protobuf::Metadata CAttribute_ItemDynamicRecipeComponent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CProtoItemSocket::InitAsDefaultInstance() {
}
class CProtoItemSocket::HasBitSetters {
 public:
  static void set_has_item_id(CProtoItemSocket* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_attr_def_index(CProtoItemSocket* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_required_type(CProtoItemSocket* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_required_hero(CProtoItemSocket* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_gem_def_index(CProtoItemSocket* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_not_tradable(CProtoItemSocket* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_required_item_slot(CProtoItemSocket* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket::kItemIdFieldNumber;
const int CProtoItemSocket::kAttrDefIndexFieldNumber;
const int CProtoItemSocket::kRequiredTypeFieldNumber;
const int CProtoItemSocket::kRequiredHeroFieldNumber;
const int CProtoItemSocket::kGemDefIndexFieldNumber;
const int CProtoItemSocket::kNotTradableFieldNumber;
const int CProtoItemSocket::kRequiredItemSlotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket::CProtoItemSocket()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket)
}
CProtoItemSocket::CProtoItemSocket(const CProtoItemSocket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  required_hero_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_required_hero()) {
    required_hero_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.required_hero_);
  }
  required_item_slot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_required_item_slot()) {
    required_item_slot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.required_item_slot_);
  }
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&not_tradable_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(not_tradable_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket)
}

void CProtoItemSocket::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CProtoItemSocket_econ_5fgcmessages_2eproto.base);
  required_hero_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  required_item_slot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&not_tradable_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(not_tradable_));
}

CProtoItemSocket::~CProtoItemSocket() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket)
  SharedDtor();
}

void CProtoItemSocket::SharedDtor() {
  required_hero_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  required_item_slot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CProtoItemSocket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CProtoItemSocket& CProtoItemSocket::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CProtoItemSocket_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CProtoItemSocket::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      required_hero_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      required_item_slot_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&not_tradable_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(not_tradable_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CProtoItemSocket::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CProtoItemSocket*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 attr_def_index = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_attr_def_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 required_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_required_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string required_hero = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CProtoItemSocket.required_hero");
        object = msg->mutable_required_hero();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 gem_def_index = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_gem_def_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool not_tradable = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_not_tradable(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string required_item_slot = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CProtoItemSocket.required_item_slot");
        object = msg->mutable_required_item_slot();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CProtoItemSocket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 attr_def_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_attr_def_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attr_def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 required_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_required_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &required_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string required_hero = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_required_hero()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->required_hero().data(), static_cast<int>(this->required_hero().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CProtoItemSocket.required_hero");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gem_def_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_gem_def_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gem_def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool not_tradable = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_not_tradable(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &not_tradable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string required_item_slot = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_required_item_slot()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->required_item_slot().data(), static_cast<int>(this->required_item_slot().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CProtoItemSocket.required_item_slot");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CProtoItemSocket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 attr_def_index = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->attr_def_index(), output);
  }

  // optional uint32 required_type = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->required_type(), output);
  }

  // optional string required_hero = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_hero().data(), static_cast<int>(this->required_hero().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CProtoItemSocket.required_hero");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->required_hero(), output);
  }

  // optional uint32 gem_def_index = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gem_def_index(), output);
  }

  // optional bool not_tradable = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->not_tradable(), output);
  }

  // optional string required_item_slot = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_item_slot().data(), static_cast<int>(this->required_item_slot().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CProtoItemSocket.required_item_slot");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->required_item_slot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket)
}

::google::protobuf::uint8* CProtoItemSocket::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 attr_def_index = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->attr_def_index(), target);
  }

  // optional uint32 required_type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->required_type(), target);
  }

  // optional string required_hero = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_hero().data(), static_cast<int>(this->required_hero().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CProtoItemSocket.required_hero");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->required_hero(), target);
  }

  // optional uint32 gem_def_index = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gem_def_index(), target);
  }

  // optional bool not_tradable = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->not_tradable(), target);
  }

  // optional string required_item_slot = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_item_slot().data(), static_cast<int>(this->required_item_slot().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CProtoItemSocket.required_item_slot");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->required_item_slot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket)
  return target;
}

size_t CProtoItemSocket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string required_hero = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->required_hero());
    }

    // optional string required_item_slot = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->required_item_slot());
    }

    // optional uint64 item_id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 attr_def_index = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attr_def_index());
    }

    // optional uint32 required_type = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->required_type());
    }

    // optional uint32 gem_def_index = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gem_def_index());
    }

    // optional bool not_tradable = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CProtoItemSocket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket* source =
      ::google::protobuf::DynamicCastToGenerated<CProtoItemSocket>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket)
    MergeFrom(*source);
  }
}

void CProtoItemSocket::MergeFrom(const CProtoItemSocket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      required_hero_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.required_hero_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      required_item_slot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.required_item_slot_);
    }
    if (cached_has_bits & 0x00000004u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      attr_def_index_ = from.attr_def_index_;
    }
    if (cached_has_bits & 0x00000010u) {
      required_type_ = from.required_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      gem_def_index_ = from.gem_def_index_;
    }
    if (cached_has_bits & 0x00000040u) {
      not_tradable_ = from.not_tradable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket::CopyFrom(const CProtoItemSocket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket::IsInitialized() const {
  return true;
}

void CProtoItemSocket::Swap(CProtoItemSocket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket::InternalSwap(CProtoItemSocket* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  required_hero_.Swap(&other->required_hero_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  required_item_slot_.Swap(&other->required_item_slot_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(item_id_, other->item_id_);
  swap(attr_def_index_, other->attr_def_index_);
  swap(required_type_, other->required_type_);
  swap(gem_def_index_, other->gem_def_index_);
  swap(not_tradable_, other->not_tradable_);
}

::google::protobuf::Metadata CProtoItemSocket::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CProtoItemSocket_Empty::InitAsDefaultInstance() {
  ::proto::dota::_CProtoItemSocket_Empty_default_instance_._instance.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
}
class CProtoItemSocket_Empty::HasBitSetters {
 public:
  static const ::proto::dota::CProtoItemSocket& socket(const CProtoItemSocket_Empty* msg);
  static void set_has_socket(CProtoItemSocket_Empty* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::proto::dota::CProtoItemSocket&
CProtoItemSocket_Empty::HasBitSetters::socket(const CProtoItemSocket_Empty* msg) {
  return *msg->socket_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_Empty::kSocketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_Empty::CProtoItemSocket_Empty()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_Empty)
}
CProtoItemSocket_Empty::CProtoItemSocket_Empty(const CProtoItemSocket_Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_Empty)
}

void CProtoItemSocket_Empty::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CProtoItemSocket_Empty_econ_5fgcmessages_2eproto.base);
  socket_ = nullptr;
}

CProtoItemSocket_Empty::~CProtoItemSocket_Empty() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_Empty)
  SharedDtor();
}

void CProtoItemSocket_Empty::SharedDtor() {
  if (this != internal_default_instance()) delete socket_;
}

void CProtoItemSocket_Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CProtoItemSocket_Empty& CProtoItemSocket_Empty::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CProtoItemSocket_Empty_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CProtoItemSocket_Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(socket_ != nullptr);
    socket_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CProtoItemSocket_Empty::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CProtoItemSocket_Empty*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::dota::CProtoItemSocket::_InternalParse;
        object = msg->mutable_socket();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CProtoItemSocket_Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_Empty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_Empty)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CProtoItemSocket_Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::socket(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_Empty)
}

::google::protobuf::uint8* CProtoItemSocket_Empty::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::socket(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_Empty)
  return target;
}

size_t CProtoItemSocket_Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_Empty)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.dota.CProtoItemSocket socket = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *socket_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CProtoItemSocket_Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_Empty* source =
      ::google::protobuf::DynamicCastToGenerated<CProtoItemSocket_Empty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_Empty)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Empty::MergeFrom(const CProtoItemSocket_Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_socket()) {
    mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
  }
}

void CProtoItemSocket_Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Empty::CopyFrom(const CProtoItemSocket_Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Empty::IsInitialized() const {
  return true;
}

void CProtoItemSocket_Empty::Swap(CProtoItemSocket_Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_Empty::InternalSwap(CProtoItemSocket_Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(socket_, other->socket_);
}

::google::protobuf::Metadata CProtoItemSocket_Empty::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CProtoItemSocket_Effect::InitAsDefaultInstance() {
  ::proto::dota::_CProtoItemSocket_Effect_default_instance_._instance.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
}
class CProtoItemSocket_Effect::HasBitSetters {
 public:
  static const ::proto::dota::CProtoItemSocket& socket(const CProtoItemSocket_Effect* msg);
  static void set_has_socket(CProtoItemSocket_Effect* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_effect(CProtoItemSocket_Effect* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

const ::proto::dota::CProtoItemSocket&
CProtoItemSocket_Effect::HasBitSetters::socket(const CProtoItemSocket_Effect* msg) {
  return *msg->socket_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_Effect::kSocketFieldNumber;
const int CProtoItemSocket_Effect::kEffectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_Effect::CProtoItemSocket_Effect()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_Effect)
}
CProtoItemSocket_Effect::CProtoItemSocket_Effect(const CProtoItemSocket_Effect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = nullptr;
  }
  effect_ = from.effect_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_Effect)
}

void CProtoItemSocket_Effect::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CProtoItemSocket_Effect_econ_5fgcmessages_2eproto.base);
  ::memset(&socket_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&effect_) -
      reinterpret_cast<char*>(&socket_)) + sizeof(effect_));
}

CProtoItemSocket_Effect::~CProtoItemSocket_Effect() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_Effect)
  SharedDtor();
}

void CProtoItemSocket_Effect::SharedDtor() {
  if (this != internal_default_instance()) delete socket_;
}

void CProtoItemSocket_Effect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CProtoItemSocket_Effect& CProtoItemSocket_Effect::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CProtoItemSocket_Effect_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CProtoItemSocket_Effect::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_Effect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(socket_ != nullptr);
    socket_->Clear();
  }
  effect_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CProtoItemSocket_Effect::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CProtoItemSocket_Effect*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::dota::CProtoItemSocket::_InternalParse;
        object = msg->mutable_socket();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional uint32 effect = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_effect(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CProtoItemSocket_Effect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_Effect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 effect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_effect(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &effect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_Effect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_Effect)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CProtoItemSocket_Effect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_Effect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::socket(this), output);
  }

  // optional uint32 effect = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->effect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_Effect)
}

::google::protobuf::uint8* CProtoItemSocket_Effect::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_Effect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::socket(this), target);
  }

  // optional uint32 effect = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->effect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_Effect)
  return target;
}

size_t CProtoItemSocket_Effect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_Effect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .proto.dota.CProtoItemSocket socket = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *socket_);
    }

    // optional uint32 effect = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->effect());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CProtoItemSocket_Effect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_Effect)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_Effect* source =
      ::google::protobuf::DynamicCastToGenerated<CProtoItemSocket_Effect>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_Effect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_Effect)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Effect::MergeFrom(const CProtoItemSocket_Effect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_Effect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (cached_has_bits & 0x00000002u) {
      effect_ = from.effect_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket_Effect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_Effect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Effect::CopyFrom(const CProtoItemSocket_Effect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_Effect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Effect::IsInitialized() const {
  return true;
}

void CProtoItemSocket_Effect::Swap(CProtoItemSocket_Effect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_Effect::InternalSwap(CProtoItemSocket_Effect* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(socket_, other->socket_);
  swap(effect_, other->effect_);
}

::google::protobuf::Metadata CProtoItemSocket_Effect::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CProtoItemSocket_Color::InitAsDefaultInstance() {
  ::proto::dota::_CProtoItemSocket_Color_default_instance_._instance.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
}
class CProtoItemSocket_Color::HasBitSetters {
 public:
  static const ::proto::dota::CProtoItemSocket& socket(const CProtoItemSocket_Color* msg);
  static void set_has_socket(CProtoItemSocket_Color* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_red(CProtoItemSocket_Color* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_green(CProtoItemSocket_Color* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_blue(CProtoItemSocket_Color* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

const ::proto::dota::CProtoItemSocket&
CProtoItemSocket_Color::HasBitSetters::socket(const CProtoItemSocket_Color* msg) {
  return *msg->socket_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_Color::kSocketFieldNumber;
const int CProtoItemSocket_Color::kRedFieldNumber;
const int CProtoItemSocket_Color::kGreenFieldNumber;
const int CProtoItemSocket_Color::kBlueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_Color::CProtoItemSocket_Color()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_Color)
}
CProtoItemSocket_Color::CProtoItemSocket_Color(const CProtoItemSocket_Color& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = nullptr;
  }
  ::memcpy(&red_, &from.red_,
    static_cast<size_t>(reinterpret_cast<char*>(&blue_) -
    reinterpret_cast<char*>(&red_)) + sizeof(blue_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_Color)
}

void CProtoItemSocket_Color::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CProtoItemSocket_Color_econ_5fgcmessages_2eproto.base);
  ::memset(&socket_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blue_) -
      reinterpret_cast<char*>(&socket_)) + sizeof(blue_));
}

CProtoItemSocket_Color::~CProtoItemSocket_Color() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_Color)
  SharedDtor();
}

void CProtoItemSocket_Color::SharedDtor() {
  if (this != internal_default_instance()) delete socket_;
}

void CProtoItemSocket_Color::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CProtoItemSocket_Color& CProtoItemSocket_Color::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CProtoItemSocket_Color_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CProtoItemSocket_Color::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_Color)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(socket_ != nullptr);
    socket_->Clear();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&red_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&blue_) -
        reinterpret_cast<char*>(&red_)) + sizeof(blue_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CProtoItemSocket_Color::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CProtoItemSocket_Color*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::dota::CProtoItemSocket::_InternalParse;
        object = msg->mutable_socket();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional uint32 red = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_red(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 green = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_green(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 blue = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_blue(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CProtoItemSocket_Color::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_Color)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 red = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_red(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &red_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 green = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_green(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &green_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 blue = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_blue(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_Color)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_Color)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CProtoItemSocket_Color::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_Color)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::socket(this), output);
  }

  // optional uint32 red = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->red(), output);
  }

  // optional uint32 green = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->green(), output);
  }

  // optional uint32 blue = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->blue(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_Color)
}

::google::protobuf::uint8* CProtoItemSocket_Color::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_Color)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::socket(this), target);
  }

  // optional uint32 red = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->red(), target);
  }

  // optional uint32 green = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->green(), target);
  }

  // optional uint32 blue = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->blue(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_Color)
  return target;
}

size_t CProtoItemSocket_Color::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_Color)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .proto.dota.CProtoItemSocket socket = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *socket_);
    }

    // optional uint32 red = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->red());
    }

    // optional uint32 green = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->green());
    }

    // optional uint32 blue = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->blue());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CProtoItemSocket_Color::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_Color)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_Color* source =
      ::google::protobuf::DynamicCastToGenerated<CProtoItemSocket_Color>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_Color)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_Color)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Color::MergeFrom(const CProtoItemSocket_Color& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_Color)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (cached_has_bits & 0x00000002u) {
      red_ = from.red_;
    }
    if (cached_has_bits & 0x00000004u) {
      green_ = from.green_;
    }
    if (cached_has_bits & 0x00000008u) {
      blue_ = from.blue_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket_Color::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_Color)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Color::CopyFrom(const CProtoItemSocket_Color& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_Color)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Color::IsInitialized() const {
  return true;
}

void CProtoItemSocket_Color::Swap(CProtoItemSocket_Color* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_Color::InternalSwap(CProtoItemSocket_Color* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(socket_, other->socket_);
  swap(red_, other->red_);
  swap(green_, other->green_);
  swap(blue_, other->blue_);
}

::google::protobuf::Metadata CProtoItemSocket_Color::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CProtoItemSocket_Strange::InitAsDefaultInstance() {
  ::proto::dota::_CProtoItemSocket_Strange_default_instance_._instance.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
}
class CProtoItemSocket_Strange::HasBitSetters {
 public:
  static const ::proto::dota::CProtoItemSocket& socket(const CProtoItemSocket_Strange* msg);
  static void set_has_socket(CProtoItemSocket_Strange* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_strange_type(CProtoItemSocket_Strange* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_strange_value(CProtoItemSocket_Strange* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::proto::dota::CProtoItemSocket&
CProtoItemSocket_Strange::HasBitSetters::socket(const CProtoItemSocket_Strange* msg) {
  return *msg->socket_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_Strange::kSocketFieldNumber;
const int CProtoItemSocket_Strange::kStrangeTypeFieldNumber;
const int CProtoItemSocket_Strange::kStrangeValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_Strange::CProtoItemSocket_Strange()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_Strange)
}
CProtoItemSocket_Strange::CProtoItemSocket_Strange(const CProtoItemSocket_Strange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = nullptr;
  }
  ::memcpy(&strange_type_, &from.strange_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&strange_value_) -
    reinterpret_cast<char*>(&strange_type_)) + sizeof(strange_value_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_Strange)
}

void CProtoItemSocket_Strange::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CProtoItemSocket_Strange_econ_5fgcmessages_2eproto.base);
  ::memset(&socket_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&strange_value_) -
      reinterpret_cast<char*>(&socket_)) + sizeof(strange_value_));
}

CProtoItemSocket_Strange::~CProtoItemSocket_Strange() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_Strange)
  SharedDtor();
}

void CProtoItemSocket_Strange::SharedDtor() {
  if (this != internal_default_instance()) delete socket_;
}

void CProtoItemSocket_Strange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CProtoItemSocket_Strange& CProtoItemSocket_Strange::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CProtoItemSocket_Strange_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CProtoItemSocket_Strange::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_Strange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(socket_ != nullptr);
    socket_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&strange_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&strange_value_) -
        reinterpret_cast<char*>(&strange_type_)) + sizeof(strange_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CProtoItemSocket_Strange::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CProtoItemSocket_Strange*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::dota::CProtoItemSocket::_InternalParse;
        object = msg->mutable_socket();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional uint32 strange_type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_strange_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 strange_value = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_strange_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CProtoItemSocket_Strange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_Strange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 strange_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_strange_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strange_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 strange_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_strange_value(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strange_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_Strange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_Strange)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CProtoItemSocket_Strange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_Strange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::socket(this), output);
  }

  // optional uint32 strange_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strange_type(), output);
  }

  // optional uint32 strange_value = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->strange_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_Strange)
}

::google::protobuf::uint8* CProtoItemSocket_Strange::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_Strange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::socket(this), target);
  }

  // optional uint32 strange_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strange_type(), target);
  }

  // optional uint32 strange_value = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->strange_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_Strange)
  return target;
}

size_t CProtoItemSocket_Strange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_Strange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .proto.dota.CProtoItemSocket socket = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *socket_);
    }

    // optional uint32 strange_type = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strange_type());
    }

    // optional uint32 strange_value = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strange_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CProtoItemSocket_Strange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_Strange)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_Strange* source =
      ::google::protobuf::DynamicCastToGenerated<CProtoItemSocket_Strange>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_Strange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_Strange)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Strange::MergeFrom(const CProtoItemSocket_Strange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_Strange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (cached_has_bits & 0x00000002u) {
      strange_type_ = from.strange_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      strange_value_ = from.strange_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket_Strange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_Strange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Strange::CopyFrom(const CProtoItemSocket_Strange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_Strange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Strange::IsInitialized() const {
  return true;
}

void CProtoItemSocket_Strange::Swap(CProtoItemSocket_Strange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_Strange::InternalSwap(CProtoItemSocket_Strange* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(socket_, other->socket_);
  swap(strange_type_, other->strange_type_);
  swap(strange_value_, other->strange_value_);
}

::google::protobuf::Metadata CProtoItemSocket_Strange::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CProtoItemSocket_Spectator::InitAsDefaultInstance() {
  ::proto::dota::_CProtoItemSocket_Spectator_default_instance_._instance.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
}
class CProtoItemSocket_Spectator::HasBitSetters {
 public:
  static const ::proto::dota::CProtoItemSocket& socket(const CProtoItemSocket_Spectator* msg);
  static void set_has_socket(CProtoItemSocket_Spectator* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_games_viewed(CProtoItemSocket_Spectator* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_corporation_id(CProtoItemSocket_Spectator* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_league_id(CProtoItemSocket_Spectator* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_team_id(CProtoItemSocket_Spectator* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

const ::proto::dota::CProtoItemSocket&
CProtoItemSocket_Spectator::HasBitSetters::socket(const CProtoItemSocket_Spectator* msg) {
  return *msg->socket_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_Spectator::kSocketFieldNumber;
const int CProtoItemSocket_Spectator::kGamesViewedFieldNumber;
const int CProtoItemSocket_Spectator::kCorporationIdFieldNumber;
const int CProtoItemSocket_Spectator::kLeagueIdFieldNumber;
const int CProtoItemSocket_Spectator::kTeamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_Spectator::CProtoItemSocket_Spectator()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_Spectator)
}
CProtoItemSocket_Spectator::CProtoItemSocket_Spectator(const CProtoItemSocket_Spectator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = nullptr;
  }
  ::memcpy(&games_viewed_, &from.games_viewed_,
    static_cast<size_t>(reinterpret_cast<char*>(&team_id_) -
    reinterpret_cast<char*>(&games_viewed_)) + sizeof(team_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_Spectator)
}

void CProtoItemSocket_Spectator::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CProtoItemSocket_Spectator_econ_5fgcmessages_2eproto.base);
  ::memset(&socket_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&team_id_) -
      reinterpret_cast<char*>(&socket_)) + sizeof(team_id_));
}

CProtoItemSocket_Spectator::~CProtoItemSocket_Spectator() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_Spectator)
  SharedDtor();
}

void CProtoItemSocket_Spectator::SharedDtor() {
  if (this != internal_default_instance()) delete socket_;
}

void CProtoItemSocket_Spectator::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CProtoItemSocket_Spectator& CProtoItemSocket_Spectator::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CProtoItemSocket_Spectator_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CProtoItemSocket_Spectator::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_Spectator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(socket_ != nullptr);
    socket_->Clear();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&games_viewed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&team_id_) -
        reinterpret_cast<char*>(&games_viewed_)) + sizeof(team_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CProtoItemSocket_Spectator::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CProtoItemSocket_Spectator*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::dota::CProtoItemSocket::_InternalParse;
        object = msg->mutable_socket();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional uint32 games_viewed = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_games_viewed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 corporation_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_corporation_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 league_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_league_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 team_id = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_team_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CProtoItemSocket_Spectator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_Spectator)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 games_viewed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_games_viewed(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &games_viewed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 corporation_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_corporation_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &corporation_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 league_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_league_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &league_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 team_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_team_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_Spectator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_Spectator)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CProtoItemSocket_Spectator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_Spectator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::socket(this), output);
  }

  // optional uint32 games_viewed = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->games_viewed(), output);
  }

  // optional uint32 corporation_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->corporation_id(), output);
  }

  // optional uint32 league_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->league_id(), output);
  }

  // optional uint32 team_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->team_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_Spectator)
}

::google::protobuf::uint8* CProtoItemSocket_Spectator::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_Spectator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::socket(this), target);
  }

  // optional uint32 games_viewed = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->games_viewed(), target);
  }

  // optional uint32 corporation_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->corporation_id(), target);
  }

  // optional uint32 league_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->league_id(), target);
  }

  // optional uint32 team_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->team_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_Spectator)
  return target;
}

size_t CProtoItemSocket_Spectator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_Spectator)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .proto.dota.CProtoItemSocket socket = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *socket_);
    }

    // optional uint32 games_viewed = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->games_viewed());
    }

    // optional uint32 corporation_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->corporation_id());
    }

    // optional uint32 league_id = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->league_id());
    }

    // optional uint32 team_id = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->team_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CProtoItemSocket_Spectator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_Spectator)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_Spectator* source =
      ::google::protobuf::DynamicCastToGenerated<CProtoItemSocket_Spectator>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_Spectator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_Spectator)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Spectator::MergeFrom(const CProtoItemSocket_Spectator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_Spectator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (cached_has_bits & 0x00000002u) {
      games_viewed_ = from.games_viewed_;
    }
    if (cached_has_bits & 0x00000004u) {
      corporation_id_ = from.corporation_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      league_id_ = from.league_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      team_id_ = from.team_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket_Spectator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_Spectator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Spectator::CopyFrom(const CProtoItemSocket_Spectator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_Spectator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Spectator::IsInitialized() const {
  return true;
}

void CProtoItemSocket_Spectator::Swap(CProtoItemSocket_Spectator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_Spectator::InternalSwap(CProtoItemSocket_Spectator* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(socket_, other->socket_);
  swap(games_viewed_, other->games_viewed_);
  swap(corporation_id_, other->corporation_id_);
  swap(league_id_, other->league_id_);
  swap(team_id_, other->team_id_);
}

::google::protobuf::Metadata CProtoItemSocket_Spectator::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CProtoItemSocket_AssetModifier::InitAsDefaultInstance() {
  ::proto::dota::_CProtoItemSocket_AssetModifier_default_instance_._instance.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
}
class CProtoItemSocket_AssetModifier::HasBitSetters {
 public:
  static const ::proto::dota::CProtoItemSocket& socket(const CProtoItemSocket_AssetModifier* msg);
  static void set_has_socket(CProtoItemSocket_AssetModifier* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_asset_modifier(CProtoItemSocket_AssetModifier* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

const ::proto::dota::CProtoItemSocket&
CProtoItemSocket_AssetModifier::HasBitSetters::socket(const CProtoItemSocket_AssetModifier* msg) {
  return *msg->socket_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_AssetModifier::kSocketFieldNumber;
const int CProtoItemSocket_AssetModifier::kAssetModifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_AssetModifier::CProtoItemSocket_AssetModifier()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_AssetModifier)
}
CProtoItemSocket_AssetModifier::CProtoItemSocket_AssetModifier(const CProtoItemSocket_AssetModifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = nullptr;
  }
  asset_modifier_ = from.asset_modifier_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_AssetModifier)
}

void CProtoItemSocket_AssetModifier::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CProtoItemSocket_AssetModifier_econ_5fgcmessages_2eproto.base);
  ::memset(&socket_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&asset_modifier_) -
      reinterpret_cast<char*>(&socket_)) + sizeof(asset_modifier_));
}

CProtoItemSocket_AssetModifier::~CProtoItemSocket_AssetModifier() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_AssetModifier)
  SharedDtor();
}

void CProtoItemSocket_AssetModifier::SharedDtor() {
  if (this != internal_default_instance()) delete socket_;
}

void CProtoItemSocket_AssetModifier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CProtoItemSocket_AssetModifier& CProtoItemSocket_AssetModifier::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CProtoItemSocket_AssetModifier_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CProtoItemSocket_AssetModifier::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_AssetModifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(socket_ != nullptr);
    socket_->Clear();
  }
  asset_modifier_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CProtoItemSocket_AssetModifier::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CProtoItemSocket_AssetModifier*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::dota::CProtoItemSocket::_InternalParse;
        object = msg->mutable_socket();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional uint32 asset_modifier = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_asset_modifier(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CProtoItemSocket_AssetModifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_AssetModifier)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 asset_modifier = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_asset_modifier(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &asset_modifier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_AssetModifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_AssetModifier)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CProtoItemSocket_AssetModifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_AssetModifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::socket(this), output);
  }

  // optional uint32 asset_modifier = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->asset_modifier(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_AssetModifier)
}

::google::protobuf::uint8* CProtoItemSocket_AssetModifier::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_AssetModifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::socket(this), target);
  }

  // optional uint32 asset_modifier = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->asset_modifier(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_AssetModifier)
  return target;
}

size_t CProtoItemSocket_AssetModifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_AssetModifier)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .proto.dota.CProtoItemSocket socket = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *socket_);
    }

    // optional uint32 asset_modifier = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->asset_modifier());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CProtoItemSocket_AssetModifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_AssetModifier)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_AssetModifier* source =
      ::google::protobuf::DynamicCastToGenerated<CProtoItemSocket_AssetModifier>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_AssetModifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_AssetModifier)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_AssetModifier::MergeFrom(const CProtoItemSocket_AssetModifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_AssetModifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (cached_has_bits & 0x00000002u) {
      asset_modifier_ = from.asset_modifier_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket_AssetModifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_AssetModifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_AssetModifier::CopyFrom(const CProtoItemSocket_AssetModifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_AssetModifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_AssetModifier::IsInitialized() const {
  return true;
}

void CProtoItemSocket_AssetModifier::Swap(CProtoItemSocket_AssetModifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_AssetModifier::InternalSwap(CProtoItemSocket_AssetModifier* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(socket_, other->socket_);
  swap(asset_modifier_, other->asset_modifier_);
}

::google::protobuf::Metadata CProtoItemSocket_AssetModifier::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::InitAsDefaultInstance() {
  ::proto::dota::_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_default_instance_._instance.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
}
class CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::HasBitSetters {
 public:
  static const ::proto::dota::CProtoItemSocket& socket(const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* msg);
  static void set_has_socket(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_asset_modifier(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_anim_modifier(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_ability_effect(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

const ::proto::dota::CProtoItemSocket&
CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::HasBitSetters::socket(const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* msg) {
  return *msg->socket_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::kSocketFieldNumber;
const int CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::kAssetModifierFieldNumber;
const int CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::kAnimModifierFieldNumber;
const int CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::kAbilityEffectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
}
CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = nullptr;
  }
  ::memcpy(&asset_modifier_, &from.asset_modifier_,
    static_cast<size_t>(reinterpret_cast<char*>(&ability_effect_) -
    reinterpret_cast<char*>(&asset_modifier_)) + sizeof(ability_effect_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_econ_5fgcmessages_2eproto.base);
  ::memset(&socket_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ability_effect_) -
      reinterpret_cast<char*>(&socket_)) + sizeof(ability_effect_));
}

CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::~CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  SharedDtor();
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::SharedDtor() {
  if (this != internal_default_instance()) delete socket_;
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(socket_ != nullptr);
    socket_->Clear();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&asset_modifier_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ability_effect_) -
        reinterpret_cast<char*>(&asset_modifier_)) + sizeof(ability_effect_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::dota::CProtoItemSocket::_InternalParse;
        object = msg->mutable_socket();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional uint32 asset_modifier = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_asset_modifier(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 anim_modifier = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_anim_modifier(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 ability_effect = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_ability_effect(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 asset_modifier = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_asset_modifier(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &asset_modifier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 anim_modifier = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_anim_modifier(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &anim_modifier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_effect = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_ability_effect(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_effect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::socket(this), output);
  }

  // optional uint32 asset_modifier = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->asset_modifier(), output);
  }

  // optional uint32 anim_modifier = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->anim_modifier(), output);
  }

  // optional uint32 ability_effect = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ability_effect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
}

::google::protobuf::uint8* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::socket(this), target);
  }

  // optional uint32 asset_modifier = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->asset_modifier(), target);
  }

  // optional uint32 anim_modifier = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->anim_modifier(), target);
  }

  // optional uint32 ability_effect = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ability_effect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  return target;
}

size_t CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .proto.dota.CProtoItemSocket socket = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *socket_);
    }

    // optional uint32 asset_modifier = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->asset_modifier());
    }

    // optional uint32 anim_modifier = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->anim_modifier());
    }

    // optional uint32 ability_effect = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_effect());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* source =
      ::google::protobuf::DynamicCastToGenerated<CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::MergeFrom(const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (cached_has_bits & 0x00000002u) {
      asset_modifier_ = from.asset_modifier_;
    }
    if (cached_has_bits & 0x00000004u) {
      anim_modifier_ = from.anim_modifier_;
    }
    if (cached_has_bits & 0x00000008u) {
      ability_effect_ = from.ability_effect_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::CopyFrom(const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::IsInitialized() const {
  return true;
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::Swap(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::InternalSwap(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(socket_, other->socket_);
  swap(asset_modifier_, other->asset_modifier_);
  swap(anim_modifier_, other->anim_modifier_);
  swap(ability_effect_, other->ability_effect_);
}

::google::protobuf::Metadata CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CProtoItemSocket_Autograph::InitAsDefaultInstance() {
  ::proto::dota::_CProtoItemSocket_Autograph_default_instance_._instance.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
}
class CProtoItemSocket_Autograph::HasBitSetters {
 public:
  static const ::proto::dota::CProtoItemSocket& socket(const CProtoItemSocket_Autograph* msg);
  static void set_has_socket(CProtoItemSocket_Autograph* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_autograph(CProtoItemSocket_Autograph* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_autograph_id(CProtoItemSocket_Autograph* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_autograph_score(CProtoItemSocket_Autograph* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

const ::proto::dota::CProtoItemSocket&
CProtoItemSocket_Autograph::HasBitSetters::socket(const CProtoItemSocket_Autograph* msg) {
  return *msg->socket_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_Autograph::kSocketFieldNumber;
const int CProtoItemSocket_Autograph::kAutographFieldNumber;
const int CProtoItemSocket_Autograph::kAutographIdFieldNumber;
const int CProtoItemSocket_Autograph::kAutographScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_Autograph::CProtoItemSocket_Autograph()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_Autograph)
}
CProtoItemSocket_Autograph::CProtoItemSocket_Autograph(const CProtoItemSocket_Autograph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  autograph_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_autograph()) {
    autograph_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.autograph_);
  }
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = nullptr;
  }
  ::memcpy(&autograph_id_, &from.autograph_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&autograph_score_) -
    reinterpret_cast<char*>(&autograph_id_)) + sizeof(autograph_score_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_Autograph)
}

void CProtoItemSocket_Autograph::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CProtoItemSocket_Autograph_econ_5fgcmessages_2eproto.base);
  autograph_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&socket_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&autograph_score_) -
      reinterpret_cast<char*>(&socket_)) + sizeof(autograph_score_));
}

CProtoItemSocket_Autograph::~CProtoItemSocket_Autograph() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_Autograph)
  SharedDtor();
}

void CProtoItemSocket_Autograph::SharedDtor() {
  autograph_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete socket_;
}

void CProtoItemSocket_Autograph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CProtoItemSocket_Autograph& CProtoItemSocket_Autograph::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CProtoItemSocket_Autograph_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CProtoItemSocket_Autograph::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_Autograph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      autograph_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(socket_ != nullptr);
      socket_->Clear();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&autograph_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&autograph_score_) -
        reinterpret_cast<char*>(&autograph_id_)) + sizeof(autograph_score_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CProtoItemSocket_Autograph::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CProtoItemSocket_Autograph*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::dota::CProtoItemSocket::_InternalParse;
        object = msg->mutable_socket();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional string autograph = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CProtoItemSocket_Autograph.autograph");
        object = msg->mutable_autograph();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 autograph_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_autograph_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 autograph_score = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_autograph_score(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CProtoItemSocket_Autograph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_Autograph)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string autograph = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_autograph()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->autograph().data(), static_cast<int>(this->autograph().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CProtoItemSocket_Autograph.autograph");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 autograph_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_autograph_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &autograph_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 autograph_score = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_autograph_score(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &autograph_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_Autograph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_Autograph)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CProtoItemSocket_Autograph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_Autograph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::socket(this), output);
  }

  // optional string autograph = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->autograph().data(), static_cast<int>(this->autograph().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CProtoItemSocket_Autograph.autograph");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->autograph(), output);
  }

  // optional uint32 autograph_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->autograph_id(), output);
  }

  // optional uint32 autograph_score = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->autograph_score(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_Autograph)
}

::google::protobuf::uint8* CProtoItemSocket_Autograph::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_Autograph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::socket(this), target);
  }

  // optional string autograph = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->autograph().data(), static_cast<int>(this->autograph().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CProtoItemSocket_Autograph.autograph");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->autograph(), target);
  }

  // optional uint32 autograph_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->autograph_id(), target);
  }

  // optional uint32 autograph_score = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->autograph_score(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_Autograph)
  return target;
}

size_t CProtoItemSocket_Autograph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_Autograph)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string autograph = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->autograph());
    }

    // optional .proto.dota.CProtoItemSocket socket = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *socket_);
    }

    // optional uint32 autograph_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->autograph_id());
    }

    // optional uint32 autograph_score = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->autograph_score());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CProtoItemSocket_Autograph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_Autograph)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_Autograph* source =
      ::google::protobuf::DynamicCastToGenerated<CProtoItemSocket_Autograph>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_Autograph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_Autograph)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Autograph::MergeFrom(const CProtoItemSocket_Autograph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_Autograph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      autograph_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.autograph_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (cached_has_bits & 0x00000004u) {
      autograph_id_ = from.autograph_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      autograph_score_ = from.autograph_score_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket_Autograph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_Autograph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Autograph::CopyFrom(const CProtoItemSocket_Autograph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_Autograph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Autograph::IsInitialized() const {
  return true;
}

void CProtoItemSocket_Autograph::Swap(CProtoItemSocket_Autograph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_Autograph::InternalSwap(CProtoItemSocket_Autograph* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  autograph_.Swap(&other->autograph_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(socket_, other->socket_);
  swap(autograph_id_, other->autograph_id_);
  swap(autograph_score_, other->autograph_score_);
}

::google::protobuf::Metadata CProtoItemSocket_Autograph::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CProtoItemSocket_StaticVisuals::InitAsDefaultInstance() {
  ::proto::dota::_CProtoItemSocket_StaticVisuals_default_instance_._instance.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
}
class CProtoItemSocket_StaticVisuals::HasBitSetters {
 public:
  static const ::proto::dota::CProtoItemSocket& socket(const CProtoItemSocket_StaticVisuals* msg);
  static void set_has_socket(CProtoItemSocket_StaticVisuals* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::proto::dota::CProtoItemSocket&
CProtoItemSocket_StaticVisuals::HasBitSetters::socket(const CProtoItemSocket_StaticVisuals* msg) {
  return *msg->socket_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_StaticVisuals::kSocketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_StaticVisuals::CProtoItemSocket_StaticVisuals()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_StaticVisuals)
}
CProtoItemSocket_StaticVisuals::CProtoItemSocket_StaticVisuals(const CProtoItemSocket_StaticVisuals& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_StaticVisuals)
}

void CProtoItemSocket_StaticVisuals::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CProtoItemSocket_StaticVisuals_econ_5fgcmessages_2eproto.base);
  socket_ = nullptr;
}

CProtoItemSocket_StaticVisuals::~CProtoItemSocket_StaticVisuals() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_StaticVisuals)
  SharedDtor();
}

void CProtoItemSocket_StaticVisuals::SharedDtor() {
  if (this != internal_default_instance()) delete socket_;
}

void CProtoItemSocket_StaticVisuals::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CProtoItemSocket_StaticVisuals& CProtoItemSocket_StaticVisuals::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CProtoItemSocket_StaticVisuals_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CProtoItemSocket_StaticVisuals::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_StaticVisuals)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(socket_ != nullptr);
    socket_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CProtoItemSocket_StaticVisuals::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CProtoItemSocket_StaticVisuals*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::dota::CProtoItemSocket::_InternalParse;
        object = msg->mutable_socket();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CProtoItemSocket_StaticVisuals::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_StaticVisuals)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_StaticVisuals)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_StaticVisuals)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CProtoItemSocket_StaticVisuals::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_StaticVisuals)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::socket(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_StaticVisuals)
}

::google::protobuf::uint8* CProtoItemSocket_StaticVisuals::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_StaticVisuals)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::socket(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_StaticVisuals)
  return target;
}

size_t CProtoItemSocket_StaticVisuals::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_StaticVisuals)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.dota.CProtoItemSocket socket = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *socket_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CProtoItemSocket_StaticVisuals::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_StaticVisuals)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_StaticVisuals* source =
      ::google::protobuf::DynamicCastToGenerated<CProtoItemSocket_StaticVisuals>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_StaticVisuals)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_StaticVisuals)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_StaticVisuals::MergeFrom(const CProtoItemSocket_StaticVisuals& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_StaticVisuals)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_socket()) {
    mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
  }
}

void CProtoItemSocket_StaticVisuals::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_StaticVisuals)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_StaticVisuals::CopyFrom(const CProtoItemSocket_StaticVisuals& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_StaticVisuals)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_StaticVisuals::IsInitialized() const {
  return true;
}

void CProtoItemSocket_StaticVisuals::Swap(CProtoItemSocket_StaticVisuals* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_StaticVisuals::InternalSwap(CProtoItemSocket_StaticVisuals* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(socket_, other->socket_);
}

::google::protobuf::Metadata CProtoItemSocket_StaticVisuals::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CAttribute_String::InitAsDefaultInstance() {
}
class CAttribute_String::HasBitSetters {
 public:
  static void set_has_value(CAttribute_String* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CAttribute_String::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CAttribute_String::CAttribute_String()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CAttribute_String)
}
CAttribute_String::CAttribute_String(const CAttribute_String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.dota.CAttribute_String)
}

void CAttribute_String::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CAttribute_String_econ_5fgcmessages_2eproto.base);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CAttribute_String::~CAttribute_String() {
  // @@protoc_insertion_point(destructor:proto.dota.CAttribute_String)
  SharedDtor();
}

void CAttribute_String::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CAttribute_String::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CAttribute_String& CAttribute_String::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CAttribute_String_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CAttribute_String::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CAttribute_String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    value_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CAttribute_String::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CAttribute_String*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CAttribute_String.value");
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CAttribute_String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CAttribute_String)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CAttribute_String.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CAttribute_String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CAttribute_String)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CAttribute_String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CAttribute_String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CAttribute_String.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CAttribute_String)
}

::google::protobuf::uint8* CAttribute_String::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CAttribute_String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CAttribute_String.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CAttribute_String)
  return target;
}

size_t CAttribute_String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CAttribute_String)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string value = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CAttribute_String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CAttribute_String)
  GOOGLE_DCHECK_NE(&from, this);
  const CAttribute_String* source =
      ::google::protobuf::DynamicCastToGenerated<CAttribute_String>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CAttribute_String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CAttribute_String)
    MergeFrom(*source);
  }
}

void CAttribute_String::MergeFrom(const CAttribute_String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CAttribute_String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _has_bits_[0] |= 0x00000001u;
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void CAttribute_String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CAttribute_String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CAttribute_String::CopyFrom(const CAttribute_String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CAttribute_String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CAttribute_String::IsInitialized() const {
  return true;
}

void CAttribute_String::Swap(CAttribute_String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CAttribute_String::InternalSwap(CAttribute_String* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CAttribute_String::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CWorkshop_GetItemDailyRevenue_Request::InitAsDefaultInstance() {
}
class CWorkshop_GetItemDailyRevenue_Request::HasBitSetters {
 public:
  static void set_has_appid(CWorkshop_GetItemDailyRevenue_Request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_item_id(CWorkshop_GetItemDailyRevenue_Request* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_date_start(CWorkshop_GetItemDailyRevenue_Request* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_date_end(CWorkshop_GetItemDailyRevenue_Request* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetItemDailyRevenue_Request::kAppidFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Request::kItemIdFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Request::kDateStartFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Request::kDateEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetItemDailyRevenue_Request::CWorkshop_GetItemDailyRevenue_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
}
CWorkshop_GetItemDailyRevenue_Request::CWorkshop_GetItemDailyRevenue_Request(const CWorkshop_GetItemDailyRevenue_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&date_end_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(date_end_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
}

void CWorkshop_GetItemDailyRevenue_Request::SharedCtor() {
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&date_end_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(date_end_));
}

CWorkshop_GetItemDailyRevenue_Request::~CWorkshop_GetItemDailyRevenue_Request() {
  // @@protoc_insertion_point(destructor:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  SharedDtor();
}

void CWorkshop_GetItemDailyRevenue_Request::SharedDtor() {
}

void CWorkshop_GetItemDailyRevenue_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CWorkshop_GetItemDailyRevenue_Request& CWorkshop_GetItemDailyRevenue_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CWorkshop_GetItemDailyRevenue_Request_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CWorkshop_GetItemDailyRevenue_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&date_end_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(date_end_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CWorkshop_GetItemDailyRevenue_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CWorkshop_GetItemDailyRevenue_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_appid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 item_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 date_start = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_date_start(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 date_end = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_date_end(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CWorkshop_GetItemDailyRevenue_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_appid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 date_start = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_date_start(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 date_end = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_date_end(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CWorkshop_GetItemDailyRevenue_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_id(), output);
  }

  // optional uint32 date_start = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->date_start(), output);
  }

  // optional uint32 date_end = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->date_end(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
}

::google::protobuf::uint8* CWorkshop_GetItemDailyRevenue_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_id(), target);
  }

  // optional uint32 date_start = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->date_start(), target);
  }

  // optional uint32 date_end = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->date_end(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  return target;
}

size_t CWorkshop_GetItemDailyRevenue_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 appid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 item_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_id());
    }

    // optional uint32 date_start = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->date_start());
    }

    // optional uint32 date_end = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->date_end());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CWorkshop_GetItemDailyRevenue_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetItemDailyRevenue_Request* source =
      ::google::protobuf::DynamicCastToGenerated<CWorkshop_GetItemDailyRevenue_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
    MergeFrom(*source);
  }
}

void CWorkshop_GetItemDailyRevenue_Request::MergeFrom(const CWorkshop_GetItemDailyRevenue_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      date_start_ = from.date_start_;
    }
    if (cached_has_bits & 0x00000008u) {
      date_end_ = from.date_end_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CWorkshop_GetItemDailyRevenue_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetItemDailyRevenue_Request::CopyFrom(const CWorkshop_GetItemDailyRevenue_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetItemDailyRevenue_Request::IsInitialized() const {
  return true;
}

void CWorkshop_GetItemDailyRevenue_Request::Swap(CWorkshop_GetItemDailyRevenue_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetItemDailyRevenue_Request::InternalSwap(CWorkshop_GetItemDailyRevenue_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(appid_, other->appid_);
  swap(item_id_, other->item_id_);
  swap(date_start_, other->date_start_);
  swap(date_end_, other->date_end_);
}

::google::protobuf::Metadata CWorkshop_GetItemDailyRevenue_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::InitAsDefaultInstance() {
}
class CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::HasBitSetters {
 public:
  static void set_has_country_code(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_date(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_revenue_usd(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_units(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::kCountryCodeFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::kDateFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::kRevenueUsdFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::kUnitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
}
CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue(const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country_code()) {
    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  ::memcpy(&revenue_usd_, &from.revenue_usd_,
    static_cast<size_t>(reinterpret_cast<char*>(&units_) -
    reinterpret_cast<char*>(&revenue_usd_)) + sizeof(units_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto.base);
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&revenue_usd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&units_) -
      reinterpret_cast<char*>(&revenue_usd_)) + sizeof(units_));
}

CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::~CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue() {
  // @@protoc_insertion_point(destructor:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  SharedDtor();
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::SharedDtor() {
  country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    country_code_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&revenue_usd_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&units_) -
        reinterpret_cast<char*>(&revenue_usd_)) + sizeof(units_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string country_code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code");
        object = msg->mutable_country_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 date = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_date(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int64 revenue_usd = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_revenue_usd(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 units = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_units(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string country_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country_code().data(), static_cast<int>(this->country_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 date = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_date(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 revenue_usd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_revenue_usd(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &revenue_usd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 units = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_units(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &units_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string country_code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->country_code(), output);
  }

  // optional uint32 date = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->date(), output);
  }

  // optional int64 revenue_usd = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->revenue_usd(), output);
  }

  // optional int32 units = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->units(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
}

::google::protobuf::uint8* CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string country_code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->country_code(), target);
  }

  // optional uint32 date = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->date(), target);
  }

  // optional int64 revenue_usd = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->revenue_usd(), target);
  }

  // optional int32 units = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->units(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  return target;
}

size_t CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string country_code = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country_code());
    }

    // optional int64 revenue_usd = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->revenue_usd());
    }

    // optional uint32 date = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->date());
    }

    // optional int32 units = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->units());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* source =
      ::google::protobuf::DynamicCastToGenerated<CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
    MergeFrom(*source);
  }
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::MergeFrom(const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      revenue_usd_ = from.revenue_usd_;
    }
    if (cached_has_bits & 0x00000004u) {
      date_ = from.date_;
    }
    if (cached_has_bits & 0x00000008u) {
      units_ = from.units_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::CopyFrom(const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::IsInitialized() const {
  return true;
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::Swap(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::InternalSwap(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  country_code_.Swap(&other->country_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(revenue_usd_, other->revenue_usd_);
  swap(date_, other->date_);
  swap(units_, other->units_);
}

::google::protobuf::Metadata CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CWorkshop_GetItemDailyRevenue_Response::InitAsDefaultInstance() {
}
class CWorkshop_GetItemDailyRevenue_Response::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetItemDailyRevenue_Response::kCountryRevenueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetItemDailyRevenue_Response::CWorkshop_GetItemDailyRevenue_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
}
CWorkshop_GetItemDailyRevenue_Response::CWorkshop_GetItemDailyRevenue_Response(const CWorkshop_GetItemDailyRevenue_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      country_revenue_(from.country_revenue_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
}

void CWorkshop_GetItemDailyRevenue_Response::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CWorkshop_GetItemDailyRevenue_Response_econ_5fgcmessages_2eproto.base);
}

CWorkshop_GetItemDailyRevenue_Response::~CWorkshop_GetItemDailyRevenue_Response() {
  // @@protoc_insertion_point(destructor:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  SharedDtor();
}

void CWorkshop_GetItemDailyRevenue_Response::SharedDtor() {
}

void CWorkshop_GetItemDailyRevenue_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CWorkshop_GetItemDailyRevenue_Response& CWorkshop_GetItemDailyRevenue_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CWorkshop_GetItemDailyRevenue_Response_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CWorkshop_GetItemDailyRevenue_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  country_revenue_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CWorkshop_GetItemDailyRevenue_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CWorkshop_GetItemDailyRevenue_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::_InternalParse;
          object = msg->add_country_revenue();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CWorkshop_GetItemDailyRevenue_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_country_revenue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CWorkshop_GetItemDailyRevenue_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->country_revenue_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->country_revenue(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
}

::google::protobuf::uint8* CWorkshop_GetItemDailyRevenue_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->country_revenue_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->country_revenue(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  return target;
}

size_t CWorkshop_GetItemDailyRevenue_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->country_revenue_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->country_revenue(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CWorkshop_GetItemDailyRevenue_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetItemDailyRevenue_Response* source =
      ::google::protobuf::DynamicCastToGenerated<CWorkshop_GetItemDailyRevenue_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
    MergeFrom(*source);
  }
}

void CWorkshop_GetItemDailyRevenue_Response::MergeFrom(const CWorkshop_GetItemDailyRevenue_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  country_revenue_.MergeFrom(from.country_revenue_);
}

void CWorkshop_GetItemDailyRevenue_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetItemDailyRevenue_Response::CopyFrom(const CWorkshop_GetItemDailyRevenue_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetItemDailyRevenue_Response::IsInitialized() const {
  return true;
}

void CWorkshop_GetItemDailyRevenue_Response::Swap(CWorkshop_GetItemDailyRevenue_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetItemDailyRevenue_Response::InternalSwap(CWorkshop_GetItemDailyRevenue_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&country_revenue_)->InternalSwap(CastToBase(&other->country_revenue_));
}

::google::protobuf::Metadata CWorkshop_GetItemDailyRevenue_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CWorkshop_GetPackageDailyRevenue_Request::InitAsDefaultInstance() {
}
class CWorkshop_GetPackageDailyRevenue_Request::HasBitSetters {
 public:
  static void set_has_packageid(CWorkshop_GetPackageDailyRevenue_Request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_date_start(CWorkshop_GetPackageDailyRevenue_Request* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_date_end(CWorkshop_GetPackageDailyRevenue_Request* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetPackageDailyRevenue_Request::kPackageidFieldNumber;
const int CWorkshop_GetPackageDailyRevenue_Request::kDateStartFieldNumber;
const int CWorkshop_GetPackageDailyRevenue_Request::kDateEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetPackageDailyRevenue_Request::CWorkshop_GetPackageDailyRevenue_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
}
CWorkshop_GetPackageDailyRevenue_Request::CWorkshop_GetPackageDailyRevenue_Request(const CWorkshop_GetPackageDailyRevenue_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packageid_, &from.packageid_,
    static_cast<size_t>(reinterpret_cast<char*>(&date_end_) -
    reinterpret_cast<char*>(&packageid_)) + sizeof(date_end_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
}

void CWorkshop_GetPackageDailyRevenue_Request::SharedCtor() {
  ::memset(&packageid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&date_end_) -
      reinterpret_cast<char*>(&packageid_)) + sizeof(date_end_));
}

CWorkshop_GetPackageDailyRevenue_Request::~CWorkshop_GetPackageDailyRevenue_Request() {
  // @@protoc_insertion_point(destructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  SharedDtor();
}

void CWorkshop_GetPackageDailyRevenue_Request::SharedDtor() {
}

void CWorkshop_GetPackageDailyRevenue_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CWorkshop_GetPackageDailyRevenue_Request& CWorkshop_GetPackageDailyRevenue_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CWorkshop_GetPackageDailyRevenue_Request_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CWorkshop_GetPackageDailyRevenue_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&packageid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&date_end_) -
        reinterpret_cast<char*>(&packageid_)) + sizeof(date_end_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CWorkshop_GetPackageDailyRevenue_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CWorkshop_GetPackageDailyRevenue_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 packageid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_packageid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 date_start = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_date_start(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 date_end = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_date_end(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CWorkshop_GetPackageDailyRevenue_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 packageid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_packageid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 date_start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_date_start(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 date_end = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_date_end(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CWorkshop_GetPackageDailyRevenue_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->packageid(), output);
  }

  // optional uint32 date_start = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->date_start(), output);
  }

  // optional uint32 date_end = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->date_end(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
}

::google::protobuf::uint8* CWorkshop_GetPackageDailyRevenue_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->packageid(), target);
  }

  // optional uint32 date_start = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->date_start(), target);
  }

  // optional uint32 date_end = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->date_end(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  return target;
}

size_t CWorkshop_GetPackageDailyRevenue_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 packageid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->packageid());
    }

    // optional uint32 date_start = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->date_start());
    }

    // optional uint32 date_end = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->date_end());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CWorkshop_GetPackageDailyRevenue_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetPackageDailyRevenue_Request* source =
      ::google::protobuf::DynamicCastToGenerated<CWorkshop_GetPackageDailyRevenue_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
    MergeFrom(*source);
  }
}

void CWorkshop_GetPackageDailyRevenue_Request::MergeFrom(const CWorkshop_GetPackageDailyRevenue_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      packageid_ = from.packageid_;
    }
    if (cached_has_bits & 0x00000002u) {
      date_start_ = from.date_start_;
    }
    if (cached_has_bits & 0x00000004u) {
      date_end_ = from.date_end_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CWorkshop_GetPackageDailyRevenue_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetPackageDailyRevenue_Request::CopyFrom(const CWorkshop_GetPackageDailyRevenue_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetPackageDailyRevenue_Request::IsInitialized() const {
  return true;
}

void CWorkshop_GetPackageDailyRevenue_Request::Swap(CWorkshop_GetPackageDailyRevenue_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetPackageDailyRevenue_Request::InternalSwap(CWorkshop_GetPackageDailyRevenue_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(packageid_, other->packageid_);
  swap(date_start_, other->date_start_);
  swap(date_end_, other->date_end_);
}

::google::protobuf::Metadata CWorkshop_GetPackageDailyRevenue_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::InitAsDefaultInstance() {
}
class CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::HasBitSetters {
 public:
  static void set_has_country_code(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_date(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_revenue_usd(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_units(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::kCountryCodeFieldNumber;
const int CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::kDateFieldNumber;
const int CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::kRevenueUsdFieldNumber;
const int CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::kUnitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
}
CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue(const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country_code()) {
    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  ::memcpy(&revenue_usd_, &from.revenue_usd_,
    static_cast<size_t>(reinterpret_cast<char*>(&units_) -
    reinterpret_cast<char*>(&revenue_usd_)) + sizeof(units_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto.base);
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&revenue_usd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&units_) -
      reinterpret_cast<char*>(&revenue_usd_)) + sizeof(units_));
}

CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::~CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue() {
  // @@protoc_insertion_point(destructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  SharedDtor();
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::SharedDtor() {
  country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    country_code_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&revenue_usd_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&units_) -
        reinterpret_cast<char*>(&revenue_usd_)) + sizeof(units_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string country_code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code");
        object = msg->mutable_country_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 date = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_date(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int64 revenue_usd = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_revenue_usd(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 units = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_units(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string country_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country_code().data(), static_cast<int>(this->country_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 date = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_date(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 revenue_usd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_revenue_usd(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &revenue_usd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 units = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_units(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &units_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string country_code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->country_code(), output);
  }

  // optional uint32 date = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->date(), output);
  }

  // optional int64 revenue_usd = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->revenue_usd(), output);
  }

  // optional int32 units = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->units(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
}

::google::protobuf::uint8* CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string country_code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->country_code(), target);
  }

  // optional uint32 date = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->date(), target);
  }

  // optional int64 revenue_usd = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->revenue_usd(), target);
  }

  // optional int32 units = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->units(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  return target;
}

size_t CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string country_code = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country_code());
    }

    // optional int64 revenue_usd = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->revenue_usd());
    }

    // optional uint32 date = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->date());
    }

    // optional int32 units = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->units());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* source =
      ::google::protobuf::DynamicCastToGenerated<CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
    MergeFrom(*source);
  }
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::MergeFrom(const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      revenue_usd_ = from.revenue_usd_;
    }
    if (cached_has_bits & 0x00000004u) {
      date_ = from.date_;
    }
    if (cached_has_bits & 0x00000008u) {
      units_ = from.units_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::CopyFrom(const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::IsInitialized() const {
  return true;
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::Swap(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::InternalSwap(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  country_code_.Swap(&other->country_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(revenue_usd_, other->revenue_usd_);
  swap(date_, other->date_);
  swap(units_, other->units_);
}

::google::protobuf::Metadata CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CWorkshop_GetPackageDailyRevenue_Response::InitAsDefaultInstance() {
}
class CWorkshop_GetPackageDailyRevenue_Response::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetPackageDailyRevenue_Response::kCountryRevenueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetPackageDailyRevenue_Response::CWorkshop_GetPackageDailyRevenue_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
}
CWorkshop_GetPackageDailyRevenue_Response::CWorkshop_GetPackageDailyRevenue_Response(const CWorkshop_GetPackageDailyRevenue_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      country_revenue_(from.country_revenue_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
}

void CWorkshop_GetPackageDailyRevenue_Response::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CWorkshop_GetPackageDailyRevenue_Response_econ_5fgcmessages_2eproto.base);
}

CWorkshop_GetPackageDailyRevenue_Response::~CWorkshop_GetPackageDailyRevenue_Response() {
  // @@protoc_insertion_point(destructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  SharedDtor();
}

void CWorkshop_GetPackageDailyRevenue_Response::SharedDtor() {
}

void CWorkshop_GetPackageDailyRevenue_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CWorkshop_GetPackageDailyRevenue_Response& CWorkshop_GetPackageDailyRevenue_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CWorkshop_GetPackageDailyRevenue_Response_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CWorkshop_GetPackageDailyRevenue_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  country_revenue_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CWorkshop_GetPackageDailyRevenue_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CWorkshop_GetPackageDailyRevenue_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::_InternalParse;
          object = msg->add_country_revenue();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CWorkshop_GetPackageDailyRevenue_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_country_revenue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CWorkshop_GetPackageDailyRevenue_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->country_revenue_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->country_revenue(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
}

::google::protobuf::uint8* CWorkshop_GetPackageDailyRevenue_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->country_revenue_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->country_revenue(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  return target;
}

size_t CWorkshop_GetPackageDailyRevenue_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->country_revenue_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->country_revenue(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CWorkshop_GetPackageDailyRevenue_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetPackageDailyRevenue_Response* source =
      ::google::protobuf::DynamicCastToGenerated<CWorkshop_GetPackageDailyRevenue_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
    MergeFrom(*source);
  }
}

void CWorkshop_GetPackageDailyRevenue_Response::MergeFrom(const CWorkshop_GetPackageDailyRevenue_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  country_revenue_.MergeFrom(from.country_revenue_);
}

void CWorkshop_GetPackageDailyRevenue_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetPackageDailyRevenue_Response::CopyFrom(const CWorkshop_GetPackageDailyRevenue_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetPackageDailyRevenue_Response::IsInitialized() const {
  return true;
}

void CWorkshop_GetPackageDailyRevenue_Response::Swap(CWorkshop_GetPackageDailyRevenue_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetPackageDailyRevenue_Response::InternalSwap(CWorkshop_GetPackageDailyRevenue_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&country_revenue_)->InternalSwap(CastToBase(&other->country_revenue_));
}

::google::protobuf::Metadata CWorkshop_GetPackageDailyRevenue_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgSQLGCToGCGrantBackpackSlots::InitAsDefaultInstance() {
}
class CMsgSQLGCToGCGrantBackpackSlots::HasBitSetters {
 public:
  static void set_has_account_id(CMsgSQLGCToGCGrantBackpackSlots* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_add_slots(CMsgSQLGCToGCGrantBackpackSlots* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSQLGCToGCGrantBackpackSlots::kAccountIdFieldNumber;
const int CMsgSQLGCToGCGrantBackpackSlots::kAddSlotsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSQLGCToGCGrantBackpackSlots::CMsgSQLGCToGCGrantBackpackSlots()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
}
CMsgSQLGCToGCGrantBackpackSlots::CMsgSQLGCToGCGrantBackpackSlots(const CMsgSQLGCToGCGrantBackpackSlots& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&add_slots_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(add_slots_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
}

void CMsgSQLGCToGCGrantBackpackSlots::SharedCtor() {
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&add_slots_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(add_slots_));
}

CMsgSQLGCToGCGrantBackpackSlots::~CMsgSQLGCToGCGrantBackpackSlots() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  SharedDtor();
}

void CMsgSQLGCToGCGrantBackpackSlots::SharedDtor() {
}

void CMsgSQLGCToGCGrantBackpackSlots::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgSQLGCToGCGrantBackpackSlots& CMsgSQLGCToGCGrantBackpackSlots::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgSQLGCToGCGrantBackpackSlots_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgSQLGCToGCGrantBackpackSlots::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&add_slots_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(add_slots_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgSQLGCToGCGrantBackpackSlots::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgSQLGCToGCGrantBackpackSlots*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 add_slots = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_add_slots(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgSQLGCToGCGrantBackpackSlots::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 add_slots = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_add_slots(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &add_slots_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgSQLGCToGCGrantBackpackSlots::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 add_slots = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->add_slots(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
}

::google::protobuf::uint8* CMsgSQLGCToGCGrantBackpackSlots::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 add_slots = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->add_slots(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  return target;
}

size_t CMsgSQLGCToGCGrantBackpackSlots::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 add_slots = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->add_slots());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSQLGCToGCGrantBackpackSlots::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSQLGCToGCGrantBackpackSlots* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgSQLGCToGCGrantBackpackSlots>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
    MergeFrom(*source);
  }
}

void CMsgSQLGCToGCGrantBackpackSlots::MergeFrom(const CMsgSQLGCToGCGrantBackpackSlots& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      add_slots_ = from.add_slots_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSQLGCToGCGrantBackpackSlots::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSQLGCToGCGrantBackpackSlots::CopyFrom(const CMsgSQLGCToGCGrantBackpackSlots& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSQLGCToGCGrantBackpackSlots::IsInitialized() const {
  return true;
}

void CMsgSQLGCToGCGrantBackpackSlots::Swap(CMsgSQLGCToGCGrantBackpackSlots* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSQLGCToGCGrantBackpackSlots::InternalSwap(CMsgSQLGCToGCGrantBackpackSlots* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(account_id_, other->account_id_);
  swap(add_slots_, other->add_slots_);
}

::google::protobuf::Metadata CMsgSQLGCToGCGrantBackpackSlots::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCLookupAccountName::InitAsDefaultInstance() {
}
class CMsgClientToGCLookupAccountName::HasBitSetters {
 public:
  static void set_has_account_id(CMsgClientToGCLookupAccountName* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCLookupAccountName::kAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCLookupAccountName::CMsgClientToGCLookupAccountName()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCLookupAccountName)
}
CMsgClientToGCLookupAccountName::CMsgClientToGCLookupAccountName(const CMsgClientToGCLookupAccountName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_id_ = from.account_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCLookupAccountName)
}

void CMsgClientToGCLookupAccountName::SharedCtor() {
  account_id_ = 0u;
}

CMsgClientToGCLookupAccountName::~CMsgClientToGCLookupAccountName() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCLookupAccountName)
  SharedDtor();
}

void CMsgClientToGCLookupAccountName::SharedDtor() {
}

void CMsgClientToGCLookupAccountName::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCLookupAccountName& CMsgClientToGCLookupAccountName::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCLookupAccountName_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCLookupAccountName::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCLookupAccountName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCLookupAccountName::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCLookupAccountName*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCLookupAccountName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCLookupAccountName)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCLookupAccountName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCLookupAccountName)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCLookupAccountName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCLookupAccountName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCLookupAccountName)
}

::google::protobuf::uint8* CMsgClientToGCLookupAccountName::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCLookupAccountName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCLookupAccountName)
  return target;
}

size_t CMsgClientToGCLookupAccountName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCLookupAccountName)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 account_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCLookupAccountName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCLookupAccountName)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCLookupAccountName* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCLookupAccountName>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCLookupAccountName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCLookupAccountName)
    MergeFrom(*source);
  }
}

void CMsgClientToGCLookupAccountName::MergeFrom(const CMsgClientToGCLookupAccountName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCLookupAccountName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_account_id()) {
    set_account_id(from.account_id());
  }
}

void CMsgClientToGCLookupAccountName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCLookupAccountName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCLookupAccountName::CopyFrom(const CMsgClientToGCLookupAccountName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCLookupAccountName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCLookupAccountName::IsInitialized() const {
  return true;
}

void CMsgClientToGCLookupAccountName::Swap(CMsgClientToGCLookupAccountName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCLookupAccountName::InternalSwap(CMsgClientToGCLookupAccountName* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(account_id_, other->account_id_);
}

::google::protobuf::Metadata CMsgClientToGCLookupAccountName::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCLookupAccountNameResponse::InitAsDefaultInstance() {
}
class CMsgClientToGCLookupAccountNameResponse::HasBitSetters {
 public:
  static void set_has_account_id(CMsgClientToGCLookupAccountNameResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_account_name(CMsgClientToGCLookupAccountNameResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCLookupAccountNameResponse::kAccountIdFieldNumber;
const int CMsgClientToGCLookupAccountNameResponse::kAccountNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCLookupAccountNameResponse::CMsgClientToGCLookupAccountNameResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCLookupAccountNameResponse)
}
CMsgClientToGCLookupAccountNameResponse::CMsgClientToGCLookupAccountNameResponse(const CMsgClientToGCLookupAccountNameResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name()) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  account_id_ = from.account_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCLookupAccountNameResponse)
}

void CMsgClientToGCLookupAccountNameResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientToGCLookupAccountNameResponse_econ_5fgcmessages_2eproto.base);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_ = 0u;
}

CMsgClientToGCLookupAccountNameResponse::~CMsgClientToGCLookupAccountNameResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  SharedDtor();
}

void CMsgClientToGCLookupAccountNameResponse::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientToGCLookupAccountNameResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCLookupAccountNameResponse& CMsgClientToGCLookupAccountNameResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCLookupAccountNameResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCLookupAccountNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    account_name_.ClearNonDefaultToEmptyNoArena();
  }
  account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCLookupAccountNameResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCLookupAccountNameResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string account_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgClientToGCLookupAccountNameResponse.account_name");
        object = msg->mutable_account_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCLookupAccountNameResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name().data(), static_cast<int>(this->account_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgClientToGCLookupAccountNameResponse.account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCLookupAccountNameResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional string account_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgClientToGCLookupAccountNameResponse.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCLookupAccountNameResponse)
}

::google::protobuf::uint8* CMsgClientToGCLookupAccountNameResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional string account_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgClientToGCLookupAccountNameResponse.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  return target;
}

size_t CMsgClientToGCLookupAccountNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string account_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCLookupAccountNameResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCLookupAccountNameResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCLookupAccountNameResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCLookupAccountNameResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCLookupAccountNameResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCLookupAccountNameResponse::MergeFrom(const CMsgClientToGCLookupAccountNameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      account_id_ = from.account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCLookupAccountNameResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCLookupAccountNameResponse::CopyFrom(const CMsgClientToGCLookupAccountNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCLookupAccountNameResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCLookupAccountNameResponse::Swap(CMsgClientToGCLookupAccountNameResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCLookupAccountNameResponse::InternalSwap(CMsgClientToGCLookupAccountNameResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  account_name_.Swap(&other->account_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(account_id_, other->account_id_);
}

::google::protobuf::Metadata CMsgClientToGCLookupAccountNameResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCCreateStaticRecipe_Item::InitAsDefaultInstance() {
}
class CMsgClientToGCCreateStaticRecipe_Item::HasBitSetters {
 public:
  static void set_has_item_id(CMsgClientToGCCreateStaticRecipe_Item* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_slot_id(CMsgClientToGCCreateStaticRecipe_Item* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCCreateStaticRecipe_Item::kItemIdFieldNumber;
const int CMsgClientToGCCreateStaticRecipe_Item::kSlotIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCCreateStaticRecipe_Item::CMsgClientToGCCreateStaticRecipe_Item()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
}
CMsgClientToGCCreateStaticRecipe_Item::CMsgClientToGCCreateStaticRecipe_Item(const CMsgClientToGCCreateStaticRecipe_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&slot_id_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(slot_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
}

void CMsgClientToGCCreateStaticRecipe_Item::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&slot_id_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(slot_id_));
}

CMsgClientToGCCreateStaticRecipe_Item::~CMsgClientToGCCreateStaticRecipe_Item() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipe_Item::SharedDtor() {
}

void CMsgClientToGCCreateStaticRecipe_Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCCreateStaticRecipe_Item& CMsgClientToGCCreateStaticRecipe_Item::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCCreateStaticRecipe_Item_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCCreateStaticRecipe_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&slot_id_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(slot_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCCreateStaticRecipe_Item::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCCreateStaticRecipe_Item*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 slot_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_slot_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCCreateStaticRecipe_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 slot_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_slot_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCCreateStaticRecipe_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 slot_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->slot_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipe_Item::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 slot_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->slot_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  return target;
}

size_t CMsgClientToGCCreateStaticRecipe_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 item_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 slot_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCCreateStaticRecipe_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipe_Item* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCCreateStaticRecipe_Item>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipe_Item::MergeFrom(const CMsgClientToGCCreateStaticRecipe_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      slot_id_ = from.slot_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCCreateStaticRecipe_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipe_Item::CopyFrom(const CMsgClientToGCCreateStaticRecipe_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipe_Item::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateStaticRecipe_Item::Swap(CMsgClientToGCCreateStaticRecipe_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCCreateStaticRecipe_Item::InternalSwap(CMsgClientToGCCreateStaticRecipe_Item* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
  swap(slot_id_, other->slot_id_);
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipe_Item::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCCreateStaticRecipe::InitAsDefaultInstance() {
}
class CMsgClientToGCCreateStaticRecipe::HasBitSetters {
 public:
  static void set_has_recipe_def_index(CMsgClientToGCCreateStaticRecipe* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCCreateStaticRecipe::kItemsFieldNumber;
const int CMsgClientToGCCreateStaticRecipe::kRecipeDefIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCCreateStaticRecipe::CMsgClientToGCCreateStaticRecipe()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCCreateStaticRecipe)
}
CMsgClientToGCCreateStaticRecipe::CMsgClientToGCCreateStaticRecipe(const CMsgClientToGCCreateStaticRecipe& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  recipe_def_index_ = from.recipe_def_index_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCCreateStaticRecipe)
}

void CMsgClientToGCCreateStaticRecipe::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientToGCCreateStaticRecipe_econ_5fgcmessages_2eproto.base);
  recipe_def_index_ = 0u;
}

CMsgClientToGCCreateStaticRecipe::~CMsgClientToGCCreateStaticRecipe() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCCreateStaticRecipe)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipe::SharedDtor() {
}

void CMsgClientToGCCreateStaticRecipe::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCCreateStaticRecipe& CMsgClientToGCCreateStaticRecipe::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCCreateStaticRecipe_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCCreateStaticRecipe::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  recipe_def_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCCreateStaticRecipe::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCCreateStaticRecipe*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.dota.CMsgClientToGCCreateStaticRecipe.Item items = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgClientToGCCreateStaticRecipe_Item::_InternalParse;
          object = msg->add_items();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // optional uint32 recipe_def_index = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_recipe_def_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCCreateStaticRecipe::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CMsgClientToGCCreateStaticRecipe.Item items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 recipe_def_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_recipe_def_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recipe_def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCCreateStaticRecipe)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCCreateStaticRecipe)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCCreateStaticRecipe::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipe.Item items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->items(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 recipe_def_index = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->recipe_def_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCCreateStaticRecipe)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipe::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipe.Item items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->items(static_cast<int>(i)), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 recipe_def_index = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->recipe_def_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCCreateStaticRecipe)
  return target;
}

size_t CMsgClientToGCCreateStaticRecipe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipe.Item items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // optional uint32 recipe_def_index = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->recipe_def_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCCreateStaticRecipe::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipe* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCCreateStaticRecipe>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCCreateStaticRecipe)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCCreateStaticRecipe)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipe::MergeFrom(const CMsgClientToGCCreateStaticRecipe& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.has_recipe_def_index()) {
    set_recipe_def_index(from.recipe_def_index());
  }
}

void CMsgClientToGCCreateStaticRecipe::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipe::CopyFrom(const CMsgClientToGCCreateStaticRecipe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipe::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateStaticRecipe::Swap(CMsgClientToGCCreateStaticRecipe* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCCreateStaticRecipe::InternalSwap(CMsgClientToGCCreateStaticRecipe* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  swap(recipe_def_index_, other->recipe_def_index_);
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipe::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::InitAsDefaultInstance() {
}
class CMsgClientToGCCreateStaticRecipeResponse_OutputItem::HasBitSetters {
 public:
  static void set_has_def_index(CMsgClientToGCCreateStaticRecipeResponse_OutputItem* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_item_id(CMsgClientToGCCreateStaticRecipeResponse_OutputItem* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_slot_id(CMsgClientToGCCreateStaticRecipeResponse_OutputItem* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCCreateStaticRecipeResponse_OutputItem::kDefIndexFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse_OutputItem::kItemIdFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse_OutputItem::kSlotIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCCreateStaticRecipeResponse_OutputItem::CMsgClientToGCCreateStaticRecipeResponse_OutputItem()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
}
CMsgClientToGCCreateStaticRecipeResponse_OutputItem::CMsgClientToGCCreateStaticRecipeResponse_OutputItem(const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&slot_id_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(slot_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&slot_id_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(slot_id_));
}

CMsgClientToGCCreateStaticRecipeResponse_OutputItem::~CMsgClientToGCCreateStaticRecipeResponse_OutputItem() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::SharedDtor() {
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& CMsgClientToGCCreateStaticRecipeResponse_OutputItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCCreateStaticRecipeResponse_OutputItem_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&slot_id_) -
        reinterpret_cast<char*>(&item_id_)) + sizeof(slot_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCCreateStaticRecipeResponse_OutputItem::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCCreateStaticRecipeResponse_OutputItem*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 def_index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_def_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 slot_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_slot_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCCreateStaticRecipeResponse_OutputItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 def_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_def_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 slot_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_slot_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 def_index = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->def_index(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  // optional uint32 slot_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->slot_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipeResponse_OutputItem::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 def_index = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->def_index(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  // optional uint32 slot_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->slot_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  return target;
}

size_t CMsgClientToGCCreateStaticRecipeResponse_OutputItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 item_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 def_index = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def_index());
    }

    // optional uint32 slot_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipeResponse_OutputItem* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCCreateStaticRecipeResponse_OutputItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::MergeFrom(const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      def_index_ = from.def_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      slot_id_ = from.slot_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipeResponse_OutputItem::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::Swap(CMsgClientToGCCreateStaticRecipeResponse_OutputItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::InternalSwap(CMsgClientToGCCreateStaticRecipeResponse_OutputItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(item_id_, other->item_id_);
  swap(def_index_, other->def_index_);
  swap(slot_id_, other->slot_id_);
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipeResponse_OutputItem::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCCreateStaticRecipeResponse_InputError::InitAsDefaultInstance() {
}
class CMsgClientToGCCreateStaticRecipeResponse_InputError::HasBitSetters {
 public:
  static void set_has_slot_id(CMsgClientToGCCreateStaticRecipeResponse_InputError* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_error(CMsgClientToGCCreateStaticRecipeResponse_InputError* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCCreateStaticRecipeResponse_InputError::kSlotIdFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse_InputError::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCCreateStaticRecipeResponse_InputError::CMsgClientToGCCreateStaticRecipeResponse_InputError()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
}
CMsgClientToGCCreateStaticRecipeResponse_InputError::CMsgClientToGCCreateStaticRecipeResponse_InputError(const CMsgClientToGCCreateStaticRecipeResponse_InputError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&slot_id_, &from.slot_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&slot_id_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::SharedCtor() {
  ::memset(&slot_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&slot_id_)) + sizeof(error_));
}

CMsgClientToGCCreateStaticRecipeResponse_InputError::~CMsgClientToGCCreateStaticRecipeResponse_InputError() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::SharedDtor() {
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCCreateStaticRecipeResponse_InputError& CMsgClientToGCCreateStaticRecipeResponse_InputError::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCCreateStaticRecipeResponse_InputError_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCCreateStaticRecipeResponse_InputError::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&slot_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&error_) -
        reinterpret_cast<char*>(&slot_id_)) + sizeof(error_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCCreateStaticRecipeResponse_InputError::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCCreateStaticRecipeResponse_InputError*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 slot_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slot_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(2, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_error(static_cast<::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCCreateStaticRecipeResponse_InputError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 slot_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slot_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(value)) {
            set_error(static_cast< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCCreateStaticRecipeResponse_InputError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 slot_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slot_id(), output);
  }

  // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipeResponse_InputError::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 slot_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slot_id(), target);
  }

  // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  return target;
}

size_t CMsgClientToGCCreateStaticRecipeResponse_InputError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 slot_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot_id());
    }

    // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipeResponse_InputError* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCCreateStaticRecipeResponse_InputError>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::MergeFrom(const CMsgClientToGCCreateStaticRecipeResponse_InputError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      slot_id_ = from.slot_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      error_ = from.error_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse_InputError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipeResponse_InputError::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::Swap(CMsgClientToGCCreateStaticRecipeResponse_InputError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCCreateStaticRecipeResponse_InputError::InternalSwap(CMsgClientToGCCreateStaticRecipeResponse_InputError* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(slot_id_, other->slot_id_);
  swap(error_, other->error_);
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipeResponse_InputError::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::InitAsDefaultInstance() {
}
class CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::HasBitSetters {
 public:
  static void set_has_slot_id(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_value(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::kSlotIdFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
}
CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput(const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&slot_id_) -
    reinterpret_cast<char*>(&value_)) + sizeof(slot_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&slot_id_) -
      reinterpret_cast<char*>(&value_)) + sizeof(slot_id_));
}

CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::~CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::SharedDtor() {
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&slot_id_) -
        reinterpret_cast<char*>(&value_)) + sizeof(slot_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 slot_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slot_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 slot_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slot_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_value(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 slot_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slot_id(), output);
  }

  // optional uint64 value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 slot_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slot_id(), target);
  }

  // optional uint64 value = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  return target;
}

size_t CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 value = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->value());
    }

    // optional uint32 slot_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::MergeFrom(const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      slot_id_ = from.slot_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::Swap(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::InternalSwap(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(value_, other->value_);
  swap(slot_id_, other->slot_id_);
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientToGCCreateStaticRecipeResponse::InitAsDefaultInstance() {
}
class CMsgClientToGCCreateStaticRecipeResponse::HasBitSetters {
 public:
  static void set_has_response(CMsgClientToGCCreateStaticRecipeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCCreateStaticRecipeResponse::kResponseFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse::kOutputItemsFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse::kInputErrorsFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse::kAdditionalOutputsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCCreateStaticRecipeResponse::CMsgClientToGCCreateStaticRecipeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
}
CMsgClientToGCCreateStaticRecipeResponse::CMsgClientToGCCreateStaticRecipeResponse(const CMsgClientToGCCreateStaticRecipeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      output_items_(from.output_items_),
      input_errors_(from.input_errors_),
      additional_outputs_(from.additional_outputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_ = from.response_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
}

void CMsgClientToGCCreateStaticRecipeResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientToGCCreateStaticRecipeResponse_econ_5fgcmessages_2eproto.base);
  response_ = 0;
}

CMsgClientToGCCreateStaticRecipeResponse::~CMsgClientToGCCreateStaticRecipeResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipeResponse::SharedDtor() {
}

void CMsgClientToGCCreateStaticRecipeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientToGCCreateStaticRecipeResponse& CMsgClientToGCCreateStaticRecipeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientToGCCreateStaticRecipeResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientToGCCreateStaticRecipeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_items_.Clear();
  input_errors_.Clear();
  additional_outputs_.Clear();
  response_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientToGCCreateStaticRecipeResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientToGCCreateStaticRecipeResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        if (!::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        msg->set_response(static_cast<::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem::_InternalParse;
          object = msg->add_output_items();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError::_InternalParse;
          object = msg->add_input_errors();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::_InternalParse;
          object = msg->add_additional_outputs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientToGCCreateStaticRecipeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(value)) {
            set_response(static_cast< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_output_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_input_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_additional_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientToGCCreateStaticRecipeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->output_items(static_cast<int>(i)),
      output);
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->input_errors(static_cast<int>(i)),
      output);
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->additional_outputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->additional_outputs(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipeResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->output_items(static_cast<int>(i)), target);
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->input_errors(static_cast<int>(i)), target);
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->additional_outputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->additional_outputs(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  return target;
}

size_t CMsgClientToGCCreateStaticRecipeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->output_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->output_items(static_cast<int>(i)));
    }
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->input_errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->input_errors(static_cast<int>(i)));
    }
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->additional_outputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->additional_outputs(static_cast<int>(i)));
    }
  }

  // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCCreateStaticRecipeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipeResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientToGCCreateStaticRecipeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipeResponse::MergeFrom(const CMsgClientToGCCreateStaticRecipeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_items_.MergeFrom(from.output_items_);
  input_errors_.MergeFrom(from.input_errors_);
  additional_outputs_.MergeFrom(from.additional_outputs_);
  if (from.has_response()) {
    set_response(from.response());
  }
}

void CMsgClientToGCCreateStaticRecipeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipeResponse::CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipeResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateStaticRecipeResponse::Swap(CMsgClientToGCCreateStaticRecipeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCCreateStaticRecipeResponse::InternalSwap(CMsgClientToGCCreateStaticRecipeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&output_items_)->InternalSwap(CastToBase(&other->output_items_));
  CastToBase(&input_errors_)->InternalSwap(CastToBase(&other->input_errors_));
  CastToBase(&additional_outputs_)->InternalSwap(CastToBase(&other->additional_outputs_));
  swap(response_, other->response_);
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipeResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgProcessTransactionOrder_Item::InitAsDefaultInstance() {
}
class CMsgProcessTransactionOrder_Item::HasBitSetters {
 public:
  static void set_has_item_def_index(CMsgProcessTransactionOrder_Item* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_item_price(CMsgProcessTransactionOrder_Item* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_quantity(CMsgProcessTransactionOrder_Item* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_category_desc(CMsgProcessTransactionOrder_Item* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_store_purchase_type(CMsgProcessTransactionOrder_Item* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_source_reference_id(CMsgProcessTransactionOrder_Item* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_parent_stack_index(CMsgProcessTransactionOrder_Item* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_default_price(CMsgProcessTransactionOrder_Item* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_is_user_facing(CMsgProcessTransactionOrder_Item* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgProcessTransactionOrder_Item::kItemDefIndexFieldNumber;
const int CMsgProcessTransactionOrder_Item::kItemPriceFieldNumber;
const int CMsgProcessTransactionOrder_Item::kQuantityFieldNumber;
const int CMsgProcessTransactionOrder_Item::kCategoryDescFieldNumber;
const int CMsgProcessTransactionOrder_Item::kStorePurchaseTypeFieldNumber;
const int CMsgProcessTransactionOrder_Item::kSourceReferenceIdFieldNumber;
const int CMsgProcessTransactionOrder_Item::kParentStackIndexFieldNumber;
const int CMsgProcessTransactionOrder_Item::kDefaultPriceFieldNumber;
const int CMsgProcessTransactionOrder_Item::kIsUserFacingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgProcessTransactionOrder_Item::CMsgProcessTransactionOrder_Item()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgProcessTransactionOrder.Item)
}
CMsgProcessTransactionOrder_Item::CMsgProcessTransactionOrder_Item(const CMsgProcessTransactionOrder_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  category_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_category_desc()) {
    category_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_desc_);
  }
  ::memcpy(&item_def_index_, &from.item_def_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_user_facing_) -
    reinterpret_cast<char*>(&item_def_index_)) + sizeof(is_user_facing_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgProcessTransactionOrder.Item)
}

void CMsgProcessTransactionOrder_Item::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgProcessTransactionOrder_Item_econ_5fgcmessages_2eproto.base);
  category_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&item_def_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_user_facing_) -
      reinterpret_cast<char*>(&item_def_index_)) + sizeof(is_user_facing_));
}

CMsgProcessTransactionOrder_Item::~CMsgProcessTransactionOrder_Item() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgProcessTransactionOrder.Item)
  SharedDtor();
}

void CMsgProcessTransactionOrder_Item::SharedDtor() {
  category_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgProcessTransactionOrder_Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgProcessTransactionOrder_Item& CMsgProcessTransactionOrder_Item::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgProcessTransactionOrder_Item_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgProcessTransactionOrder_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgProcessTransactionOrder.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    category_desc_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&item_def_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_price_) -
        reinterpret_cast<char*>(&item_def_index_)) + sizeof(default_price_));
  }
  is_user_facing_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgProcessTransactionOrder_Item::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgProcessTransactionOrder_Item*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 item_def_index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_item_def_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 item_price = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_item_price(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 quantity = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_quantity(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string category_desc = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgProcessTransactionOrder.Item.category_desc");
        object = msg->mutable_category_desc();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 store_purchase_type = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_store_purchase_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 source_reference_id = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_source_reference_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 parent_stack_index = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_parent_stack_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool default_price = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_default_price(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool is_user_facing = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_is_user_facing(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgProcessTransactionOrder_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgProcessTransactionOrder.Item)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_item_def_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_item_price(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 quantity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_quantity(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string category_desc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->category_desc().data(), static_cast<int>(this->category_desc().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgProcessTransactionOrder.Item.category_desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 store_purchase_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_store_purchase_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &store_purchase_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 source_reference_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_source_reference_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &source_reference_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 parent_stack_index = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_parent_stack_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parent_stack_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool default_price = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_default_price(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &default_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_user_facing = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_is_user_facing(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_user_facing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgProcessTransactionOrder.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgProcessTransactionOrder.Item)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgProcessTransactionOrder_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgProcessTransactionOrder.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_index = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def_index(), output);
  }

  // optional uint32 item_price = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_price(), output);
  }

  // optional uint32 quantity = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->quantity(), output);
  }

  // optional string category_desc = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category_desc().data(), static_cast<int>(this->category_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgProcessTransactionOrder.Item.category_desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->category_desc(), output);
  }

  // optional uint32 store_purchase_type = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->store_purchase_type(), output);
  }

  // optional uint64 source_reference_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->source_reference_id(), output);
  }

  // optional int32 parent_stack_index = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->parent_stack_index(), output);
  }

  // optional bool default_price = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->default_price(), output);
  }

  // optional bool is_user_facing = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_user_facing(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgProcessTransactionOrder.Item)
}

::google::protobuf::uint8* CMsgProcessTransactionOrder_Item::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgProcessTransactionOrder.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_index = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def_index(), target);
  }

  // optional uint32 item_price = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_price(), target);
  }

  // optional uint32 quantity = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->quantity(), target);
  }

  // optional string category_desc = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category_desc().data(), static_cast<int>(this->category_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgProcessTransactionOrder.Item.category_desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->category_desc(), target);
  }

  // optional uint32 store_purchase_type = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->store_purchase_type(), target);
  }

  // optional uint64 source_reference_id = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->source_reference_id(), target);
  }

  // optional int32 parent_stack_index = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->parent_stack_index(), target);
  }

  // optional bool default_price = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->default_price(), target);
  }

  // optional bool is_user_facing = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_user_facing(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgProcessTransactionOrder.Item)
  return target;
}

size_t CMsgProcessTransactionOrder_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgProcessTransactionOrder.Item)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string category_desc = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->category_desc());
    }

    // optional uint32 item_def_index = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def_index());
    }

    // optional uint32 item_price = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_price());
    }

    // optional uint32 quantity = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quantity());
    }

    // optional uint32 store_purchase_type = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->store_purchase_type());
    }

    // optional uint64 source_reference_id = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->source_reference_id());
    }

    // optional int32 parent_stack_index = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->parent_stack_index());
    }

    // optional bool default_price = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  // optional bool is_user_facing = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgProcessTransactionOrder_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgProcessTransactionOrder.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgProcessTransactionOrder_Item* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgProcessTransactionOrder_Item>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgProcessTransactionOrder.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgProcessTransactionOrder.Item)
    MergeFrom(*source);
  }
}

void CMsgProcessTransactionOrder_Item::MergeFrom(const CMsgProcessTransactionOrder_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgProcessTransactionOrder.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      category_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_desc_);
    }
    if (cached_has_bits & 0x00000002u) {
      item_def_index_ = from.item_def_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_price_ = from.item_price_;
    }
    if (cached_has_bits & 0x00000008u) {
      quantity_ = from.quantity_;
    }
    if (cached_has_bits & 0x00000010u) {
      store_purchase_type_ = from.store_purchase_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      source_reference_id_ = from.source_reference_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      parent_stack_index_ = from.parent_stack_index_;
    }
    if (cached_has_bits & 0x00000080u) {
      default_price_ = from.default_price_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_is_user_facing(from.is_user_facing());
  }
}

void CMsgProcessTransactionOrder_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgProcessTransactionOrder.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgProcessTransactionOrder_Item::CopyFrom(const CMsgProcessTransactionOrder_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgProcessTransactionOrder.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgProcessTransactionOrder_Item::IsInitialized() const {
  return true;
}

void CMsgProcessTransactionOrder_Item::Swap(CMsgProcessTransactionOrder_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgProcessTransactionOrder_Item::InternalSwap(CMsgProcessTransactionOrder_Item* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  category_desc_.Swap(&other->category_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(item_def_index_, other->item_def_index_);
  swap(item_price_, other->item_price_);
  swap(quantity_, other->quantity_);
  swap(store_purchase_type_, other->store_purchase_type_);
  swap(source_reference_id_, other->source_reference_id_);
  swap(parent_stack_index_, other->parent_stack_index_);
  swap(default_price_, other->default_price_);
  swap(is_user_facing_, other->is_user_facing_);
}

::google::protobuf::Metadata CMsgProcessTransactionOrder_Item::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgProcessTransactionOrder::InitAsDefaultInstance() {
}
class CMsgProcessTransactionOrder::HasBitSetters {
 public:
  static void set_has_txn_id(CMsgProcessTransactionOrder* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_steam_txn_id(CMsgProcessTransactionOrder* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_partner_txn_id(CMsgProcessTransactionOrder* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_steam_id(CMsgProcessTransactionOrder* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_time_stamp(CMsgProcessTransactionOrder* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_watermark(CMsgProcessTransactionOrder* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_purchase_report_status(CMsgProcessTransactionOrder* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_currency(CMsgProcessTransactionOrder* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgProcessTransactionOrder::kTxnIdFieldNumber;
const int CMsgProcessTransactionOrder::kSteamTxnIdFieldNumber;
const int CMsgProcessTransactionOrder::kPartnerTxnIdFieldNumber;
const int CMsgProcessTransactionOrder::kSteamIdFieldNumber;
const int CMsgProcessTransactionOrder::kTimeStampFieldNumber;
const int CMsgProcessTransactionOrder::kWatermarkFieldNumber;
const int CMsgProcessTransactionOrder::kPurchaseReportStatusFieldNumber;
const int CMsgProcessTransactionOrder::kCurrencyFieldNumber;
const int CMsgProcessTransactionOrder::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgProcessTransactionOrder::CMsgProcessTransactionOrder()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgProcessTransactionOrder)
}
CMsgProcessTransactionOrder::CMsgProcessTransactionOrder(const CMsgProcessTransactionOrder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&txn_id_, &from.txn_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&currency_) -
    reinterpret_cast<char*>(&txn_id_)) + sizeof(currency_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgProcessTransactionOrder)
}

void CMsgProcessTransactionOrder::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgProcessTransactionOrder_econ_5fgcmessages_2eproto.base);
  ::memset(&txn_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&currency_) -
      reinterpret_cast<char*>(&txn_id_)) + sizeof(currency_));
}

CMsgProcessTransactionOrder::~CMsgProcessTransactionOrder() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgProcessTransactionOrder)
  SharedDtor();
}

void CMsgProcessTransactionOrder::SharedDtor() {
}

void CMsgProcessTransactionOrder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgProcessTransactionOrder& CMsgProcessTransactionOrder::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgProcessTransactionOrder_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgProcessTransactionOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgProcessTransactionOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&txn_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&currency_) -
        reinterpret_cast<char*>(&txn_id_)) + sizeof(currency_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgProcessTransactionOrder::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgProcessTransactionOrder*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 txn_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_txn_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 steam_txn_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_steam_txn_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 partner_txn_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_partner_txn_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 steam_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 33) goto handle_unusual;
        msg->set_steam_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 time_stamp = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_time_stamp(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 watermark = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_watermark(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 purchase_report_status = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_purchase_report_status(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 currency = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_currency(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.dota.CMsgProcessTransactionOrder.Item items = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgProcessTransactionOrder_Item::_InternalParse;
          object = msg->add_items();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 74 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgProcessTransactionOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgProcessTransactionOrder)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 txn_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_txn_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 steam_txn_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_steam_txn_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &steam_txn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 partner_txn_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_partner_txn_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &partner_txn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {
          HasBitSetters::set_has_steam_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_stamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_time_stamp(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 watermark = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_watermark(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &watermark_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 purchase_report_status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_purchase_report_status(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &purchase_report_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 currency = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_currency(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgProcessTransactionOrder.Item items = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgProcessTransactionOrder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgProcessTransactionOrder)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgProcessTransactionOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgProcessTransactionOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 txn_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txn_id(), output);
  }

  // optional uint64 steam_txn_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->steam_txn_id(), output);
  }

  // optional uint64 partner_txn_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->partner_txn_id(), output);
  }

  // optional fixed64 steam_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->steam_id(), output);
  }

  // optional uint32 time_stamp = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->time_stamp(), output);
  }

  // optional uint64 watermark = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->watermark(), output);
  }

  // optional int32 purchase_report_status = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->purchase_report_status(), output);
  }

  // optional uint32 currency = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->currency(), output);
  }

  // repeated .proto.dota.CMsgProcessTransactionOrder.Item items = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->items(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgProcessTransactionOrder)
}

::google::protobuf::uint8* CMsgProcessTransactionOrder::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgProcessTransactionOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 txn_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txn_id(), target);
  }

  // optional uint64 steam_txn_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->steam_txn_id(), target);
  }

  // optional uint64 partner_txn_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->partner_txn_id(), target);
  }

  // optional fixed64 steam_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->steam_id(), target);
  }

  // optional uint32 time_stamp = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->time_stamp(), target);
  }

  // optional uint64 watermark = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->watermark(), target);
  }

  // optional int32 purchase_report_status = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->purchase_report_status(), target);
  }

  // optional uint32 currency = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->currency(), target);
  }

  // repeated .proto.dota.CMsgProcessTransactionOrder.Item items = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->items(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgProcessTransactionOrder)
  return target;
}

size_t CMsgProcessTransactionOrder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgProcessTransactionOrder)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgProcessTransactionOrder.Item items = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint64 txn_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->txn_id());
    }

    // optional uint64 steam_txn_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->steam_txn_id());
    }

    // optional uint64 partner_txn_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->partner_txn_id());
    }

    // optional fixed64 steam_id = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional uint64 watermark = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->watermark());
    }

    // optional uint32 time_stamp = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_stamp());
    }

    // optional int32 purchase_report_status = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->purchase_report_status());
    }

    // optional uint32 currency = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currency());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgProcessTransactionOrder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgProcessTransactionOrder)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgProcessTransactionOrder* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgProcessTransactionOrder>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgProcessTransactionOrder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgProcessTransactionOrder)
    MergeFrom(*source);
  }
}

void CMsgProcessTransactionOrder::MergeFrom(const CMsgProcessTransactionOrder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgProcessTransactionOrder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      txn_id_ = from.txn_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      steam_txn_id_ = from.steam_txn_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      partner_txn_id_ = from.partner_txn_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      watermark_ = from.watermark_;
    }
    if (cached_has_bits & 0x00000020u) {
      time_stamp_ = from.time_stamp_;
    }
    if (cached_has_bits & 0x00000040u) {
      purchase_report_status_ = from.purchase_report_status_;
    }
    if (cached_has_bits & 0x00000080u) {
      currency_ = from.currency_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgProcessTransactionOrder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgProcessTransactionOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgProcessTransactionOrder::CopyFrom(const CMsgProcessTransactionOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgProcessTransactionOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgProcessTransactionOrder::IsInitialized() const {
  return true;
}

void CMsgProcessTransactionOrder::Swap(CMsgProcessTransactionOrder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgProcessTransactionOrder::InternalSwap(CMsgProcessTransactionOrder* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  swap(txn_id_, other->txn_id_);
  swap(steam_txn_id_, other->steam_txn_id_);
  swap(partner_txn_id_, other->partner_txn_id_);
  swap(steam_id_, other->steam_id_);
  swap(watermark_, other->watermark_);
  swap(time_stamp_, other->time_stamp_);
  swap(purchase_report_status_, other->purchase_report_status_);
  swap(currency_, other->currency_);
}

::google::protobuf::Metadata CMsgProcessTransactionOrder::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCStoreProcessCDKeyTransaction::InitAsDefaultInstance() {
  ::proto::dota::_CMsgGCToGCStoreProcessCDKeyTransaction_default_instance_._instance.get_mutable()->order_ = const_cast< ::proto::dota::CMsgProcessTransactionOrder*>(
      ::proto::dota::CMsgProcessTransactionOrder::internal_default_instance());
}
class CMsgGCToGCStoreProcessCDKeyTransaction::HasBitSetters {
 public:
  static const ::proto::dota::CMsgProcessTransactionOrder& order(const CMsgGCToGCStoreProcessCDKeyTransaction* msg);
  static void set_has_order(CMsgGCToGCStoreProcessCDKeyTransaction* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_reason_code(CMsgGCToGCStoreProcessCDKeyTransaction* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

const ::proto::dota::CMsgProcessTransactionOrder&
CMsgGCToGCStoreProcessCDKeyTransaction::HasBitSetters::order(const CMsgGCToGCStoreProcessCDKeyTransaction* msg) {
  return *msg->order_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCStoreProcessCDKeyTransaction::kOrderFieldNumber;
const int CMsgGCToGCStoreProcessCDKeyTransaction::kReasonCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCStoreProcessCDKeyTransaction::CMsgGCToGCStoreProcessCDKeyTransaction()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
}
CMsgGCToGCStoreProcessCDKeyTransaction::CMsgGCToGCStoreProcessCDKeyTransaction(const CMsgGCToGCStoreProcessCDKeyTransaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_order()) {
    order_ = new ::proto::dota::CMsgProcessTransactionOrder(*from.order_);
  } else {
    order_ = nullptr;
  }
  reason_code_ = from.reason_code_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
}

void CMsgGCToGCStoreProcessCDKeyTransaction::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCToGCStoreProcessCDKeyTransaction_econ_5fgcmessages_2eproto.base);
  ::memset(&order_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_code_) -
      reinterpret_cast<char*>(&order_)) + sizeof(reason_code_));
}

CMsgGCToGCStoreProcessCDKeyTransaction::~CMsgGCToGCStoreProcessCDKeyTransaction() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  SharedDtor();
}

void CMsgGCToGCStoreProcessCDKeyTransaction::SharedDtor() {
  if (this != internal_default_instance()) delete order_;
}

void CMsgGCToGCStoreProcessCDKeyTransaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCStoreProcessCDKeyTransaction& CMsgGCToGCStoreProcessCDKeyTransaction::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCStoreProcessCDKeyTransaction_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCStoreProcessCDKeyTransaction::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(order_ != nullptr);
    order_->Clear();
  }
  reason_code_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCStoreProcessCDKeyTransaction::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCStoreProcessCDKeyTransaction*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::dota::CMsgProcessTransactionOrder::_InternalParse;
        object = msg->mutable_order();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional uint32 reason_code = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_reason_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCStoreProcessCDKeyTransaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 reason_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_reason_code(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCStoreProcessCDKeyTransaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::order(this), output);
  }

  // optional uint32 reason_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reason_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
}

::google::protobuf::uint8* CMsgGCToGCStoreProcessCDKeyTransaction::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::order(this), target);
  }

  // optional uint32 reason_code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reason_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  return target;
}

size_t CMsgGCToGCStoreProcessCDKeyTransaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *order_);
    }

    // optional uint32 reason_code = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reason_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCStoreProcessCDKeyTransaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCStoreProcessCDKeyTransaction* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCStoreProcessCDKeyTransaction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
    MergeFrom(*source);
  }
}

void CMsgGCToGCStoreProcessCDKeyTransaction::MergeFrom(const CMsgGCToGCStoreProcessCDKeyTransaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_order()->::proto::dota::CMsgProcessTransactionOrder::MergeFrom(from.order());
    }
    if (cached_has_bits & 0x00000002u) {
      reason_code_ = from.reason_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCStoreProcessCDKeyTransaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCStoreProcessCDKeyTransaction::CopyFrom(const CMsgGCToGCStoreProcessCDKeyTransaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCStoreProcessCDKeyTransaction::IsInitialized() const {
  return true;
}

void CMsgGCToGCStoreProcessCDKeyTransaction::Swap(CMsgGCToGCStoreProcessCDKeyTransaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCStoreProcessCDKeyTransaction::InternalSwap(CMsgGCToGCStoreProcessCDKeyTransaction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(order_, other->order_);
  swap(reason_code_, other->reason_code_);
}

::google::protobuf::Metadata CMsgGCToGCStoreProcessCDKeyTransaction::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::InitAsDefaultInstance() {
}
class CMsgGCToGCStoreProcessCDKeyTransactionResponse::HasBitSetters {
 public:
  static void set_has_success(CMsgGCToGCStoreProcessCDKeyTransactionResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCStoreProcessCDKeyTransactionResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCStoreProcessCDKeyTransactionResponse::CMsgGCToGCStoreProcessCDKeyTransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
}
CMsgGCToGCStoreProcessCDKeyTransactionResponse::CMsgGCToGCStoreProcessCDKeyTransactionResponse(const CMsgGCToGCStoreProcessCDKeyTransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::SharedCtor() {
  success_ = false;
}

CMsgGCToGCStoreProcessCDKeyTransactionResponse::~CMsgGCToGCStoreProcessCDKeyTransactionResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  SharedDtor();
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::SharedDtor() {
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCStoreProcessCDKeyTransactionResponse& CMsgGCToGCStoreProcessCDKeyTransactionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCStoreProcessCDKeyTransactionResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCStoreProcessCDKeyTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCStoreProcessCDKeyTransactionResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCStoreProcessCDKeyTransactionResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool success = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCStoreProcessCDKeyTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
}

::google::protobuf::uint8* CMsgGCToGCStoreProcessCDKeyTransactionResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  return target;
}

size_t CMsgGCToGCStoreProcessCDKeyTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool success = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCStoreProcessCDKeyTransactionResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCStoreProcessCDKeyTransactionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::MergeFrom(const CMsgGCToGCStoreProcessCDKeyTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::CopyFrom(const CMsgGCToGCStoreProcessCDKeyTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCStoreProcessCDKeyTransactionResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::Swap(CMsgGCToGCStoreProcessCDKeyTransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCStoreProcessCDKeyTransactionResponse::InternalSwap(CMsgGCToGCStoreProcessCDKeyTransactionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(success_, other->success_);
}

::google::protobuf::Metadata CMsgGCToGCStoreProcessCDKeyTransactionResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCStoreProcessSettlement::InitAsDefaultInstance() {
  ::proto::dota::_CMsgGCToGCStoreProcessSettlement_default_instance_._instance.get_mutable()->order_ = const_cast< ::proto::dota::CMsgProcessTransactionOrder*>(
      ::proto::dota::CMsgProcessTransactionOrder::internal_default_instance());
}
class CMsgGCToGCStoreProcessSettlement::HasBitSetters {
 public:
  static const ::proto::dota::CMsgProcessTransactionOrder& order(const CMsgGCToGCStoreProcessSettlement* msg);
  static void set_has_order(CMsgGCToGCStoreProcessSettlement* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_partner(CMsgGCToGCStoreProcessSettlement* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

const ::proto::dota::CMsgProcessTransactionOrder&
CMsgGCToGCStoreProcessSettlement::HasBitSetters::order(const CMsgGCToGCStoreProcessSettlement* msg) {
  return *msg->order_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCStoreProcessSettlement::kOrderFieldNumber;
const int CMsgGCToGCStoreProcessSettlement::kPartnerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCStoreProcessSettlement::CMsgGCToGCStoreProcessSettlement()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCStoreProcessSettlement)
}
CMsgGCToGCStoreProcessSettlement::CMsgGCToGCStoreProcessSettlement(const CMsgGCToGCStoreProcessSettlement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_order()) {
    order_ = new ::proto::dota::CMsgProcessTransactionOrder(*from.order_);
  } else {
    order_ = nullptr;
  }
  partner_ = from.partner_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCStoreProcessSettlement)
}

void CMsgGCToGCStoreProcessSettlement::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCToGCStoreProcessSettlement_econ_5fgcmessages_2eproto.base);
  ::memset(&order_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&partner_) -
      reinterpret_cast<char*>(&order_)) + sizeof(partner_));
}

CMsgGCToGCStoreProcessSettlement::~CMsgGCToGCStoreProcessSettlement() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCStoreProcessSettlement)
  SharedDtor();
}

void CMsgGCToGCStoreProcessSettlement::SharedDtor() {
  if (this != internal_default_instance()) delete order_;
}

void CMsgGCToGCStoreProcessSettlement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCStoreProcessSettlement& CMsgGCToGCStoreProcessSettlement::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCStoreProcessSettlement_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCStoreProcessSettlement::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(order_ != nullptr);
    order_->Clear();
  }
  partner_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCStoreProcessSettlement::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCStoreProcessSettlement*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::dota::CMsgProcessTransactionOrder::_InternalParse;
        object = msg->mutable_order();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional uint32 partner = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_partner(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCStoreProcessSettlement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 partner = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_partner(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCStoreProcessSettlement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCStoreProcessSettlement)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCStoreProcessSettlement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::order(this), output);
  }

  // optional uint32 partner = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->partner(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCStoreProcessSettlement)
}

::google::protobuf::uint8* CMsgGCToGCStoreProcessSettlement::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::order(this), target);
  }

  // optional uint32 partner = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->partner(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCStoreProcessSettlement)
  return target;
}

size_t CMsgGCToGCStoreProcessSettlement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *order_);
    }

    // optional uint32 partner = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partner());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCStoreProcessSettlement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCStoreProcessSettlement* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCStoreProcessSettlement>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCStoreProcessSettlement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCStoreProcessSettlement)
    MergeFrom(*source);
  }
}

void CMsgGCToGCStoreProcessSettlement::MergeFrom(const CMsgGCToGCStoreProcessSettlement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_order()->::proto::dota::CMsgProcessTransactionOrder::MergeFrom(from.order());
    }
    if (cached_has_bits & 0x00000002u) {
      partner_ = from.partner_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCStoreProcessSettlement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCStoreProcessSettlement::CopyFrom(const CMsgGCToGCStoreProcessSettlement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCStoreProcessSettlement::IsInitialized() const {
  return true;
}

void CMsgGCToGCStoreProcessSettlement::Swap(CMsgGCToGCStoreProcessSettlement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCStoreProcessSettlement::InternalSwap(CMsgGCToGCStoreProcessSettlement* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(order_, other->order_);
  swap(partner_, other->partner_);
}

::google::protobuf::Metadata CMsgGCToGCStoreProcessSettlement::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCStoreProcessSettlementResponse::InitAsDefaultInstance() {
}
class CMsgGCToGCStoreProcessSettlementResponse::HasBitSetters {
 public:
  static void set_has_success(CMsgGCToGCStoreProcessSettlementResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCStoreProcessSettlementResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCStoreProcessSettlementResponse::CMsgGCToGCStoreProcessSettlementResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
}
CMsgGCToGCStoreProcessSettlementResponse::CMsgGCToGCStoreProcessSettlementResponse(const CMsgGCToGCStoreProcessSettlementResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
}

void CMsgGCToGCStoreProcessSettlementResponse::SharedCtor() {
  success_ = false;
}

CMsgGCToGCStoreProcessSettlementResponse::~CMsgGCToGCStoreProcessSettlementResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  SharedDtor();
}

void CMsgGCToGCStoreProcessSettlementResponse::SharedDtor() {
}

void CMsgGCToGCStoreProcessSettlementResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCStoreProcessSettlementResponse& CMsgGCToGCStoreProcessSettlementResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCStoreProcessSettlementResponse_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCStoreProcessSettlementResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCStoreProcessSettlementResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCStoreProcessSettlementResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool success = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCStoreProcessSettlementResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCStoreProcessSettlementResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
}

::google::protobuf::uint8* CMsgGCToGCStoreProcessSettlementResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  return target;
}

size_t CMsgGCToGCStoreProcessSettlementResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool success = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCStoreProcessSettlementResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCStoreProcessSettlementResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCStoreProcessSettlementResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCStoreProcessSettlementResponse::MergeFrom(const CMsgGCToGCStoreProcessSettlementResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void CMsgGCToGCStoreProcessSettlementResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCStoreProcessSettlementResponse::CopyFrom(const CMsgGCToGCStoreProcessSettlementResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCStoreProcessSettlementResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCStoreProcessSettlementResponse::Swap(CMsgGCToGCStoreProcessSettlementResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCStoreProcessSettlementResponse::InternalSwap(CMsgGCToGCStoreProcessSettlementResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(success_, other->success_);
}

::google::protobuf::Metadata CMsgGCToGCStoreProcessSettlementResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCBroadcastConsoleCommand::InitAsDefaultInstance() {
}
class CMsgGCToGCBroadcastConsoleCommand::HasBitSetters {
 public:
  static void set_has_con_command(CMsgGCToGCBroadcastConsoleCommand* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_report_output(CMsgGCToGCBroadcastConsoleCommand* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_sending_gc(CMsgGCToGCBroadcastConsoleCommand* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_output_initiator(CMsgGCToGCBroadcastConsoleCommand* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCBroadcastConsoleCommand::kConCommandFieldNumber;
const int CMsgGCToGCBroadcastConsoleCommand::kReportOutputFieldNumber;
const int CMsgGCToGCBroadcastConsoleCommand::kSendingGcFieldNumber;
const int CMsgGCToGCBroadcastConsoleCommand::kOutputInitiatorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCBroadcastConsoleCommand::CMsgGCToGCBroadcastConsoleCommand()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
}
CMsgGCToGCBroadcastConsoleCommand::CMsgGCToGCBroadcastConsoleCommand(const CMsgGCToGCBroadcastConsoleCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  con_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_con_command()) {
    con_command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.con_command_);
  }
  output_initiator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_output_initiator()) {
    output_initiator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_initiator_);
  }
  ::memcpy(&report_output_, &from.report_output_,
    static_cast<size_t>(reinterpret_cast<char*>(&sending_gc_) -
    reinterpret_cast<char*>(&report_output_)) + sizeof(sending_gc_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
}

void CMsgGCToGCBroadcastConsoleCommand::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCToGCBroadcastConsoleCommand_econ_5fgcmessages_2eproto.base);
  con_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_initiator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&report_output_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sending_gc_) -
      reinterpret_cast<char*>(&report_output_)) + sizeof(sending_gc_));
}

CMsgGCToGCBroadcastConsoleCommand::~CMsgGCToGCBroadcastConsoleCommand() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  SharedDtor();
}

void CMsgGCToGCBroadcastConsoleCommand::SharedDtor() {
  con_command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_initiator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCToGCBroadcastConsoleCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCBroadcastConsoleCommand& CMsgGCToGCBroadcastConsoleCommand::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCBroadcastConsoleCommand_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCBroadcastConsoleCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      con_command_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      output_initiator_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&report_output_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sending_gc_) -
        reinterpret_cast<char*>(&report_output_)) + sizeof(sending_gc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCBroadcastConsoleCommand::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCBroadcastConsoleCommand*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string con_command = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgGCToGCBroadcastConsoleCommand.con_command");
        object = msg->mutable_con_command();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool report_output = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_report_output(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 sending_gc = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_sending_gc(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string output_initiator = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgGCToGCBroadcastConsoleCommand.output_initiator");
        object = msg->mutable_output_initiator();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCBroadcastConsoleCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string con_command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_con_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->con_command().data(), static_cast<int>(this->con_command().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgGCToGCBroadcastConsoleCommand.con_command");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool report_output = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_report_output(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &report_output_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sending_gc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_sending_gc(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sending_gc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string output_initiator = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_initiator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output_initiator().data(), static_cast<int>(this->output_initiator().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgGCToGCBroadcastConsoleCommand.output_initiator");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCBroadcastConsoleCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string con_command = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->con_command().data(), static_cast<int>(this->con_command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCBroadcastConsoleCommand.con_command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->con_command(), output);
  }

  // optional bool report_output = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->report_output(), output);
  }

  // optional uint32 sending_gc = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sending_gc(), output);
  }

  // optional string output_initiator = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_initiator().data(), static_cast<int>(this->output_initiator().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCBroadcastConsoleCommand.output_initiator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->output_initiator(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
}

::google::protobuf::uint8* CMsgGCToGCBroadcastConsoleCommand::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string con_command = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->con_command().data(), static_cast<int>(this->con_command().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCBroadcastConsoleCommand.con_command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->con_command(), target);
  }

  // optional bool report_output = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->report_output(), target);
  }

  // optional uint32 sending_gc = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sending_gc(), target);
  }

  // optional string output_initiator = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_initiator().data(), static_cast<int>(this->output_initiator().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCBroadcastConsoleCommand.output_initiator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->output_initiator(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  return target;
}

size_t CMsgGCToGCBroadcastConsoleCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string con_command = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->con_command());
    }

    // optional string output_initiator = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->output_initiator());
    }

    // optional bool report_output = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional uint32 sending_gc = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sending_gc());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCBroadcastConsoleCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCBroadcastConsoleCommand* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCBroadcastConsoleCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
    MergeFrom(*source);
  }
}

void CMsgGCToGCBroadcastConsoleCommand::MergeFrom(const CMsgGCToGCBroadcastConsoleCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      con_command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.con_command_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      output_initiator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_initiator_);
    }
    if (cached_has_bits & 0x00000004u) {
      report_output_ = from.report_output_;
    }
    if (cached_has_bits & 0x00000008u) {
      sending_gc_ = from.sending_gc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCBroadcastConsoleCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCBroadcastConsoleCommand::CopyFrom(const CMsgGCToGCBroadcastConsoleCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCBroadcastConsoleCommand::IsInitialized() const {
  return true;
}

void CMsgGCToGCBroadcastConsoleCommand::Swap(CMsgGCToGCBroadcastConsoleCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCBroadcastConsoleCommand::InternalSwap(CMsgGCToGCBroadcastConsoleCommand* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  con_command_.Swap(&other->con_command_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_initiator_.Swap(&other->output_initiator_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(report_output_, other->report_output_);
  swap(sending_gc_, other->sending_gc_);
}

::google::protobuf::Metadata CMsgGCToGCBroadcastConsoleCommand::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCConsoleOutput_OutputLine::InitAsDefaultInstance() {
}
class CMsgGCToGCConsoleOutput_OutputLine::HasBitSetters {
 public:
  static void set_has_text(CMsgGCToGCConsoleOutput_OutputLine* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_spew_level(CMsgGCToGCConsoleOutput_OutputLine* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCConsoleOutput_OutputLine::kTextFieldNumber;
const int CMsgGCToGCConsoleOutput_OutputLine::kSpewLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCConsoleOutput_OutputLine::CMsgGCToGCConsoleOutput_OutputLine()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
}
CMsgGCToGCConsoleOutput_OutputLine::CMsgGCToGCConsoleOutput_OutputLine(const CMsgGCToGCConsoleOutput_OutputLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  spew_level_ = from.spew_level_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
}

void CMsgGCToGCConsoleOutput_OutputLine::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCToGCConsoleOutput_OutputLine_econ_5fgcmessages_2eproto.base);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spew_level_ = 0u;
}

CMsgGCToGCConsoleOutput_OutputLine::~CMsgGCToGCConsoleOutput_OutputLine() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  SharedDtor();
}

void CMsgGCToGCConsoleOutput_OutputLine::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCToGCConsoleOutput_OutputLine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCConsoleOutput_OutputLine& CMsgGCToGCConsoleOutput_OutputLine::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCConsoleOutput_OutputLine_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCConsoleOutput_OutputLine::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    text_.ClearNonDefaultToEmptyNoArena();
  }
  spew_level_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCConsoleOutput_OutputLine::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCConsoleOutput_OutputLine*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string text = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgGCToGCConsoleOutput.OutputLine.text");
        object = msg->mutable_text();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 spew_level = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_spew_level(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCConsoleOutput_OutputLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgGCToGCConsoleOutput.OutputLine.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 spew_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_spew_level(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spew_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCConsoleOutput_OutputLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCConsoleOutput.OutputLine.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // optional uint32 spew_level = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->spew_level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
}

::google::protobuf::uint8* CMsgGCToGCConsoleOutput_OutputLine::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCConsoleOutput.OutputLine.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // optional uint32 spew_level = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->spew_level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  return target;
}

size_t CMsgGCToGCConsoleOutput_OutputLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string text = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional uint32 spew_level = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->spew_level());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCConsoleOutput_OutputLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCConsoleOutput_OutputLine* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCConsoleOutput_OutputLine>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
    MergeFrom(*source);
  }
}

void CMsgGCToGCConsoleOutput_OutputLine::MergeFrom(const CMsgGCToGCConsoleOutput_OutputLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      spew_level_ = from.spew_level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCConsoleOutput_OutputLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCConsoleOutput_OutputLine::CopyFrom(const CMsgGCToGCConsoleOutput_OutputLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCConsoleOutput_OutputLine::IsInitialized() const {
  return true;
}

void CMsgGCToGCConsoleOutput_OutputLine::Swap(CMsgGCToGCConsoleOutput_OutputLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCConsoleOutput_OutputLine::InternalSwap(CMsgGCToGCConsoleOutput_OutputLine* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(spew_level_, other->spew_level_);
}

::google::protobuf::Metadata CMsgGCToGCConsoleOutput_OutputLine::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCConsoleOutput::InitAsDefaultInstance() {
}
class CMsgGCToGCConsoleOutput::HasBitSetters {
 public:
  static void set_has_initiator(CMsgGCToGCConsoleOutput* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_sending_gc(CMsgGCToGCConsoleOutput* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCConsoleOutput::kInitiatorFieldNumber;
const int CMsgGCToGCConsoleOutput::kSendingGcFieldNumber;
const int CMsgGCToGCConsoleOutput::kMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCConsoleOutput::CMsgGCToGCConsoleOutput()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCConsoleOutput)
}
CMsgGCToGCConsoleOutput::CMsgGCToGCConsoleOutput(const CMsgGCToGCConsoleOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      msgs_(from.msgs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  initiator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_initiator()) {
    initiator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initiator_);
  }
  sending_gc_ = from.sending_gc_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCConsoleOutput)
}

void CMsgGCToGCConsoleOutput::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCToGCConsoleOutput_econ_5fgcmessages_2eproto.base);
  initiator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sending_gc_ = 0u;
}

CMsgGCToGCConsoleOutput::~CMsgGCToGCConsoleOutput() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCConsoleOutput)
  SharedDtor();
}

void CMsgGCToGCConsoleOutput::SharedDtor() {
  initiator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCToGCConsoleOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCConsoleOutput& CMsgGCToGCConsoleOutput::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCConsoleOutput_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCConsoleOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCConsoleOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    initiator_.ClearNonDefaultToEmptyNoArena();
  }
  sending_gc_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCConsoleOutput::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCConsoleOutput*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string initiator = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.dota.CMsgGCToGCConsoleOutput.initiator");
        object = msg->mutable_initiator();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 sending_gc = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_sending_gc(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.dota.CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgGCToGCConsoleOutput_OutputLine::_InternalParse;
          object = msg->add_msgs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCConsoleOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCConsoleOutput)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string initiator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_initiator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->initiator().data(), static_cast<int>(this->initiator().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgGCToGCConsoleOutput.initiator");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sending_gc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_sending_gc(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sending_gc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCConsoleOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCConsoleOutput)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCConsoleOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCConsoleOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string initiator = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->initiator().data(), static_cast<int>(this->initiator().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCConsoleOutput.initiator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->initiator(), output);
  }

  // optional uint32 sending_gc = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sending_gc(), output);
  }

  // repeated .proto.dota.CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msgs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->msgs(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCConsoleOutput)
}

::google::protobuf::uint8* CMsgGCToGCConsoleOutput::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCConsoleOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string initiator = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->initiator().data(), static_cast<int>(this->initiator().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCConsoleOutput.initiator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->initiator(), target);
  }

  // optional uint32 sending_gc = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sending_gc(), target);
  }

  // repeated .proto.dota.CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msgs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->msgs(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCConsoleOutput)
  return target;
}

size_t CMsgGCToGCConsoleOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCConsoleOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->msgs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->msgs(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string initiator = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->initiator());
    }

    // optional uint32 sending_gc = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sending_gc());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCConsoleOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCConsoleOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCConsoleOutput* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCConsoleOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCConsoleOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCConsoleOutput)
    MergeFrom(*source);
  }
}

void CMsgGCToGCConsoleOutput::MergeFrom(const CMsgGCToGCConsoleOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCConsoleOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msgs_.MergeFrom(from.msgs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      initiator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initiator_);
    }
    if (cached_has_bits & 0x00000002u) {
      sending_gc_ = from.sending_gc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCConsoleOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCConsoleOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCConsoleOutput::CopyFrom(const CMsgGCToGCConsoleOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCConsoleOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCConsoleOutput::IsInitialized() const {
  return true;
}

void CMsgGCToGCConsoleOutput::Swap(CMsgGCToGCConsoleOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCConsoleOutput::InternalSwap(CMsgGCToGCConsoleOutput* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&msgs_)->InternalSwap(CastToBase(&other->msgs_));
  initiator_.Swap(&other->initiator_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sending_gc_, other->sending_gc_);
}

::google::protobuf::Metadata CMsgGCToGCConsoleOutput::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgItemAges_MaxItemIDTimestamp::InitAsDefaultInstance() {
}
class CMsgItemAges_MaxItemIDTimestamp::HasBitSetters {
 public:
  static void set_has_timestamp(CMsgItemAges_MaxItemIDTimestamp* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_max_item_id(CMsgItemAges_MaxItemIDTimestamp* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgItemAges_MaxItemIDTimestamp::kTimestampFieldNumber;
const int CMsgItemAges_MaxItemIDTimestamp::kMaxItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgItemAges_MaxItemIDTimestamp::CMsgItemAges_MaxItemIDTimestamp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
}
CMsgItemAges_MaxItemIDTimestamp::CMsgItemAges_MaxItemIDTimestamp(const CMsgItemAges_MaxItemIDTimestamp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&max_item_id_, &from.max_item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&max_item_id_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
}

void CMsgItemAges_MaxItemIDTimestamp::SharedCtor() {
  ::memset(&max_item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&max_item_id_)) + sizeof(timestamp_));
}

CMsgItemAges_MaxItemIDTimestamp::~CMsgItemAges_MaxItemIDTimestamp() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  SharedDtor();
}

void CMsgItemAges_MaxItemIDTimestamp::SharedDtor() {
}

void CMsgItemAges_MaxItemIDTimestamp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgItemAges_MaxItemIDTimestamp& CMsgItemAges_MaxItemIDTimestamp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgItemAges_MaxItemIDTimestamp_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgItemAges_MaxItemIDTimestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&max_item_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_) -
        reinterpret_cast<char*>(&max_item_id_)) + sizeof(timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgItemAges_MaxItemIDTimestamp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgItemAges_MaxItemIDTimestamp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 timestamp = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_timestamp(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 max_item_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_max_item_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgItemAges_MaxItemIDTimestamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_timestamp(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 max_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_max_item_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgItemAges_MaxItemIDTimestamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 timestamp = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timestamp(), output);
  }

  // optional uint64 max_item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->max_item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
}

::google::protobuf::uint8* CMsgItemAges_MaxItemIDTimestamp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 timestamp = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timestamp(), target);
  }

  // optional uint64 max_item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->max_item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  return target;
}

size_t CMsgItemAges_MaxItemIDTimestamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 max_item_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->max_item_id());
    }

    // optional uint32 timestamp = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamp());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgItemAges_MaxItemIDTimestamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgItemAges_MaxItemIDTimestamp* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgItemAges_MaxItemIDTimestamp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
    MergeFrom(*source);
  }
}

void CMsgItemAges_MaxItemIDTimestamp::MergeFrom(const CMsgItemAges_MaxItemIDTimestamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      max_item_id_ = from.max_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgItemAges_MaxItemIDTimestamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgItemAges_MaxItemIDTimestamp::CopyFrom(const CMsgItemAges_MaxItemIDTimestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgItemAges_MaxItemIDTimestamp::IsInitialized() const {
  return true;
}

void CMsgItemAges_MaxItemIDTimestamp::Swap(CMsgItemAges_MaxItemIDTimestamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgItemAges_MaxItemIDTimestamp::InternalSwap(CMsgItemAges_MaxItemIDTimestamp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(max_item_id_, other->max_item_id_);
  swap(timestamp_, other->timestamp_);
}

::google::protobuf::Metadata CMsgItemAges_MaxItemIDTimestamp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgItemAges::InitAsDefaultInstance() {
}
class CMsgItemAges::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgItemAges::kMaxItemIdTimestampsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgItemAges::CMsgItemAges()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgItemAges)
}
CMsgItemAges::CMsgItemAges(const CMsgItemAges& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      max_item_id_timestamps_(from.max_item_id_timestamps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgItemAges)
}

void CMsgItemAges::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgItemAges_econ_5fgcmessages_2eproto.base);
}

CMsgItemAges::~CMsgItemAges() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgItemAges)
  SharedDtor();
}

void CMsgItemAges::SharedDtor() {
}

void CMsgItemAges::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgItemAges& CMsgItemAges::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgItemAges_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgItemAges::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgItemAges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  max_item_id_timestamps_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgItemAges::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgItemAges*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.dota.CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgItemAges_MaxItemIDTimestamp::_InternalParse;
          object = msg->add_max_item_id_timestamps();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgItemAges::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgItemAges)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_max_item_id_timestamps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgItemAges)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgItemAges)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgItemAges::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgItemAges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->max_item_id_timestamps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->max_item_id_timestamps(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgItemAges)
}

::google::protobuf::uint8* CMsgItemAges::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgItemAges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->max_item_id_timestamps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->max_item_id_timestamps(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgItemAges)
  return target;
}

size_t CMsgItemAges::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgItemAges)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->max_item_id_timestamps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->max_item_id_timestamps(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgItemAges::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgItemAges)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgItemAges* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgItemAges>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgItemAges)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgItemAges)
    MergeFrom(*source);
  }
}

void CMsgItemAges::MergeFrom(const CMsgItemAges& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgItemAges)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  max_item_id_timestamps_.MergeFrom(from.max_item_id_timestamps_);
}

void CMsgItemAges::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgItemAges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgItemAges::CopyFrom(const CMsgItemAges& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgItemAges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgItemAges::IsInitialized() const {
  return true;
}

void CMsgItemAges::Swap(CMsgItemAges* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgItemAges::InternalSwap(CMsgItemAges* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&max_item_id_timestamps_)->InternalSwap(CastToBase(&other->max_item_id_timestamps_));
}

::google::protobuf::Metadata CMsgItemAges::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCInternalTestMsg::InitAsDefaultInstance() {
}
class CMsgGCToGCInternalTestMsg::HasBitSetters {
 public:
  static void set_has_sending_gc(CMsgGCToGCInternalTestMsg* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_sender_id(CMsgGCToGCInternalTestMsg* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_context(CMsgGCToGCInternalTestMsg* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_message_id(CMsgGCToGCInternalTestMsg* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_message_body(CMsgGCToGCInternalTestMsg* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_job_id_source(CMsgGCToGCInternalTestMsg* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_job_id_target(CMsgGCToGCInternalTestMsg* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCInternalTestMsg::kSendingGcFieldNumber;
const int CMsgGCToGCInternalTestMsg::kSenderIdFieldNumber;
const int CMsgGCToGCInternalTestMsg::kContextFieldNumber;
const int CMsgGCToGCInternalTestMsg::kMessageIdFieldNumber;
const int CMsgGCToGCInternalTestMsg::kMessageBodyFieldNumber;
const int CMsgGCToGCInternalTestMsg::kJobIdSourceFieldNumber;
const int CMsgGCToGCInternalTestMsg::kJobIdTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCInternalTestMsg::CMsgGCToGCInternalTestMsg()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCInternalTestMsg)
}
CMsgGCToGCInternalTestMsg::CMsgGCToGCInternalTestMsg(const CMsgGCToGCInternalTestMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message_body()) {
    message_body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_body_);
  }
  ::memcpy(&sender_id_, &from.sender_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&message_id_) -
    reinterpret_cast<char*>(&sender_id_)) + sizeof(message_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCInternalTestMsg)
}

void CMsgGCToGCInternalTestMsg::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCToGCInternalTestMsg_econ_5fgcmessages_2eproto.base);
  message_body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sender_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&message_id_) -
      reinterpret_cast<char*>(&sender_id_)) + sizeof(message_id_));
}

CMsgGCToGCInternalTestMsg::~CMsgGCToGCInternalTestMsg() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCInternalTestMsg)
  SharedDtor();
}

void CMsgGCToGCInternalTestMsg::SharedDtor() {
  message_body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCToGCInternalTestMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCInternalTestMsg& CMsgGCToGCInternalTestMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCInternalTestMsg_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCInternalTestMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCInternalTestMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_body_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000007eu) {
    ::memset(&sender_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&message_id_) -
        reinterpret_cast<char*>(&sender_id_)) + sizeof(message_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCInternalTestMsg::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCInternalTestMsg*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 sending_gc = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_sending_gc(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 sender_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_sender_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 context = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_context(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 message_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_message_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes message_body = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_message_body();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional fixed64 job_id_source = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 49) goto handle_unusual;
        msg->set_job_id_source(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional fixed64 job_id_target = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 57) goto handle_unusual;
        msg->set_job_id_target(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCInternalTestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCInternalTestMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 sending_gc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_sending_gc(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sending_gc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 sender_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {
          HasBitSetters::set_has_sender_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &sender_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 context = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_context(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &context_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 message_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_message_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &message_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes message_body = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 job_id_source = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (49 & 0xFF)) {
          HasBitSetters::set_has_job_id_source(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &job_id_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 job_id_target = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (57 & 0xFF)) {
          HasBitSetters::set_has_job_id_target(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &job_id_target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCInternalTestMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCInternalTestMsg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCInternalTestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCInternalTestMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 sending_gc = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sending_gc(), output);
  }

  // optional fixed64 sender_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->sender_id(), output);
  }

  // optional uint32 context = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->context(), output);
  }

  // optional uint32 message_id = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->message_id(), output);
  }

  // optional bytes message_body = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->message_body(), output);
  }

  // optional fixed64 job_id_source = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(6, this->job_id_source(), output);
  }

  // optional fixed64 job_id_target = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(7, this->job_id_target(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCInternalTestMsg)
}

::google::protobuf::uint8* CMsgGCToGCInternalTestMsg::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCInternalTestMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 sending_gc = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sending_gc(), target);
  }

  // optional fixed64 sender_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->sender_id(), target);
  }

  // optional uint32 context = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->context(), target);
  }

  // optional uint32 message_id = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->message_id(), target);
  }

  // optional bytes message_body = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->message_body(), target);
  }

  // optional fixed64 job_id_source = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(6, this->job_id_source(), target);
  }

  // optional fixed64 job_id_target = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(7, this->job_id_target(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCInternalTestMsg)
  return target;
}

size_t CMsgGCToGCInternalTestMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCInternalTestMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional bytes message_body = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->message_body());
    }

    // optional fixed64 sender_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional uint32 sending_gc = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sending_gc());
    }

    // optional uint32 context = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->context());
    }

    // optional fixed64 job_id_source = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

    // optional fixed64 job_id_target = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 8;
    }

    // optional uint32 message_id = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->message_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCInternalTestMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCInternalTestMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCInternalTestMsg* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCInternalTestMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCInternalTestMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCInternalTestMsg)
    MergeFrom(*source);
  }
}

void CMsgGCToGCInternalTestMsg::MergeFrom(const CMsgGCToGCInternalTestMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCInternalTestMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      message_body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_body_);
    }
    if (cached_has_bits & 0x00000002u) {
      sender_id_ = from.sender_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      sending_gc_ = from.sending_gc_;
    }
    if (cached_has_bits & 0x00000008u) {
      context_ = from.context_;
    }
    if (cached_has_bits & 0x00000010u) {
      job_id_source_ = from.job_id_source_;
    }
    if (cached_has_bits & 0x00000020u) {
      job_id_target_ = from.job_id_target_;
    }
    if (cached_has_bits & 0x00000040u) {
      message_id_ = from.message_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCInternalTestMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCInternalTestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCInternalTestMsg::CopyFrom(const CMsgGCToGCInternalTestMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCInternalTestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCInternalTestMsg::IsInitialized() const {
  return true;
}

void CMsgGCToGCInternalTestMsg::Swap(CMsgGCToGCInternalTestMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCInternalTestMsg::InternalSwap(CMsgGCToGCInternalTestMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  message_body_.Swap(&other->message_body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sender_id_, other->sender_id_);
  swap(sending_gc_, other->sending_gc_);
  swap(context_, other->context_);
  swap(job_id_source_, other->job_id_source_);
  swap(job_id_target_, other->job_id_target_);
  swap(message_id_, other->message_id_);
}

::google::protobuf::Metadata CMsgGCToGCInternalTestMsg::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCClientServerVersionsUpdated::InitAsDefaultInstance() {
}
class CMsgGCToGCClientServerVersionsUpdated::HasBitSetters {
 public:
  static void set_has_client_min_allowed_version(CMsgGCToGCClientServerVersionsUpdated* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_client_active_version(CMsgGCToGCClientServerVersionsUpdated* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_server_active_version(CMsgGCToGCClientServerVersionsUpdated* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_server_deployed_version(CMsgGCToGCClientServerVersionsUpdated* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCClientServerVersionsUpdated::kClientMinAllowedVersionFieldNumber;
const int CMsgGCToGCClientServerVersionsUpdated::kClientActiveVersionFieldNumber;
const int CMsgGCToGCClientServerVersionsUpdated::kServerActiveVersionFieldNumber;
const int CMsgGCToGCClientServerVersionsUpdated::kServerDeployedVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCClientServerVersionsUpdated::CMsgGCToGCClientServerVersionsUpdated()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
}
CMsgGCToGCClientServerVersionsUpdated::CMsgGCToGCClientServerVersionsUpdated(const CMsgGCToGCClientServerVersionsUpdated& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&client_min_allowed_version_, &from.client_min_allowed_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&server_deployed_version_) -
    reinterpret_cast<char*>(&client_min_allowed_version_)) + sizeof(server_deployed_version_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
}

void CMsgGCToGCClientServerVersionsUpdated::SharedCtor() {
  ::memset(&client_min_allowed_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_deployed_version_) -
      reinterpret_cast<char*>(&client_min_allowed_version_)) + sizeof(server_deployed_version_));
}

CMsgGCToGCClientServerVersionsUpdated::~CMsgGCToGCClientServerVersionsUpdated() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  SharedDtor();
}

void CMsgGCToGCClientServerVersionsUpdated::SharedDtor() {
}

void CMsgGCToGCClientServerVersionsUpdated::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCClientServerVersionsUpdated& CMsgGCToGCClientServerVersionsUpdated::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCClientServerVersionsUpdated_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCClientServerVersionsUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&client_min_allowed_version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&server_deployed_version_) -
        reinterpret_cast<char*>(&client_min_allowed_version_)) + sizeof(server_deployed_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCClientServerVersionsUpdated::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCClientServerVersionsUpdated*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 client_min_allowed_version = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_client_min_allowed_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 client_active_version = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_client_active_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 server_active_version = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_server_active_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 server_deployed_version = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_server_deployed_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCClientServerVersionsUpdated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 client_min_allowed_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_client_min_allowed_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_min_allowed_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 client_active_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_client_active_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_active_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_active_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_server_active_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_active_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_deployed_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_server_deployed_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_deployed_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCClientServerVersionsUpdated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 client_min_allowed_version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->client_min_allowed_version(), output);
  }

  // optional uint32 client_active_version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->client_active_version(), output);
  }

  // optional uint32 server_active_version = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->server_active_version(), output);
  }

  // optional uint32 server_deployed_version = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->server_deployed_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
}

::google::protobuf::uint8* CMsgGCToGCClientServerVersionsUpdated::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 client_min_allowed_version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->client_min_allowed_version(), target);
  }

  // optional uint32 client_active_version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->client_active_version(), target);
  }

  // optional uint32 server_active_version = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->server_active_version(), target);
  }

  // optional uint32 server_deployed_version = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->server_deployed_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  return target;
}

size_t CMsgGCToGCClientServerVersionsUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 client_min_allowed_version = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_min_allowed_version());
    }

    // optional uint32 client_active_version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_active_version());
    }

    // optional uint32 server_active_version = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_active_version());
    }

    // optional uint32 server_deployed_version = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_deployed_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCClientServerVersionsUpdated::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCClientServerVersionsUpdated* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCClientServerVersionsUpdated>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
    MergeFrom(*source);
  }
}

void CMsgGCToGCClientServerVersionsUpdated::MergeFrom(const CMsgGCToGCClientServerVersionsUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      client_min_allowed_version_ = from.client_min_allowed_version_;
    }
    if (cached_has_bits & 0x00000002u) {
      client_active_version_ = from.client_active_version_;
    }
    if (cached_has_bits & 0x00000004u) {
      server_active_version_ = from.server_active_version_;
    }
    if (cached_has_bits & 0x00000008u) {
      server_deployed_version_ = from.server_deployed_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCClientServerVersionsUpdated::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCClientServerVersionsUpdated::CopyFrom(const CMsgGCToGCClientServerVersionsUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCClientServerVersionsUpdated::IsInitialized() const {
  return true;
}

void CMsgGCToGCClientServerVersionsUpdated::Swap(CMsgGCToGCClientServerVersionsUpdated* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCClientServerVersionsUpdated::InternalSwap(CMsgGCToGCClientServerVersionsUpdated* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(client_min_allowed_version_, other->client_min_allowed_version_);
  swap(client_active_version_, other->client_active_version_);
  swap(server_active_version_, other->server_active_version_);
  swap(server_deployed_version_, other->server_deployed_version_);
}

::google::protobuf::Metadata CMsgGCToGCClientServerVersionsUpdated::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCBroadcastMessageFromSub::InitAsDefaultInstance() {
}
class CMsgGCToGCBroadcastMessageFromSub::HasBitSetters {
 public:
  static void set_has_msg_id(CMsgGCToGCBroadcastMessageFromSub* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_serialized_msg(CMsgGCToGCBroadcastMessageFromSub* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCBroadcastMessageFromSub::kMsgIdFieldNumber;
const int CMsgGCToGCBroadcastMessageFromSub::kSerializedMsgFieldNumber;
const int CMsgGCToGCBroadcastMessageFromSub::kAccountIdListFieldNumber;
const int CMsgGCToGCBroadcastMessageFromSub::kSteamIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCBroadcastMessageFromSub::CMsgGCToGCBroadcastMessageFromSub()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
}
CMsgGCToGCBroadcastMessageFromSub::CMsgGCToGCBroadcastMessageFromSub(const CMsgGCToGCBroadcastMessageFromSub& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      account_id_list_(from.account_id_list_),
      steam_id_list_(from.steam_id_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serialized_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialized_msg()) {
    serialized_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_msg_);
  }
  msg_id_ = from.msg_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
}

void CMsgGCToGCBroadcastMessageFromSub::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCToGCBroadcastMessageFromSub_econ_5fgcmessages_2eproto.base);
  serialized_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_ = 0u;
}

CMsgGCToGCBroadcastMessageFromSub::~CMsgGCToGCBroadcastMessageFromSub() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
  SharedDtor();
}

void CMsgGCToGCBroadcastMessageFromSub::SharedDtor() {
  serialized_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCToGCBroadcastMessageFromSub::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCBroadcastMessageFromSub& CMsgGCToGCBroadcastMessageFromSub::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCBroadcastMessageFromSub_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCBroadcastMessageFromSub::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_id_list_.Clear();
  steam_id_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    serialized_msg_.ClearNonDefaultToEmptyNoArena();
  }
  msg_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCBroadcastMessageFromSub::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCBroadcastMessageFromSub*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 msg_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_msg_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes serialized_msg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_serialized_msg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated uint32 account_id_list = 3 [packed = true];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 26) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_account_id_list();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        do {
          msg->add_account_id_list(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
        break;
      }
      // repeated fixed64 steam_id_list = 4 [packed = true];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) == 34) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedFixed64Parser;
          object = msg->mutable_steam_id_list();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 33) goto handle_unusual;
        do {
          msg->add_steam_id_list(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
          ptr += sizeof(::google::protobuf::uint64);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 33 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCBroadcastMessageFromSub::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_msg_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes serialized_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 account_id_list = 3 [packed = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_account_id_list())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_account_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 steam_id_list = 4 [packed = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steam_id_list())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 34u, input, this->mutable_steam_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCBroadcastMessageFromSub::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 msg_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msg_id(), output);
  }

  // optional bytes serialized_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->serialized_msg(), output);
  }

  // repeated uint32 account_id_list = 3 [packed = true];
  if (this->account_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_account_id_list_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->account_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->account_id_list(i), output);
  }

  // repeated fixed64 steam_id_list = 4 [packed = true];
  if (this->steam_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_steam_id_list_cached_byte_size_.load(
        std::memory_order_relaxed));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->steam_id_list().data(), this->steam_id_list_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
}

::google::protobuf::uint8* CMsgGCToGCBroadcastMessageFromSub::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 msg_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msg_id(), target);
  }

  // optional bytes serialized_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->serialized_msg(), target);
  }

  // repeated uint32 account_id_list = 3 [packed = true];
  if (this->account_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _account_id_list_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->account_id_list_, target);
  }

  // repeated fixed64 steam_id_list = 4 [packed = true];
  if (this->steam_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _steam_id_list_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->steam_id_list_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
  return target;
}

size_t CMsgGCToGCBroadcastMessageFromSub::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 account_id_list = 3 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->account_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _account_id_list_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated fixed64 steam_id_list = 4 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->steam_id_list_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _steam_id_list_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes serialized_msg = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serialized_msg());
    }

    // optional uint32 msg_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msg_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCBroadcastMessageFromSub::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCBroadcastMessageFromSub* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCBroadcastMessageFromSub>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
    MergeFrom(*source);
  }
}

void CMsgGCToGCBroadcastMessageFromSub::MergeFrom(const CMsgGCToGCBroadcastMessageFromSub& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  account_id_list_.MergeFrom(from.account_id_list_);
  steam_id_list_.MergeFrom(from.steam_id_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      serialized_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      msg_id_ = from.msg_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCBroadcastMessageFromSub::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCBroadcastMessageFromSub::CopyFrom(const CMsgGCToGCBroadcastMessageFromSub& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCBroadcastMessageFromSub)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCBroadcastMessageFromSub::IsInitialized() const {
  return true;
}

void CMsgGCToGCBroadcastMessageFromSub::Swap(CMsgGCToGCBroadcastMessageFromSub* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCBroadcastMessageFromSub::InternalSwap(CMsgGCToGCBroadcastMessageFromSub* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  account_id_list_.InternalSwap(&other->account_id_list_);
  steam_id_list_.InternalSwap(&other->steam_id_list_);
  serialized_msg_.Swap(&other->serialized_msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msg_id_, other->msg_id_);
}

::google::protobuf::Metadata CMsgGCToGCBroadcastMessageFromSub::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToClientCurrencyPricePoints_Currency::InitAsDefaultInstance() {
}
class CMsgGCToClientCurrencyPricePoints_Currency::HasBitSetters {
 public:
  static void set_has_currency_id(CMsgGCToClientCurrencyPricePoints_Currency* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToClientCurrencyPricePoints_Currency::kCurrencyIdFieldNumber;
const int CMsgGCToClientCurrencyPricePoints_Currency::kCurrencyPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToClientCurrencyPricePoints_Currency::CMsgGCToClientCurrencyPricePoints_Currency()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
}
CMsgGCToClientCurrencyPricePoints_Currency::CMsgGCToClientCurrencyPricePoints_Currency(const CMsgGCToClientCurrencyPricePoints_Currency& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      currency_price_(from.currency_price_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  currency_id_ = from.currency_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
}

void CMsgGCToClientCurrencyPricePoints_Currency::SharedCtor() {
  currency_id_ = 0u;
}

CMsgGCToClientCurrencyPricePoints_Currency::~CMsgGCToClientCurrencyPricePoints_Currency() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
  SharedDtor();
}

void CMsgGCToClientCurrencyPricePoints_Currency::SharedDtor() {
}

void CMsgGCToClientCurrencyPricePoints_Currency::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToClientCurrencyPricePoints_Currency& CMsgGCToClientCurrencyPricePoints_Currency::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToClientCurrencyPricePoints_Currency_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToClientCurrencyPricePoints_Currency::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currency_price_.Clear();
  currency_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToClientCurrencyPricePoints_Currency::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToClientCurrencyPricePoints_Currency*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 currency_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_currency_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint64 currency_price = 2 [packed = true];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 18) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
          object = msg->mutable_currency_price();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        do {
          msg->add_currency_price(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToClientCurrencyPricePoints_Currency::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 currency_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_currency_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currency_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 currency_price = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_currency_price())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_currency_price())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToClientCurrencyPricePoints_Currency::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 currency_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->currency_id(), output);
  }

  // repeated uint64 currency_price = 2 [packed = true];
  if (this->currency_price_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_currency_price_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->currency_price_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->currency_price(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
}

::google::protobuf::uint8* CMsgGCToClientCurrencyPricePoints_Currency::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 currency_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->currency_id(), target);
  }

  // repeated uint64 currency_price = 2 [packed = true];
  if (this->currency_price_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _currency_price_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->currency_price_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
  return target;
}

size_t CMsgGCToClientCurrencyPricePoints_Currency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 currency_price = 2 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->currency_price_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _currency_price_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // optional uint32 currency_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->currency_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToClientCurrencyPricePoints_Currency::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToClientCurrencyPricePoints_Currency* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToClientCurrencyPricePoints_Currency>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
    MergeFrom(*source);
  }
}

void CMsgGCToClientCurrencyPricePoints_Currency::MergeFrom(const CMsgGCToClientCurrencyPricePoints_Currency& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  currency_price_.MergeFrom(from.currency_price_);
  if (from.has_currency_id()) {
    set_currency_id(from.currency_id());
  }
}

void CMsgGCToClientCurrencyPricePoints_Currency::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToClientCurrencyPricePoints_Currency::CopyFrom(const CMsgGCToClientCurrencyPricePoints_Currency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToClientCurrencyPricePoints.Currency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientCurrencyPricePoints_Currency::IsInitialized() const {
  return true;
}

void CMsgGCToClientCurrencyPricePoints_Currency::Swap(CMsgGCToClientCurrencyPricePoints_Currency* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToClientCurrencyPricePoints_Currency::InternalSwap(CMsgGCToClientCurrencyPricePoints_Currency* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  currency_price_.InternalSwap(&other->currency_price_);
  swap(currency_id_, other->currency_id_);
}

::google::protobuf::Metadata CMsgGCToClientCurrencyPricePoints_Currency::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToClientCurrencyPricePoints::InitAsDefaultInstance() {
}
class CMsgGCToClientCurrencyPricePoints::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToClientCurrencyPricePoints::kPriceKeyFieldNumber;
const int CMsgGCToClientCurrencyPricePoints::kCurrenciesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToClientCurrencyPricePoints::CMsgGCToClientCurrencyPricePoints()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToClientCurrencyPricePoints)
}
CMsgGCToClientCurrencyPricePoints::CMsgGCToClientCurrencyPricePoints(const CMsgGCToClientCurrencyPricePoints& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      price_key_(from.price_key_),
      currencies_(from.currencies_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToClientCurrencyPricePoints)
}

void CMsgGCToClientCurrencyPricePoints::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCToClientCurrencyPricePoints_econ_5fgcmessages_2eproto.base);
}

CMsgGCToClientCurrencyPricePoints::~CMsgGCToClientCurrencyPricePoints() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToClientCurrencyPricePoints)
  SharedDtor();
}

void CMsgGCToClientCurrencyPricePoints::SharedDtor() {
}

void CMsgGCToClientCurrencyPricePoints::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToClientCurrencyPricePoints& CMsgGCToClientCurrencyPricePoints::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToClientCurrencyPricePoints_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToClientCurrencyPricePoints::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToClientCurrencyPricePoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  price_key_.Clear();
  currencies_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToClientCurrencyPricePoints::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToClientCurrencyPricePoints*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint64 price_key = 1 [packed = true];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 10) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
          object = msg->mutable_price_key();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        do {
          msg->add_price_key(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
        break;
      }
      // repeated .proto.dota.CMsgGCToClientCurrencyPricePoints.Currency currencies = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgGCToClientCurrencyPricePoints_Currency::_InternalParse;
          object = msg->add_currencies();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToClientCurrencyPricePoints::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToClientCurrencyPricePoints)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 price_key = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_price_key())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_price_key())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgGCToClientCurrencyPricePoints.Currency currencies = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_currencies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToClientCurrencyPricePoints)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToClientCurrencyPricePoints)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToClientCurrencyPricePoints::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToClientCurrencyPricePoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 price_key = 1 [packed = true];
  if (this->price_key_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_price_key_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->price_key_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->price_key(i), output);
  }

  // repeated .proto.dota.CMsgGCToClientCurrencyPricePoints.Currency currencies = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->currencies_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->currencies(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToClientCurrencyPricePoints)
}

::google::protobuf::uint8* CMsgGCToClientCurrencyPricePoints::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToClientCurrencyPricePoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 price_key = 1 [packed = true];
  if (this->price_key_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _price_key_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->price_key_, target);
  }

  // repeated .proto.dota.CMsgGCToClientCurrencyPricePoints.Currency currencies = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->currencies_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->currencies(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToClientCurrencyPricePoints)
  return target;
}

size_t CMsgGCToClientCurrencyPricePoints::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToClientCurrencyPricePoints)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 price_key = 1 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->price_key_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _price_key_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .proto.dota.CMsgGCToClientCurrencyPricePoints.Currency currencies = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->currencies_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->currencies(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToClientCurrencyPricePoints::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToClientCurrencyPricePoints)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToClientCurrencyPricePoints* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToClientCurrencyPricePoints>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToClientCurrencyPricePoints)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToClientCurrencyPricePoints)
    MergeFrom(*source);
  }
}

void CMsgGCToClientCurrencyPricePoints::MergeFrom(const CMsgGCToClientCurrencyPricePoints& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToClientCurrencyPricePoints)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  price_key_.MergeFrom(from.price_key_);
  currencies_.MergeFrom(from.currencies_);
}

void CMsgGCToClientCurrencyPricePoints::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToClientCurrencyPricePoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToClientCurrencyPricePoints::CopyFrom(const CMsgGCToClientCurrencyPricePoints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToClientCurrencyPricePoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientCurrencyPricePoints::IsInitialized() const {
  return true;
}

void CMsgGCToClientCurrencyPricePoints::Swap(CMsgGCToClientCurrencyPricePoints* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToClientCurrencyPricePoints::InternalSwap(CMsgGCToClientCurrencyPricePoints* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  price_key_.InternalSwap(&other->price_key_);
  CastToBase(&currencies_)->InternalSwap(CastToBase(&other->currencies_));
}

::google::protobuf::Metadata CMsgGCToClientCurrencyPricePoints::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgBannedWordList::InitAsDefaultInstance() {
}
class CMsgBannedWordList::HasBitSetters {
 public:
  static void set_has_version(CMsgBannedWordList* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgBannedWordList::kVersionFieldNumber;
const int CMsgBannedWordList::kBannedWordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgBannedWordList::CMsgBannedWordList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgBannedWordList)
}
CMsgBannedWordList::CMsgBannedWordList(const CMsgBannedWordList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      banned_words_(from.banned_words_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgBannedWordList)
}

void CMsgBannedWordList::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgBannedWordList_econ_5fgcmessages_2eproto.base);
  version_ = 0u;
}

CMsgBannedWordList::~CMsgBannedWordList() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgBannedWordList)
  SharedDtor();
}

void CMsgBannedWordList::SharedDtor() {
}

void CMsgBannedWordList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgBannedWordList& CMsgBannedWordList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgBannedWordList_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgBannedWordList::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgBannedWordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  banned_words_.Clear();
  version_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgBannedWordList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgBannedWordList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated string banned_words = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("proto.dota.CMsgBannedWordList.banned_words");
          object = msg->add_banned_words();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgBannedWordList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgBannedWordList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string banned_words = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_banned_words()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->banned_words(this->banned_words_size() - 1).data(),
            static_cast<int>(this->banned_words(this->banned_words_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgBannedWordList.banned_words");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgBannedWordList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgBannedWordList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgBannedWordList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgBannedWordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // repeated string banned_words = 2;
  for (int i = 0, n = this->banned_words_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->banned_words(i).data(), static_cast<int>(this->banned_words(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgBannedWordList.banned_words");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->banned_words(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgBannedWordList)
}

::google::protobuf::uint8* CMsgBannedWordList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgBannedWordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // repeated string banned_words = 2;
  for (int i = 0, n = this->banned_words_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->banned_words(i).data(), static_cast<int>(this->banned_words(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgBannedWordList.banned_words");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->banned_words(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgBannedWordList)
  return target;
}

size_t CMsgBannedWordList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgBannedWordList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string banned_words = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->banned_words_size());
  for (int i = 0, n = this->banned_words_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->banned_words(i));
  }

  // optional uint32 version = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgBannedWordList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgBannedWordList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgBannedWordList* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgBannedWordList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgBannedWordList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgBannedWordList)
    MergeFrom(*source);
  }
}

void CMsgBannedWordList::MergeFrom(const CMsgBannedWordList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgBannedWordList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  banned_words_.MergeFrom(from.banned_words_);
  if (from.has_version()) {
    set_version(from.version());
  }
}

void CMsgBannedWordList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgBannedWordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgBannedWordList::CopyFrom(const CMsgBannedWordList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgBannedWordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgBannedWordList::IsInitialized() const {
  return true;
}

void CMsgBannedWordList::Swap(CMsgBannedWordList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgBannedWordList::InternalSwap(CMsgBannedWordList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  banned_words_.InternalSwap(CastToBase(&other->banned_words_));
  swap(version_, other->version_);
}

::google::protobuf::Metadata CMsgBannedWordList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CEcon_FlushInventoryCache_Request::InitAsDefaultInstance() {
}
class CEcon_FlushInventoryCache_Request::HasBitSetters {
 public:
  static void set_has_steamid(CEcon_FlushInventoryCache_Request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_appid(CEcon_FlushInventoryCache_Request* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_contextid(CEcon_FlushInventoryCache_Request* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEcon_FlushInventoryCache_Request::kSteamidFieldNumber;
const int CEcon_FlushInventoryCache_Request::kAppidFieldNumber;
const int CEcon_FlushInventoryCache_Request::kContextidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEcon_FlushInventoryCache_Request::CEcon_FlushInventoryCache_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CEcon_FlushInventoryCache_Request)
}
CEcon_FlushInventoryCache_Request::CEcon_FlushInventoryCache_Request(const CEcon_FlushInventoryCache_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CEcon_FlushInventoryCache_Request)
}

void CEcon_FlushInventoryCache_Request::SharedCtor() {
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&appid_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(appid_));
}

CEcon_FlushInventoryCache_Request::~CEcon_FlushInventoryCache_Request() {
  // @@protoc_insertion_point(destructor:proto.dota.CEcon_FlushInventoryCache_Request)
  SharedDtor();
}

void CEcon_FlushInventoryCache_Request::SharedDtor() {
}

void CEcon_FlushInventoryCache_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CEcon_FlushInventoryCache_Request& CEcon_FlushInventoryCache_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CEcon_FlushInventoryCache_Request_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CEcon_FlushInventoryCache_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CEcon_FlushInventoryCache_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&appid_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CEcon_FlushInventoryCache_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CEcon_FlushInventoryCache_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 steamid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_steamid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 appid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_appid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 contextid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_contextid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CEcon_FlushInventoryCache_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CEcon_FlushInventoryCache_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_appid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 contextid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_contextid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &contextid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CEcon_FlushInventoryCache_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CEcon_FlushInventoryCache_Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CEcon_FlushInventoryCache_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CEcon_FlushInventoryCache_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->steamid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional uint64 contextid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->contextid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CEcon_FlushInventoryCache_Request)
}

::google::protobuf::uint8* CEcon_FlushInventoryCache_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CEcon_FlushInventoryCache_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional uint64 contextid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->contextid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CEcon_FlushInventoryCache_Request)
  return target;
}

size_t CEcon_FlushInventoryCache_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CEcon_FlushInventoryCache_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->steamid());
    }

    // optional uint64 contextid = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->contextid());
    }

    // optional uint32 appid = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEcon_FlushInventoryCache_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CEcon_FlushInventoryCache_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CEcon_FlushInventoryCache_Request* source =
      ::google::protobuf::DynamicCastToGenerated<CEcon_FlushInventoryCache_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CEcon_FlushInventoryCache_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CEcon_FlushInventoryCache_Request)
    MergeFrom(*source);
  }
}

void CEcon_FlushInventoryCache_Request::MergeFrom(const CEcon_FlushInventoryCache_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CEcon_FlushInventoryCache_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      contextid_ = from.contextid_;
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CEcon_FlushInventoryCache_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CEcon_FlushInventoryCache_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEcon_FlushInventoryCache_Request::CopyFrom(const CEcon_FlushInventoryCache_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CEcon_FlushInventoryCache_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEcon_FlushInventoryCache_Request::IsInitialized() const {
  return true;
}

void CEcon_FlushInventoryCache_Request::Swap(CEcon_FlushInventoryCache_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEcon_FlushInventoryCache_Request::InternalSwap(CEcon_FlushInventoryCache_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(steamid_, other->steamid_);
  swap(contextid_, other->contextid_);
  swap(appid_, other->appid_);
}

::google::protobuf::Metadata CEcon_FlushInventoryCache_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CEcon_FlushInventoryCache_Response::InitAsDefaultInstance() {
}
class CEcon_FlushInventoryCache_Response::HasBitSetters {
 public:
  static void set_has_success(CEcon_FlushInventoryCache_Response* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEcon_FlushInventoryCache_Response::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEcon_FlushInventoryCache_Response::CEcon_FlushInventoryCache_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CEcon_FlushInventoryCache_Response)
}
CEcon_FlushInventoryCache_Response::CEcon_FlushInventoryCache_Response(const CEcon_FlushInventoryCache_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CEcon_FlushInventoryCache_Response)
}

void CEcon_FlushInventoryCache_Response::SharedCtor() {
  success_ = false;
}

CEcon_FlushInventoryCache_Response::~CEcon_FlushInventoryCache_Response() {
  // @@protoc_insertion_point(destructor:proto.dota.CEcon_FlushInventoryCache_Response)
  SharedDtor();
}

void CEcon_FlushInventoryCache_Response::SharedDtor() {
}

void CEcon_FlushInventoryCache_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CEcon_FlushInventoryCache_Response& CEcon_FlushInventoryCache_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CEcon_FlushInventoryCache_Response_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CEcon_FlushInventoryCache_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CEcon_FlushInventoryCache_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CEcon_FlushInventoryCache_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CEcon_FlushInventoryCache_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool success = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CEcon_FlushInventoryCache_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CEcon_FlushInventoryCache_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CEcon_FlushInventoryCache_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CEcon_FlushInventoryCache_Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CEcon_FlushInventoryCache_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CEcon_FlushInventoryCache_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CEcon_FlushInventoryCache_Response)
}

::google::protobuf::uint8* CEcon_FlushInventoryCache_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CEcon_FlushInventoryCache_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CEcon_FlushInventoryCache_Response)
  return target;
}

size_t CEcon_FlushInventoryCache_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CEcon_FlushInventoryCache_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool success = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CEcon_FlushInventoryCache_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CEcon_FlushInventoryCache_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CEcon_FlushInventoryCache_Response* source =
      ::google::protobuf::DynamicCastToGenerated<CEcon_FlushInventoryCache_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CEcon_FlushInventoryCache_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CEcon_FlushInventoryCache_Response)
    MergeFrom(*source);
  }
}

void CEcon_FlushInventoryCache_Response::MergeFrom(const CEcon_FlushInventoryCache_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CEcon_FlushInventoryCache_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void CEcon_FlushInventoryCache_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CEcon_FlushInventoryCache_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEcon_FlushInventoryCache_Response::CopyFrom(const CEcon_FlushInventoryCache_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CEcon_FlushInventoryCache_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CEcon_FlushInventoryCache_Response::IsInitialized() const {
  return true;
}

void CEcon_FlushInventoryCache_Response::Swap(CEcon_FlushInventoryCache_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEcon_FlushInventoryCache_Response::InternalSwap(CEcon_FlushInventoryCache_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(success_, other->success_);
}

::google::protobuf::Metadata CEcon_FlushInventoryCache_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCFlushSteamInventoryCache_Key::InitAsDefaultInstance() {
}
class CMsgGCToGCFlushSteamInventoryCache_Key::HasBitSetters {
 public:
  static void set_has_steamid(CMsgGCToGCFlushSteamInventoryCache_Key* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_contextid(CMsgGCToGCFlushSteamInventoryCache_Key* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCFlushSteamInventoryCache_Key::kSteamidFieldNumber;
const int CMsgGCToGCFlushSteamInventoryCache_Key::kContextidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCFlushSteamInventoryCache_Key::CMsgGCToGCFlushSteamInventoryCache_Key()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
}
CMsgGCToGCFlushSteamInventoryCache_Key::CMsgGCToGCFlushSteamInventoryCache_Key(const CMsgGCToGCFlushSteamInventoryCache_Key& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&contextid_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(contextid_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
}

void CMsgGCToGCFlushSteamInventoryCache_Key::SharedCtor() {
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&contextid_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(contextid_));
}

CMsgGCToGCFlushSteamInventoryCache_Key::~CMsgGCToGCFlushSteamInventoryCache_Key() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
  SharedDtor();
}

void CMsgGCToGCFlushSteamInventoryCache_Key::SharedDtor() {
}

void CMsgGCToGCFlushSteamInventoryCache_Key::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCFlushSteamInventoryCache_Key& CMsgGCToGCFlushSteamInventoryCache_Key::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCFlushSteamInventoryCache_Key_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCFlushSteamInventoryCache_Key::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&contextid_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(contextid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCFlushSteamInventoryCache_Key::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCFlushSteamInventoryCache_Key*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 steamid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_steamid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 contextid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_contextid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCFlushSteamInventoryCache_Key::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 contextid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_contextid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &contextid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCFlushSteamInventoryCache_Key::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->steamid(), output);
  }

  // optional uint64 contextid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->contextid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
}

::google::protobuf::uint8* CMsgGCToGCFlushSteamInventoryCache_Key::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->steamid(), target);
  }

  // optional uint64 contextid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->contextid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
  return target;
}

size_t CMsgGCToGCFlushSteamInventoryCache_Key::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->steamid());
    }

    // optional uint64 contextid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->contextid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCFlushSteamInventoryCache_Key::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCFlushSteamInventoryCache_Key* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCFlushSteamInventoryCache_Key>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
    MergeFrom(*source);
  }
}

void CMsgGCToGCFlushSteamInventoryCache_Key::MergeFrom(const CMsgGCToGCFlushSteamInventoryCache_Key& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      contextid_ = from.contextid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCFlushSteamInventoryCache_Key::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCFlushSteamInventoryCache_Key::CopyFrom(const CMsgGCToGCFlushSteamInventoryCache_Key& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCFlushSteamInventoryCache_Key::IsInitialized() const {
  return true;
}

void CMsgGCToGCFlushSteamInventoryCache_Key::Swap(CMsgGCToGCFlushSteamInventoryCache_Key* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCFlushSteamInventoryCache_Key::InternalSwap(CMsgGCToGCFlushSteamInventoryCache_Key* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(steamid_, other->steamid_);
  swap(contextid_, other->contextid_);
}

::google::protobuf::Metadata CMsgGCToGCFlushSteamInventoryCache_Key::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCFlushSteamInventoryCache::InitAsDefaultInstance() {
}
class CMsgGCToGCFlushSteamInventoryCache::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCFlushSteamInventoryCache::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCFlushSteamInventoryCache::CMsgGCToGCFlushSteamInventoryCache()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
}
CMsgGCToGCFlushSteamInventoryCache::CMsgGCToGCFlushSteamInventoryCache(const CMsgGCToGCFlushSteamInventoryCache& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
}

void CMsgGCToGCFlushSteamInventoryCache::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCToGCFlushSteamInventoryCache_econ_5fgcmessages_2eproto.base);
}

CMsgGCToGCFlushSteamInventoryCache::~CMsgGCToGCFlushSteamInventoryCache() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
  SharedDtor();
}

void CMsgGCToGCFlushSteamInventoryCache::SharedDtor() {
}

void CMsgGCToGCFlushSteamInventoryCache::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCFlushSteamInventoryCache& CMsgGCToGCFlushSteamInventoryCache::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCFlushSteamInventoryCache_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCFlushSteamInventoryCache::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCFlushSteamInventoryCache::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCFlushSteamInventoryCache*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key keys = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::dota::CMsgGCToGCFlushSteamInventoryCache_Key::_InternalParse;
          object = msg->add_keys();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCFlushSteamInventoryCache::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCFlushSteamInventoryCache::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->keys(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
}

::google::protobuf::uint8* CMsgGCToGCFlushSteamInventoryCache::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keys(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
  return target;
}

size_t CMsgGCToGCFlushSteamInventoryCache::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgGCToGCFlushSteamInventoryCache.Key keys = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCFlushSteamInventoryCache::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCFlushSteamInventoryCache* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCFlushSteamInventoryCache>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
    MergeFrom(*source);
  }
}

void CMsgGCToGCFlushSteamInventoryCache::MergeFrom(const CMsgGCToGCFlushSteamInventoryCache& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
}

void CMsgGCToGCFlushSteamInventoryCache::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCFlushSteamInventoryCache::CopyFrom(const CMsgGCToGCFlushSteamInventoryCache& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCFlushSteamInventoryCache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCFlushSteamInventoryCache::IsInitialized() const {
  return true;
}

void CMsgGCToGCFlushSteamInventoryCache::Swap(CMsgGCToGCFlushSteamInventoryCache* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCFlushSteamInventoryCache::InternalSwap(CMsgGCToGCFlushSteamInventoryCache* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
}

::google::protobuf::Metadata CMsgGCToGCFlushSteamInventoryCache::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCToGCUpdateSubscriptionItems::InitAsDefaultInstance() {
}
class CMsgGCToGCUpdateSubscriptionItems::HasBitSetters {
 public:
  static void set_has_account_id(CMsgGCToGCUpdateSubscriptionItems* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_always_notify(CMsgGCToGCUpdateSubscriptionItems* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCUpdateSubscriptionItems::kAccountIdFieldNumber;
const int CMsgGCToGCUpdateSubscriptionItems::kAlwaysNotifyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCUpdateSubscriptionItems::CMsgGCToGCUpdateSubscriptionItems()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
}
CMsgGCToGCUpdateSubscriptionItems::CMsgGCToGCUpdateSubscriptionItems(const CMsgGCToGCUpdateSubscriptionItems& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&always_notify_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(always_notify_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
}

void CMsgGCToGCUpdateSubscriptionItems::SharedCtor() {
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&always_notify_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(always_notify_));
}

CMsgGCToGCUpdateSubscriptionItems::~CMsgGCToGCUpdateSubscriptionItems() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
  SharedDtor();
}

void CMsgGCToGCUpdateSubscriptionItems::SharedDtor() {
}

void CMsgGCToGCUpdateSubscriptionItems::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCToGCUpdateSubscriptionItems& CMsgGCToGCUpdateSubscriptionItems::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCToGCUpdateSubscriptionItems_econ_5fgcmessages_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCToGCUpdateSubscriptionItems::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&always_notify_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(always_notify_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCToGCUpdateSubscriptionItems::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCToGCUpdateSubscriptionItems*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool always_notify = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_always_notify(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCToGCUpdateSubscriptionItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool always_notify = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_always_notify(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &always_notify_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCToGCUpdateSubscriptionItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional bool always_notify = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->always_notify(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
}

::google::protobuf::uint8* CMsgGCToGCUpdateSubscriptionItems::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional bool always_notify = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->always_notify(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
  return target;
}

size_t CMsgGCToGCUpdateSubscriptionItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional bool always_notify = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToGCUpdateSubscriptionItems::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCUpdateSubscriptionItems* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCToGCUpdateSubscriptionItems>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
    MergeFrom(*source);
  }
}

void CMsgGCToGCUpdateSubscriptionItems::MergeFrom(const CMsgGCToGCUpdateSubscriptionItems& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      always_notify_ = from.always_notify_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCUpdateSubscriptionItems::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCUpdateSubscriptionItems::CopyFrom(const CMsgGCToGCUpdateSubscriptionItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCUpdateSubscriptionItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCUpdateSubscriptionItems::IsInitialized() const {
  return true;
}

void CMsgGCToGCUpdateSubscriptionItems::Swap(CMsgGCToGCUpdateSubscriptionItems* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCUpdateSubscriptionItems::InternalSwap(CMsgGCToGCUpdateSubscriptionItems* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(account_id_, other->account_id_);
  swap(always_notify_, other->always_notify_);
}

::google::protobuf::Metadata CMsgGCToGCUpdateSubscriptionItems::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_econ_5fgcmessages_2eproto);
  return ::file_level_metadata_econ_5fgcmessages_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dota
}  // namespace proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgApplyAutograph* Arena::CreateMaybeMessage< ::proto::dota::CMsgApplyAutograph >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgApplyAutograph >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgAdjustItemEquippedState* Arena::CreateMaybeMessage< ::proto::dota::CMsgAdjustItemEquippedState >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgAdjustItemEquippedState >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* Arena::CreateMaybeMessage< ::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgEconPlayerStrangeCountAdjustment* Arena::CreateMaybeMessage< ::proto::dota::CMsgEconPlayerStrangeCountAdjustment >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgEconPlayerStrangeCountAdjustment >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgRequestItemPurgatory_FinalizePurchase* Arena::CreateMaybeMessage< ::proto::dota::CMsgRequestItemPurgatory_FinalizePurchase >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgRequestItemPurgatory_FinalizePurchase >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgRequestItemPurgatory_FinalizePurchaseResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgRequestItemPurgatory_FinalizePurchaseResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgRequestItemPurgatory_FinalizePurchaseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgRequestItemPurgatory_RefundPurchase* Arena::CreateMaybeMessage< ::proto::dota::CMsgRequestItemPurgatory_RefundPurchase >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgRequestItemPurgatory_RefundPurchase >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgRequestItemPurgatory_RefundPurchaseResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgRequestItemPurgatory_RefundPurchaseResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgRequestItemPurgatory_RefundPurchaseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgCraftingResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgCraftingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgCraftingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCRequestStoreSalesData* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCRequestStoreSalesData >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCRequestStoreSalesData >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCRequestStoreSalesDataResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCRequestStoreSalesDataResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCRequestStoreSalesDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCRequestStoreSalesDataUpToDateResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCRequestStoreSalesDataUpToDateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCRequestStoreSalesDataUpToDateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCPingRequest* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCPingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCPingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCPingResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCPingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCPingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCGetUserSessionServer* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCGetUserSessionServer >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCGetUserSessionServer >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCGetUserSessionServerResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCGetUserSessionServerResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCGetUserSessionServerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCGetUserServerMembers* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCGetUserServerMembers >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCGetUserServerMembers >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCGetUserServerMembersResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCGetUserServerMembersResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCGetUserServerMembersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgLookupMultipleAccountNames* Arena::CreateMaybeMessage< ::proto::dota::CMsgLookupMultipleAccountNames >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgLookupMultipleAccountNames >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account* Arena::CreateMaybeMessage< ::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgLookupMultipleAccountNamesResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgLookupMultipleAccountNamesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgLookupMultipleAccountNamesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgRequestCrateItems* Arena::CreateMaybeMessage< ::proto::dota::CMsgRequestCrateItems >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgRequestCrateItems >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgRequestCrateItemsResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgRequestCrateItemsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgRequestCrateItemsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgRequestCrateEscalationLevel* Arena::CreateMaybeMessage< ::proto::dota::CMsgRequestCrateEscalationLevel >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgRequestCrateEscalationLevel >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgRequestCrateEscalationLevelResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgRequestCrateEscalationLevelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgRequestCrateEscalationLevelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCCanUseDropRateBonus* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCCanUseDropRateBonus >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCCanUseDropRateBonus >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgSQLAddDropRateBonus* Arena::CreateMaybeMessage< ::proto::dota::CMsgSQLAddDropRateBonus >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgSQLAddDropRateBonus >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgSQLUpgradeBattleBooster* Arena::CreateMaybeMessage< ::proto::dota::CMsgSQLUpgradeBattleBooster >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgSQLUpgradeBattleBooster >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCRefreshSOCache* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCRefreshSOCache >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCRefreshSOCache >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCCheckAccountTradeStatus* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCCheckAccountTradeStatus >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCCheckAccountTradeStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCCheckAccountTradeStatusResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCCheckAccountTradeStatusResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCCheckAccountTradeStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCAddSubscriptionTime* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCAddSubscriptionTime >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCAddSubscriptionTime >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCGrantAccountRolledItems* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCGrantAccountRolledItems >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCGrantAccountRolledItems >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCGrantSelfMadeItemToAccount* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCGrantSelfMadeItemToAccount >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCGrantSelfMadeItemToAccount >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgUseItem* Arena::CreateMaybeMessage< ::proto::dota::CMsgUseItem >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgUseItem >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgServerUseItem* Arena::CreateMaybeMessage< ::proto::dota::CMsgServerUseItem >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgServerUseItem >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgUseMultipleItems* Arena::CreateMaybeMessage< ::proto::dota::CMsgUseMultipleItems >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgUseMultipleItems >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCPartnerBalanceRequest* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCPartnerBalanceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCPartnerBalanceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCPartnerBalanceResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCPartnerBalanceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCPartnerBalanceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CGCStoreRechargeRedirect_LineItem* Arena::CreateMaybeMessage< ::proto::dota::CGCStoreRechargeRedirect_LineItem >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CGCStoreRechargeRedirect_LineItem >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCPartnerRechargeRedirectURLRequest* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCPartnerRechargeRedirectURLRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCPartnerRechargeRedirectURLRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCPartnerRechargeRedirectURLResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCPartnerRechargeRedirectURLResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCPartnerRechargeRedirectURLResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCEconSQLWorkItemEmbeddedRollbackData* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCEconSQLWorkItemEmbeddedRollbackData >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCEconSQLWorkItemEmbeddedRollbackData >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgCraftStatue* Arena::CreateMaybeMessage< ::proto::dota::CMsgCraftStatue >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgCraftStatue >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgRedeemCode* Arena::CreateMaybeMessage< ::proto::dota::CMsgRedeemCode >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgRedeemCode >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgRedeemCodeResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgRedeemCodeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgRedeemCodeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDevNewItemRequest* Arena::CreateMaybeMessage< ::proto::dota::CMsgDevNewItemRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDevNewItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDevNewItemRequestResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgDevNewItemRequestResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDevNewItemRequestResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDevUnlockAllItemStyles* Arena::CreateMaybeMessage< ::proto::dota::CMsgDevUnlockAllItemStyles >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDevUnlockAllItemStyles >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgDevUnlockAllItemStylesResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgDevUnlockAllItemStylesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgDevUnlockAllItemStylesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCGetAccountSubscriptionItem* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCGetAccountSubscriptionItem >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCGetAccountSubscriptionItem >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCGetAccountSubscriptionItemResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCGetAccountSubscriptionItemResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCGetAccountSubscriptionItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCAddGiftItem* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCAddGiftItem >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCAddGiftItem >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCWrapAndDeliverGift* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCWrapAndDeliverGift >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCWrapAndDeliverGift >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCWrapAndDeliverGiftResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCWrapAndDeliverGiftResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCWrapAndDeliverGiftResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCUnwrapGift* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCUnwrapGift >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCUnwrapGift >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCGetGiftPermissions* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCGetGiftPermissions >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCGetGiftPermissions >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCGetGiftPermissionsResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCGetGiftPermissionsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCGetGiftPermissionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCUnpackBundle* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCUnpackBundle >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCUnpackBundle >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCUnpackBundleResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCUnpackBundleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCUnpackBundleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToClientStoreTransactionCompleted* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToClientStoreTransactionCompleted >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToClientStoreTransactionCompleted >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCEquipItems* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCEquipItems >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCEquipItems >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCEquipItemsResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCEquipItemsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCEquipItemsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCSetItemStyle* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCSetItemStyle >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCSetItemStyle >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCSetItemStyleResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCSetItemStyleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCSetItemStyleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCUnlockItemStyle* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCUnlockItemStyle >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCUnlockItemStyle >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCUnlockItemStyleResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCUnlockItemStyleResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCUnlockItemStyleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCSetItemInventoryCategory* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCSetItemInventoryCategory >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCSetItemInventoryCategory >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCUnlockCrate* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCUnlockCrate >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCUnlockCrate >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCUnlockCrateResponse_Item* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCUnlockCrateResponse_Item >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCUnlockCrateResponse_Item >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCUnlockCrateResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCUnlockCrateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCUnlockCrateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCRemoveItemAttribute* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCRemoveItemAttribute >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCRemoveItemAttribute >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCRemoveItemAttributeResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCRemoveItemAttributeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCRemoveItemAttributeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCNameItem* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCNameItem >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCNameItem >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCNameItemResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCNameItemResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCNameItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCSetItemPosition* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCSetItemPosition >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCSetItemPosition >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CAttribute_ItemDynamicRecipeComponent* Arena::CreateMaybeMessage< ::proto::dota::CAttribute_ItemDynamicRecipeComponent >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CAttribute_ItemDynamicRecipeComponent >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CProtoItemSocket* Arena::CreateMaybeMessage< ::proto::dota::CProtoItemSocket >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CProtoItemSocket >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CProtoItemSocket_Empty* Arena::CreateMaybeMessage< ::proto::dota::CProtoItemSocket_Empty >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CProtoItemSocket_Empty >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CProtoItemSocket_Effect* Arena::CreateMaybeMessage< ::proto::dota::CProtoItemSocket_Effect >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CProtoItemSocket_Effect >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CProtoItemSocket_Color* Arena::CreateMaybeMessage< ::proto::dota::CProtoItemSocket_Color >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CProtoItemSocket_Color >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CProtoItemSocket_Strange* Arena::CreateMaybeMessage< ::proto::dota::CProtoItemSocket_Strange >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CProtoItemSocket_Strange >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CProtoItemSocket_Spectator* Arena::CreateMaybeMessage< ::proto::dota::CProtoItemSocket_Spectator >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CProtoItemSocket_Spectator >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CProtoItemSocket_AssetModifier* Arena::CreateMaybeMessage< ::proto::dota::CProtoItemSocket_AssetModifier >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CProtoItemSocket_AssetModifier >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* Arena::CreateMaybeMessage< ::proto::dota::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CProtoItemSocket_Autograph* Arena::CreateMaybeMessage< ::proto::dota::CProtoItemSocket_Autograph >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CProtoItemSocket_Autograph >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CProtoItemSocket_StaticVisuals* Arena::CreateMaybeMessage< ::proto::dota::CProtoItemSocket_StaticVisuals >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CProtoItemSocket_StaticVisuals >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CAttribute_String* Arena::CreateMaybeMessage< ::proto::dota::CAttribute_String >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CAttribute_String >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CWorkshop_GetItemDailyRevenue_Request* Arena::CreateMaybeMessage< ::proto::dota::CWorkshop_GetItemDailyRevenue_Request >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CWorkshop_GetItemDailyRevenue_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* Arena::CreateMaybeMessage< ::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CWorkshop_GetItemDailyRevenue_Response* Arena::CreateMaybeMessage< ::proto::dota::CWorkshop_GetItemDailyRevenue_Response >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CWorkshop_GetItemDailyRevenue_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CWorkshop_GetPackageDailyRevenue_Request* Arena::CreateMaybeMessage< ::proto::dota::CWorkshop_GetPackageDailyRevenue_Request >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CWorkshop_GetPackageDailyRevenue_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* Arena::CreateMaybeMessage< ::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CWorkshop_GetPackageDailyRevenue_Response* Arena::CreateMaybeMessage< ::proto::dota::CWorkshop_GetPackageDailyRevenue_Response >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CWorkshop_GetPackageDailyRevenue_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgSQLGCToGCGrantBackpackSlots* Arena::CreateMaybeMessage< ::proto::dota::CMsgSQLGCToGCGrantBackpackSlots >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgSQLGCToGCGrantBackpackSlots >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCLookupAccountName* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCLookupAccountName >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCLookupAccountName >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCLookupAccountNameResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCLookupAccountNameResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCLookupAccountNameResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCCreateStaticRecipe_Item* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCCreateStaticRecipe_Item >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCCreateStaticRecipe_Item >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCCreateStaticRecipe* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCCreateStaticRecipe >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCCreateStaticRecipe >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgProcessTransactionOrder_Item* Arena::CreateMaybeMessage< ::proto::dota::CMsgProcessTransactionOrder_Item >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgProcessTransactionOrder_Item >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgProcessTransactionOrder* Arena::CreateMaybeMessage< ::proto::dota::CMsgProcessTransactionOrder >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgProcessTransactionOrder >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCStoreProcessCDKeyTransaction* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCStoreProcessCDKeyTransaction >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCStoreProcessCDKeyTransaction >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCStoreProcessCDKeyTransactionResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCStoreProcessCDKeyTransactionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCStoreProcessCDKeyTransactionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCStoreProcessSettlement* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCStoreProcessSettlement >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCStoreProcessSettlement >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCStoreProcessSettlementResponse* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCStoreProcessSettlementResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCStoreProcessSettlementResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCBroadcastConsoleCommand* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCBroadcastConsoleCommand >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCBroadcastConsoleCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCConsoleOutput_OutputLine* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCConsoleOutput_OutputLine >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCConsoleOutput_OutputLine >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCConsoleOutput* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCConsoleOutput >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCConsoleOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgItemAges_MaxItemIDTimestamp* Arena::CreateMaybeMessage< ::proto::dota::CMsgItemAges_MaxItemIDTimestamp >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgItemAges_MaxItemIDTimestamp >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgItemAges* Arena::CreateMaybeMessage< ::proto::dota::CMsgItemAges >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgItemAges >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCInternalTestMsg* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCInternalTestMsg >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCInternalTestMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCClientServerVersionsUpdated* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCClientServerVersionsUpdated >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCClientServerVersionsUpdated >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCBroadcastMessageFromSub* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCBroadcastMessageFromSub >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCBroadcastMessageFromSub >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToClientCurrencyPricePoints_Currency* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToClientCurrencyPricePoints_Currency >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToClientCurrencyPricePoints_Currency >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToClientCurrencyPricePoints* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToClientCurrencyPricePoints >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToClientCurrencyPricePoints >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgBannedWordList* Arena::CreateMaybeMessage< ::proto::dota::CMsgBannedWordList >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgBannedWordList >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CEcon_FlushInventoryCache_Request* Arena::CreateMaybeMessage< ::proto::dota::CEcon_FlushInventoryCache_Request >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CEcon_FlushInventoryCache_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CEcon_FlushInventoryCache_Response* Arena::CreateMaybeMessage< ::proto::dota::CEcon_FlushInventoryCache_Response >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CEcon_FlushInventoryCache_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCFlushSteamInventoryCache_Key* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCFlushSteamInventoryCache_Key >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCFlushSteamInventoryCache_Key >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCFlushSteamInventoryCache* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCFlushSteamInventoryCache >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCFlushSteamInventoryCache >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::dota::CMsgGCToGCUpdateSubscriptionItems* Arena::CreateMaybeMessage< ::proto::dota::CMsgGCToGCUpdateSubscriptionItems >(Arena* arena) {
  return Arena::CreateInternal< ::proto::dota::CMsgGCToGCUpdateSubscriptionItems >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
