// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: clientmessages.proto

#ifndef PROTOBUF_INCLUDED_clientmessages_2eproto
#define PROTOBUF_INCLUDED_clientmessages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_clientmessages_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_clientmessages_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_clientmessages_2eproto();
namespace proto {
namespace dota {
class CClientMsg_ClientUIEvent;
class CClientMsg_ClientUIEventDefaultTypeInternal;
extern CClientMsg_ClientUIEventDefaultTypeInternal _CClientMsg_ClientUIEvent_default_instance_;
class CClientMsg_CustomGameEvent;
class CClientMsg_CustomGameEventDefaultTypeInternal;
extern CClientMsg_CustomGameEventDefaultTypeInternal _CClientMsg_CustomGameEvent_default_instance_;
class CClientMsg_CustomGameEventBounce;
class CClientMsg_CustomGameEventBounceDefaultTypeInternal;
extern CClientMsg_CustomGameEventBounceDefaultTypeInternal _CClientMsg_CustomGameEventBounce_default_instance_;
class CClientMsg_DevPaletteVisibilityChangedEvent;
class CClientMsg_DevPaletteVisibilityChangedEventDefaultTypeInternal;
extern CClientMsg_DevPaletteVisibilityChangedEventDefaultTypeInternal _CClientMsg_DevPaletteVisibilityChangedEvent_default_instance_;
class CClientMsg_RotateAnchor;
class CClientMsg_RotateAnchorDefaultTypeInternal;
extern CClientMsg_RotateAnchorDefaultTypeInternal _CClientMsg_RotateAnchor_default_instance_;
class CClientMsg_WorldUIControllerHasPanelChangedEvent;
class CClientMsg_WorldUIControllerHasPanelChangedEventDefaultTypeInternal;
extern CClientMsg_WorldUIControllerHasPanelChangedEventDefaultTypeInternal _CClientMsg_WorldUIControllerHasPanelChangedEvent_default_instance_;
}  // namespace dota
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::dota::CClientMsg_ClientUIEvent* Arena::CreateMaybeMessage<::proto::dota::CClientMsg_ClientUIEvent>(Arena*);
template<> ::proto::dota::CClientMsg_CustomGameEvent* Arena::CreateMaybeMessage<::proto::dota::CClientMsg_CustomGameEvent>(Arena*);
template<> ::proto::dota::CClientMsg_CustomGameEventBounce* Arena::CreateMaybeMessage<::proto::dota::CClientMsg_CustomGameEventBounce>(Arena*);
template<> ::proto::dota::CClientMsg_DevPaletteVisibilityChangedEvent* Arena::CreateMaybeMessage<::proto::dota::CClientMsg_DevPaletteVisibilityChangedEvent>(Arena*);
template<> ::proto::dota::CClientMsg_RotateAnchor* Arena::CreateMaybeMessage<::proto::dota::CClientMsg_RotateAnchor>(Arena*);
template<> ::proto::dota::CClientMsg_WorldUIControllerHasPanelChangedEvent* Arena::CreateMaybeMessage<::proto::dota::CClientMsg_WorldUIControllerHasPanelChangedEvent>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace dota {

enum EBaseClientMessages {
  CM_CustomGameEvent = 280,
  CM_CustomGameEventBounce = 281,
  CM_ClientUIEvent = 282,
  CM_DevPaletteVisibilityChanged = 283,
  CM_WorldUIControllerHasPanelChanged = 284,
  CM_RotateAnchor = 285,
  CM_MAX_BASE = 300
};
bool EBaseClientMessages_IsValid(int value);
const EBaseClientMessages EBaseClientMessages_MIN = CM_CustomGameEvent;
const EBaseClientMessages EBaseClientMessages_MAX = CM_MAX_BASE;
const int EBaseClientMessages_ARRAYSIZE = EBaseClientMessages_MAX + 1;

const ::google::protobuf::EnumDescriptor* EBaseClientMessages_descriptor();
inline const ::std::string& EBaseClientMessages_Name(EBaseClientMessages value) {
  return ::google::protobuf::internal::NameOfEnum(
    EBaseClientMessages_descriptor(), value);
}
inline bool EBaseClientMessages_Parse(
    const ::std::string& name, EBaseClientMessages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EBaseClientMessages>(
    EBaseClientMessages_descriptor(), name, value);
}
enum EClientUIEvent {
  EClientUIEvent_Invalid = 0,
  EClientUIEvent_DialogFinished = 1,
  EClientUIEvent_FireOutput = 2
};
bool EClientUIEvent_IsValid(int value);
const EClientUIEvent EClientUIEvent_MIN = EClientUIEvent_Invalid;
const EClientUIEvent EClientUIEvent_MAX = EClientUIEvent_FireOutput;
const int EClientUIEvent_ARRAYSIZE = EClientUIEvent_MAX + 1;

const ::google::protobuf::EnumDescriptor* EClientUIEvent_descriptor();
inline const ::std::string& EClientUIEvent_Name(EClientUIEvent value) {
  return ::google::protobuf::internal::NameOfEnum(
    EClientUIEvent_descriptor(), value);
}
inline bool EClientUIEvent_Parse(
    const ::std::string& name, EClientUIEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EClientUIEvent>(
    EClientUIEvent_descriptor(), name, value);
}
// ===================================================================

class CClientMsg_CustomGameEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CClientMsg_CustomGameEvent) */ {
 public:
  CClientMsg_CustomGameEvent();
  virtual ~CClientMsg_CustomGameEvent();

  CClientMsg_CustomGameEvent(const CClientMsg_CustomGameEvent& from);

  inline CClientMsg_CustomGameEvent& operator=(const CClientMsg_CustomGameEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CClientMsg_CustomGameEvent(CClientMsg_CustomGameEvent&& from) noexcept
    : CClientMsg_CustomGameEvent() {
    *this = ::std::move(from);
  }

  inline CClientMsg_CustomGameEvent& operator=(CClientMsg_CustomGameEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CClientMsg_CustomGameEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CClientMsg_CustomGameEvent* internal_default_instance() {
    return reinterpret_cast<const CClientMsg_CustomGameEvent*>(
               &_CClientMsg_CustomGameEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CClientMsg_CustomGameEvent* other);
  friend void swap(CClientMsg_CustomGameEvent& a, CClientMsg_CustomGameEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CClientMsg_CustomGameEvent* New() const final {
    return CreateMaybeMessage<CClientMsg_CustomGameEvent>(nullptr);
  }

  CClientMsg_CustomGameEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CClientMsg_CustomGameEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CClientMsg_CustomGameEvent& from);
  void MergeFrom(const CClientMsg_CustomGameEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClientMsg_CustomGameEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string event_name = 1;
  bool has_event_name() const;
  void clear_event_name();
  static const int kEventNameFieldNumber = 1;
  const ::std::string& event_name() const;
  void set_event_name(const ::std::string& value);
  #if LANG_CXX11
  void set_event_name(::std::string&& value);
  #endif
  void set_event_name(const char* value);
  void set_event_name(const char* value, size_t size);
  ::std::string* mutable_event_name();
  ::std::string* release_event_name();
  void set_allocated_event_name(::std::string* event_name);

  // optional bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:proto.dota.CClientMsg_CustomGameEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr event_name_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend struct ::TableStruct_clientmessages_2eproto;
};
// -------------------------------------------------------------------

class CClientMsg_CustomGameEventBounce final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CClientMsg_CustomGameEventBounce) */ {
 public:
  CClientMsg_CustomGameEventBounce();
  virtual ~CClientMsg_CustomGameEventBounce();

  CClientMsg_CustomGameEventBounce(const CClientMsg_CustomGameEventBounce& from);

  inline CClientMsg_CustomGameEventBounce& operator=(const CClientMsg_CustomGameEventBounce& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CClientMsg_CustomGameEventBounce(CClientMsg_CustomGameEventBounce&& from) noexcept
    : CClientMsg_CustomGameEventBounce() {
    *this = ::std::move(from);
  }

  inline CClientMsg_CustomGameEventBounce& operator=(CClientMsg_CustomGameEventBounce&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CClientMsg_CustomGameEventBounce& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CClientMsg_CustomGameEventBounce* internal_default_instance() {
    return reinterpret_cast<const CClientMsg_CustomGameEventBounce*>(
               &_CClientMsg_CustomGameEventBounce_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CClientMsg_CustomGameEventBounce* other);
  friend void swap(CClientMsg_CustomGameEventBounce& a, CClientMsg_CustomGameEventBounce& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CClientMsg_CustomGameEventBounce* New() const final {
    return CreateMaybeMessage<CClientMsg_CustomGameEventBounce>(nullptr);
  }

  CClientMsg_CustomGameEventBounce* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CClientMsg_CustomGameEventBounce>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CClientMsg_CustomGameEventBounce& from);
  void MergeFrom(const CClientMsg_CustomGameEventBounce& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClientMsg_CustomGameEventBounce* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string event_name = 1;
  bool has_event_name() const;
  void clear_event_name();
  static const int kEventNameFieldNumber = 1;
  const ::std::string& event_name() const;
  void set_event_name(const ::std::string& value);
  #if LANG_CXX11
  void set_event_name(::std::string&& value);
  #endif
  void set_event_name(const char* value);
  void set_event_name(const char* value, size_t size);
  ::std::string* mutable_event_name();
  ::std::string* release_event_name();
  void set_allocated_event_name(::std::string* event_name);

  // optional bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional int32 player_index = 3;
  bool has_player_index() const;
  void clear_player_index();
  static const int kPlayerIndexFieldNumber = 3;
  ::google::protobuf::int32 player_index() const;
  void set_player_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CClientMsg_CustomGameEventBounce)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr event_name_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 player_index_;
  friend struct ::TableStruct_clientmessages_2eproto;
};
// -------------------------------------------------------------------

class CClientMsg_ClientUIEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CClientMsg_ClientUIEvent) */ {
 public:
  CClientMsg_ClientUIEvent();
  virtual ~CClientMsg_ClientUIEvent();

  CClientMsg_ClientUIEvent(const CClientMsg_ClientUIEvent& from);

  inline CClientMsg_ClientUIEvent& operator=(const CClientMsg_ClientUIEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CClientMsg_ClientUIEvent(CClientMsg_ClientUIEvent&& from) noexcept
    : CClientMsg_ClientUIEvent() {
    *this = ::std::move(from);
  }

  inline CClientMsg_ClientUIEvent& operator=(CClientMsg_ClientUIEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CClientMsg_ClientUIEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CClientMsg_ClientUIEvent* internal_default_instance() {
    return reinterpret_cast<const CClientMsg_ClientUIEvent*>(
               &_CClientMsg_ClientUIEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CClientMsg_ClientUIEvent* other);
  friend void swap(CClientMsg_ClientUIEvent& a, CClientMsg_ClientUIEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CClientMsg_ClientUIEvent* New() const final {
    return CreateMaybeMessage<CClientMsg_ClientUIEvent>(nullptr);
  }

  CClientMsg_ClientUIEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CClientMsg_ClientUIEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CClientMsg_ClientUIEvent& from);
  void MergeFrom(const CClientMsg_ClientUIEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClientMsg_ClientUIEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string data1 = 4;
  bool has_data1() const;
  void clear_data1();
  static const int kData1FieldNumber = 4;
  const ::std::string& data1() const;
  void set_data1(const ::std::string& value);
  #if LANG_CXX11
  void set_data1(::std::string&& value);
  #endif
  void set_data1(const char* value);
  void set_data1(const char* value, size_t size);
  ::std::string* mutable_data1();
  ::std::string* release_data1();
  void set_allocated_data1(::std::string* data1);

  // optional string data2 = 5;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 5;
  const ::std::string& data2() const;
  void set_data2(const ::std::string& value);
  #if LANG_CXX11
  void set_data2(::std::string&& value);
  #endif
  void set_data2(const char* value);
  void set_data2(const char* value, size_t size);
  ::std::string* mutable_data2();
  ::std::string* release_data2();
  void set_allocated_data2(::std::string* data2);

  // optional .proto.dota.EClientUIEvent event = 1 [default = EClientUIEvent_Invalid];
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 1;
  ::proto::dota::EClientUIEvent event() const;
  void set_event(::proto::dota::EClientUIEvent value);

  // optional uint32 ent_ehandle = 2;
  bool has_ent_ehandle() const;
  void clear_ent_ehandle();
  static const int kEntEhandleFieldNumber = 2;
  ::google::protobuf::uint32 ent_ehandle() const;
  void set_ent_ehandle(::google::protobuf::uint32 value);

  // optional uint32 client_ehandle = 3;
  bool has_client_ehandle() const;
  void clear_client_ehandle();
  static const int kClientEhandleFieldNumber = 3;
  ::google::protobuf::uint32 client_ehandle() const;
  void set_client_ehandle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CClientMsg_ClientUIEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data1_;
  ::google::protobuf::internal::ArenaStringPtr data2_;
  int event_;
  ::google::protobuf::uint32 ent_ehandle_;
  ::google::protobuf::uint32 client_ehandle_;
  friend struct ::TableStruct_clientmessages_2eproto;
};
// -------------------------------------------------------------------

class CClientMsg_DevPaletteVisibilityChangedEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CClientMsg_DevPaletteVisibilityChangedEvent) */ {
 public:
  CClientMsg_DevPaletteVisibilityChangedEvent();
  virtual ~CClientMsg_DevPaletteVisibilityChangedEvent();

  CClientMsg_DevPaletteVisibilityChangedEvent(const CClientMsg_DevPaletteVisibilityChangedEvent& from);

  inline CClientMsg_DevPaletteVisibilityChangedEvent& operator=(const CClientMsg_DevPaletteVisibilityChangedEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CClientMsg_DevPaletteVisibilityChangedEvent(CClientMsg_DevPaletteVisibilityChangedEvent&& from) noexcept
    : CClientMsg_DevPaletteVisibilityChangedEvent() {
    *this = ::std::move(from);
  }

  inline CClientMsg_DevPaletteVisibilityChangedEvent& operator=(CClientMsg_DevPaletteVisibilityChangedEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CClientMsg_DevPaletteVisibilityChangedEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CClientMsg_DevPaletteVisibilityChangedEvent* internal_default_instance() {
    return reinterpret_cast<const CClientMsg_DevPaletteVisibilityChangedEvent*>(
               &_CClientMsg_DevPaletteVisibilityChangedEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CClientMsg_DevPaletteVisibilityChangedEvent* other);
  friend void swap(CClientMsg_DevPaletteVisibilityChangedEvent& a, CClientMsg_DevPaletteVisibilityChangedEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CClientMsg_DevPaletteVisibilityChangedEvent* New() const final {
    return CreateMaybeMessage<CClientMsg_DevPaletteVisibilityChangedEvent>(nullptr);
  }

  CClientMsg_DevPaletteVisibilityChangedEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CClientMsg_DevPaletteVisibilityChangedEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CClientMsg_DevPaletteVisibilityChangedEvent& from);
  void MergeFrom(const CClientMsg_DevPaletteVisibilityChangedEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClientMsg_DevPaletteVisibilityChangedEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool visible = 1;
  bool has_visible() const;
  void clear_visible();
  static const int kVisibleFieldNumber = 1;
  bool visible() const;
  void set_visible(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CClientMsg_DevPaletteVisibilityChangedEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool visible_;
  friend struct ::TableStruct_clientmessages_2eproto;
};
// -------------------------------------------------------------------

class CClientMsg_WorldUIControllerHasPanelChangedEvent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CClientMsg_WorldUIControllerHasPanelChangedEvent) */ {
 public:
  CClientMsg_WorldUIControllerHasPanelChangedEvent();
  virtual ~CClientMsg_WorldUIControllerHasPanelChangedEvent();

  CClientMsg_WorldUIControllerHasPanelChangedEvent(const CClientMsg_WorldUIControllerHasPanelChangedEvent& from);

  inline CClientMsg_WorldUIControllerHasPanelChangedEvent& operator=(const CClientMsg_WorldUIControllerHasPanelChangedEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CClientMsg_WorldUIControllerHasPanelChangedEvent(CClientMsg_WorldUIControllerHasPanelChangedEvent&& from) noexcept
    : CClientMsg_WorldUIControllerHasPanelChangedEvent() {
    *this = ::std::move(from);
  }

  inline CClientMsg_WorldUIControllerHasPanelChangedEvent& operator=(CClientMsg_WorldUIControllerHasPanelChangedEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CClientMsg_WorldUIControllerHasPanelChangedEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CClientMsg_WorldUIControllerHasPanelChangedEvent* internal_default_instance() {
    return reinterpret_cast<const CClientMsg_WorldUIControllerHasPanelChangedEvent*>(
               &_CClientMsg_WorldUIControllerHasPanelChangedEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CClientMsg_WorldUIControllerHasPanelChangedEvent* other);
  friend void swap(CClientMsg_WorldUIControllerHasPanelChangedEvent& a, CClientMsg_WorldUIControllerHasPanelChangedEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CClientMsg_WorldUIControllerHasPanelChangedEvent* New() const final {
    return CreateMaybeMessage<CClientMsg_WorldUIControllerHasPanelChangedEvent>(nullptr);
  }

  CClientMsg_WorldUIControllerHasPanelChangedEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CClientMsg_WorldUIControllerHasPanelChangedEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CClientMsg_WorldUIControllerHasPanelChangedEvent& from);
  void MergeFrom(const CClientMsg_WorldUIControllerHasPanelChangedEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClientMsg_WorldUIControllerHasPanelChangedEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool has_panel = 1;
  bool has_has_panel() const;
  void clear_has_panel();
  static const int kHasPanelFieldNumber = 1;
  bool has_panel() const;
  void set_has_panel(bool value);

  // optional uint32 client_ehandle = 2;
  bool has_client_ehandle() const;
  void clear_client_ehandle();
  static const int kClientEhandleFieldNumber = 2;
  ::google::protobuf::uint32 client_ehandle() const;
  void set_client_ehandle(::google::protobuf::uint32 value);

  // optional uint32 literal_hand_type = 3;
  bool has_literal_hand_type() const;
  void clear_literal_hand_type();
  static const int kLiteralHandTypeFieldNumber = 3;
  ::google::protobuf::uint32 literal_hand_type() const;
  void set_literal_hand_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CClientMsg_WorldUIControllerHasPanelChangedEvent)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool has_panel_;
  ::google::protobuf::uint32 client_ehandle_;
  ::google::protobuf::uint32 literal_hand_type_;
  friend struct ::TableStruct_clientmessages_2eproto;
};
// -------------------------------------------------------------------

class CClientMsg_RotateAnchor final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CClientMsg_RotateAnchor) */ {
 public:
  CClientMsg_RotateAnchor();
  virtual ~CClientMsg_RotateAnchor();

  CClientMsg_RotateAnchor(const CClientMsg_RotateAnchor& from);

  inline CClientMsg_RotateAnchor& operator=(const CClientMsg_RotateAnchor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CClientMsg_RotateAnchor(CClientMsg_RotateAnchor&& from) noexcept
    : CClientMsg_RotateAnchor() {
    *this = ::std::move(from);
  }

  inline CClientMsg_RotateAnchor& operator=(CClientMsg_RotateAnchor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CClientMsg_RotateAnchor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CClientMsg_RotateAnchor* internal_default_instance() {
    return reinterpret_cast<const CClientMsg_RotateAnchor*>(
               &_CClientMsg_RotateAnchor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CClientMsg_RotateAnchor* other);
  friend void swap(CClientMsg_RotateAnchor& a, CClientMsg_RotateAnchor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CClientMsg_RotateAnchor* New() const final {
    return CreateMaybeMessage<CClientMsg_RotateAnchor>(nullptr);
  }

  CClientMsg_RotateAnchor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CClientMsg_RotateAnchor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CClientMsg_RotateAnchor& from);
  void MergeFrom(const CClientMsg_RotateAnchor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClientMsg_RotateAnchor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float angle = 1;
  bool has_angle() const;
  void clear_angle();
  static const int kAngleFieldNumber = 1;
  float angle() const;
  void set_angle(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CClientMsg_RotateAnchor)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float angle_;
  friend struct ::TableStruct_clientmessages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CClientMsg_CustomGameEvent

// optional string event_name = 1;
inline bool CClientMsg_CustomGameEvent::has_event_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CClientMsg_CustomGameEvent::clear_event_name() {
  event_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CClientMsg_CustomGameEvent::event_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CClientMsg_CustomGameEvent.event_name)
  return event_name_.GetNoArena();
}
inline void CClientMsg_CustomGameEvent::set_event_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CClientMsg_CustomGameEvent.event_name)
}
#if LANG_CXX11
inline void CClientMsg_CustomGameEvent::set_event_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  event_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CClientMsg_CustomGameEvent.event_name)
}
#endif
inline void CClientMsg_CustomGameEvent::set_event_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CClientMsg_CustomGameEvent.event_name)
}
inline void CClientMsg_CustomGameEvent::set_event_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CClientMsg_CustomGameEvent.event_name)
}
inline ::std::string* CClientMsg_CustomGameEvent::mutable_event_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CClientMsg_CustomGameEvent.event_name)
  return event_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CClientMsg_CustomGameEvent::release_event_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CClientMsg_CustomGameEvent.event_name)
  if (!has_event_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return event_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CClientMsg_CustomGameEvent::set_allocated_event_name(::std::string* event_name) {
  if (event_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  event_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CClientMsg_CustomGameEvent.event_name)
}

// optional bytes data = 2;
inline bool CClientMsg_CustomGameEvent::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CClientMsg_CustomGameEvent::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CClientMsg_CustomGameEvent::data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CClientMsg_CustomGameEvent.data)
  return data_.GetNoArena();
}
inline void CClientMsg_CustomGameEvent::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CClientMsg_CustomGameEvent.data)
}
#if LANG_CXX11
inline void CClientMsg_CustomGameEvent::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CClientMsg_CustomGameEvent.data)
}
#endif
inline void CClientMsg_CustomGameEvent::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CClientMsg_CustomGameEvent.data)
}
inline void CClientMsg_CustomGameEvent::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CClientMsg_CustomGameEvent.data)
}
inline ::std::string* CClientMsg_CustomGameEvent::mutable_data() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CClientMsg_CustomGameEvent.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CClientMsg_CustomGameEvent::release_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CClientMsg_CustomGameEvent.data)
  if (!has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CClientMsg_CustomGameEvent::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CClientMsg_CustomGameEvent.data)
}

// -------------------------------------------------------------------

// CClientMsg_CustomGameEventBounce

// optional string event_name = 1;
inline bool CClientMsg_CustomGameEventBounce::has_event_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CClientMsg_CustomGameEventBounce::clear_event_name() {
  event_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CClientMsg_CustomGameEventBounce::event_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CClientMsg_CustomGameEventBounce.event_name)
  return event_name_.GetNoArena();
}
inline void CClientMsg_CustomGameEventBounce::set_event_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CClientMsg_CustomGameEventBounce.event_name)
}
#if LANG_CXX11
inline void CClientMsg_CustomGameEventBounce::set_event_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  event_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CClientMsg_CustomGameEventBounce.event_name)
}
#endif
inline void CClientMsg_CustomGameEventBounce::set_event_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CClientMsg_CustomGameEventBounce.event_name)
}
inline void CClientMsg_CustomGameEventBounce::set_event_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  event_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CClientMsg_CustomGameEventBounce.event_name)
}
inline ::std::string* CClientMsg_CustomGameEventBounce::mutable_event_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CClientMsg_CustomGameEventBounce.event_name)
  return event_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CClientMsg_CustomGameEventBounce::release_event_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CClientMsg_CustomGameEventBounce.event_name)
  if (!has_event_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return event_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CClientMsg_CustomGameEventBounce::set_allocated_event_name(::std::string* event_name) {
  if (event_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  event_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CClientMsg_CustomGameEventBounce.event_name)
}

// optional bytes data = 2;
inline bool CClientMsg_CustomGameEventBounce::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CClientMsg_CustomGameEventBounce::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CClientMsg_CustomGameEventBounce::data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CClientMsg_CustomGameEventBounce.data)
  return data_.GetNoArena();
}
inline void CClientMsg_CustomGameEventBounce::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CClientMsg_CustomGameEventBounce.data)
}
#if LANG_CXX11
inline void CClientMsg_CustomGameEventBounce::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CClientMsg_CustomGameEventBounce.data)
}
#endif
inline void CClientMsg_CustomGameEventBounce::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CClientMsg_CustomGameEventBounce.data)
}
inline void CClientMsg_CustomGameEventBounce::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CClientMsg_CustomGameEventBounce.data)
}
inline ::std::string* CClientMsg_CustomGameEventBounce::mutable_data() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CClientMsg_CustomGameEventBounce.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CClientMsg_CustomGameEventBounce::release_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CClientMsg_CustomGameEventBounce.data)
  if (!has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CClientMsg_CustomGameEventBounce::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CClientMsg_CustomGameEventBounce.data)
}

// optional int32 player_index = 3;
inline bool CClientMsg_CustomGameEventBounce::has_player_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CClientMsg_CustomGameEventBounce::clear_player_index() {
  player_index_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CClientMsg_CustomGameEventBounce::player_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CClientMsg_CustomGameEventBounce.player_index)
  return player_index_;
}
inline void CClientMsg_CustomGameEventBounce::set_player_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  player_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CClientMsg_CustomGameEventBounce.player_index)
}

// -------------------------------------------------------------------

// CClientMsg_ClientUIEvent

// optional .proto.dota.EClientUIEvent event = 1 [default = EClientUIEvent_Invalid];
inline bool CClientMsg_ClientUIEvent::has_event() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CClientMsg_ClientUIEvent::clear_event() {
  event_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::proto::dota::EClientUIEvent CClientMsg_ClientUIEvent::event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CClientMsg_ClientUIEvent.event)
  return static_cast< ::proto::dota::EClientUIEvent >(event_);
}
inline void CClientMsg_ClientUIEvent::set_event(::proto::dota::EClientUIEvent value) {
  assert(::proto::dota::EClientUIEvent_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  event_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CClientMsg_ClientUIEvent.event)
}

// optional uint32 ent_ehandle = 2;
inline bool CClientMsg_ClientUIEvent::has_ent_ehandle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CClientMsg_ClientUIEvent::clear_ent_ehandle() {
  ent_ehandle_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CClientMsg_ClientUIEvent::ent_ehandle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CClientMsg_ClientUIEvent.ent_ehandle)
  return ent_ehandle_;
}
inline void CClientMsg_ClientUIEvent::set_ent_ehandle(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  ent_ehandle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CClientMsg_ClientUIEvent.ent_ehandle)
}

// optional uint32 client_ehandle = 3;
inline bool CClientMsg_ClientUIEvent::has_client_ehandle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CClientMsg_ClientUIEvent::clear_client_ehandle() {
  client_ehandle_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CClientMsg_ClientUIEvent::client_ehandle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CClientMsg_ClientUIEvent.client_ehandle)
  return client_ehandle_;
}
inline void CClientMsg_ClientUIEvent::set_client_ehandle(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  client_ehandle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CClientMsg_ClientUIEvent.client_ehandle)
}

// optional string data1 = 4;
inline bool CClientMsg_ClientUIEvent::has_data1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CClientMsg_ClientUIEvent::clear_data1() {
  data1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CClientMsg_ClientUIEvent::data1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CClientMsg_ClientUIEvent.data1)
  return data1_.GetNoArena();
}
inline void CClientMsg_ClientUIEvent::set_data1(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CClientMsg_ClientUIEvent.data1)
}
#if LANG_CXX11
inline void CClientMsg_ClientUIEvent::set_data1(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CClientMsg_ClientUIEvent.data1)
}
#endif
inline void CClientMsg_ClientUIEvent::set_data1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CClientMsg_ClientUIEvent.data1)
}
inline void CClientMsg_ClientUIEvent::set_data1(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CClientMsg_ClientUIEvent.data1)
}
inline ::std::string* CClientMsg_ClientUIEvent::mutable_data1() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CClientMsg_ClientUIEvent.data1)
  return data1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CClientMsg_ClientUIEvent::release_data1() {
  // @@protoc_insertion_point(field_release:proto.dota.CClientMsg_ClientUIEvent.data1)
  if (!has_data1()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data1_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CClientMsg_ClientUIEvent::set_allocated_data1(::std::string* data1) {
  if (data1 != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data1);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CClientMsg_ClientUIEvent.data1)
}

// optional string data2 = 5;
inline bool CClientMsg_ClientUIEvent::has_data2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CClientMsg_ClientUIEvent::clear_data2() {
  data2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CClientMsg_ClientUIEvent::data2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CClientMsg_ClientUIEvent.data2)
  return data2_.GetNoArena();
}
inline void CClientMsg_ClientUIEvent::set_data2(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  data2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CClientMsg_ClientUIEvent.data2)
}
#if LANG_CXX11
inline void CClientMsg_ClientUIEvent::set_data2(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  data2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CClientMsg_ClientUIEvent.data2)
}
#endif
inline void CClientMsg_ClientUIEvent::set_data2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  data2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CClientMsg_ClientUIEvent.data2)
}
inline void CClientMsg_ClientUIEvent::set_data2(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  data2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CClientMsg_ClientUIEvent.data2)
}
inline ::std::string* CClientMsg_ClientUIEvent::mutable_data2() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CClientMsg_ClientUIEvent.data2)
  return data2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CClientMsg_ClientUIEvent::release_data2() {
  // @@protoc_insertion_point(field_release:proto.dota.CClientMsg_ClientUIEvent.data2)
  if (!has_data2()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return data2_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CClientMsg_ClientUIEvent::set_allocated_data2(::std::string* data2) {
  if (data2 != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  data2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data2);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CClientMsg_ClientUIEvent.data2)
}

// -------------------------------------------------------------------

// CClientMsg_DevPaletteVisibilityChangedEvent

// optional bool visible = 1;
inline bool CClientMsg_DevPaletteVisibilityChangedEvent::has_visible() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CClientMsg_DevPaletteVisibilityChangedEvent::clear_visible() {
  visible_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CClientMsg_DevPaletteVisibilityChangedEvent::visible() const {
  // @@protoc_insertion_point(field_get:proto.dota.CClientMsg_DevPaletteVisibilityChangedEvent.visible)
  return visible_;
}
inline void CClientMsg_DevPaletteVisibilityChangedEvent::set_visible(bool value) {
  _has_bits_[0] |= 0x00000001u;
  visible_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CClientMsg_DevPaletteVisibilityChangedEvent.visible)
}

// -------------------------------------------------------------------

// CClientMsg_WorldUIControllerHasPanelChangedEvent

// optional bool has_panel = 1;
inline bool CClientMsg_WorldUIControllerHasPanelChangedEvent::has_has_panel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CClientMsg_WorldUIControllerHasPanelChangedEvent::clear_has_panel() {
  has_panel_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CClientMsg_WorldUIControllerHasPanelChangedEvent::has_panel() const {
  // @@protoc_insertion_point(field_get:proto.dota.CClientMsg_WorldUIControllerHasPanelChangedEvent.has_panel)
  return has_panel_;
}
inline void CClientMsg_WorldUIControllerHasPanelChangedEvent::set_has_panel(bool value) {
  _has_bits_[0] |= 0x00000001u;
  has_panel_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CClientMsg_WorldUIControllerHasPanelChangedEvent.has_panel)
}

// optional uint32 client_ehandle = 2;
inline bool CClientMsg_WorldUIControllerHasPanelChangedEvent::has_client_ehandle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CClientMsg_WorldUIControllerHasPanelChangedEvent::clear_client_ehandle() {
  client_ehandle_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CClientMsg_WorldUIControllerHasPanelChangedEvent::client_ehandle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CClientMsg_WorldUIControllerHasPanelChangedEvent.client_ehandle)
  return client_ehandle_;
}
inline void CClientMsg_WorldUIControllerHasPanelChangedEvent::set_client_ehandle(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  client_ehandle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CClientMsg_WorldUIControllerHasPanelChangedEvent.client_ehandle)
}

// optional uint32 literal_hand_type = 3;
inline bool CClientMsg_WorldUIControllerHasPanelChangedEvent::has_literal_hand_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CClientMsg_WorldUIControllerHasPanelChangedEvent::clear_literal_hand_type() {
  literal_hand_type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CClientMsg_WorldUIControllerHasPanelChangedEvent::literal_hand_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CClientMsg_WorldUIControllerHasPanelChangedEvent.literal_hand_type)
  return literal_hand_type_;
}
inline void CClientMsg_WorldUIControllerHasPanelChangedEvent::set_literal_hand_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  literal_hand_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CClientMsg_WorldUIControllerHasPanelChangedEvent.literal_hand_type)
}

// -------------------------------------------------------------------

// CClientMsg_RotateAnchor

// optional float angle = 1;
inline bool CClientMsg_RotateAnchor::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CClientMsg_RotateAnchor::clear_angle() {
  angle_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CClientMsg_RotateAnchor::angle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CClientMsg_RotateAnchor.angle)
  return angle_;
}
inline void CClientMsg_RotateAnchor::set_angle(float value) {
  _has_bits_[0] |= 0x00000001u;
  angle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CClientMsg_RotateAnchor.angle)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dota
}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::dota::EBaseClientMessages> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EBaseClientMessages>() {
  return ::proto::dota::EBaseClientMessages_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EClientUIEvent> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EClientUIEvent>() {
  return ::proto::dota::EClientUIEvent_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_clientmessages_2eproto
