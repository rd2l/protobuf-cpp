// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_modifiers.proto

#ifndef PROTOBUF_INCLUDED_dota_5fmodifiers_2eproto
#define PROTOBUF_INCLUDED_dota_5fmodifiers_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "networkbasetypes.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dota_5fmodifiers_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_dota_5fmodifiers_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_dota_5fmodifiers_2eproto();
namespace proto {
namespace dota {
class CDOTALuaModifierEntry;
class CDOTALuaModifierEntryDefaultTypeInternal;
extern CDOTALuaModifierEntryDefaultTypeInternal _CDOTALuaModifierEntry_default_instance_;
class CDOTAModifierBuffTableEntry;
class CDOTAModifierBuffTableEntryDefaultTypeInternal;
extern CDOTAModifierBuffTableEntryDefaultTypeInternal _CDOTAModifierBuffTableEntry_default_instance_;
}  // namespace dota
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::dota::CDOTALuaModifierEntry* Arena::CreateMaybeMessage<::proto::dota::CDOTALuaModifierEntry>(Arena*);
template<> ::proto::dota::CDOTAModifierBuffTableEntry* Arena::CreateMaybeMessage<::proto::dota::CDOTAModifierBuffTableEntry>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace dota {

enum DOTA_MODIFIER_ENTRY_TYPE {
  DOTA_MODIFIER_ENTRY_TYPE_ACTIVE = 1,
  DOTA_MODIFIER_ENTRY_TYPE_REMOVED = 2
};
bool DOTA_MODIFIER_ENTRY_TYPE_IsValid(int value);
const DOTA_MODIFIER_ENTRY_TYPE DOTA_MODIFIER_ENTRY_TYPE_MIN = DOTA_MODIFIER_ENTRY_TYPE_ACTIVE;
const DOTA_MODIFIER_ENTRY_TYPE DOTA_MODIFIER_ENTRY_TYPE_MAX = DOTA_MODIFIER_ENTRY_TYPE_REMOVED;
const int DOTA_MODIFIER_ENTRY_TYPE_ARRAYSIZE = DOTA_MODIFIER_ENTRY_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DOTA_MODIFIER_ENTRY_TYPE_descriptor();
inline const ::std::string& DOTA_MODIFIER_ENTRY_TYPE_Name(DOTA_MODIFIER_ENTRY_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DOTA_MODIFIER_ENTRY_TYPE_descriptor(), value);
}
inline bool DOTA_MODIFIER_ENTRY_TYPE_Parse(
    const ::std::string& name, DOTA_MODIFIER_ENTRY_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DOTA_MODIFIER_ENTRY_TYPE>(
    DOTA_MODIFIER_ENTRY_TYPE_descriptor(), name, value);
}
// ===================================================================

class CDOTAModifierBuffTableEntry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAModifierBuffTableEntry) */ {
 public:
  CDOTAModifierBuffTableEntry();
  virtual ~CDOTAModifierBuffTableEntry();

  CDOTAModifierBuffTableEntry(const CDOTAModifierBuffTableEntry& from);

  inline CDOTAModifierBuffTableEntry& operator=(const CDOTAModifierBuffTableEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTAModifierBuffTableEntry(CDOTAModifierBuffTableEntry&& from) noexcept
    : CDOTAModifierBuffTableEntry() {
    *this = ::std::move(from);
  }

  inline CDOTAModifierBuffTableEntry& operator=(CDOTAModifierBuffTableEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CDOTAModifierBuffTableEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTAModifierBuffTableEntry* internal_default_instance() {
    return reinterpret_cast<const CDOTAModifierBuffTableEntry*>(
               &_CDOTAModifierBuffTableEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CDOTAModifierBuffTableEntry* other);
  friend void swap(CDOTAModifierBuffTableEntry& a, CDOTAModifierBuffTableEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTAModifierBuffTableEntry* New() const final {
    return CreateMaybeMessage<CDOTAModifierBuffTableEntry>(nullptr);
  }

  CDOTAModifierBuffTableEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAModifierBuffTableEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTAModifierBuffTableEntry& from);
  void MergeFrom(const CDOTAModifierBuffTableEntry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAModifierBuffTableEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string portal_loop_appear = 18;
  bool has_portal_loop_appear() const;
  void clear_portal_loop_appear();
  static const int kPortalLoopAppearFieldNumber = 18;
  const ::std::string& portal_loop_appear() const;
  void set_portal_loop_appear(const ::std::string& value);
  #if LANG_CXX11
  void set_portal_loop_appear(::std::string&& value);
  #endif
  void set_portal_loop_appear(const char* value);
  void set_portal_loop_appear(const char* value, size_t size);
  ::std::string* mutable_portal_loop_appear();
  ::std::string* release_portal_loop_appear();
  void set_allocated_portal_loop_appear(::std::string* portal_loop_appear);

  // optional string portal_loop_disappear = 19;
  bool has_portal_loop_disappear() const;
  void clear_portal_loop_disappear();
  static const int kPortalLoopDisappearFieldNumber = 19;
  const ::std::string& portal_loop_disappear() const;
  void set_portal_loop_disappear(const ::std::string& value);
  #if LANG_CXX11
  void set_portal_loop_disappear(::std::string&& value);
  #endif
  void set_portal_loop_disappear(const char* value);
  void set_portal_loop_disappear(const char* value, size_t size);
  ::std::string* mutable_portal_loop_disappear();
  ::std::string* release_portal_loop_disappear();
  void set_allocated_portal_loop_disappear(::std::string* portal_loop_disappear);

  // optional string hero_loop_appear = 20;
  bool has_hero_loop_appear() const;
  void clear_hero_loop_appear();
  static const int kHeroLoopAppearFieldNumber = 20;
  const ::std::string& hero_loop_appear() const;
  void set_hero_loop_appear(const ::std::string& value);
  #if LANG_CXX11
  void set_hero_loop_appear(::std::string&& value);
  #endif
  void set_hero_loop_appear(const char* value);
  void set_hero_loop_appear(const char* value, size_t size);
  ::std::string* mutable_hero_loop_appear();
  ::std::string* release_hero_loop_appear();
  void set_allocated_hero_loop_appear(::std::string* hero_loop_appear);

  // optional string hero_loop_disappear = 21;
  bool has_hero_loop_disappear() const;
  void clear_hero_loop_disappear();
  static const int kHeroLoopDisappearFieldNumber = 21;
  const ::std::string& hero_loop_disappear() const;
  void set_hero_loop_disappear(const ::std::string& value);
  #if LANG_CXX11
  void set_hero_loop_disappear(::std::string&& value);
  #endif
  void set_hero_loop_disappear(const char* value);
  void set_hero_loop_disappear(const char* value, size_t size);
  ::std::string* mutable_hero_loop_disappear();
  ::std::string* release_hero_loop_disappear();
  void set_allocated_hero_loop_disappear(::std::string* hero_loop_disappear);

  // optional string illusion_label = 29;
  bool has_illusion_label() const;
  void clear_illusion_label();
  static const int kIllusionLabelFieldNumber = 29;
  const ::std::string& illusion_label() const;
  void set_illusion_label(const ::std::string& value);
  #if LANG_CXX11
  void set_illusion_label(::std::string&& value);
  #endif
  void set_illusion_label(const char* value);
  void set_illusion_label(const char* value, size_t size);
  ::std::string* mutable_illusion_label();
  ::std::string* release_illusion_label();
  void set_allocated_illusion_label(::std::string* illusion_label);

  // optional string player_ids = 31;
  bool has_player_ids() const;
  void clear_player_ids();
  static const int kPlayerIdsFieldNumber = 31;
  const ::std::string& player_ids() const;
  void set_player_ids(const ::std::string& value);
  #if LANG_CXX11
  void set_player_ids(::std::string&& value);
  #endif
  void set_player_ids(const char* value);
  void set_player_ids(const char* value, size_t size);
  ::std::string* mutable_player_ids();
  ::std::string* release_player_ids();
  void set_allocated_player_ids(::std::string* player_ids);

  // optional string lua_name = 32;
  bool has_lua_name() const;
  void clear_lua_name();
  static const int kLuaNameFieldNumber = 32;
  const ::std::string& lua_name() const;
  void set_lua_name(const ::std::string& value);
  #if LANG_CXX11
  void set_lua_name(::std::string&& value);
  #endif
  void set_lua_name(const char* value);
  void set_lua_name(const char* value, size_t size);
  ::std::string* mutable_lua_name();
  ::std::string* release_lua_name();
  void set_allocated_lua_name(::std::string* lua_name);

  // optional .proto.dota.CMsgVector v_start = 16;
  bool has_v_start() const;
  void clear_v_start();
  static const int kVStartFieldNumber = 16;
  const ::proto::dota::CMsgVector& v_start() const;
  ::proto::dota::CMsgVector* release_v_start();
  ::proto::dota::CMsgVector* mutable_v_start();
  void set_allocated_v_start(::proto::dota::CMsgVector* v_start);

  // optional .proto.dota.CMsgVector v_end = 17;
  bool has_v_end() const;
  void clear_v_end();
  static const int kVEndFieldNumber = 17;
  const ::proto::dota::CMsgVector& v_end() const;
  ::proto::dota::CMsgVector* release_v_end();
  ::proto::dota::CMsgVector* mutable_v_end();
  void set_allocated_v_end(::proto::dota::CMsgVector* v_end);

  // required int32 parent = 2;
  bool has_parent() const;
  void clear_parent();
  static const int kParentFieldNumber = 2;
  ::google::protobuf::int32 parent() const;
  void set_parent(::google::protobuf::int32 value);

  // required int32 index = 3;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // required int32 serial_num = 4;
  bool has_serial_num() const;
  void clear_serial_num();
  static const int kSerialNumFieldNumber = 4;
  ::google::protobuf::int32 serial_num() const;
  void set_serial_num(::google::protobuf::int32 value);

  // optional int32 modifier_class = 5;
  bool has_modifier_class() const;
  void clear_modifier_class();
  static const int kModifierClassFieldNumber = 5;
  ::google::protobuf::int32 modifier_class() const;
  void set_modifier_class(::google::protobuf::int32 value);

  // optional int32 ability_level = 6;
  bool has_ability_level() const;
  void clear_ability_level();
  static const int kAbilityLevelFieldNumber = 6;
  ::google::protobuf::int32 ability_level() const;
  void set_ability_level(::google::protobuf::int32 value);

  // optional int32 stack_count = 7;
  bool has_stack_count() const;
  void clear_stack_count();
  static const int kStackCountFieldNumber = 7;
  ::google::protobuf::int32 stack_count() const;
  void set_stack_count(::google::protobuf::int32 value);

  // optional float creation_time = 8;
  bool has_creation_time() const;
  void clear_creation_time();
  static const int kCreationTimeFieldNumber = 8;
  float creation_time() const;
  void set_creation_time(float value);

  // optional int32 caster = 10;
  bool has_caster() const;
  void clear_caster();
  static const int kCasterFieldNumber = 10;
  ::google::protobuf::int32 caster() const;
  void set_caster(::google::protobuf::int32 value);

  // optional int32 ability = 11;
  bool has_ability() const;
  void clear_ability();
  static const int kAbilityFieldNumber = 11;
  ::google::protobuf::int32 ability() const;
  void set_ability(::google::protobuf::int32 value);

  // optional int32 armor = 12;
  bool has_armor() const;
  void clear_armor();
  static const int kArmorFieldNumber = 12;
  ::google::protobuf::int32 armor() const;
  void set_armor(::google::protobuf::int32 value);

  // optional float fade_time = 13;
  bool has_fade_time() const;
  void clear_fade_time();
  static const int kFadeTimeFieldNumber = 13;
  float fade_time() const;
  void set_fade_time(float value);

  // optional float channel_time = 15;
  bool has_channel_time() const;
  void clear_channel_time();
  static const int kChannelTimeFieldNumber = 15;
  float channel_time() const;
  void set_channel_time(float value);

  // optional int32 movement_speed = 22;
  bool has_movement_speed() const;
  void clear_movement_speed();
  static const int kMovementSpeedFieldNumber = 22;
  ::google::protobuf::int32 movement_speed() const;
  void set_movement_speed(::google::protobuf::int32 value);

  // optional bool subtle = 14;
  bool has_subtle() const;
  void clear_subtle();
  static const int kSubtleFieldNumber = 14;
  bool subtle() const;
  void set_subtle(bool value);

  // optional bool aura = 23;
  bool has_aura() const;
  void clear_aura();
  static const int kAuraFieldNumber = 23;
  bool aura() const;
  void set_aura(bool value);

  // optional bool active = 30;
  bool has_active() const;
  void clear_active();
  static const int kActiveFieldNumber = 30;
  bool active() const;
  void set_active(bool value);

  // optional int32 activity = 24;
  bool has_activity() const;
  void clear_activity();
  static const int kActivityFieldNumber = 24;
  ::google::protobuf::int32 activity() const;
  void set_activity(::google::protobuf::int32 value);

  // optional int32 damage = 25;
  bool has_damage() const;
  void clear_damage();
  static const int kDamageFieldNumber = 25;
  ::google::protobuf::int32 damage() const;
  void set_damage(::google::protobuf::int32 value);

  // optional int32 range = 26;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 26;
  ::google::protobuf::int32 range() const;
  void set_range(::google::protobuf::int32 value);

  // optional int32 dd_modifier_index = 27;
  bool has_dd_modifier_index() const;
  void clear_dd_modifier_index();
  static const int kDdModifierIndexFieldNumber = 27;
  ::google::protobuf::int32 dd_modifier_index() const;
  void set_dd_modifier_index(::google::protobuf::int32 value);

  // optional int32 dd_ability_id = 28;
  bool has_dd_ability_id() const;
  void clear_dd_ability_id();
  static const int kDdAbilityIdFieldNumber = 28;
  ::google::protobuf::int32 dd_ability_id() const;
  void set_dd_ability_id(::google::protobuf::int32 value);

  // optional int32 attack_speed = 33;
  bool has_attack_speed() const;
  void clear_attack_speed();
  static const int kAttackSpeedFieldNumber = 33;
  ::google::protobuf::int32 attack_speed() const;
  void set_attack_speed(::google::protobuf::int32 value);

  // required .proto.dota.DOTA_MODIFIER_ENTRY_TYPE entry_type = 1 [default = DOTA_MODIFIER_ENTRY_TYPE_ACTIVE];
  bool has_entry_type() const;
  void clear_entry_type();
  static const int kEntryTypeFieldNumber = 1;
  ::proto::dota::DOTA_MODIFIER_ENTRY_TYPE entry_type() const;
  void set_entry_type(::proto::dota::DOTA_MODIFIER_ENTRY_TYPE value);

  // optional float duration = 9 [default = -1];
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 9;
  float duration() const;
  void set_duration(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAModifierBuffTableEntry)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<2> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr portal_loop_appear_;
  ::google::protobuf::internal::ArenaStringPtr portal_loop_disappear_;
  ::google::protobuf::internal::ArenaStringPtr hero_loop_appear_;
  ::google::protobuf::internal::ArenaStringPtr hero_loop_disappear_;
  ::google::protobuf::internal::ArenaStringPtr illusion_label_;
  ::google::protobuf::internal::ArenaStringPtr player_ids_;
  ::google::protobuf::internal::ArenaStringPtr lua_name_;
  ::proto::dota::CMsgVector* v_start_;
  ::proto::dota::CMsgVector* v_end_;
  ::google::protobuf::int32 parent_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 serial_num_;
  ::google::protobuf::int32 modifier_class_;
  ::google::protobuf::int32 ability_level_;
  ::google::protobuf::int32 stack_count_;
  float creation_time_;
  ::google::protobuf::int32 caster_;
  ::google::protobuf::int32 ability_;
  ::google::protobuf::int32 armor_;
  float fade_time_;
  float channel_time_;
  ::google::protobuf::int32 movement_speed_;
  bool subtle_;
  bool aura_;
  bool active_;
  ::google::protobuf::int32 activity_;
  ::google::protobuf::int32 damage_;
  ::google::protobuf::int32 range_;
  ::google::protobuf::int32 dd_modifier_index_;
  ::google::protobuf::int32 dd_ability_id_;
  ::google::protobuf::int32 attack_speed_;
  int entry_type_;
  float duration_;
  friend struct ::TableStruct_dota_5fmodifiers_2eproto;
};
// -------------------------------------------------------------------

class CDOTALuaModifierEntry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTALuaModifierEntry) */ {
 public:
  CDOTALuaModifierEntry();
  virtual ~CDOTALuaModifierEntry();

  CDOTALuaModifierEntry(const CDOTALuaModifierEntry& from);

  inline CDOTALuaModifierEntry& operator=(const CDOTALuaModifierEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CDOTALuaModifierEntry(CDOTALuaModifierEntry&& from) noexcept
    : CDOTALuaModifierEntry() {
    *this = ::std::move(from);
  }

  inline CDOTALuaModifierEntry& operator=(CDOTALuaModifierEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CDOTALuaModifierEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CDOTALuaModifierEntry* internal_default_instance() {
    return reinterpret_cast<const CDOTALuaModifierEntry*>(
               &_CDOTALuaModifierEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CDOTALuaModifierEntry* other);
  friend void swap(CDOTALuaModifierEntry& a, CDOTALuaModifierEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CDOTALuaModifierEntry* New() const final {
    return CreateMaybeMessage<CDOTALuaModifierEntry>(nullptr);
  }

  CDOTALuaModifierEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CDOTALuaModifierEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CDOTALuaModifierEntry& from);
  void MergeFrom(const CDOTALuaModifierEntry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTALuaModifierEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string modifier_filename = 2;
  bool has_modifier_filename() const;
  void clear_modifier_filename();
  static const int kModifierFilenameFieldNumber = 2;
  const ::std::string& modifier_filename() const;
  void set_modifier_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_modifier_filename(::std::string&& value);
  #endif
  void set_modifier_filename(const char* value);
  void set_modifier_filename(const char* value, size_t size);
  ::std::string* mutable_modifier_filename();
  ::std::string* release_modifier_filename();
  void set_allocated_modifier_filename(::std::string* modifier_filename);

  // required int32 modifier_type = 1;
  bool has_modifier_type() const;
  void clear_modifier_type();
  static const int kModifierTypeFieldNumber = 1;
  ::google::protobuf::int32 modifier_type() const;
  void set_modifier_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTALuaModifierEntry)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr modifier_filename_;
  ::google::protobuf::int32 modifier_type_;
  friend struct ::TableStruct_dota_5fmodifiers_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CDOTAModifierBuffTableEntry

// required .proto.dota.DOTA_MODIFIER_ENTRY_TYPE entry_type = 1 [default = DOTA_MODIFIER_ENTRY_TYPE_ACTIVE];
inline bool CDOTAModifierBuffTableEntry::has_entry_type() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_entry_type() {
  entry_type_ = 1;
  _has_bits_[0] &= ~0x80000000u;
}
inline ::proto::dota::DOTA_MODIFIER_ENTRY_TYPE CDOTAModifierBuffTableEntry::entry_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.entry_type)
  return static_cast< ::proto::dota::DOTA_MODIFIER_ENTRY_TYPE >(entry_type_);
}
inline void CDOTAModifierBuffTableEntry::set_entry_type(::proto::dota::DOTA_MODIFIER_ENTRY_TYPE value) {
  assert(::proto::dota::DOTA_MODIFIER_ENTRY_TYPE_IsValid(value));
  _has_bits_[0] |= 0x80000000u;
  entry_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.entry_type)
}

// required int32 parent = 2;
inline bool CDOTAModifierBuffTableEntry::has_parent() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_parent() {
  parent_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::parent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.parent)
  return parent_;
}
inline void CDOTAModifierBuffTableEntry::set_parent(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  parent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.parent)
}

// required int32 index = 3;
inline bool CDOTAModifierBuffTableEntry::has_index() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_index() {
  index_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.index)
  return index_;
}
inline void CDOTAModifierBuffTableEntry::set_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.index)
}

// required int32 serial_num = 4;
inline bool CDOTAModifierBuffTableEntry::has_serial_num() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_serial_num() {
  serial_num_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::serial_num() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.serial_num)
  return serial_num_;
}
inline void CDOTAModifierBuffTableEntry::set_serial_num(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  serial_num_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.serial_num)
}

// optional int32 modifier_class = 5;
inline bool CDOTAModifierBuffTableEntry::has_modifier_class() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_modifier_class() {
  modifier_class_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::modifier_class() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.modifier_class)
  return modifier_class_;
}
inline void CDOTAModifierBuffTableEntry::set_modifier_class(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  modifier_class_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.modifier_class)
}

// optional int32 ability_level = 6;
inline bool CDOTAModifierBuffTableEntry::has_ability_level() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_ability_level() {
  ability_level_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::ability_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.ability_level)
  return ability_level_;
}
inline void CDOTAModifierBuffTableEntry::set_ability_level(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00002000u;
  ability_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.ability_level)
}

// optional int32 stack_count = 7;
inline bool CDOTAModifierBuffTableEntry::has_stack_count() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_stack_count() {
  stack_count_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::stack_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.stack_count)
  return stack_count_;
}
inline void CDOTAModifierBuffTableEntry::set_stack_count(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00004000u;
  stack_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.stack_count)
}

// optional float creation_time = 8;
inline bool CDOTAModifierBuffTableEntry::has_creation_time() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_creation_time() {
  creation_time_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline float CDOTAModifierBuffTableEntry::creation_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.creation_time)
  return creation_time_;
}
inline void CDOTAModifierBuffTableEntry::set_creation_time(float value) {
  _has_bits_[0] |= 0x00008000u;
  creation_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.creation_time)
}

// optional float duration = 9 [default = -1];
inline bool CDOTAModifierBuffTableEntry::has_duration() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_duration() {
  duration_ = -1;
  _has_bits_[1] &= ~0x00000001u;
}
inline float CDOTAModifierBuffTableEntry::duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.duration)
  return duration_;
}
inline void CDOTAModifierBuffTableEntry::set_duration(float value) {
  _has_bits_[1] |= 0x00000001u;
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.duration)
}

// optional int32 caster = 10;
inline bool CDOTAModifierBuffTableEntry::has_caster() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_caster() {
  caster_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::caster() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.caster)
  return caster_;
}
inline void CDOTAModifierBuffTableEntry::set_caster(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00010000u;
  caster_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.caster)
}

// optional int32 ability = 11;
inline bool CDOTAModifierBuffTableEntry::has_ability() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_ability() {
  ability_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::ability() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.ability)
  return ability_;
}
inline void CDOTAModifierBuffTableEntry::set_ability(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00020000u;
  ability_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.ability)
}

// optional int32 armor = 12;
inline bool CDOTAModifierBuffTableEntry::has_armor() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_armor() {
  armor_ = 0;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::armor() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.armor)
  return armor_;
}
inline void CDOTAModifierBuffTableEntry::set_armor(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00040000u;
  armor_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.armor)
}

// optional float fade_time = 13;
inline bool CDOTAModifierBuffTableEntry::has_fade_time() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_fade_time() {
  fade_time_ = 0;
  _has_bits_[0] &= ~0x00080000u;
}
inline float CDOTAModifierBuffTableEntry::fade_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.fade_time)
  return fade_time_;
}
inline void CDOTAModifierBuffTableEntry::set_fade_time(float value) {
  _has_bits_[0] |= 0x00080000u;
  fade_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.fade_time)
}

// optional bool subtle = 14;
inline bool CDOTAModifierBuffTableEntry::has_subtle() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_subtle() {
  subtle_ = false;
  _has_bits_[0] &= ~0x00400000u;
}
inline bool CDOTAModifierBuffTableEntry::subtle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.subtle)
  return subtle_;
}
inline void CDOTAModifierBuffTableEntry::set_subtle(bool value) {
  _has_bits_[0] |= 0x00400000u;
  subtle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.subtle)
}

// optional float channel_time = 15;
inline bool CDOTAModifierBuffTableEntry::has_channel_time() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_channel_time() {
  channel_time_ = 0;
  _has_bits_[0] &= ~0x00100000u;
}
inline float CDOTAModifierBuffTableEntry::channel_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.channel_time)
  return channel_time_;
}
inline void CDOTAModifierBuffTableEntry::set_channel_time(float value) {
  _has_bits_[0] |= 0x00100000u;
  channel_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.channel_time)
}

// optional .proto.dota.CMsgVector v_start = 16;
inline bool CDOTAModifierBuffTableEntry::has_v_start() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline const ::proto::dota::CMsgVector& CDOTAModifierBuffTableEntry::v_start() const {
  const ::proto::dota::CMsgVector* p = v_start_;
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.v_start)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgVector*>(
      &::proto::dota::_CMsgVector_default_instance_);
}
inline ::proto::dota::CMsgVector* CDOTAModifierBuffTableEntry::release_v_start() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.v_start)
  _has_bits_[0] &= ~0x00000080u;
  ::proto::dota::CMsgVector* temp = v_start_;
  v_start_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgVector* CDOTAModifierBuffTableEntry::mutable_v_start() {
  _has_bits_[0] |= 0x00000080u;
  if (v_start_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgVector>(GetArenaNoVirtual());
    v_start_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.v_start)
  return v_start_;
}
inline void CDOTAModifierBuffTableEntry::set_allocated_v_start(::proto::dota::CMsgVector* v_start) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(v_start_);
  }
  if (v_start) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      v_start = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_start, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  v_start_ = v_start;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.v_start)
}

// optional .proto.dota.CMsgVector v_end = 17;
inline bool CDOTAModifierBuffTableEntry::has_v_end() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline const ::proto::dota::CMsgVector& CDOTAModifierBuffTableEntry::v_end() const {
  const ::proto::dota::CMsgVector* p = v_end_;
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.v_end)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::dota::CMsgVector*>(
      &::proto::dota::_CMsgVector_default_instance_);
}
inline ::proto::dota::CMsgVector* CDOTAModifierBuffTableEntry::release_v_end() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.v_end)
  _has_bits_[0] &= ~0x00000100u;
  ::proto::dota::CMsgVector* temp = v_end_;
  v_end_ = nullptr;
  return temp;
}
inline ::proto::dota::CMsgVector* CDOTAModifierBuffTableEntry::mutable_v_end() {
  _has_bits_[0] |= 0x00000100u;
  if (v_end_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::dota::CMsgVector>(GetArenaNoVirtual());
    v_end_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.v_end)
  return v_end_;
}
inline void CDOTAModifierBuffTableEntry::set_allocated_v_end(::proto::dota::CMsgVector* v_end) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(v_end_);
  }
  if (v_end) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      v_end = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, v_end, submessage_arena);
    }
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  v_end_ = v_end;
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.v_end)
}

// optional string portal_loop_appear = 18;
inline bool CDOTAModifierBuffTableEntry::has_portal_loop_appear() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_portal_loop_appear() {
  portal_loop_appear_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CDOTAModifierBuffTableEntry::portal_loop_appear() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
  return portal_loop_appear_.GetNoArena();
}
inline void CDOTAModifierBuffTableEntry::set_portal_loop_appear(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  portal_loop_appear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
}
#if LANG_CXX11
inline void CDOTAModifierBuffTableEntry::set_portal_loop_appear(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  portal_loop_appear_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
}
#endif
inline void CDOTAModifierBuffTableEntry::set_portal_loop_appear(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  portal_loop_appear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
}
inline void CDOTAModifierBuffTableEntry::set_portal_loop_appear(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  portal_loop_appear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
}
inline ::std::string* CDOTAModifierBuffTableEntry::mutable_portal_loop_appear() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
  return portal_loop_appear_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAModifierBuffTableEntry::release_portal_loop_appear() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
  if (!has_portal_loop_appear()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return portal_loop_appear_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAModifierBuffTableEntry::set_allocated_portal_loop_appear(::std::string* portal_loop_appear) {
  if (portal_loop_appear != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  portal_loop_appear_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portal_loop_appear);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
}

// optional string portal_loop_disappear = 19;
inline bool CDOTAModifierBuffTableEntry::has_portal_loop_disappear() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_portal_loop_disappear() {
  portal_loop_disappear_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CDOTAModifierBuffTableEntry::portal_loop_disappear() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
  return portal_loop_disappear_.GetNoArena();
}
inline void CDOTAModifierBuffTableEntry::set_portal_loop_disappear(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  portal_loop_disappear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
}
#if LANG_CXX11
inline void CDOTAModifierBuffTableEntry::set_portal_loop_disappear(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  portal_loop_disappear_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
}
#endif
inline void CDOTAModifierBuffTableEntry::set_portal_loop_disappear(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  portal_loop_disappear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
}
inline void CDOTAModifierBuffTableEntry::set_portal_loop_disappear(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  portal_loop_disappear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
}
inline ::std::string* CDOTAModifierBuffTableEntry::mutable_portal_loop_disappear() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
  return portal_loop_disappear_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAModifierBuffTableEntry::release_portal_loop_disappear() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
  if (!has_portal_loop_disappear()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return portal_loop_disappear_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAModifierBuffTableEntry::set_allocated_portal_loop_disappear(::std::string* portal_loop_disappear) {
  if (portal_loop_disappear != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  portal_loop_disappear_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portal_loop_disappear);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
}

// optional string hero_loop_appear = 20;
inline bool CDOTAModifierBuffTableEntry::has_hero_loop_appear() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_hero_loop_appear() {
  hero_loop_appear_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CDOTAModifierBuffTableEntry::hero_loop_appear() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
  return hero_loop_appear_.GetNoArena();
}
inline void CDOTAModifierBuffTableEntry::set_hero_loop_appear(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  hero_loop_appear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
}
#if LANG_CXX11
inline void CDOTAModifierBuffTableEntry::set_hero_loop_appear(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  hero_loop_appear_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
}
#endif
inline void CDOTAModifierBuffTableEntry::set_hero_loop_appear(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  hero_loop_appear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
}
inline void CDOTAModifierBuffTableEntry::set_hero_loop_appear(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  hero_loop_appear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
}
inline ::std::string* CDOTAModifierBuffTableEntry::mutable_hero_loop_appear() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
  return hero_loop_appear_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAModifierBuffTableEntry::release_hero_loop_appear() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
  if (!has_hero_loop_appear()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return hero_loop_appear_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAModifierBuffTableEntry::set_allocated_hero_loop_appear(::std::string* hero_loop_appear) {
  if (hero_loop_appear != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  hero_loop_appear_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_loop_appear);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
}

// optional string hero_loop_disappear = 21;
inline bool CDOTAModifierBuffTableEntry::has_hero_loop_disappear() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_hero_loop_disappear() {
  hero_loop_disappear_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& CDOTAModifierBuffTableEntry::hero_loop_disappear() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
  return hero_loop_disappear_.GetNoArena();
}
inline void CDOTAModifierBuffTableEntry::set_hero_loop_disappear(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  hero_loop_disappear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
}
#if LANG_CXX11
inline void CDOTAModifierBuffTableEntry::set_hero_loop_disappear(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  hero_loop_disappear_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
}
#endif
inline void CDOTAModifierBuffTableEntry::set_hero_loop_disappear(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  hero_loop_disappear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
}
inline void CDOTAModifierBuffTableEntry::set_hero_loop_disappear(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  hero_loop_disappear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
}
inline ::std::string* CDOTAModifierBuffTableEntry::mutable_hero_loop_disappear() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
  return hero_loop_disappear_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAModifierBuffTableEntry::release_hero_loop_disappear() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
  if (!has_hero_loop_disappear()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return hero_loop_disappear_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAModifierBuffTableEntry::set_allocated_hero_loop_disappear(::std::string* hero_loop_disappear) {
  if (hero_loop_disappear != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  hero_loop_disappear_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_loop_disappear);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
}

// optional int32 movement_speed = 22;
inline bool CDOTAModifierBuffTableEntry::has_movement_speed() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_movement_speed() {
  movement_speed_ = 0;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::movement_speed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.movement_speed)
  return movement_speed_;
}
inline void CDOTAModifierBuffTableEntry::set_movement_speed(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00200000u;
  movement_speed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.movement_speed)
}

// optional bool aura = 23;
inline bool CDOTAModifierBuffTableEntry::has_aura() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_aura() {
  aura_ = false;
  _has_bits_[0] &= ~0x00800000u;
}
inline bool CDOTAModifierBuffTableEntry::aura() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.aura)
  return aura_;
}
inline void CDOTAModifierBuffTableEntry::set_aura(bool value) {
  _has_bits_[0] |= 0x00800000u;
  aura_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.aura)
}

// optional int32 activity = 24;
inline bool CDOTAModifierBuffTableEntry::has_activity() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_activity() {
  activity_ = 0;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::activity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.activity)
  return activity_;
}
inline void CDOTAModifierBuffTableEntry::set_activity(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x02000000u;
  activity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.activity)
}

// optional int32 damage = 25;
inline bool CDOTAModifierBuffTableEntry::has_damage() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_damage() {
  damage_ = 0;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::damage() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.damage)
  return damage_;
}
inline void CDOTAModifierBuffTableEntry::set_damage(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x04000000u;
  damage_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.damage)
}

// optional int32 range = 26;
inline bool CDOTAModifierBuffTableEntry::has_range() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_range() {
  range_ = 0;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::range() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.range)
  return range_;
}
inline void CDOTAModifierBuffTableEntry::set_range(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x08000000u;
  range_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.range)
}

// optional int32 dd_modifier_index = 27;
inline bool CDOTAModifierBuffTableEntry::has_dd_modifier_index() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_dd_modifier_index() {
  dd_modifier_index_ = 0;
  _has_bits_[0] &= ~0x10000000u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::dd_modifier_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.dd_modifier_index)
  return dd_modifier_index_;
}
inline void CDOTAModifierBuffTableEntry::set_dd_modifier_index(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x10000000u;
  dd_modifier_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.dd_modifier_index)
}

// optional int32 dd_ability_id = 28;
inline bool CDOTAModifierBuffTableEntry::has_dd_ability_id() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_dd_ability_id() {
  dd_ability_id_ = 0;
  _has_bits_[0] &= ~0x20000000u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::dd_ability_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.dd_ability_id)
  return dd_ability_id_;
}
inline void CDOTAModifierBuffTableEntry::set_dd_ability_id(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x20000000u;
  dd_ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.dd_ability_id)
}

// optional string illusion_label = 29;
inline bool CDOTAModifierBuffTableEntry::has_illusion_label() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_illusion_label() {
  illusion_label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& CDOTAModifierBuffTableEntry::illusion_label() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
  return illusion_label_.GetNoArena();
}
inline void CDOTAModifierBuffTableEntry::set_illusion_label(const ::std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  illusion_label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
}
#if LANG_CXX11
inline void CDOTAModifierBuffTableEntry::set_illusion_label(::std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  illusion_label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
}
#endif
inline void CDOTAModifierBuffTableEntry::set_illusion_label(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  illusion_label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
}
inline void CDOTAModifierBuffTableEntry::set_illusion_label(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  illusion_label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
}
inline ::std::string* CDOTAModifierBuffTableEntry::mutable_illusion_label() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
  return illusion_label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAModifierBuffTableEntry::release_illusion_label() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
  if (!has_illusion_label()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return illusion_label_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAModifierBuffTableEntry::set_allocated_illusion_label(::std::string* illusion_label) {
  if (illusion_label != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  illusion_label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), illusion_label);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
}

// optional bool active = 30;
inline bool CDOTAModifierBuffTableEntry::has_active() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_active() {
  active_ = false;
  _has_bits_[0] &= ~0x01000000u;
}
inline bool CDOTAModifierBuffTableEntry::active() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.active)
  return active_;
}
inline void CDOTAModifierBuffTableEntry::set_active(bool value) {
  _has_bits_[0] |= 0x01000000u;
  active_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.active)
}

// optional string player_ids = 31;
inline bool CDOTAModifierBuffTableEntry::has_player_ids() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_player_ids() {
  player_ids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::std::string& CDOTAModifierBuffTableEntry::player_ids() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
  return player_ids_.GetNoArena();
}
inline void CDOTAModifierBuffTableEntry::set_player_ids(const ::std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  player_ids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
}
#if LANG_CXX11
inline void CDOTAModifierBuffTableEntry::set_player_ids(::std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  player_ids_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
}
#endif
inline void CDOTAModifierBuffTableEntry::set_player_ids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  player_ids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
}
inline void CDOTAModifierBuffTableEntry::set_player_ids(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  player_ids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
}
inline ::std::string* CDOTAModifierBuffTableEntry::mutable_player_ids() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
  return player_ids_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAModifierBuffTableEntry::release_player_ids() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
  if (!has_player_ids()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return player_ids_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAModifierBuffTableEntry::set_allocated_player_ids(::std::string* player_ids) {
  if (player_ids != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  player_ids_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_ids);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
}

// optional string lua_name = 32;
inline bool CDOTAModifierBuffTableEntry::has_lua_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_lua_name() {
  lua_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::std::string& CDOTAModifierBuffTableEntry::lua_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
  return lua_name_.GetNoArena();
}
inline void CDOTAModifierBuffTableEntry::set_lua_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  lua_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
}
#if LANG_CXX11
inline void CDOTAModifierBuffTableEntry::set_lua_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  lua_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
}
#endif
inline void CDOTAModifierBuffTableEntry::set_lua_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  lua_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
}
inline void CDOTAModifierBuffTableEntry::set_lua_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  lua_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
}
inline ::std::string* CDOTAModifierBuffTableEntry::mutable_lua_name() {
  _has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
  return lua_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAModifierBuffTableEntry::release_lua_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
  if (!has_lua_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return lua_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAModifierBuffTableEntry::set_allocated_lua_name(::std::string* lua_name) {
  if (lua_name != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  lua_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lua_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
}

// optional int32 attack_speed = 33;
inline bool CDOTAModifierBuffTableEntry::has_attack_speed() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void CDOTAModifierBuffTableEntry::clear_attack_speed() {
  attack_speed_ = 0;
  _has_bits_[0] &= ~0x40000000u;
}
inline ::google::protobuf::int32 CDOTAModifierBuffTableEntry::attack_speed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.attack_speed)
  return attack_speed_;
}
inline void CDOTAModifierBuffTableEntry::set_attack_speed(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x40000000u;
  attack_speed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.attack_speed)
}

// -------------------------------------------------------------------

// CDOTALuaModifierEntry

// required int32 modifier_type = 1;
inline bool CDOTALuaModifierEntry::has_modifier_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTALuaModifierEntry::clear_modifier_type() {
  modifier_type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CDOTALuaModifierEntry::modifier_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTALuaModifierEntry.modifier_type)
  return modifier_type_;
}
inline void CDOTALuaModifierEntry::set_modifier_type(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  modifier_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTALuaModifierEntry.modifier_type)
}

// required string modifier_filename = 2;
inline bool CDOTALuaModifierEntry::has_modifier_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTALuaModifierEntry::clear_modifier_filename() {
  modifier_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CDOTALuaModifierEntry::modifier_filename() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTALuaModifierEntry.modifier_filename)
  return modifier_filename_.GetNoArena();
}
inline void CDOTALuaModifierEntry::set_modifier_filename(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  modifier_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTALuaModifierEntry.modifier_filename)
}
#if LANG_CXX11
inline void CDOTALuaModifierEntry::set_modifier_filename(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  modifier_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTALuaModifierEntry.modifier_filename)
}
#endif
inline void CDOTALuaModifierEntry::set_modifier_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  modifier_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTALuaModifierEntry.modifier_filename)
}
inline void CDOTALuaModifierEntry::set_modifier_filename(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  modifier_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTALuaModifierEntry.modifier_filename)
}
inline ::std::string* CDOTALuaModifierEntry::mutable_modifier_filename() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTALuaModifierEntry.modifier_filename)
  return modifier_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTALuaModifierEntry::release_modifier_filename() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTALuaModifierEntry.modifier_filename)
  if (!has_modifier_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return modifier_filename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTALuaModifierEntry::set_allocated_modifier_filename(::std::string* modifier_filename) {
  if (modifier_filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  modifier_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modifier_filename);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTALuaModifierEntry.modifier_filename)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dota
}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::dota::DOTA_MODIFIER_ENTRY_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::DOTA_MODIFIER_ENTRY_TYPE>() {
  return ::proto::dota::DOTA_MODIFIER_ENTRY_TYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_dota_5fmodifiers_2eproto
