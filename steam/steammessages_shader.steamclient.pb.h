// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_shader.steamclient.proto

#ifndef PROTOBUF_INCLUDED_steammessages_5fshader_2esteamclient_2eproto
#define PROTOBUF_INCLUDED_steammessages_5fshader_2esteamclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fshader_2esteamclient_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fshader_2esteamclient_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_steammessages_5fshader_2esteamclient_2eproto();
namespace proto {
namespace steam {
class CShader_GetBucketManifest_Request;
class CShader_GetBucketManifest_RequestDefaultTypeInternal;
extern CShader_GetBucketManifest_RequestDefaultTypeInternal _CShader_GetBucketManifest_Request_default_instance_;
class CShader_GetBucketManifest_Response;
class CShader_GetBucketManifest_ResponseDefaultTypeInternal;
extern CShader_GetBucketManifest_ResponseDefaultTypeInternal _CShader_GetBucketManifest_Response_default_instance_;
class CShader_RegisterShader_Request;
class CShader_RegisterShader_RequestDefaultTypeInternal;
extern CShader_RegisterShader_RequestDefaultTypeInternal _CShader_RegisterShader_Request_default_instance_;
class CShader_RegisterShader_Request_Shader;
class CShader_RegisterShader_Request_ShaderDefaultTypeInternal;
extern CShader_RegisterShader_Request_ShaderDefaultTypeInternal _CShader_RegisterShader_Request_Shader_default_instance_;
class CShader_RegisterShader_Response;
class CShader_RegisterShader_ResponseDefaultTypeInternal;
extern CShader_RegisterShader_ResponseDefaultTypeInternal _CShader_RegisterShader_Response_default_instance_;
class CShader_SendShader_Request;
class CShader_SendShader_RequestDefaultTypeInternal;
extern CShader_SendShader_RequestDefaultTypeInternal _CShader_SendShader_Request_default_instance_;
class CShader_SendShader_Request_ShaderCode;
class CShader_SendShader_Request_ShaderCodeDefaultTypeInternal;
extern CShader_SendShader_Request_ShaderCodeDefaultTypeInternal _CShader_SendShader_Request_ShaderCode_default_instance_;
class CShader_SendShader_Response;
class CShader_SendShader_ResponseDefaultTypeInternal;
extern CShader_SendShader_ResponseDefaultTypeInternal _CShader_SendShader_Response_default_instance_;
}  // namespace steam
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::steam::CShader_GetBucketManifest_Request* Arena::CreateMaybeMessage<::proto::steam::CShader_GetBucketManifest_Request>(Arena*);
template<> ::proto::steam::CShader_GetBucketManifest_Response* Arena::CreateMaybeMessage<::proto::steam::CShader_GetBucketManifest_Response>(Arena*);
template<> ::proto::steam::CShader_RegisterShader_Request* Arena::CreateMaybeMessage<::proto::steam::CShader_RegisterShader_Request>(Arena*);
template<> ::proto::steam::CShader_RegisterShader_Request_Shader* Arena::CreateMaybeMessage<::proto::steam::CShader_RegisterShader_Request_Shader>(Arena*);
template<> ::proto::steam::CShader_RegisterShader_Response* Arena::CreateMaybeMessage<::proto::steam::CShader_RegisterShader_Response>(Arena*);
template<> ::proto::steam::CShader_SendShader_Request* Arena::CreateMaybeMessage<::proto::steam::CShader_SendShader_Request>(Arena*);
template<> ::proto::steam::CShader_SendShader_Request_ShaderCode* Arena::CreateMaybeMessage<::proto::steam::CShader_SendShader_Request_ShaderCode>(Arena*);
template<> ::proto::steam::CShader_SendShader_Response* Arena::CreateMaybeMessage<::proto::steam::CShader_SendShader_Response>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace steam {

// ===================================================================

class CShader_RegisterShader_Request_Shader final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CShader_RegisterShader_Request.Shader) */ {
 public:
  CShader_RegisterShader_Request_Shader();
  virtual ~CShader_RegisterShader_Request_Shader();

  CShader_RegisterShader_Request_Shader(const CShader_RegisterShader_Request_Shader& from);

  inline CShader_RegisterShader_Request_Shader& operator=(const CShader_RegisterShader_Request_Shader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CShader_RegisterShader_Request_Shader(CShader_RegisterShader_Request_Shader&& from) noexcept
    : CShader_RegisterShader_Request_Shader() {
    *this = ::std::move(from);
  }

  inline CShader_RegisterShader_Request_Shader& operator=(CShader_RegisterShader_Request_Shader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CShader_RegisterShader_Request_Shader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CShader_RegisterShader_Request_Shader* internal_default_instance() {
    return reinterpret_cast<const CShader_RegisterShader_Request_Shader*>(
               &_CShader_RegisterShader_Request_Shader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CShader_RegisterShader_Request_Shader* other);
  friend void swap(CShader_RegisterShader_Request_Shader& a, CShader_RegisterShader_Request_Shader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CShader_RegisterShader_Request_Shader* New() const final {
    return CreateMaybeMessage<CShader_RegisterShader_Request_Shader>(nullptr);
  }

  CShader_RegisterShader_Request_Shader* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CShader_RegisterShader_Request_Shader>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CShader_RegisterShader_Request_Shader& from);
  void MergeFrom(const CShader_RegisterShader_Request_Shader& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CShader_RegisterShader_Request_Shader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes cache_key_sha = 1;
  bool has_cache_key_sha() const;
  void clear_cache_key_sha();
  static const int kCacheKeyShaFieldNumber = 1;
  const ::std::string& cache_key_sha() const;
  void set_cache_key_sha(const ::std::string& value);
  #if LANG_CXX11
  void set_cache_key_sha(::std::string&& value);
  #endif
  void set_cache_key_sha(const char* value);
  void set_cache_key_sha(const void* value, size_t size);
  ::std::string* mutable_cache_key_sha();
  ::std::string* release_cache_key_sha();
  void set_allocated_cache_key_sha(::std::string* cache_key_sha);

  // optional bytes shader_code_sha = 2;
  bool has_shader_code_sha() const;
  void clear_shader_code_sha();
  static const int kShaderCodeShaFieldNumber = 2;
  const ::std::string& shader_code_sha() const;
  void set_shader_code_sha(const ::std::string& value);
  #if LANG_CXX11
  void set_shader_code_sha(::std::string&& value);
  #endif
  void set_shader_code_sha(const char* value);
  void set_shader_code_sha(const void* value, size_t size);
  ::std::string* mutable_shader_code_sha();
  ::std::string* release_shader_code_sha();
  void set_allocated_shader_code_sha(::std::string* shader_code_sha);

  // @@protoc_insertion_point(class_scope:proto.steam.CShader_RegisterShader_Request.Shader)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cache_key_sha_;
  ::google::protobuf::internal::ArenaStringPtr shader_code_sha_;
  friend struct ::TableStruct_steammessages_5fshader_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CShader_RegisterShader_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CShader_RegisterShader_Request) */ {
 public:
  CShader_RegisterShader_Request();
  virtual ~CShader_RegisterShader_Request();

  CShader_RegisterShader_Request(const CShader_RegisterShader_Request& from);

  inline CShader_RegisterShader_Request& operator=(const CShader_RegisterShader_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CShader_RegisterShader_Request(CShader_RegisterShader_Request&& from) noexcept
    : CShader_RegisterShader_Request() {
    *this = ::std::move(from);
  }

  inline CShader_RegisterShader_Request& operator=(CShader_RegisterShader_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CShader_RegisterShader_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CShader_RegisterShader_Request* internal_default_instance() {
    return reinterpret_cast<const CShader_RegisterShader_Request*>(
               &_CShader_RegisterShader_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CShader_RegisterShader_Request* other);
  friend void swap(CShader_RegisterShader_Request& a, CShader_RegisterShader_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CShader_RegisterShader_Request* New() const final {
    return CreateMaybeMessage<CShader_RegisterShader_Request>(nullptr);
  }

  CShader_RegisterShader_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CShader_RegisterShader_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CShader_RegisterShader_Request& from);
  void MergeFrom(const CShader_RegisterShader_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CShader_RegisterShader_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CShader_RegisterShader_Request_Shader Shader;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CShader_RegisterShader_Request.Shader shaders = 4;
  int shaders_size() const;
  void clear_shaders();
  static const int kShadersFieldNumber = 4;
  ::proto::steam::CShader_RegisterShader_Request_Shader* mutable_shaders(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CShader_RegisterShader_Request_Shader >*
      mutable_shaders();
  const ::proto::steam::CShader_RegisterShader_Request_Shader& shaders(int index) const;
  ::proto::steam::CShader_RegisterShader_Request_Shader* add_shaders();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CShader_RegisterShader_Request_Shader >&
      shaders() const;

  // optional string gpu_desc = 2;
  bool has_gpu_desc() const;
  void clear_gpu_desc();
  static const int kGpuDescFieldNumber = 2;
  const ::std::string& gpu_desc() const;
  void set_gpu_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_gpu_desc(::std::string&& value);
  #endif
  void set_gpu_desc(const char* value);
  void set_gpu_desc(const char* value, size_t size);
  ::std::string* mutable_gpu_desc();
  ::std::string* release_gpu_desc();
  void set_allocated_gpu_desc(::std::string* gpu_desc);

  // optional string driver_desc = 3;
  bool has_driver_desc() const;
  void clear_driver_desc();
  static const int kDriverDescFieldNumber = 3;
  const ::std::string& driver_desc() const;
  void set_driver_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_driver_desc(::std::string&& value);
  #endif
  void set_driver_desc(const char* value);
  void set_driver_desc(const char* value, size_t size);
  ::std::string* mutable_driver_desc();
  ::std::string* release_driver_desc();
  void set_allocated_driver_desc(::std::string* driver_desc);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CShader_RegisterShader_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CShader_RegisterShader_Request_Shader > shaders_;
  ::google::protobuf::internal::ArenaStringPtr gpu_desc_;
  ::google::protobuf::internal::ArenaStringPtr driver_desc_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_5fshader_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CShader_RegisterShader_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CShader_RegisterShader_Response) */ {
 public:
  CShader_RegisterShader_Response();
  virtual ~CShader_RegisterShader_Response();

  CShader_RegisterShader_Response(const CShader_RegisterShader_Response& from);

  inline CShader_RegisterShader_Response& operator=(const CShader_RegisterShader_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CShader_RegisterShader_Response(CShader_RegisterShader_Response&& from) noexcept
    : CShader_RegisterShader_Response() {
    *this = ::std::move(from);
  }

  inline CShader_RegisterShader_Response& operator=(CShader_RegisterShader_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CShader_RegisterShader_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CShader_RegisterShader_Response* internal_default_instance() {
    return reinterpret_cast<const CShader_RegisterShader_Response*>(
               &_CShader_RegisterShader_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CShader_RegisterShader_Response* other);
  friend void swap(CShader_RegisterShader_Response& a, CShader_RegisterShader_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CShader_RegisterShader_Response* New() const final {
    return CreateMaybeMessage<CShader_RegisterShader_Response>(nullptr);
  }

  CShader_RegisterShader_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CShader_RegisterShader_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CShader_RegisterShader_Response& from);
  void MergeFrom(const CShader_RegisterShader_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CShader_RegisterShader_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 requested_codeids = 1;
  int requested_codeids_size() const;
  void clear_requested_codeids();
  static const int kRequestedCodeidsFieldNumber = 1;
  ::google::protobuf::uint32 requested_codeids(int index) const;
  void set_requested_codeids(int index, ::google::protobuf::uint32 value);
  void add_requested_codeids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      requested_codeids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_requested_codeids();

  // @@protoc_insertion_point(class_scope:proto.steam.CShader_RegisterShader_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > requested_codeids_;
  friend struct ::TableStruct_steammessages_5fshader_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CShader_SendShader_Request_ShaderCode final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CShader_SendShader_Request.ShaderCode) */ {
 public:
  CShader_SendShader_Request_ShaderCode();
  virtual ~CShader_SendShader_Request_ShaderCode();

  CShader_SendShader_Request_ShaderCode(const CShader_SendShader_Request_ShaderCode& from);

  inline CShader_SendShader_Request_ShaderCode& operator=(const CShader_SendShader_Request_ShaderCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CShader_SendShader_Request_ShaderCode(CShader_SendShader_Request_ShaderCode&& from) noexcept
    : CShader_SendShader_Request_ShaderCode() {
    *this = ::std::move(from);
  }

  inline CShader_SendShader_Request_ShaderCode& operator=(CShader_SendShader_Request_ShaderCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CShader_SendShader_Request_ShaderCode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CShader_SendShader_Request_ShaderCode* internal_default_instance() {
    return reinterpret_cast<const CShader_SendShader_Request_ShaderCode*>(
               &_CShader_SendShader_Request_ShaderCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CShader_SendShader_Request_ShaderCode* other);
  friend void swap(CShader_SendShader_Request_ShaderCode& a, CShader_SendShader_Request_ShaderCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CShader_SendShader_Request_ShaderCode* New() const final {
    return CreateMaybeMessage<CShader_SendShader_Request_ShaderCode>(nullptr);
  }

  CShader_SendShader_Request_ShaderCode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CShader_SendShader_Request_ShaderCode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CShader_SendShader_Request_ShaderCode& from);
  void MergeFrom(const CShader_SendShader_Request_ShaderCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CShader_SendShader_Request_ShaderCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes shader_code_sha = 1;
  bool has_shader_code_sha() const;
  void clear_shader_code_sha();
  static const int kShaderCodeShaFieldNumber = 1;
  const ::std::string& shader_code_sha() const;
  void set_shader_code_sha(const ::std::string& value);
  #if LANG_CXX11
  void set_shader_code_sha(::std::string&& value);
  #endif
  void set_shader_code_sha(const char* value);
  void set_shader_code_sha(const void* value, size_t size);
  ::std::string* mutable_shader_code_sha();
  ::std::string* release_shader_code_sha();
  void set_allocated_shader_code_sha(::std::string* shader_code_sha);

  // optional bytes shader_code = 2;
  bool has_shader_code() const;
  void clear_shader_code();
  static const int kShaderCodeFieldNumber = 2;
  const ::std::string& shader_code() const;
  void set_shader_code(const ::std::string& value);
  #if LANG_CXX11
  void set_shader_code(::std::string&& value);
  #endif
  void set_shader_code(const char* value);
  void set_shader_code(const void* value, size_t size);
  ::std::string* mutable_shader_code();
  ::std::string* release_shader_code();
  void set_allocated_shader_code(::std::string* shader_code);

  // @@protoc_insertion_point(class_scope:proto.steam.CShader_SendShader_Request.ShaderCode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr shader_code_sha_;
  ::google::protobuf::internal::ArenaStringPtr shader_code_;
  friend struct ::TableStruct_steammessages_5fshader_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CShader_SendShader_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CShader_SendShader_Request) */ {
 public:
  CShader_SendShader_Request();
  virtual ~CShader_SendShader_Request();

  CShader_SendShader_Request(const CShader_SendShader_Request& from);

  inline CShader_SendShader_Request& operator=(const CShader_SendShader_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CShader_SendShader_Request(CShader_SendShader_Request&& from) noexcept
    : CShader_SendShader_Request() {
    *this = ::std::move(from);
  }

  inline CShader_SendShader_Request& operator=(CShader_SendShader_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CShader_SendShader_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CShader_SendShader_Request* internal_default_instance() {
    return reinterpret_cast<const CShader_SendShader_Request*>(
               &_CShader_SendShader_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CShader_SendShader_Request* other);
  friend void swap(CShader_SendShader_Request& a, CShader_SendShader_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CShader_SendShader_Request* New() const final {
    return CreateMaybeMessage<CShader_SendShader_Request>(nullptr);
  }

  CShader_SendShader_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CShader_SendShader_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CShader_SendShader_Request& from);
  void MergeFrom(const CShader_SendShader_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CShader_SendShader_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CShader_SendShader_Request_ShaderCode ShaderCode;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CShader_SendShader_Request.ShaderCode shaders = 2;
  int shaders_size() const;
  void clear_shaders();
  static const int kShadersFieldNumber = 2;
  ::proto::steam::CShader_SendShader_Request_ShaderCode* mutable_shaders(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CShader_SendShader_Request_ShaderCode >*
      mutable_shaders();
  const ::proto::steam::CShader_SendShader_Request_ShaderCode& shaders(int index) const;
  ::proto::steam::CShader_SendShader_Request_ShaderCode* add_shaders();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CShader_SendShader_Request_ShaderCode >&
      shaders() const;

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CShader_SendShader_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CShader_SendShader_Request_ShaderCode > shaders_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_5fshader_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CShader_SendShader_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CShader_SendShader_Response) */ {
 public:
  CShader_SendShader_Response();
  virtual ~CShader_SendShader_Response();

  CShader_SendShader_Response(const CShader_SendShader_Response& from);

  inline CShader_SendShader_Response& operator=(const CShader_SendShader_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CShader_SendShader_Response(CShader_SendShader_Response&& from) noexcept
    : CShader_SendShader_Response() {
    *this = ::std::move(from);
  }

  inline CShader_SendShader_Response& operator=(CShader_SendShader_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CShader_SendShader_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CShader_SendShader_Response* internal_default_instance() {
    return reinterpret_cast<const CShader_SendShader_Response*>(
               &_CShader_SendShader_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CShader_SendShader_Response* other);
  friend void swap(CShader_SendShader_Response& a, CShader_SendShader_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CShader_SendShader_Response* New() const final {
    return CreateMaybeMessage<CShader_SendShader_Response>(nullptr);
  }

  CShader_SendShader_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CShader_SendShader_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CShader_SendShader_Response& from);
  void MergeFrom(const CShader_SendShader_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CShader_SendShader_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.CShader_SendShader_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fshader_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CShader_GetBucketManifest_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CShader_GetBucketManifest_Request) */ {
 public:
  CShader_GetBucketManifest_Request();
  virtual ~CShader_GetBucketManifest_Request();

  CShader_GetBucketManifest_Request(const CShader_GetBucketManifest_Request& from);

  inline CShader_GetBucketManifest_Request& operator=(const CShader_GetBucketManifest_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CShader_GetBucketManifest_Request(CShader_GetBucketManifest_Request&& from) noexcept
    : CShader_GetBucketManifest_Request() {
    *this = ::std::move(from);
  }

  inline CShader_GetBucketManifest_Request& operator=(CShader_GetBucketManifest_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CShader_GetBucketManifest_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CShader_GetBucketManifest_Request* internal_default_instance() {
    return reinterpret_cast<const CShader_GetBucketManifest_Request*>(
               &_CShader_GetBucketManifest_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CShader_GetBucketManifest_Request* other);
  friend void swap(CShader_GetBucketManifest_Request& a, CShader_GetBucketManifest_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CShader_GetBucketManifest_Request* New() const final {
    return CreateMaybeMessage<CShader_GetBucketManifest_Request>(nullptr);
  }

  CShader_GetBucketManifest_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CShader_GetBucketManifest_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CShader_GetBucketManifest_Request& from);
  void MergeFrom(const CShader_GetBucketManifest_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CShader_GetBucketManifest_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string gpu_desc = 2;
  bool has_gpu_desc() const;
  void clear_gpu_desc();
  static const int kGpuDescFieldNumber = 2;
  const ::std::string& gpu_desc() const;
  void set_gpu_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_gpu_desc(::std::string&& value);
  #endif
  void set_gpu_desc(const char* value);
  void set_gpu_desc(const char* value, size_t size);
  ::std::string* mutable_gpu_desc();
  ::std::string* release_gpu_desc();
  void set_allocated_gpu_desc(::std::string* gpu_desc);

  // optional string driver_desc = 3;
  bool has_driver_desc() const;
  void clear_driver_desc();
  static const int kDriverDescFieldNumber = 3;
  const ::std::string& driver_desc() const;
  void set_driver_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_driver_desc(::std::string&& value);
  #endif
  void set_driver_desc(const char* value);
  void set_driver_desc(const char* value, size_t size);
  ::std::string* mutable_driver_desc();
  ::std::string* release_driver_desc();
  void set_allocated_driver_desc(::std::string* driver_desc);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CShader_GetBucketManifest_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr gpu_desc_;
  ::google::protobuf::internal::ArenaStringPtr driver_desc_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_5fshader_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CShader_GetBucketManifest_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CShader_GetBucketManifest_Response) */ {
 public:
  CShader_GetBucketManifest_Response();
  virtual ~CShader_GetBucketManifest_Response();

  CShader_GetBucketManifest_Response(const CShader_GetBucketManifest_Response& from);

  inline CShader_GetBucketManifest_Response& operator=(const CShader_GetBucketManifest_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CShader_GetBucketManifest_Response(CShader_GetBucketManifest_Response&& from) noexcept
    : CShader_GetBucketManifest_Response() {
    *this = ::std::move(from);
  }

  inline CShader_GetBucketManifest_Response& operator=(CShader_GetBucketManifest_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CShader_GetBucketManifest_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CShader_GetBucketManifest_Response* internal_default_instance() {
    return reinterpret_cast<const CShader_GetBucketManifest_Response*>(
               &_CShader_GetBucketManifest_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CShader_GetBucketManifest_Response* other);
  friend void swap(CShader_GetBucketManifest_Response& a, CShader_GetBucketManifest_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CShader_GetBucketManifest_Response* New() const final {
    return CreateMaybeMessage<CShader_GetBucketManifest_Response>(nullptr);
  }

  CShader_GetBucketManifest_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CShader_GetBucketManifest_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CShader_GetBucketManifest_Response& from);
  void MergeFrom(const CShader_GetBucketManifest_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CShader_GetBucketManifest_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 manifestid = 1;
  bool has_manifestid() const;
  void clear_manifestid();
  static const int kManifestidFieldNumber = 1;
  ::google::protobuf::uint64 manifestid() const;
  void set_manifestid(::google::protobuf::uint64 value);

  // optional uint32 depotsize = 2;
  bool has_depotsize() const;
  void clear_depotsize();
  static const int kDepotsizeFieldNumber = 2;
  ::google::protobuf::uint32 depotsize() const;
  void set_depotsize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CShader_GetBucketManifest_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 manifestid_;
  ::google::protobuf::uint32 depotsize_;
  friend struct ::TableStruct_steammessages_5fshader_2esteamclient_2eproto;
};
// ===================================================================

class Shader_Stub;

class Shader : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Shader() {};
 public:
  virtual ~Shader();

  typedef Shader_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void RegisterShader(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CShader_RegisterShader_Request* request,
                       ::proto::steam::CShader_RegisterShader_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SendShader(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CShader_SendShader_Request* request,
                       ::proto::steam::CShader_SendShader_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetBucketManifest(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CShader_GetBucketManifest_Request* request,
                       ::proto::steam::CShader_GetBucketManifest_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Shader);
};

class Shader_Stub : public Shader {
 public:
  Shader_Stub(::google::protobuf::RpcChannel* channel);
  Shader_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Shader_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Shader ------------------------------------------

  void RegisterShader(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CShader_RegisterShader_Request* request,
                       ::proto::steam::CShader_RegisterShader_Response* response,
                       ::google::protobuf::Closure* done);
  void SendShader(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CShader_SendShader_Request* request,
                       ::proto::steam::CShader_SendShader_Response* response,
                       ::google::protobuf::Closure* done);
  void GetBucketManifest(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CShader_GetBucketManifest_Request* request,
                       ::proto::steam::CShader_GetBucketManifest_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Shader_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CShader_RegisterShader_Request_Shader

// optional bytes cache_key_sha = 1;
inline bool CShader_RegisterShader_Request_Shader::has_cache_key_sha() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CShader_RegisterShader_Request_Shader::clear_cache_key_sha() {
  cache_key_sha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CShader_RegisterShader_Request_Shader::cache_key_sha() const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_RegisterShader_Request.Shader.cache_key_sha)
  return cache_key_sha_.GetNoArena();
}
inline void CShader_RegisterShader_Request_Shader::set_cache_key_sha(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  cache_key_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CShader_RegisterShader_Request.Shader.cache_key_sha)
}
#if LANG_CXX11
inline void CShader_RegisterShader_Request_Shader::set_cache_key_sha(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  cache_key_sha_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CShader_RegisterShader_Request.Shader.cache_key_sha)
}
#endif
inline void CShader_RegisterShader_Request_Shader::set_cache_key_sha(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  cache_key_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CShader_RegisterShader_Request.Shader.cache_key_sha)
}
inline void CShader_RegisterShader_Request_Shader::set_cache_key_sha(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  cache_key_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CShader_RegisterShader_Request.Shader.cache_key_sha)
}
inline ::std::string* CShader_RegisterShader_Request_Shader::mutable_cache_key_sha() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CShader_RegisterShader_Request.Shader.cache_key_sha)
  return cache_key_sha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CShader_RegisterShader_Request_Shader::release_cache_key_sha() {
  // @@protoc_insertion_point(field_release:proto.steam.CShader_RegisterShader_Request.Shader.cache_key_sha)
  if (!has_cache_key_sha()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return cache_key_sha_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CShader_RegisterShader_Request_Shader::set_allocated_cache_key_sha(::std::string* cache_key_sha) {
  if (cache_key_sha != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  cache_key_sha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cache_key_sha);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CShader_RegisterShader_Request.Shader.cache_key_sha)
}

// optional bytes shader_code_sha = 2;
inline bool CShader_RegisterShader_Request_Shader::has_shader_code_sha() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CShader_RegisterShader_Request_Shader::clear_shader_code_sha() {
  shader_code_sha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CShader_RegisterShader_Request_Shader::shader_code_sha() const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_RegisterShader_Request.Shader.shader_code_sha)
  return shader_code_sha_.GetNoArena();
}
inline void CShader_RegisterShader_Request_Shader::set_shader_code_sha(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  shader_code_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CShader_RegisterShader_Request.Shader.shader_code_sha)
}
#if LANG_CXX11
inline void CShader_RegisterShader_Request_Shader::set_shader_code_sha(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  shader_code_sha_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CShader_RegisterShader_Request.Shader.shader_code_sha)
}
#endif
inline void CShader_RegisterShader_Request_Shader::set_shader_code_sha(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  shader_code_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CShader_RegisterShader_Request.Shader.shader_code_sha)
}
inline void CShader_RegisterShader_Request_Shader::set_shader_code_sha(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  shader_code_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CShader_RegisterShader_Request.Shader.shader_code_sha)
}
inline ::std::string* CShader_RegisterShader_Request_Shader::mutable_shader_code_sha() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CShader_RegisterShader_Request.Shader.shader_code_sha)
  return shader_code_sha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CShader_RegisterShader_Request_Shader::release_shader_code_sha() {
  // @@protoc_insertion_point(field_release:proto.steam.CShader_RegisterShader_Request.Shader.shader_code_sha)
  if (!has_shader_code_sha()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return shader_code_sha_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CShader_RegisterShader_Request_Shader::set_allocated_shader_code_sha(::std::string* shader_code_sha) {
  if (shader_code_sha != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  shader_code_sha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shader_code_sha);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CShader_RegisterShader_Request.Shader.shader_code_sha)
}

// -------------------------------------------------------------------

// CShader_RegisterShader_Request

// optional uint32 appid = 1;
inline bool CShader_RegisterShader_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CShader_RegisterShader_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CShader_RegisterShader_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_RegisterShader_Request.appid)
  return appid_;
}
inline void CShader_RegisterShader_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CShader_RegisterShader_Request.appid)
}

// optional string gpu_desc = 2;
inline bool CShader_RegisterShader_Request::has_gpu_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CShader_RegisterShader_Request::clear_gpu_desc() {
  gpu_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CShader_RegisterShader_Request::gpu_desc() const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_RegisterShader_Request.gpu_desc)
  return gpu_desc_.GetNoArena();
}
inline void CShader_RegisterShader_Request::set_gpu_desc(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  gpu_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CShader_RegisterShader_Request.gpu_desc)
}
#if LANG_CXX11
inline void CShader_RegisterShader_Request::set_gpu_desc(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  gpu_desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CShader_RegisterShader_Request.gpu_desc)
}
#endif
inline void CShader_RegisterShader_Request::set_gpu_desc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  gpu_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CShader_RegisterShader_Request.gpu_desc)
}
inline void CShader_RegisterShader_Request::set_gpu_desc(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  gpu_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CShader_RegisterShader_Request.gpu_desc)
}
inline ::std::string* CShader_RegisterShader_Request::mutable_gpu_desc() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CShader_RegisterShader_Request.gpu_desc)
  return gpu_desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CShader_RegisterShader_Request::release_gpu_desc() {
  // @@protoc_insertion_point(field_release:proto.steam.CShader_RegisterShader_Request.gpu_desc)
  if (!has_gpu_desc()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return gpu_desc_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CShader_RegisterShader_Request::set_allocated_gpu_desc(::std::string* gpu_desc) {
  if (gpu_desc != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  gpu_desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gpu_desc);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CShader_RegisterShader_Request.gpu_desc)
}

// optional string driver_desc = 3;
inline bool CShader_RegisterShader_Request::has_driver_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CShader_RegisterShader_Request::clear_driver_desc() {
  driver_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CShader_RegisterShader_Request::driver_desc() const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_RegisterShader_Request.driver_desc)
  return driver_desc_.GetNoArena();
}
inline void CShader_RegisterShader_Request::set_driver_desc(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  driver_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CShader_RegisterShader_Request.driver_desc)
}
#if LANG_CXX11
inline void CShader_RegisterShader_Request::set_driver_desc(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  driver_desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CShader_RegisterShader_Request.driver_desc)
}
#endif
inline void CShader_RegisterShader_Request::set_driver_desc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  driver_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CShader_RegisterShader_Request.driver_desc)
}
inline void CShader_RegisterShader_Request::set_driver_desc(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  driver_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CShader_RegisterShader_Request.driver_desc)
}
inline ::std::string* CShader_RegisterShader_Request::mutable_driver_desc() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CShader_RegisterShader_Request.driver_desc)
  return driver_desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CShader_RegisterShader_Request::release_driver_desc() {
  // @@protoc_insertion_point(field_release:proto.steam.CShader_RegisterShader_Request.driver_desc)
  if (!has_driver_desc()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return driver_desc_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CShader_RegisterShader_Request::set_allocated_driver_desc(::std::string* driver_desc) {
  if (driver_desc != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  driver_desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), driver_desc);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CShader_RegisterShader_Request.driver_desc)
}

// repeated .proto.steam.CShader_RegisterShader_Request.Shader shaders = 4;
inline int CShader_RegisterShader_Request::shaders_size() const {
  return shaders_.size();
}
inline void CShader_RegisterShader_Request::clear_shaders() {
  shaders_.Clear();
}
inline ::proto::steam::CShader_RegisterShader_Request_Shader* CShader_RegisterShader_Request::mutable_shaders(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CShader_RegisterShader_Request.shaders)
  return shaders_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CShader_RegisterShader_Request_Shader >*
CShader_RegisterShader_Request::mutable_shaders() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CShader_RegisterShader_Request.shaders)
  return &shaders_;
}
inline const ::proto::steam::CShader_RegisterShader_Request_Shader& CShader_RegisterShader_Request::shaders(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_RegisterShader_Request.shaders)
  return shaders_.Get(index);
}
inline ::proto::steam::CShader_RegisterShader_Request_Shader* CShader_RegisterShader_Request::add_shaders() {
  // @@protoc_insertion_point(field_add:proto.steam.CShader_RegisterShader_Request.shaders)
  return shaders_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CShader_RegisterShader_Request_Shader >&
CShader_RegisterShader_Request::shaders() const {
  // @@protoc_insertion_point(field_list:proto.steam.CShader_RegisterShader_Request.shaders)
  return shaders_;
}

// -------------------------------------------------------------------

// CShader_RegisterShader_Response

// repeated uint32 requested_codeids = 1;
inline int CShader_RegisterShader_Response::requested_codeids_size() const {
  return requested_codeids_.size();
}
inline void CShader_RegisterShader_Response::clear_requested_codeids() {
  requested_codeids_.Clear();
}
inline ::google::protobuf::uint32 CShader_RegisterShader_Response::requested_codeids(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_RegisterShader_Response.requested_codeids)
  return requested_codeids_.Get(index);
}
inline void CShader_RegisterShader_Response::set_requested_codeids(int index, ::google::protobuf::uint32 value) {
  requested_codeids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CShader_RegisterShader_Response.requested_codeids)
}
inline void CShader_RegisterShader_Response::add_requested_codeids(::google::protobuf::uint32 value) {
  requested_codeids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CShader_RegisterShader_Response.requested_codeids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CShader_RegisterShader_Response::requested_codeids() const {
  // @@protoc_insertion_point(field_list:proto.steam.CShader_RegisterShader_Response.requested_codeids)
  return requested_codeids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CShader_RegisterShader_Response::mutable_requested_codeids() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CShader_RegisterShader_Response.requested_codeids)
  return &requested_codeids_;
}

// -------------------------------------------------------------------

// CShader_SendShader_Request_ShaderCode

// optional bytes shader_code_sha = 1;
inline bool CShader_SendShader_Request_ShaderCode::has_shader_code_sha() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CShader_SendShader_Request_ShaderCode::clear_shader_code_sha() {
  shader_code_sha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CShader_SendShader_Request_ShaderCode::shader_code_sha() const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code_sha)
  return shader_code_sha_.GetNoArena();
}
inline void CShader_SendShader_Request_ShaderCode::set_shader_code_sha(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  shader_code_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code_sha)
}
#if LANG_CXX11
inline void CShader_SendShader_Request_ShaderCode::set_shader_code_sha(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  shader_code_sha_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code_sha)
}
#endif
inline void CShader_SendShader_Request_ShaderCode::set_shader_code_sha(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  shader_code_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code_sha)
}
inline void CShader_SendShader_Request_ShaderCode::set_shader_code_sha(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  shader_code_sha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code_sha)
}
inline ::std::string* CShader_SendShader_Request_ShaderCode::mutable_shader_code_sha() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code_sha)
  return shader_code_sha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CShader_SendShader_Request_ShaderCode::release_shader_code_sha() {
  // @@protoc_insertion_point(field_release:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code_sha)
  if (!has_shader_code_sha()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return shader_code_sha_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CShader_SendShader_Request_ShaderCode::set_allocated_shader_code_sha(::std::string* shader_code_sha) {
  if (shader_code_sha != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  shader_code_sha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shader_code_sha);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code_sha)
}

// optional bytes shader_code = 2;
inline bool CShader_SendShader_Request_ShaderCode::has_shader_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CShader_SendShader_Request_ShaderCode::clear_shader_code() {
  shader_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CShader_SendShader_Request_ShaderCode::shader_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code)
  return shader_code_.GetNoArena();
}
inline void CShader_SendShader_Request_ShaderCode::set_shader_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  shader_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code)
}
#if LANG_CXX11
inline void CShader_SendShader_Request_ShaderCode::set_shader_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  shader_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code)
}
#endif
inline void CShader_SendShader_Request_ShaderCode::set_shader_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  shader_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code)
}
inline void CShader_SendShader_Request_ShaderCode::set_shader_code(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  shader_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code)
}
inline ::std::string* CShader_SendShader_Request_ShaderCode::mutable_shader_code() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code)
  return shader_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CShader_SendShader_Request_ShaderCode::release_shader_code() {
  // @@protoc_insertion_point(field_release:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code)
  if (!has_shader_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return shader_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CShader_SendShader_Request_ShaderCode::set_allocated_shader_code(::std::string* shader_code) {
  if (shader_code != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  shader_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shader_code);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CShader_SendShader_Request.ShaderCode.shader_code)
}

// -------------------------------------------------------------------

// CShader_SendShader_Request

// optional uint32 appid = 1;
inline bool CShader_SendShader_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CShader_SendShader_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CShader_SendShader_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_SendShader_Request.appid)
  return appid_;
}
inline void CShader_SendShader_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CShader_SendShader_Request.appid)
}

// repeated .proto.steam.CShader_SendShader_Request.ShaderCode shaders = 2;
inline int CShader_SendShader_Request::shaders_size() const {
  return shaders_.size();
}
inline void CShader_SendShader_Request::clear_shaders() {
  shaders_.Clear();
}
inline ::proto::steam::CShader_SendShader_Request_ShaderCode* CShader_SendShader_Request::mutable_shaders(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CShader_SendShader_Request.shaders)
  return shaders_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CShader_SendShader_Request_ShaderCode >*
CShader_SendShader_Request::mutable_shaders() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CShader_SendShader_Request.shaders)
  return &shaders_;
}
inline const ::proto::steam::CShader_SendShader_Request_ShaderCode& CShader_SendShader_Request::shaders(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_SendShader_Request.shaders)
  return shaders_.Get(index);
}
inline ::proto::steam::CShader_SendShader_Request_ShaderCode* CShader_SendShader_Request::add_shaders() {
  // @@protoc_insertion_point(field_add:proto.steam.CShader_SendShader_Request.shaders)
  return shaders_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CShader_SendShader_Request_ShaderCode >&
CShader_SendShader_Request::shaders() const {
  // @@protoc_insertion_point(field_list:proto.steam.CShader_SendShader_Request.shaders)
  return shaders_;
}

// -------------------------------------------------------------------

// CShader_SendShader_Response

// -------------------------------------------------------------------

// CShader_GetBucketManifest_Request

// optional uint32 appid = 1;
inline bool CShader_GetBucketManifest_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CShader_GetBucketManifest_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CShader_GetBucketManifest_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_GetBucketManifest_Request.appid)
  return appid_;
}
inline void CShader_GetBucketManifest_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CShader_GetBucketManifest_Request.appid)
}

// optional string gpu_desc = 2;
inline bool CShader_GetBucketManifest_Request::has_gpu_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CShader_GetBucketManifest_Request::clear_gpu_desc() {
  gpu_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CShader_GetBucketManifest_Request::gpu_desc() const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_GetBucketManifest_Request.gpu_desc)
  return gpu_desc_.GetNoArena();
}
inline void CShader_GetBucketManifest_Request::set_gpu_desc(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  gpu_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CShader_GetBucketManifest_Request.gpu_desc)
}
#if LANG_CXX11
inline void CShader_GetBucketManifest_Request::set_gpu_desc(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  gpu_desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CShader_GetBucketManifest_Request.gpu_desc)
}
#endif
inline void CShader_GetBucketManifest_Request::set_gpu_desc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  gpu_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CShader_GetBucketManifest_Request.gpu_desc)
}
inline void CShader_GetBucketManifest_Request::set_gpu_desc(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  gpu_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CShader_GetBucketManifest_Request.gpu_desc)
}
inline ::std::string* CShader_GetBucketManifest_Request::mutable_gpu_desc() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CShader_GetBucketManifest_Request.gpu_desc)
  return gpu_desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CShader_GetBucketManifest_Request::release_gpu_desc() {
  // @@protoc_insertion_point(field_release:proto.steam.CShader_GetBucketManifest_Request.gpu_desc)
  if (!has_gpu_desc()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return gpu_desc_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CShader_GetBucketManifest_Request::set_allocated_gpu_desc(::std::string* gpu_desc) {
  if (gpu_desc != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  gpu_desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gpu_desc);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CShader_GetBucketManifest_Request.gpu_desc)
}

// optional string driver_desc = 3;
inline bool CShader_GetBucketManifest_Request::has_driver_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CShader_GetBucketManifest_Request::clear_driver_desc() {
  driver_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CShader_GetBucketManifest_Request::driver_desc() const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_GetBucketManifest_Request.driver_desc)
  return driver_desc_.GetNoArena();
}
inline void CShader_GetBucketManifest_Request::set_driver_desc(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  driver_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CShader_GetBucketManifest_Request.driver_desc)
}
#if LANG_CXX11
inline void CShader_GetBucketManifest_Request::set_driver_desc(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  driver_desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CShader_GetBucketManifest_Request.driver_desc)
}
#endif
inline void CShader_GetBucketManifest_Request::set_driver_desc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  driver_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CShader_GetBucketManifest_Request.driver_desc)
}
inline void CShader_GetBucketManifest_Request::set_driver_desc(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  driver_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CShader_GetBucketManifest_Request.driver_desc)
}
inline ::std::string* CShader_GetBucketManifest_Request::mutable_driver_desc() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CShader_GetBucketManifest_Request.driver_desc)
  return driver_desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CShader_GetBucketManifest_Request::release_driver_desc() {
  // @@protoc_insertion_point(field_release:proto.steam.CShader_GetBucketManifest_Request.driver_desc)
  if (!has_driver_desc()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return driver_desc_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CShader_GetBucketManifest_Request::set_allocated_driver_desc(::std::string* driver_desc) {
  if (driver_desc != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  driver_desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), driver_desc);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CShader_GetBucketManifest_Request.driver_desc)
}

// -------------------------------------------------------------------

// CShader_GetBucketManifest_Response

// optional uint64 manifestid = 1;
inline bool CShader_GetBucketManifest_Response::has_manifestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CShader_GetBucketManifest_Response::clear_manifestid() {
  manifestid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CShader_GetBucketManifest_Response::manifestid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_GetBucketManifest_Response.manifestid)
  return manifestid_;
}
inline void CShader_GetBucketManifest_Response::set_manifestid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  manifestid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CShader_GetBucketManifest_Response.manifestid)
}

// optional uint32 depotsize = 2;
inline bool CShader_GetBucketManifest_Response::has_depotsize() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CShader_GetBucketManifest_Response::clear_depotsize() {
  depotsize_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CShader_GetBucketManifest_Response::depotsize() const {
  // @@protoc_insertion_point(field_get:proto.steam.CShader_GetBucketManifest_Response.depotsize)
  return depotsize_;
}
inline void CShader_GetBucketManifest_Response::set_depotsize(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  depotsize_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CShader_GetBucketManifest_Response.depotsize)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_steammessages_5fshader_2esteamclient_2eproto
