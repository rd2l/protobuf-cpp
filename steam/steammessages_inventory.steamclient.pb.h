// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_inventory.steamclient.proto

#ifndef PROTOBUF_INCLUDED_steammessages_5finventory_2esteamclient_2eproto
#define PROTOBUF_INCLUDED_steammessages_5finventory_2esteamclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5finventory_2esteamclient_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5finventory_2esteamclient_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[22]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_steammessages_5finventory_2esteamclient_2eproto();
namespace proto {
namespace steam {
class CInventoryClient_NewItems_Notification;
class CInventoryClient_NewItems_NotificationDefaultTypeInternal;
extern CInventoryClient_NewItems_NotificationDefaultTypeInternal _CInventoryClient_NewItems_Notification_default_instance_;
class CInventory_AddItem_Request;
class CInventory_AddItem_RequestDefaultTypeInternal;
extern CInventory_AddItem_RequestDefaultTypeInternal _CInventory_AddItem_Request_default_instance_;
class CInventory_CombineItemStacks_Request;
class CInventory_CombineItemStacks_RequestDefaultTypeInternal;
extern CInventory_CombineItemStacks_RequestDefaultTypeInternal _CInventory_CombineItemStacks_Request_default_instance_;
class CInventory_ConsumeItem_Request;
class CInventory_ConsumeItem_RequestDefaultTypeInternal;
extern CInventory_ConsumeItem_RequestDefaultTypeInternal _CInventory_ConsumeItem_Request_default_instance_;
class CInventory_ConsumePlaytime_Request;
class CInventory_ConsumePlaytime_RequestDefaultTypeInternal;
extern CInventory_ConsumePlaytime_RequestDefaultTypeInternal _CInventory_ConsumePlaytime_Request_default_instance_;
class CInventory_DevSetNextDrop_Request;
class CInventory_DevSetNextDrop_RequestDefaultTypeInternal;
extern CInventory_DevSetNextDrop_RequestDefaultTypeInternal _CInventory_DevSetNextDrop_Request_default_instance_;
class CInventory_ExchangeItem_Request;
class CInventory_ExchangeItem_RequestDefaultTypeInternal;
extern CInventory_ExchangeItem_RequestDefaultTypeInternal _CInventory_ExchangeItem_Request_default_instance_;
class CInventory_GetEligiblePromoItemDefIDs_Request;
class CInventory_GetEligiblePromoItemDefIDs_RequestDefaultTypeInternal;
extern CInventory_GetEligiblePromoItemDefIDs_RequestDefaultTypeInternal _CInventory_GetEligiblePromoItemDefIDs_Request_default_instance_;
class CInventory_GetEligiblePromoItemDefIDs_Response;
class CInventory_GetEligiblePromoItemDefIDs_ResponseDefaultTypeInternal;
extern CInventory_GetEligiblePromoItemDefIDs_ResponseDefaultTypeInternal _CInventory_GetEligiblePromoItemDefIDs_Response_default_instance_;
class CInventory_GetInventory_Request;
class CInventory_GetInventory_RequestDefaultTypeInternal;
extern CInventory_GetInventory_RequestDefaultTypeInternal _CInventory_GetInventory_Request_default_instance_;
class CInventory_GetItemDefMeta_Request;
class CInventory_GetItemDefMeta_RequestDefaultTypeInternal;
extern CInventory_GetItemDefMeta_RequestDefaultTypeInternal _CInventory_GetItemDefMeta_Request_default_instance_;
class CInventory_GetItemDefMeta_Response;
class CInventory_GetItemDefMeta_ResponseDefaultTypeInternal;
extern CInventory_GetItemDefMeta_ResponseDefaultTypeInternal _CInventory_GetItemDefMeta_Response_default_instance_;
class CInventory_GetUserPurchaseInfo_Request;
class CInventory_GetUserPurchaseInfo_RequestDefaultTypeInternal;
extern CInventory_GetUserPurchaseInfo_RequestDefaultTypeInternal _CInventory_GetUserPurchaseInfo_Request_default_instance_;
class CInventory_GetUserPurchaseInfo_Response;
class CInventory_GetUserPurchaseInfo_ResponseDefaultTypeInternal;
extern CInventory_GetUserPurchaseInfo_ResponseDefaultTypeInternal _CInventory_GetUserPurchaseInfo_Response_default_instance_;
class CInventory_ModifyItems_Request;
class CInventory_ModifyItems_RequestDefaultTypeInternal;
extern CInventory_ModifyItems_RequestDefaultTypeInternal _CInventory_ModifyItems_Request_default_instance_;
class CInventory_ModifyItems_Request_ItemPropertyUpdate;
class CInventory_ModifyItems_Request_ItemPropertyUpdateDefaultTypeInternal;
extern CInventory_ModifyItems_Request_ItemPropertyUpdateDefaultTypeInternal _CInventory_ModifyItems_Request_ItemPropertyUpdate_default_instance_;
class CInventory_PurchaseFinalize_Request;
class CInventory_PurchaseFinalize_RequestDefaultTypeInternal;
extern CInventory_PurchaseFinalize_RequestDefaultTypeInternal _CInventory_PurchaseFinalize_Request_default_instance_;
class CInventory_PurchaseInit_Request;
class CInventory_PurchaseInit_RequestDefaultTypeInternal;
extern CInventory_PurchaseInit_RequestDefaultTypeInternal _CInventory_PurchaseInit_Request_default_instance_;
class CInventory_PurchaseInit_Request_LineItem;
class CInventory_PurchaseInit_Request_LineItemDefaultTypeInternal;
extern CInventory_PurchaseInit_Request_LineItemDefaultTypeInternal _CInventory_PurchaseInit_Request_LineItem_default_instance_;
class CInventory_PurchaseInit_Response;
class CInventory_PurchaseInit_ResponseDefaultTypeInternal;
extern CInventory_PurchaseInit_ResponseDefaultTypeInternal _CInventory_PurchaseInit_Response_default_instance_;
class CInventory_Response;
class CInventory_ResponseDefaultTypeInternal;
extern CInventory_ResponseDefaultTypeInternal _CInventory_Response_default_instance_;
class CInventory_SplitItemStack_Request;
class CInventory_SplitItemStack_RequestDefaultTypeInternal;
extern CInventory_SplitItemStack_RequestDefaultTypeInternal _CInventory_SplitItemStack_Request_default_instance_;
}  // namespace steam
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::steam::CInventoryClient_NewItems_Notification* Arena::CreateMaybeMessage<::proto::steam::CInventoryClient_NewItems_Notification>(Arena*);
template<> ::proto::steam::CInventory_AddItem_Request* Arena::CreateMaybeMessage<::proto::steam::CInventory_AddItem_Request>(Arena*);
template<> ::proto::steam::CInventory_CombineItemStacks_Request* Arena::CreateMaybeMessage<::proto::steam::CInventory_CombineItemStacks_Request>(Arena*);
template<> ::proto::steam::CInventory_ConsumeItem_Request* Arena::CreateMaybeMessage<::proto::steam::CInventory_ConsumeItem_Request>(Arena*);
template<> ::proto::steam::CInventory_ConsumePlaytime_Request* Arena::CreateMaybeMessage<::proto::steam::CInventory_ConsumePlaytime_Request>(Arena*);
template<> ::proto::steam::CInventory_DevSetNextDrop_Request* Arena::CreateMaybeMessage<::proto::steam::CInventory_DevSetNextDrop_Request>(Arena*);
template<> ::proto::steam::CInventory_ExchangeItem_Request* Arena::CreateMaybeMessage<::proto::steam::CInventory_ExchangeItem_Request>(Arena*);
template<> ::proto::steam::CInventory_GetEligiblePromoItemDefIDs_Request* Arena::CreateMaybeMessage<::proto::steam::CInventory_GetEligiblePromoItemDefIDs_Request>(Arena*);
template<> ::proto::steam::CInventory_GetEligiblePromoItemDefIDs_Response* Arena::CreateMaybeMessage<::proto::steam::CInventory_GetEligiblePromoItemDefIDs_Response>(Arena*);
template<> ::proto::steam::CInventory_GetInventory_Request* Arena::CreateMaybeMessage<::proto::steam::CInventory_GetInventory_Request>(Arena*);
template<> ::proto::steam::CInventory_GetItemDefMeta_Request* Arena::CreateMaybeMessage<::proto::steam::CInventory_GetItemDefMeta_Request>(Arena*);
template<> ::proto::steam::CInventory_GetItemDefMeta_Response* Arena::CreateMaybeMessage<::proto::steam::CInventory_GetItemDefMeta_Response>(Arena*);
template<> ::proto::steam::CInventory_GetUserPurchaseInfo_Request* Arena::CreateMaybeMessage<::proto::steam::CInventory_GetUserPurchaseInfo_Request>(Arena*);
template<> ::proto::steam::CInventory_GetUserPurchaseInfo_Response* Arena::CreateMaybeMessage<::proto::steam::CInventory_GetUserPurchaseInfo_Response>(Arena*);
template<> ::proto::steam::CInventory_ModifyItems_Request* Arena::CreateMaybeMessage<::proto::steam::CInventory_ModifyItems_Request>(Arena*);
template<> ::proto::steam::CInventory_ModifyItems_Request_ItemPropertyUpdate* Arena::CreateMaybeMessage<::proto::steam::CInventory_ModifyItems_Request_ItemPropertyUpdate>(Arena*);
template<> ::proto::steam::CInventory_PurchaseFinalize_Request* Arena::CreateMaybeMessage<::proto::steam::CInventory_PurchaseFinalize_Request>(Arena*);
template<> ::proto::steam::CInventory_PurchaseInit_Request* Arena::CreateMaybeMessage<::proto::steam::CInventory_PurchaseInit_Request>(Arena*);
template<> ::proto::steam::CInventory_PurchaseInit_Request_LineItem* Arena::CreateMaybeMessage<::proto::steam::CInventory_PurchaseInit_Request_LineItem>(Arena*);
template<> ::proto::steam::CInventory_PurchaseInit_Response* Arena::CreateMaybeMessage<::proto::steam::CInventory_PurchaseInit_Response>(Arena*);
template<> ::proto::steam::CInventory_Response* Arena::CreateMaybeMessage<::proto::steam::CInventory_Response>(Arena*);
template<> ::proto::steam::CInventory_SplitItemStack_Request* Arena::CreateMaybeMessage<::proto::steam::CInventory_SplitItemStack_Request>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace steam {

// ===================================================================

class CInventory_GetInventory_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_GetInventory_Request) */ {
 public:
  CInventory_GetInventory_Request();
  virtual ~CInventory_GetInventory_Request();

  CInventory_GetInventory_Request(const CInventory_GetInventory_Request& from);

  inline CInventory_GetInventory_Request& operator=(const CInventory_GetInventory_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_GetInventory_Request(CInventory_GetInventory_Request&& from) noexcept
    : CInventory_GetInventory_Request() {
    *this = ::std::move(from);
  }

  inline CInventory_GetInventory_Request& operator=(CInventory_GetInventory_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_GetInventory_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_GetInventory_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_GetInventory_Request*>(
               &_CInventory_GetInventory_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CInventory_GetInventory_Request* other);
  friend void swap(CInventory_GetInventory_Request& a, CInventory_GetInventory_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_GetInventory_Request* New() const final {
    return CreateMaybeMessage<CInventory_GetInventory_Request>(nullptr);
  }

  CInventory_GetInventory_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_GetInventory_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_GetInventory_Request& from);
  void MergeFrom(const CInventory_GetInventory_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_GetInventory_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 steamid = 2;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_GetInventory_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_Response) */ {
 public:
  CInventory_Response();
  virtual ~CInventory_Response();

  CInventory_Response(const CInventory_Response& from);

  inline CInventory_Response& operator=(const CInventory_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_Response(CInventory_Response&& from) noexcept
    : CInventory_Response() {
    *this = ::std::move(from);
  }

  inline CInventory_Response& operator=(CInventory_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_Response* internal_default_instance() {
    return reinterpret_cast<const CInventory_Response*>(
               &_CInventory_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CInventory_Response* other);
  friend void swap(CInventory_Response& a, CInventory_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_Response* New() const final {
    return CreateMaybeMessage<CInventory_Response>(nullptr);
  }

  CInventory_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_Response& from);
  void MergeFrom(const CInventory_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 removeditemids = 2;
  int removeditemids_size() const;
  void clear_removeditemids();
  static const int kRemoveditemidsFieldNumber = 2;
  ::google::protobuf::uint64 removeditemids(int index) const;
  void set_removeditemids(int index, ::google::protobuf::uint64 value);
  void add_removeditemids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      removeditemids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_removeditemids();

  // optional string etag = 1;
  bool has_etag() const;
  void clear_etag();
  static const int kEtagFieldNumber = 1;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // optional string item_json = 3;
  bool has_item_json() const;
  void clear_item_json();
  static const int kItemJsonFieldNumber = 3;
  const ::std::string& item_json() const;
  void set_item_json(const ::std::string& value);
  #if LANG_CXX11
  void set_item_json(::std::string&& value);
  #endif
  void set_item_json(const char* value);
  void set_item_json(const char* value, size_t size);
  ::std::string* mutable_item_json();
  ::std::string* release_item_json();
  void set_allocated_item_json(::std::string* item_json);

  // optional string itemdef_json = 4;
  bool has_itemdef_json() const;
  void clear_itemdef_json();
  static const int kItemdefJsonFieldNumber = 4;
  const ::std::string& itemdef_json() const;
  void set_itemdef_json(const ::std::string& value);
  #if LANG_CXX11
  void set_itemdef_json(::std::string&& value);
  #endif
  void set_itemdef_json(const char* value);
  void set_itemdef_json(const char* value, size_t size);
  ::std::string* mutable_itemdef_json();
  ::std::string* release_itemdef_json();
  void set_allocated_itemdef_json(::std::string* itemdef_json);

  // optional bytes ticket = 5;
  bool has_ticket() const;
  void clear_ticket();
  static const int kTicketFieldNumber = 5;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const void* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // optional bool replayed = 6 [(.proto.steam.description) = "If true, the requestid given was processed earlier."];
  bool has_replayed() const;
  void clear_replayed();
  static const int kReplayedFieldNumber = 6;
  bool replayed() const;
  void set_replayed(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > removeditemids_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::internal::ArenaStringPtr item_json_;
  ::google::protobuf::internal::ArenaStringPtr itemdef_json_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  bool replayed_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_ExchangeItem_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_ExchangeItem_Request) */ {
 public:
  CInventory_ExchangeItem_Request();
  virtual ~CInventory_ExchangeItem_Request();

  CInventory_ExchangeItem_Request(const CInventory_ExchangeItem_Request& from);

  inline CInventory_ExchangeItem_Request& operator=(const CInventory_ExchangeItem_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_ExchangeItem_Request(CInventory_ExchangeItem_Request&& from) noexcept
    : CInventory_ExchangeItem_Request() {
    *this = ::std::move(from);
  }

  inline CInventory_ExchangeItem_Request& operator=(CInventory_ExchangeItem_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_ExchangeItem_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_ExchangeItem_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_ExchangeItem_Request*>(
               &_CInventory_ExchangeItem_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CInventory_ExchangeItem_Request* other);
  friend void swap(CInventory_ExchangeItem_Request& a, CInventory_ExchangeItem_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_ExchangeItem_Request* New() const final {
    return CreateMaybeMessage<CInventory_ExchangeItem_Request>(nullptr);
  }

  CInventory_ExchangeItem_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_ExchangeItem_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_ExchangeItem_Request& from);
  void MergeFrom(const CInventory_ExchangeItem_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_ExchangeItem_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 materialsitemid = 3;
  int materialsitemid_size() const;
  void clear_materialsitemid();
  static const int kMaterialsitemidFieldNumber = 3;
  ::google::protobuf::uint64 materialsitemid(int index) const;
  void set_materialsitemid(int index, ::google::protobuf::uint64 value);
  void add_materialsitemid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      materialsitemid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_materialsitemid();

  // repeated uint32 materialsquantity = 4;
  int materialsquantity_size() const;
  void clear_materialsquantity();
  static const int kMaterialsquantityFieldNumber = 4;
  ::google::protobuf::uint32 materialsquantity(int index) const;
  void set_materialsquantity(int index, ::google::protobuf::uint32 value);
  void add_materialsquantity(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      materialsquantity() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_materialsquantity();

  // optional uint64 steamid = 2;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint64 outputitemdefid = 5;
  bool has_outputitemdefid() const;
  void clear_outputitemdefid();
  static const int kOutputitemdefidFieldNumber = 5;
  ::google::protobuf::uint64 outputitemdefid() const;
  void set_outputitemdefid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_ExchangeItem_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > materialsitemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > materialsquantity_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 outputitemdefid_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_GetEligiblePromoItemDefIDs_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Request) */ {
 public:
  CInventory_GetEligiblePromoItemDefIDs_Request();
  virtual ~CInventory_GetEligiblePromoItemDefIDs_Request();

  CInventory_GetEligiblePromoItemDefIDs_Request(const CInventory_GetEligiblePromoItemDefIDs_Request& from);

  inline CInventory_GetEligiblePromoItemDefIDs_Request& operator=(const CInventory_GetEligiblePromoItemDefIDs_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_GetEligiblePromoItemDefIDs_Request(CInventory_GetEligiblePromoItemDefIDs_Request&& from) noexcept
    : CInventory_GetEligiblePromoItemDefIDs_Request() {
    *this = ::std::move(from);
  }

  inline CInventory_GetEligiblePromoItemDefIDs_Request& operator=(CInventory_GetEligiblePromoItemDefIDs_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_GetEligiblePromoItemDefIDs_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_GetEligiblePromoItemDefIDs_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_GetEligiblePromoItemDefIDs_Request*>(
               &_CInventory_GetEligiblePromoItemDefIDs_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CInventory_GetEligiblePromoItemDefIDs_Request* other);
  friend void swap(CInventory_GetEligiblePromoItemDefIDs_Request& a, CInventory_GetEligiblePromoItemDefIDs_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_GetEligiblePromoItemDefIDs_Request* New() const final {
    return CreateMaybeMessage<CInventory_GetEligiblePromoItemDefIDs_Request>(nullptr);
  }

  CInventory_GetEligiblePromoItemDefIDs_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_GetEligiblePromoItemDefIDs_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_GetEligiblePromoItemDefIDs_Request& from);
  void MergeFrom(const CInventory_GetEligiblePromoItemDefIDs_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_GetEligiblePromoItemDefIDs_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 steamid = 2;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_GetEligiblePromoItemDefIDs_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Response) */ {
 public:
  CInventory_GetEligiblePromoItemDefIDs_Response();
  virtual ~CInventory_GetEligiblePromoItemDefIDs_Response();

  CInventory_GetEligiblePromoItemDefIDs_Response(const CInventory_GetEligiblePromoItemDefIDs_Response& from);

  inline CInventory_GetEligiblePromoItemDefIDs_Response& operator=(const CInventory_GetEligiblePromoItemDefIDs_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_GetEligiblePromoItemDefIDs_Response(CInventory_GetEligiblePromoItemDefIDs_Response&& from) noexcept
    : CInventory_GetEligiblePromoItemDefIDs_Response() {
    *this = ::std::move(from);
  }

  inline CInventory_GetEligiblePromoItemDefIDs_Response& operator=(CInventory_GetEligiblePromoItemDefIDs_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_GetEligiblePromoItemDefIDs_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_GetEligiblePromoItemDefIDs_Response* internal_default_instance() {
    return reinterpret_cast<const CInventory_GetEligiblePromoItemDefIDs_Response*>(
               &_CInventory_GetEligiblePromoItemDefIDs_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CInventory_GetEligiblePromoItemDefIDs_Response* other);
  friend void swap(CInventory_GetEligiblePromoItemDefIDs_Response& a, CInventory_GetEligiblePromoItemDefIDs_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_GetEligiblePromoItemDefIDs_Response* New() const final {
    return CreateMaybeMessage<CInventory_GetEligiblePromoItemDefIDs_Response>(nullptr);
  }

  CInventory_GetEligiblePromoItemDefIDs_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_GetEligiblePromoItemDefIDs_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_GetEligiblePromoItemDefIDs_Response& from);
  void MergeFrom(const CInventory_GetEligiblePromoItemDefIDs_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_GetEligiblePromoItemDefIDs_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 itemdefids = 1;
  int itemdefids_size() const;
  void clear_itemdefids();
  static const int kItemdefidsFieldNumber = 1;
  ::google::protobuf::uint64 itemdefids(int index) const;
  void set_itemdefids(int index, ::google::protobuf::uint64 value);
  void add_itemdefids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      itemdefids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_itemdefids();

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > itemdefids_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_AddItem_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_AddItem_Request) */ {
 public:
  CInventory_AddItem_Request();
  virtual ~CInventory_AddItem_Request();

  CInventory_AddItem_Request(const CInventory_AddItem_Request& from);

  inline CInventory_AddItem_Request& operator=(const CInventory_AddItem_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_AddItem_Request(CInventory_AddItem_Request&& from) noexcept
    : CInventory_AddItem_Request() {
    *this = ::std::move(from);
  }

  inline CInventory_AddItem_Request& operator=(CInventory_AddItem_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_AddItem_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_AddItem_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_AddItem_Request*>(
               &_CInventory_AddItem_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CInventory_AddItem_Request* other);
  friend void swap(CInventory_AddItem_Request& a, CInventory_AddItem_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_AddItem_Request* New() const final {
    return CreateMaybeMessage<CInventory_AddItem_Request>(nullptr);
  }

  CInventory_AddItem_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_AddItem_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_AddItem_Request& from);
  void MergeFrom(const CInventory_AddItem_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_AddItem_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 itemdefid = 2;
  int itemdefid_size() const;
  void clear_itemdefid();
  static const int kItemdefidFieldNumber = 2;
  ::google::protobuf::uint64 itemdefid(int index) const;
  void set_itemdefid(int index, ::google::protobuf::uint64 value);
  void add_itemdefid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      itemdefid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_itemdefid();

  // repeated string itempropsjson = 3;
  int itempropsjson_size() const;
  void clear_itempropsjson();
  static const int kItempropsjsonFieldNumber = 3;
  const ::std::string& itempropsjson(int index) const;
  ::std::string* mutable_itempropsjson(int index);
  void set_itempropsjson(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_itempropsjson(int index, ::std::string&& value);
  #endif
  void set_itempropsjson(int index, const char* value);
  void set_itempropsjson(int index, const char* value, size_t size);
  ::std::string* add_itempropsjson();
  void add_itempropsjson(const ::std::string& value);
  #if LANG_CXX11
  void add_itempropsjson(::std::string&& value);
  #endif
  void add_itempropsjson(const char* value);
  void add_itempropsjson(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& itempropsjson() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_itempropsjson();

  // optional uint64 steamid = 4;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 4;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional bool notify = 5 [(.proto.steam.description) = "Should notify the user that the item was added to their Steam Inventory."];
  bool has_notify() const;
  void clear_notify();
  static const int kNotifyFieldNumber = 5;
  bool notify() const;
  void set_notify(bool value);

  // optional bool trade_restriction = 7 [(.proto.steam.description) = "If true, apply the default trade and market restriction times to this item."];
  bool has_trade_restriction() const;
  void clear_trade_restriction();
  static const int kTradeRestrictionFieldNumber = 7;
  bool trade_restriction() const;
  void set_trade_restriction(bool value);

  // optional bool is_purchase = 8 [default = false, (.proto.steam.description) = "If set, treat requestid as a txnid and create this item as a result of user microtransaction purchase."];
  bool has_is_purchase() const;
  void clear_is_purchase();
  static const int kIsPurchaseFieldNumber = 8;
  bool is_purchase() const;
  void set_is_purchase(bool value);

  // optional uint64 requestid = 6;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestidFieldNumber = 6;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_AddItem_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > itemdefid_;
  ::google::protobuf::RepeatedPtrField<::std::string> itempropsjson_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 appid_;
  bool notify_;
  bool trade_restriction_;
  bool is_purchase_;
  ::google::protobuf::uint64 requestid_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_ModifyItems_Request_ItemPropertyUpdate final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate) */ {
 public:
  CInventory_ModifyItems_Request_ItemPropertyUpdate();
  virtual ~CInventory_ModifyItems_Request_ItemPropertyUpdate();

  CInventory_ModifyItems_Request_ItemPropertyUpdate(const CInventory_ModifyItems_Request_ItemPropertyUpdate& from);

  inline CInventory_ModifyItems_Request_ItemPropertyUpdate& operator=(const CInventory_ModifyItems_Request_ItemPropertyUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_ModifyItems_Request_ItemPropertyUpdate(CInventory_ModifyItems_Request_ItemPropertyUpdate&& from) noexcept
    : CInventory_ModifyItems_Request_ItemPropertyUpdate() {
    *this = ::std::move(from);
  }

  inline CInventory_ModifyItems_Request_ItemPropertyUpdate& operator=(CInventory_ModifyItems_Request_ItemPropertyUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_ModifyItems_Request_ItemPropertyUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_ModifyItems_Request_ItemPropertyUpdate* internal_default_instance() {
    return reinterpret_cast<const CInventory_ModifyItems_Request_ItemPropertyUpdate*>(
               &_CInventory_ModifyItems_Request_ItemPropertyUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CInventory_ModifyItems_Request_ItemPropertyUpdate* other);
  friend void swap(CInventory_ModifyItems_Request_ItemPropertyUpdate& a, CInventory_ModifyItems_Request_ItemPropertyUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_ModifyItems_Request_ItemPropertyUpdate* New() const final {
    return CreateMaybeMessage<CInventory_ModifyItems_Request_ItemPropertyUpdate>(nullptr);
  }

  CInventory_ModifyItems_Request_ItemPropertyUpdate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_ModifyItems_Request_ItemPropertyUpdate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_ModifyItems_Request_ItemPropertyUpdate& from);
  void MergeFrom(const CInventory_ModifyItems_Request_ItemPropertyUpdate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_ModifyItems_Request_ItemPropertyUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string property_name = 3;
  bool has_property_name() const;
  void clear_property_name();
  static const int kPropertyNameFieldNumber = 3;
  const ::std::string& property_name() const;
  void set_property_name(const ::std::string& value);
  #if LANG_CXX11
  void set_property_name(::std::string&& value);
  #endif
  void set_property_name(const char* value);
  void set_property_name(const char* value, size_t size);
  ::std::string* mutable_property_name();
  ::std::string* release_property_name();
  void set_allocated_property_name(::std::string* property_name);

  // optional string property_value_string = 6;
  bool has_property_value_string() const;
  void clear_property_value_string();
  static const int kPropertyValueStringFieldNumber = 6;
  const ::std::string& property_value_string() const;
  void set_property_value_string(const ::std::string& value);
  #if LANG_CXX11
  void set_property_value_string(::std::string&& value);
  #endif
  void set_property_value_string(const char* value);
  void set_property_value_string(const char* value, size_t size);
  ::std::string* mutable_property_value_string();
  ::std::string* release_property_value_string();
  void set_allocated_property_value_string(::std::string* property_value_string);

  // optional uint64 itemid = 1;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 1;
  ::google::protobuf::uint64 itemid() const;
  void set_itemid(::google::protobuf::uint64 value);

  // optional bool remove_property = 2;
  bool has_remove_property() const;
  void clear_remove_property();
  static const int kRemovePropertyFieldNumber = 2;
  bool remove_property() const;
  void set_remove_property(bool value);

  // optional bool property_value_bool = 4;
  bool has_property_value_bool() const;
  void clear_property_value_bool();
  static const int kPropertyValueBoolFieldNumber = 4;
  bool property_value_bool() const;
  void set_property_value_bool(bool value);

  // optional float property_value_float = 7;
  bool has_property_value_float() const;
  void clear_property_value_float();
  static const int kPropertyValueFloatFieldNumber = 7;
  float property_value_float() const;
  void set_property_value_float(float value);

  // optional int64 property_value_int = 5;
  bool has_property_value_int() const;
  void clear_property_value_int();
  static const int kPropertyValueIntFieldNumber = 5;
  ::google::protobuf::int64 property_value_int() const;
  void set_property_value_int(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr property_name_;
  ::google::protobuf::internal::ArenaStringPtr property_value_string_;
  ::google::protobuf::uint64 itemid_;
  bool remove_property_;
  bool property_value_bool_;
  float property_value_float_;
  ::google::protobuf::int64 property_value_int_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_ModifyItems_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_ModifyItems_Request) */ {
 public:
  CInventory_ModifyItems_Request();
  virtual ~CInventory_ModifyItems_Request();

  CInventory_ModifyItems_Request(const CInventory_ModifyItems_Request& from);

  inline CInventory_ModifyItems_Request& operator=(const CInventory_ModifyItems_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_ModifyItems_Request(CInventory_ModifyItems_Request&& from) noexcept
    : CInventory_ModifyItems_Request() {
    *this = ::std::move(from);
  }

  inline CInventory_ModifyItems_Request& operator=(CInventory_ModifyItems_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_ModifyItems_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_ModifyItems_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_ModifyItems_Request*>(
               &_CInventory_ModifyItems_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CInventory_ModifyItems_Request* other);
  friend void swap(CInventory_ModifyItems_Request& a, CInventory_ModifyItems_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_ModifyItems_Request* New() const final {
    return CreateMaybeMessage<CInventory_ModifyItems_Request>(nullptr);
  }

  CInventory_ModifyItems_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_ModifyItems_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_ModifyItems_Request& from);
  void MergeFrom(const CInventory_ModifyItems_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_ModifyItems_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CInventory_ModifyItems_Request_ItemPropertyUpdate ItemPropertyUpdate;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate updates = 3;
  int updates_size() const;
  void clear_updates();
  static const int kUpdatesFieldNumber = 3;
  ::proto::steam::CInventory_ModifyItems_Request_ItemPropertyUpdate* mutable_updates(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CInventory_ModifyItems_Request_ItemPropertyUpdate >*
      mutable_updates();
  const ::proto::steam::CInventory_ModifyItems_Request_ItemPropertyUpdate& updates(int index) const;
  ::proto::steam::CInventory_ModifyItems_Request_ItemPropertyUpdate* add_updates();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CInventory_ModifyItems_Request_ItemPropertyUpdate >&
      updates() const;

  // optional uint64 steamid = 2;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_ModifyItems_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CInventory_ModifyItems_Request_ItemPropertyUpdate > updates_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 timestamp_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_ConsumePlaytime_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_ConsumePlaytime_Request) */ {
 public:
  CInventory_ConsumePlaytime_Request();
  virtual ~CInventory_ConsumePlaytime_Request();

  CInventory_ConsumePlaytime_Request(const CInventory_ConsumePlaytime_Request& from);

  inline CInventory_ConsumePlaytime_Request& operator=(const CInventory_ConsumePlaytime_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_ConsumePlaytime_Request(CInventory_ConsumePlaytime_Request&& from) noexcept
    : CInventory_ConsumePlaytime_Request() {
    *this = ::std::move(from);
  }

  inline CInventory_ConsumePlaytime_Request& operator=(CInventory_ConsumePlaytime_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_ConsumePlaytime_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_ConsumePlaytime_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_ConsumePlaytime_Request*>(
               &_CInventory_ConsumePlaytime_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CInventory_ConsumePlaytime_Request* other);
  friend void swap(CInventory_ConsumePlaytime_Request& a, CInventory_ConsumePlaytime_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_ConsumePlaytime_Request* New() const final {
    return CreateMaybeMessage<CInventory_ConsumePlaytime_Request>(nullptr);
  }

  CInventory_ConsumePlaytime_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_ConsumePlaytime_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_ConsumePlaytime_Request& from);
  void MergeFrom(const CInventory_ConsumePlaytime_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_ConsumePlaytime_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 itemdefid = 2;
  bool has_itemdefid() const;
  void clear_itemdefid();
  static const int kItemdefidFieldNumber = 2;
  ::google::protobuf::uint64 itemdefid() const;
  void set_itemdefid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_ConsumePlaytime_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 itemdefid_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_ConsumeItem_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_ConsumeItem_Request) */ {
 public:
  CInventory_ConsumeItem_Request();
  virtual ~CInventory_ConsumeItem_Request();

  CInventory_ConsumeItem_Request(const CInventory_ConsumeItem_Request& from);

  inline CInventory_ConsumeItem_Request& operator=(const CInventory_ConsumeItem_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_ConsumeItem_Request(CInventory_ConsumeItem_Request&& from) noexcept
    : CInventory_ConsumeItem_Request() {
    *this = ::std::move(from);
  }

  inline CInventory_ConsumeItem_Request& operator=(CInventory_ConsumeItem_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_ConsumeItem_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_ConsumeItem_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_ConsumeItem_Request*>(
               &_CInventory_ConsumeItem_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CInventory_ConsumeItem_Request* other);
  friend void swap(CInventory_ConsumeItem_Request& a, CInventory_ConsumeItem_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_ConsumeItem_Request* New() const final {
    return CreateMaybeMessage<CInventory_ConsumeItem_Request>(nullptr);
  }

  CInventory_ConsumeItem_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_ConsumeItem_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_ConsumeItem_Request& from);
  void MergeFrom(const CInventory_ConsumeItem_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_ConsumeItem_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  const ::std::string& timestamp() const;
  void set_timestamp(const ::std::string& value);
  #if LANG_CXX11
  void set_timestamp(::std::string&& value);
  #endif
  void set_timestamp(const char* value);
  void set_timestamp(const char* value, size_t size);
  ::std::string* mutable_timestamp();
  ::std::string* release_timestamp();
  void set_allocated_timestamp(::std::string* timestamp);

  // optional uint64 itemid = 2;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 2;
  ::google::protobuf::uint64 itemid() const;
  void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional uint32 quantity = 3;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 3;
  ::google::protobuf::uint32 quantity() const;
  void set_quantity(::google::protobuf::uint32 value);

  // optional uint64 steamid = 5;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 5;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint64 requestid = 6;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestidFieldNumber = 6;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_ConsumeItem_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr timestamp_;
  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 quantity_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 requestid_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_DevSetNextDrop_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_DevSetNextDrop_Request) */ {
 public:
  CInventory_DevSetNextDrop_Request();
  virtual ~CInventory_DevSetNextDrop_Request();

  CInventory_DevSetNextDrop_Request(const CInventory_DevSetNextDrop_Request& from);

  inline CInventory_DevSetNextDrop_Request& operator=(const CInventory_DevSetNextDrop_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_DevSetNextDrop_Request(CInventory_DevSetNextDrop_Request&& from) noexcept
    : CInventory_DevSetNextDrop_Request() {
    *this = ::std::move(from);
  }

  inline CInventory_DevSetNextDrop_Request& operator=(CInventory_DevSetNextDrop_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_DevSetNextDrop_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_DevSetNextDrop_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_DevSetNextDrop_Request*>(
               &_CInventory_DevSetNextDrop_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CInventory_DevSetNextDrop_Request* other);
  friend void swap(CInventory_DevSetNextDrop_Request& a, CInventory_DevSetNextDrop_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_DevSetNextDrop_Request* New() const final {
    return CreateMaybeMessage<CInventory_DevSetNextDrop_Request>(nullptr);
  }

  CInventory_DevSetNextDrop_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_DevSetNextDrop_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_DevSetNextDrop_Request& from);
  void MergeFrom(const CInventory_DevSetNextDrop_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_DevSetNextDrop_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string droptime = 3;
  bool has_droptime() const;
  void clear_droptime();
  static const int kDroptimeFieldNumber = 3;
  const ::std::string& droptime() const;
  void set_droptime(const ::std::string& value);
  #if LANG_CXX11
  void set_droptime(::std::string&& value);
  #endif
  void set_droptime(const char* value);
  void set_droptime(const char* value, size_t size);
  ::std::string* mutable_droptime();
  ::std::string* release_droptime();
  void set_allocated_droptime(::std::string* droptime);

  // optional uint64 itemdefid = 2;
  bool has_itemdefid() const;
  void clear_itemdefid();
  static const int kItemdefidFieldNumber = 2;
  ::google::protobuf::uint64 itemdefid() const;
  void set_itemdefid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_DevSetNextDrop_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr droptime_;
  ::google::protobuf::uint64 itemdefid_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_SplitItemStack_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_SplitItemStack_Request) */ {
 public:
  CInventory_SplitItemStack_Request();
  virtual ~CInventory_SplitItemStack_Request();

  CInventory_SplitItemStack_Request(const CInventory_SplitItemStack_Request& from);

  inline CInventory_SplitItemStack_Request& operator=(const CInventory_SplitItemStack_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_SplitItemStack_Request(CInventory_SplitItemStack_Request&& from) noexcept
    : CInventory_SplitItemStack_Request() {
    *this = ::std::move(from);
  }

  inline CInventory_SplitItemStack_Request& operator=(CInventory_SplitItemStack_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_SplitItemStack_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_SplitItemStack_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_SplitItemStack_Request*>(
               &_CInventory_SplitItemStack_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(CInventory_SplitItemStack_Request* other);
  friend void swap(CInventory_SplitItemStack_Request& a, CInventory_SplitItemStack_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_SplitItemStack_Request* New() const final {
    return CreateMaybeMessage<CInventory_SplitItemStack_Request>(nullptr);
  }

  CInventory_SplitItemStack_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_SplitItemStack_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_SplitItemStack_Request& from);
  void MergeFrom(const CInventory_SplitItemStack_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_SplitItemStack_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 itemid = 2;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 2;
  ::google::protobuf::uint64 itemid() const;
  void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional uint32 quantity = 3;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 3;
  ::google::protobuf::uint32 quantity() const;
  void set_quantity(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_SplitItemStack_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 quantity_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_CombineItemStacks_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_CombineItemStacks_Request) */ {
 public:
  CInventory_CombineItemStacks_Request();
  virtual ~CInventory_CombineItemStacks_Request();

  CInventory_CombineItemStacks_Request(const CInventory_CombineItemStacks_Request& from);

  inline CInventory_CombineItemStacks_Request& operator=(const CInventory_CombineItemStacks_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_CombineItemStacks_Request(CInventory_CombineItemStacks_Request&& from) noexcept
    : CInventory_CombineItemStacks_Request() {
    *this = ::std::move(from);
  }

  inline CInventory_CombineItemStacks_Request& operator=(CInventory_CombineItemStacks_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_CombineItemStacks_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_CombineItemStacks_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_CombineItemStacks_Request*>(
               &_CInventory_CombineItemStacks_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CInventory_CombineItemStacks_Request* other);
  friend void swap(CInventory_CombineItemStacks_Request& a, CInventory_CombineItemStacks_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_CombineItemStacks_Request* New() const final {
    return CreateMaybeMessage<CInventory_CombineItemStacks_Request>(nullptr);
  }

  CInventory_CombineItemStacks_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_CombineItemStacks_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_CombineItemStacks_Request& from);
  void MergeFrom(const CInventory_CombineItemStacks_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_CombineItemStacks_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 fromitemid = 2;
  bool has_fromitemid() const;
  void clear_fromitemid();
  static const int kFromitemidFieldNumber = 2;
  ::google::protobuf::uint64 fromitemid() const;
  void set_fromitemid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional uint32 quantity = 4;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 4;
  ::google::protobuf::uint32 quantity() const;
  void set_quantity(::google::protobuf::uint32 value);

  // optional uint64 destitemid = 3;
  bool has_destitemid() const;
  void clear_destitemid();
  static const int kDestitemidFieldNumber = 3;
  ::google::protobuf::uint64 destitemid() const;
  void set_destitemid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_CombineItemStacks_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 fromitemid_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 quantity_;
  ::google::protobuf::uint64 destitemid_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_GetItemDefMeta_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_GetItemDefMeta_Request) */ {
 public:
  CInventory_GetItemDefMeta_Request();
  virtual ~CInventory_GetItemDefMeta_Request();

  CInventory_GetItemDefMeta_Request(const CInventory_GetItemDefMeta_Request& from);

  inline CInventory_GetItemDefMeta_Request& operator=(const CInventory_GetItemDefMeta_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_GetItemDefMeta_Request(CInventory_GetItemDefMeta_Request&& from) noexcept
    : CInventory_GetItemDefMeta_Request() {
    *this = ::std::move(from);
  }

  inline CInventory_GetItemDefMeta_Request& operator=(CInventory_GetItemDefMeta_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_GetItemDefMeta_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_GetItemDefMeta_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_GetItemDefMeta_Request*>(
               &_CInventory_GetItemDefMeta_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(CInventory_GetItemDefMeta_Request* other);
  friend void swap(CInventory_GetItemDefMeta_Request& a, CInventory_GetItemDefMeta_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_GetItemDefMeta_Request* New() const final {
    return CreateMaybeMessage<CInventory_GetItemDefMeta_Request>(nullptr);
  }

  CInventory_GetItemDefMeta_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_GetItemDefMeta_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_GetItemDefMeta_Request& from);
  void MergeFrom(const CInventory_GetItemDefMeta_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_GetItemDefMeta_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_GetItemDefMeta_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_GetItemDefMeta_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_GetItemDefMeta_Response) */ {
 public:
  CInventory_GetItemDefMeta_Response();
  virtual ~CInventory_GetItemDefMeta_Response();

  CInventory_GetItemDefMeta_Response(const CInventory_GetItemDefMeta_Response& from);

  inline CInventory_GetItemDefMeta_Response& operator=(const CInventory_GetItemDefMeta_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_GetItemDefMeta_Response(CInventory_GetItemDefMeta_Response&& from) noexcept
    : CInventory_GetItemDefMeta_Response() {
    *this = ::std::move(from);
  }

  inline CInventory_GetItemDefMeta_Response& operator=(CInventory_GetItemDefMeta_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_GetItemDefMeta_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_GetItemDefMeta_Response* internal_default_instance() {
    return reinterpret_cast<const CInventory_GetItemDefMeta_Response*>(
               &_CInventory_GetItemDefMeta_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(CInventory_GetItemDefMeta_Response* other);
  friend void swap(CInventory_GetItemDefMeta_Response& a, CInventory_GetItemDefMeta_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_GetItemDefMeta_Response* New() const final {
    return CreateMaybeMessage<CInventory_GetItemDefMeta_Response>(nullptr);
  }

  CInventory_GetItemDefMeta_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_GetItemDefMeta_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_GetItemDefMeta_Response& from);
  void MergeFrom(const CInventory_GetItemDefMeta_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_GetItemDefMeta_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string digest = 2;
  bool has_digest() const;
  void clear_digest();
  static const int kDigestFieldNumber = 2;
  const ::std::string& digest() const;
  void set_digest(const ::std::string& value);
  #if LANG_CXX11
  void set_digest(::std::string&& value);
  #endif
  void set_digest(const char* value);
  void set_digest(const char* value, size_t size);
  ::std::string* mutable_digest();
  ::std::string* release_digest();
  void set_allocated_digest(::std::string* digest);

  // optional uint32 modified = 1;
  bool has_modified() const;
  void clear_modified();
  static const int kModifiedFieldNumber = 1;
  ::google::protobuf::uint32 modified() const;
  void set_modified(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_GetItemDefMeta_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr digest_;
  ::google::protobuf::uint32 modified_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_GetUserPurchaseInfo_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_GetUserPurchaseInfo_Request) */ {
 public:
  CInventory_GetUserPurchaseInfo_Request();
  virtual ~CInventory_GetUserPurchaseInfo_Request();

  CInventory_GetUserPurchaseInfo_Request(const CInventory_GetUserPurchaseInfo_Request& from);

  inline CInventory_GetUserPurchaseInfo_Request& operator=(const CInventory_GetUserPurchaseInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_GetUserPurchaseInfo_Request(CInventory_GetUserPurchaseInfo_Request&& from) noexcept
    : CInventory_GetUserPurchaseInfo_Request() {
    *this = ::std::move(from);
  }

  inline CInventory_GetUserPurchaseInfo_Request& operator=(CInventory_GetUserPurchaseInfo_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_GetUserPurchaseInfo_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_GetUserPurchaseInfo_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_GetUserPurchaseInfo_Request*>(
               &_CInventory_GetUserPurchaseInfo_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(CInventory_GetUserPurchaseInfo_Request* other);
  friend void swap(CInventory_GetUserPurchaseInfo_Request& a, CInventory_GetUserPurchaseInfo_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_GetUserPurchaseInfo_Request* New() const final {
    return CreateMaybeMessage<CInventory_GetUserPurchaseInfo_Request>(nullptr);
  }

  CInventory_GetUserPurchaseInfo_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_GetUserPurchaseInfo_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_GetUserPurchaseInfo_Request& from);
  void MergeFrom(const CInventory_GetUserPurchaseInfo_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_GetUserPurchaseInfo_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_GetUserPurchaseInfo_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_GetUserPurchaseInfo_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_GetUserPurchaseInfo_Response) */ {
 public:
  CInventory_GetUserPurchaseInfo_Response();
  virtual ~CInventory_GetUserPurchaseInfo_Response();

  CInventory_GetUserPurchaseInfo_Response(const CInventory_GetUserPurchaseInfo_Response& from);

  inline CInventory_GetUserPurchaseInfo_Response& operator=(const CInventory_GetUserPurchaseInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_GetUserPurchaseInfo_Response(CInventory_GetUserPurchaseInfo_Response&& from) noexcept
    : CInventory_GetUserPurchaseInfo_Response() {
    *this = ::std::move(from);
  }

  inline CInventory_GetUserPurchaseInfo_Response& operator=(CInventory_GetUserPurchaseInfo_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_GetUserPurchaseInfo_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_GetUserPurchaseInfo_Response* internal_default_instance() {
    return reinterpret_cast<const CInventory_GetUserPurchaseInfo_Response*>(
               &_CInventory_GetUserPurchaseInfo_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(CInventory_GetUserPurchaseInfo_Response* other);
  friend void swap(CInventory_GetUserPurchaseInfo_Response& a, CInventory_GetUserPurchaseInfo_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_GetUserPurchaseInfo_Response* New() const final {
    return CreateMaybeMessage<CInventory_GetUserPurchaseInfo_Response>(nullptr);
  }

  CInventory_GetUserPurchaseInfo_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_GetUserPurchaseInfo_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_GetUserPurchaseInfo_Response& from);
  void MergeFrom(const CInventory_GetUserPurchaseInfo_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_GetUserPurchaseInfo_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ecurrency = 1;
  bool has_ecurrency() const;
  void clear_ecurrency();
  static const int kEcurrencyFieldNumber = 1;
  ::google::protobuf::int32 ecurrency() const;
  void set_ecurrency(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_GetUserPurchaseInfo_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ecurrency_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_PurchaseInit_Request_LineItem final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_PurchaseInit_Request.LineItem) */ {
 public:
  CInventory_PurchaseInit_Request_LineItem();
  virtual ~CInventory_PurchaseInit_Request_LineItem();

  CInventory_PurchaseInit_Request_LineItem(const CInventory_PurchaseInit_Request_LineItem& from);

  inline CInventory_PurchaseInit_Request_LineItem& operator=(const CInventory_PurchaseInit_Request_LineItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_PurchaseInit_Request_LineItem(CInventory_PurchaseInit_Request_LineItem&& from) noexcept
    : CInventory_PurchaseInit_Request_LineItem() {
    *this = ::std::move(from);
  }

  inline CInventory_PurchaseInit_Request_LineItem& operator=(CInventory_PurchaseInit_Request_LineItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_PurchaseInit_Request_LineItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_PurchaseInit_Request_LineItem* internal_default_instance() {
    return reinterpret_cast<const CInventory_PurchaseInit_Request_LineItem*>(
               &_CInventory_PurchaseInit_Request_LineItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(CInventory_PurchaseInit_Request_LineItem* other);
  friend void swap(CInventory_PurchaseInit_Request_LineItem& a, CInventory_PurchaseInit_Request_LineItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_PurchaseInit_Request_LineItem* New() const final {
    return CreateMaybeMessage<CInventory_PurchaseInit_Request_LineItem>(nullptr);
  }

  CInventory_PurchaseInit_Request_LineItem* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_PurchaseInit_Request_LineItem>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_PurchaseInit_Request_LineItem& from);
  void MergeFrom(const CInventory_PurchaseInit_Request_LineItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_PurchaseInit_Request_LineItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 itemdefid = 1;
  bool has_itemdefid() const;
  void clear_itemdefid();
  static const int kItemdefidFieldNumber = 1;
  ::google::protobuf::uint64 itemdefid() const;
  void set_itemdefid(::google::protobuf::uint64 value);

  // optional uint32 quantity = 2;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 2;
  ::google::protobuf::uint32 quantity() const;
  void set_quantity(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_PurchaseInit_Request.LineItem)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 itemdefid_;
  ::google::protobuf::uint32 quantity_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_PurchaseInit_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_PurchaseInit_Request) */ {
 public:
  CInventory_PurchaseInit_Request();
  virtual ~CInventory_PurchaseInit_Request();

  CInventory_PurchaseInit_Request(const CInventory_PurchaseInit_Request& from);

  inline CInventory_PurchaseInit_Request& operator=(const CInventory_PurchaseInit_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_PurchaseInit_Request(CInventory_PurchaseInit_Request&& from) noexcept
    : CInventory_PurchaseInit_Request() {
    *this = ::std::move(from);
  }

  inline CInventory_PurchaseInit_Request& operator=(CInventory_PurchaseInit_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_PurchaseInit_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_PurchaseInit_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_PurchaseInit_Request*>(
               &_CInventory_PurchaseInit_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(CInventory_PurchaseInit_Request* other);
  friend void swap(CInventory_PurchaseInit_Request& a, CInventory_PurchaseInit_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_PurchaseInit_Request* New() const final {
    return CreateMaybeMessage<CInventory_PurchaseInit_Request>(nullptr);
  }

  CInventory_PurchaseInit_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_PurchaseInit_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_PurchaseInit_Request& from);
  void MergeFrom(const CInventory_PurchaseInit_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_PurchaseInit_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CInventory_PurchaseInit_Request_LineItem LineItem;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CInventory_PurchaseInit_Request.LineItem line_items = 3;
  int line_items_size() const;
  void clear_line_items();
  static const int kLineItemsFieldNumber = 3;
  ::proto::steam::CInventory_PurchaseInit_Request_LineItem* mutable_line_items(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CInventory_PurchaseInit_Request_LineItem >*
      mutable_line_items();
  const ::proto::steam::CInventory_PurchaseInit_Request_LineItem& line_items(int index) const;
  ::proto::steam::CInventory_PurchaseInit_Request_LineItem* add_line_items();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CInventory_PurchaseInit_Request_LineItem >&
      line_items() const;

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional int32 language = 2;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 2;
  ::google::protobuf::int32 language() const;
  void set_language(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_PurchaseInit_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CInventory_PurchaseInit_Request_LineItem > line_items_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::int32 language_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_PurchaseInit_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_PurchaseInit_Response) */ {
 public:
  CInventory_PurchaseInit_Response();
  virtual ~CInventory_PurchaseInit_Response();

  CInventory_PurchaseInit_Response(const CInventory_PurchaseInit_Response& from);

  inline CInventory_PurchaseInit_Response& operator=(const CInventory_PurchaseInit_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_PurchaseInit_Response(CInventory_PurchaseInit_Response&& from) noexcept
    : CInventory_PurchaseInit_Response() {
    *this = ::std::move(from);
  }

  inline CInventory_PurchaseInit_Response& operator=(CInventory_PurchaseInit_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_PurchaseInit_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_PurchaseInit_Response* internal_default_instance() {
    return reinterpret_cast<const CInventory_PurchaseInit_Response*>(
               &_CInventory_PurchaseInit_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(CInventory_PurchaseInit_Response* other);
  friend void swap(CInventory_PurchaseInit_Response& a, CInventory_PurchaseInit_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_PurchaseInit_Response* New() const final {
    return CreateMaybeMessage<CInventory_PurchaseInit_Response>(nullptr);
  }

  CInventory_PurchaseInit_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_PurchaseInit_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_PurchaseInit_Response& from);
  void MergeFrom(const CInventory_PurchaseInit_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_PurchaseInit_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 orderid = 1;
  bool has_orderid() const;
  void clear_orderid();
  static const int kOrderidFieldNumber = 1;
  ::google::protobuf::uint64 orderid() const;
  void set_orderid(::google::protobuf::uint64 value);

  // optional uint64 transid = 2;
  bool has_transid() const;
  void clear_transid();
  static const int kTransidFieldNumber = 2;
  ::google::protobuf::uint64 transid() const;
  void set_transid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_PurchaseInit_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 orderid_;
  ::google::protobuf::uint64 transid_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventory_PurchaseFinalize_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_PurchaseFinalize_Request) */ {
 public:
  CInventory_PurchaseFinalize_Request();
  virtual ~CInventory_PurchaseFinalize_Request();

  CInventory_PurchaseFinalize_Request(const CInventory_PurchaseFinalize_Request& from);

  inline CInventory_PurchaseFinalize_Request& operator=(const CInventory_PurchaseFinalize_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventory_PurchaseFinalize_Request(CInventory_PurchaseFinalize_Request&& from) noexcept
    : CInventory_PurchaseFinalize_Request() {
    *this = ::std::move(from);
  }

  inline CInventory_PurchaseFinalize_Request& operator=(CInventory_PurchaseFinalize_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventory_PurchaseFinalize_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventory_PurchaseFinalize_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_PurchaseFinalize_Request*>(
               &_CInventory_PurchaseFinalize_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(CInventory_PurchaseFinalize_Request* other);
  friend void swap(CInventory_PurchaseFinalize_Request& a, CInventory_PurchaseFinalize_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventory_PurchaseFinalize_Request* New() const final {
    return CreateMaybeMessage<CInventory_PurchaseFinalize_Request>(nullptr);
  }

  CInventory_PurchaseFinalize_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventory_PurchaseFinalize_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventory_PurchaseFinalize_Request& from);
  void MergeFrom(const CInventory_PurchaseFinalize_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventory_PurchaseFinalize_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional int32 language = 2;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 2;
  ::google::protobuf::int32 language() const;
  void set_language(::google::protobuf::int32 value);

  // optional uint64 orderid = 3;
  bool has_orderid() const;
  void clear_orderid();
  static const int kOrderidFieldNumber = 3;
  ::google::protobuf::uint64 orderid() const;
  void set_orderid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_PurchaseFinalize_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::int32 language_;
  ::google::protobuf::uint64 orderid_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CInventoryClient_NewItems_Notification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventoryClient_NewItems_Notification) */ {
 public:
  CInventoryClient_NewItems_Notification();
  virtual ~CInventoryClient_NewItems_Notification();

  CInventoryClient_NewItems_Notification(const CInventoryClient_NewItems_Notification& from);

  inline CInventoryClient_NewItems_Notification& operator=(const CInventoryClient_NewItems_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CInventoryClient_NewItems_Notification(CInventoryClient_NewItems_Notification&& from) noexcept
    : CInventoryClient_NewItems_Notification() {
    *this = ::std::move(from);
  }

  inline CInventoryClient_NewItems_Notification& operator=(CInventoryClient_NewItems_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CInventoryClient_NewItems_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CInventoryClient_NewItems_Notification* internal_default_instance() {
    return reinterpret_cast<const CInventoryClient_NewItems_Notification*>(
               &_CInventoryClient_NewItems_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(CInventoryClient_NewItems_Notification* other);
  friend void swap(CInventoryClient_NewItems_Notification& a, CInventoryClient_NewItems_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CInventoryClient_NewItems_Notification* New() const final {
    return CreateMaybeMessage<CInventoryClient_NewItems_Notification>(nullptr);
  }

  CInventoryClient_NewItems_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CInventoryClient_NewItems_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CInventoryClient_NewItems_Notification& from);
  void MergeFrom(const CInventoryClient_NewItems_Notification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CInventoryClient_NewItems_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.steam.CInventory_Response inventory_response = 2;
  bool has_inventory_response() const;
  void clear_inventory_response();
  static const int kInventoryResponseFieldNumber = 2;
  const ::proto::steam::CInventory_Response& inventory_response() const;
  ::proto::steam::CInventory_Response* release_inventory_response();
  ::proto::steam::CInventory_Response* mutable_inventory_response();
  void set_allocated_inventory_response(::proto::steam::CInventory_Response* inventory_response);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventoryClient_NewItems_Notification)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::steam::CInventory_Response* inventory_response_;
  ::google::protobuf::uint32 appid_;
  friend struct ::TableStruct_steammessages_5finventory_2esteamclient_2eproto;
};
// ===================================================================

class Inventory_Stub;

class Inventory : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Inventory() {};
 public:
  virtual ~Inventory();

  typedef Inventory_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void GetInventory(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_GetInventory_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ExchangeItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_ExchangeItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetEligiblePromoItemDefIDs(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_GetEligiblePromoItemDefIDs_Request* request,
                       ::proto::steam::CInventory_GetEligiblePromoItemDefIDs_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void AddPromoItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_AddItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SafeModifyItems(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_ModifyItems_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ConsumePlaytime(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_ConsumePlaytime_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ConsumeItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_ConsumeItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DevGenerateItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_AddItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DevSetNextDrop(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_DevSetNextDrop_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SplitItemStack(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_SplitItemStack_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void CombineItemStacks(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_CombineItemStacks_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetItemDefMeta(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_GetItemDefMeta_Request* request,
                       ::proto::steam::CInventory_GetItemDefMeta_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetUserPurchaseInfo(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_GetUserPurchaseInfo_Request* request,
                       ::proto::steam::CInventory_GetUserPurchaseInfo_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void PurchaseInit(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_PurchaseInit_Request* request,
                       ::proto::steam::CInventory_PurchaseInit_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void PurchaseFinalize(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_PurchaseFinalize_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Inventory);
};

class Inventory_Stub : public Inventory {
 public:
  Inventory_Stub(::google::protobuf::RpcChannel* channel);
  Inventory_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Inventory_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Inventory ------------------------------------------

  void GetInventory(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_GetInventory_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void ExchangeItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_ExchangeItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void GetEligiblePromoItemDefIDs(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_GetEligiblePromoItemDefIDs_Request* request,
                       ::proto::steam::CInventory_GetEligiblePromoItemDefIDs_Response* response,
                       ::google::protobuf::Closure* done);
  void AddPromoItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_AddItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void SafeModifyItems(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_ModifyItems_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void ConsumePlaytime(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_ConsumePlaytime_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void ConsumeItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_ConsumeItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void DevGenerateItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_AddItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void DevSetNextDrop(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_DevSetNextDrop_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void SplitItemStack(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_SplitItemStack_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void CombineItemStacks(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_CombineItemStacks_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void GetItemDefMeta(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_GetItemDefMeta_Request* request,
                       ::proto::steam::CInventory_GetItemDefMeta_Response* response,
                       ::google::protobuf::Closure* done);
  void GetUserPurchaseInfo(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_GetUserPurchaseInfo_Request* request,
                       ::proto::steam::CInventory_GetUserPurchaseInfo_Response* response,
                       ::google::protobuf::Closure* done);
  void PurchaseInit(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_PurchaseInit_Request* request,
                       ::proto::steam::CInventory_PurchaseInit_Response* response,
                       ::google::protobuf::Closure* done);
  void PurchaseFinalize(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_PurchaseFinalize_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Inventory_Stub);
};


// -------------------------------------------------------------------

class InventoryClient_Stub;

class InventoryClient : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline InventoryClient() {};
 public:
  virtual ~InventoryClient();

  typedef InventoryClient_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void NotifyNewItems(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventoryClient_NewItems_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(InventoryClient);
};

class InventoryClient_Stub : public InventoryClient {
 public:
  InventoryClient_Stub(::google::protobuf::RpcChannel* channel);
  InventoryClient_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~InventoryClient_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements InventoryClient ------------------------------------------

  void NotifyNewItems(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventoryClient_NewItems_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(InventoryClient_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CInventory_GetInventory_Request

// optional uint32 appid = 1;
inline bool CInventory_GetInventory_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_GetInventory_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CInventory_GetInventory_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetInventory_Request.appid)
  return appid_;
}
inline void CInventory_GetInventory_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetInventory_Request.appid)
}

// optional uint64 steamid = 2;
inline bool CInventory_GetInventory_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_GetInventory_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CInventory_GetInventory_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetInventory_Request.steamid)
  return steamid_;
}
inline void CInventory_GetInventory_Request::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetInventory_Request.steamid)
}

// -------------------------------------------------------------------

// CInventory_Response

// optional string etag = 1;
inline bool CInventory_Response::has_etag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_Response::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CInventory_Response::etag() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_Response.etag)
  return etag_.GetNoArena();
}
inline void CInventory_Response::set_etag(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_Response.etag)
}
#if LANG_CXX11
inline void CInventory_Response::set_etag(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_Response.etag)
}
#endif
inline void CInventory_Response::set_etag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_Response.etag)
}
inline void CInventory_Response::set_etag(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_Response.etag)
}
inline ::std::string* CInventory_Response::mutable_etag() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_Response.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_Response::release_etag() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_Response.etag)
  if (!has_etag()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return etag_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_Response::set_allocated_etag(::std::string* etag) {
  if (etag != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_Response.etag)
}

// repeated uint64 removeditemids = 2;
inline int CInventory_Response::removeditemids_size() const {
  return removeditemids_.size();
}
inline void CInventory_Response::clear_removeditemids() {
  removeditemids_.Clear();
}
inline ::google::protobuf::uint64 CInventory_Response::removeditemids(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_Response.removeditemids)
  return removeditemids_.Get(index);
}
inline void CInventory_Response::set_removeditemids(int index, ::google::protobuf::uint64 value) {
  removeditemids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_Response.removeditemids)
}
inline void CInventory_Response::add_removeditemids(::google::protobuf::uint64 value) {
  removeditemids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_Response.removeditemids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CInventory_Response::removeditemids() const {
  // @@protoc_insertion_point(field_list:proto.steam.CInventory_Response.removeditemids)
  return removeditemids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CInventory_Response::mutable_removeditemids() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CInventory_Response.removeditemids)
  return &removeditemids_;
}

// optional string item_json = 3;
inline bool CInventory_Response::has_item_json() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_Response::clear_item_json() {
  item_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CInventory_Response::item_json() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_Response.item_json)
  return item_json_.GetNoArena();
}
inline void CInventory_Response::set_item_json(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  item_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_Response.item_json)
}
#if LANG_CXX11
inline void CInventory_Response::set_item_json(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  item_json_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_Response.item_json)
}
#endif
inline void CInventory_Response::set_item_json(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  item_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_Response.item_json)
}
inline void CInventory_Response::set_item_json(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  item_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_Response.item_json)
}
inline ::std::string* CInventory_Response::mutable_item_json() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_Response.item_json)
  return item_json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_Response::release_item_json() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_Response.item_json)
  if (!has_item_json()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return item_json_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_Response::set_allocated_item_json(::std::string* item_json) {
  if (item_json != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  item_json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_json);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_Response.item_json)
}

// optional string itemdef_json = 4;
inline bool CInventory_Response::has_itemdef_json() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_Response::clear_itemdef_json() {
  itemdef_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CInventory_Response::itemdef_json() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_Response.itemdef_json)
  return itemdef_json_.GetNoArena();
}
inline void CInventory_Response::set_itemdef_json(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  itemdef_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_Response.itemdef_json)
}
#if LANG_CXX11
inline void CInventory_Response::set_itemdef_json(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  itemdef_json_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_Response.itemdef_json)
}
#endif
inline void CInventory_Response::set_itemdef_json(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  itemdef_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_Response.itemdef_json)
}
inline void CInventory_Response::set_itemdef_json(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  itemdef_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_Response.itemdef_json)
}
inline ::std::string* CInventory_Response::mutable_itemdef_json() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_Response.itemdef_json)
  return itemdef_json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_Response::release_itemdef_json() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_Response.itemdef_json)
  if (!has_itemdef_json()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return itemdef_json_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_Response::set_allocated_itemdef_json(::std::string* itemdef_json) {
  if (itemdef_json != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  itemdef_json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), itemdef_json);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_Response.itemdef_json)
}

// optional bytes ticket = 5;
inline bool CInventory_Response::has_ticket() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CInventory_Response::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& CInventory_Response::ticket() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_Response.ticket)
  return ticket_.GetNoArena();
}
inline void CInventory_Response::set_ticket(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_Response.ticket)
}
#if LANG_CXX11
inline void CInventory_Response::set_ticket(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_Response.ticket)
}
#endif
inline void CInventory_Response::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_Response.ticket)
}
inline void CInventory_Response::set_ticket(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_Response.ticket)
}
inline ::std::string* CInventory_Response::mutable_ticket() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_Response.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_Response::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_Response.ticket)
  if (!has_ticket()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return ticket_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_Response::set_allocated_ticket(::std::string* ticket) {
  if (ticket != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_Response.ticket)
}

// optional bool replayed = 6 [(.proto.steam.description) = "If true, the requestid given was processed earlier."];
inline bool CInventory_Response::has_replayed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CInventory_Response::clear_replayed() {
  replayed_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CInventory_Response::replayed() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_Response.replayed)
  return replayed_;
}
inline void CInventory_Response::set_replayed(bool value) {
  _has_bits_[0] |= 0x00000010u;
  replayed_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_Response.replayed)
}

// -------------------------------------------------------------------

// CInventory_ExchangeItem_Request

// optional uint32 appid = 1;
inline bool CInventory_ExchangeItem_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_ExchangeItem_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CInventory_ExchangeItem_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ExchangeItem_Request.appid)
  return appid_;
}
inline void CInventory_ExchangeItem_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ExchangeItem_Request.appid)
}

// optional uint64 steamid = 2;
inline bool CInventory_ExchangeItem_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_ExchangeItem_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CInventory_ExchangeItem_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ExchangeItem_Request.steamid)
  return steamid_;
}
inline void CInventory_ExchangeItem_Request::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ExchangeItem_Request.steamid)
}

// repeated uint64 materialsitemid = 3;
inline int CInventory_ExchangeItem_Request::materialsitemid_size() const {
  return materialsitemid_.size();
}
inline void CInventory_ExchangeItem_Request::clear_materialsitemid() {
  materialsitemid_.Clear();
}
inline ::google::protobuf::uint64 CInventory_ExchangeItem_Request::materialsitemid(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ExchangeItem_Request.materialsitemid)
  return materialsitemid_.Get(index);
}
inline void CInventory_ExchangeItem_Request::set_materialsitemid(int index, ::google::protobuf::uint64 value) {
  materialsitemid_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ExchangeItem_Request.materialsitemid)
}
inline void CInventory_ExchangeItem_Request::add_materialsitemid(::google::protobuf::uint64 value) {
  materialsitemid_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_ExchangeItem_Request.materialsitemid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CInventory_ExchangeItem_Request::materialsitemid() const {
  // @@protoc_insertion_point(field_list:proto.steam.CInventory_ExchangeItem_Request.materialsitemid)
  return materialsitemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CInventory_ExchangeItem_Request::mutable_materialsitemid() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CInventory_ExchangeItem_Request.materialsitemid)
  return &materialsitemid_;
}

// repeated uint32 materialsquantity = 4;
inline int CInventory_ExchangeItem_Request::materialsquantity_size() const {
  return materialsquantity_.size();
}
inline void CInventory_ExchangeItem_Request::clear_materialsquantity() {
  materialsquantity_.Clear();
}
inline ::google::protobuf::uint32 CInventory_ExchangeItem_Request::materialsquantity(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ExchangeItem_Request.materialsquantity)
  return materialsquantity_.Get(index);
}
inline void CInventory_ExchangeItem_Request::set_materialsquantity(int index, ::google::protobuf::uint32 value) {
  materialsquantity_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ExchangeItem_Request.materialsquantity)
}
inline void CInventory_ExchangeItem_Request::add_materialsquantity(::google::protobuf::uint32 value) {
  materialsquantity_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_ExchangeItem_Request.materialsquantity)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CInventory_ExchangeItem_Request::materialsquantity() const {
  // @@protoc_insertion_point(field_list:proto.steam.CInventory_ExchangeItem_Request.materialsquantity)
  return materialsquantity_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CInventory_ExchangeItem_Request::mutable_materialsquantity() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CInventory_ExchangeItem_Request.materialsquantity)
  return &materialsquantity_;
}

// optional uint64 outputitemdefid = 5;
inline bool CInventory_ExchangeItem_Request::has_outputitemdefid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_ExchangeItem_Request::clear_outputitemdefid() {
  outputitemdefid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CInventory_ExchangeItem_Request::outputitemdefid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ExchangeItem_Request.outputitemdefid)
  return outputitemdefid_;
}
inline void CInventory_ExchangeItem_Request::set_outputitemdefid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  outputitemdefid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ExchangeItem_Request.outputitemdefid)
}

// -------------------------------------------------------------------

// CInventory_GetEligiblePromoItemDefIDs_Request

// optional uint32 appid = 1;
inline bool CInventory_GetEligiblePromoItemDefIDs_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_GetEligiblePromoItemDefIDs_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CInventory_GetEligiblePromoItemDefIDs_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Request.appid)
  return appid_;
}
inline void CInventory_GetEligiblePromoItemDefIDs_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Request.appid)
}

// optional uint64 steamid = 2;
inline bool CInventory_GetEligiblePromoItemDefIDs_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_GetEligiblePromoItemDefIDs_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CInventory_GetEligiblePromoItemDefIDs_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Request.steamid)
  return steamid_;
}
inline void CInventory_GetEligiblePromoItemDefIDs_Request::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Request.steamid)
}

// -------------------------------------------------------------------

// CInventory_GetEligiblePromoItemDefIDs_Response

// repeated uint64 itemdefids = 1;
inline int CInventory_GetEligiblePromoItemDefIDs_Response::itemdefids_size() const {
  return itemdefids_.size();
}
inline void CInventory_GetEligiblePromoItemDefIDs_Response::clear_itemdefids() {
  itemdefids_.Clear();
}
inline ::google::protobuf::uint64 CInventory_GetEligiblePromoItemDefIDs_Response::itemdefids(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Response.itemdefids)
  return itemdefids_.Get(index);
}
inline void CInventory_GetEligiblePromoItemDefIDs_Response::set_itemdefids(int index, ::google::protobuf::uint64 value) {
  itemdefids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Response.itemdefids)
}
inline void CInventory_GetEligiblePromoItemDefIDs_Response::add_itemdefids(::google::protobuf::uint64 value) {
  itemdefids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Response.itemdefids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CInventory_GetEligiblePromoItemDefIDs_Response::itemdefids() const {
  // @@protoc_insertion_point(field_list:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Response.itemdefids)
  return itemdefids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CInventory_GetEligiblePromoItemDefIDs_Response::mutable_itemdefids() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Response.itemdefids)
  return &itemdefids_;
}

// -------------------------------------------------------------------

// CInventory_AddItem_Request

// optional uint32 appid = 1;
inline bool CInventory_AddItem_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_AddItem_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CInventory_AddItem_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_AddItem_Request.appid)
  return appid_;
}
inline void CInventory_AddItem_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.appid)
}

// repeated uint64 itemdefid = 2;
inline int CInventory_AddItem_Request::itemdefid_size() const {
  return itemdefid_.size();
}
inline void CInventory_AddItem_Request::clear_itemdefid() {
  itemdefid_.Clear();
}
inline ::google::protobuf::uint64 CInventory_AddItem_Request::itemdefid(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_AddItem_Request.itemdefid)
  return itemdefid_.Get(index);
}
inline void CInventory_AddItem_Request::set_itemdefid(int index, ::google::protobuf::uint64 value) {
  itemdefid_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.itemdefid)
}
inline void CInventory_AddItem_Request::add_itemdefid(::google::protobuf::uint64 value) {
  itemdefid_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_AddItem_Request.itemdefid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CInventory_AddItem_Request::itemdefid() const {
  // @@protoc_insertion_point(field_list:proto.steam.CInventory_AddItem_Request.itemdefid)
  return itemdefid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CInventory_AddItem_Request::mutable_itemdefid() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CInventory_AddItem_Request.itemdefid)
  return &itemdefid_;
}

// repeated string itempropsjson = 3;
inline int CInventory_AddItem_Request::itempropsjson_size() const {
  return itempropsjson_.size();
}
inline void CInventory_AddItem_Request::clear_itempropsjson() {
  itempropsjson_.Clear();
}
inline const ::std::string& CInventory_AddItem_Request::itempropsjson(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_AddItem_Request.itempropsjson)
  return itempropsjson_.Get(index);
}
inline ::std::string* CInventory_AddItem_Request::mutable_itempropsjson(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_AddItem_Request.itempropsjson)
  return itempropsjson_.Mutable(index);
}
inline void CInventory_AddItem_Request::set_itempropsjson(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.itempropsjson)
  itempropsjson_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CInventory_AddItem_Request::set_itempropsjson(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.itempropsjson)
  itempropsjson_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CInventory_AddItem_Request::set_itempropsjson(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  itempropsjson_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_AddItem_Request.itempropsjson)
}
inline void CInventory_AddItem_Request::set_itempropsjson(int index, const char* value, size_t size) {
  itempropsjson_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_AddItem_Request.itempropsjson)
}
inline ::std::string* CInventory_AddItem_Request::add_itempropsjson() {
  // @@protoc_insertion_point(field_add_mutable:proto.steam.CInventory_AddItem_Request.itempropsjson)
  return itempropsjson_.Add();
}
inline void CInventory_AddItem_Request::add_itempropsjson(const ::std::string& value) {
  itempropsjson_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_AddItem_Request.itempropsjson)
}
#if LANG_CXX11
inline void CInventory_AddItem_Request::add_itempropsjson(::std::string&& value) {
  itempropsjson_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_AddItem_Request.itempropsjson)
}
#endif
inline void CInventory_AddItem_Request::add_itempropsjson(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  itempropsjson_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.steam.CInventory_AddItem_Request.itempropsjson)
}
inline void CInventory_AddItem_Request::add_itempropsjson(const char* value, size_t size) {
  itempropsjson_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.steam.CInventory_AddItem_Request.itempropsjson)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CInventory_AddItem_Request::itempropsjson() const {
  // @@protoc_insertion_point(field_list:proto.steam.CInventory_AddItem_Request.itempropsjson)
  return itempropsjson_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CInventory_AddItem_Request::mutable_itempropsjson() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CInventory_AddItem_Request.itempropsjson)
  return &itempropsjson_;
}

// optional uint64 steamid = 4;
inline bool CInventory_AddItem_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_AddItem_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CInventory_AddItem_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_AddItem_Request.steamid)
  return steamid_;
}
inline void CInventory_AddItem_Request::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.steamid)
}

// optional bool notify = 5 [(.proto.steam.description) = "Should notify the user that the item was added to their Steam Inventory."];
inline bool CInventory_AddItem_Request::has_notify() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_AddItem_Request::clear_notify() {
  notify_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CInventory_AddItem_Request::notify() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_AddItem_Request.notify)
  return notify_;
}
inline void CInventory_AddItem_Request::set_notify(bool value) {
  _has_bits_[0] |= 0x00000004u;
  notify_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.notify)
}

// optional uint64 requestid = 6;
inline bool CInventory_AddItem_Request::has_requestid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CInventory_AddItem_Request::clear_requestid() {
  requestid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint64 CInventory_AddItem_Request::requestid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_AddItem_Request.requestid)
  return requestid_;
}
inline void CInventory_AddItem_Request::set_requestid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  requestid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.requestid)
}

// optional bool trade_restriction = 7 [(.proto.steam.description) = "If true, apply the default trade and market restriction times to this item."];
inline bool CInventory_AddItem_Request::has_trade_restriction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CInventory_AddItem_Request::clear_trade_restriction() {
  trade_restriction_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CInventory_AddItem_Request::trade_restriction() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_AddItem_Request.trade_restriction)
  return trade_restriction_;
}
inline void CInventory_AddItem_Request::set_trade_restriction(bool value) {
  _has_bits_[0] |= 0x00000008u;
  trade_restriction_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.trade_restriction)
}

// optional bool is_purchase = 8 [default = false, (.proto.steam.description) = "If set, treat requestid as a txnid and create this item as a result of user microtransaction purchase."];
inline bool CInventory_AddItem_Request::has_is_purchase() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CInventory_AddItem_Request::clear_is_purchase() {
  is_purchase_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CInventory_AddItem_Request::is_purchase() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_AddItem_Request.is_purchase)
  return is_purchase_;
}
inline void CInventory_AddItem_Request::set_is_purchase(bool value) {
  _has_bits_[0] |= 0x00000010u;
  is_purchase_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.is_purchase)
}

// -------------------------------------------------------------------

// CInventory_ModifyItems_Request_ItemPropertyUpdate

// optional uint64 itemid = 1;
inline bool CInventory_ModifyItems_Request_ItemPropertyUpdate::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::clear_itemid() {
  itemid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CInventory_ModifyItems_Request_ItemPropertyUpdate::itemid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.itemid)
  return itemid_;
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::set_itemid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  itemid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.itemid)
}

// optional bool remove_property = 2;
inline bool CInventory_ModifyItems_Request_ItemPropertyUpdate::has_remove_property() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::clear_remove_property() {
  remove_property_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CInventory_ModifyItems_Request_ItemPropertyUpdate::remove_property() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.remove_property)
  return remove_property_;
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::set_remove_property(bool value) {
  _has_bits_[0] |= 0x00000008u;
  remove_property_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.remove_property)
}

// optional string property_name = 3;
inline bool CInventory_ModifyItems_Request_ItemPropertyUpdate::has_property_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::clear_property_name() {
  property_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CInventory_ModifyItems_Request_ItemPropertyUpdate::property_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_name)
  return property_name_.GetNoArena();
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::set_property_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  property_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_name)
}
#if LANG_CXX11
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::set_property_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  property_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_name)
}
#endif
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::set_property_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  property_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_name)
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::set_property_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  property_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_name)
}
inline ::std::string* CInventory_ModifyItems_Request_ItemPropertyUpdate::mutable_property_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_name)
  return property_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_ModifyItems_Request_ItemPropertyUpdate::release_property_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_name)
  if (!has_property_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return property_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::set_allocated_property_name(::std::string* property_name) {
  if (property_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  property_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), property_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_name)
}

// optional bool property_value_bool = 4;
inline bool CInventory_ModifyItems_Request_ItemPropertyUpdate::has_property_value_bool() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::clear_property_value_bool() {
  property_value_bool_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CInventory_ModifyItems_Request_ItemPropertyUpdate::property_value_bool() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_value_bool)
  return property_value_bool_;
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::set_property_value_bool(bool value) {
  _has_bits_[0] |= 0x00000010u;
  property_value_bool_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_value_bool)
}

// optional int64 property_value_int = 5;
inline bool CInventory_ModifyItems_Request_ItemPropertyUpdate::has_property_value_int() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::clear_property_value_int() {
  property_value_int_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::int64 CInventory_ModifyItems_Request_ItemPropertyUpdate::property_value_int() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_value_int)
  return property_value_int_;
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::set_property_value_int(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  property_value_int_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_value_int)
}

// optional string property_value_string = 6;
inline bool CInventory_ModifyItems_Request_ItemPropertyUpdate::has_property_value_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::clear_property_value_string() {
  property_value_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CInventory_ModifyItems_Request_ItemPropertyUpdate::property_value_string() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_value_string)
  return property_value_string_.GetNoArena();
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::set_property_value_string(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  property_value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_value_string)
}
#if LANG_CXX11
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::set_property_value_string(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  property_value_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_value_string)
}
#endif
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::set_property_value_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  property_value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_value_string)
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::set_property_value_string(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  property_value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_value_string)
}
inline ::std::string* CInventory_ModifyItems_Request_ItemPropertyUpdate::mutable_property_value_string() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_value_string)
  return property_value_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_ModifyItems_Request_ItemPropertyUpdate::release_property_value_string() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_value_string)
  if (!has_property_value_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return property_value_string_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::set_allocated_property_value_string(::std::string* property_value_string) {
  if (property_value_string != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  property_value_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), property_value_string);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_value_string)
}

// optional float property_value_float = 7;
inline bool CInventory_ModifyItems_Request_ItemPropertyUpdate::has_property_value_float() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::clear_property_value_float() {
  property_value_float_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float CInventory_ModifyItems_Request_ItemPropertyUpdate::property_value_float() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_value_float)
  return property_value_float_;
}
inline void CInventory_ModifyItems_Request_ItemPropertyUpdate::set_property_value_float(float value) {
  _has_bits_[0] |= 0x00000020u;
  property_value_float_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate.property_value_float)
}

// -------------------------------------------------------------------

// CInventory_ModifyItems_Request

// optional uint32 appid = 1;
inline bool CInventory_ModifyItems_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_ModifyItems_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CInventory_ModifyItems_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ModifyItems_Request.appid)
  return appid_;
}
inline void CInventory_ModifyItems_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ModifyItems_Request.appid)
}

// optional uint64 steamid = 2;
inline bool CInventory_ModifyItems_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_ModifyItems_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CInventory_ModifyItems_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ModifyItems_Request.steamid)
  return steamid_;
}
inline void CInventory_ModifyItems_Request::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ModifyItems_Request.steamid)
}

// repeated .proto.steam.CInventory_ModifyItems_Request.ItemPropertyUpdate updates = 3;
inline int CInventory_ModifyItems_Request::updates_size() const {
  return updates_.size();
}
inline void CInventory_ModifyItems_Request::clear_updates() {
  updates_.Clear();
}
inline ::proto::steam::CInventory_ModifyItems_Request_ItemPropertyUpdate* CInventory_ModifyItems_Request::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_ModifyItems_Request.updates)
  return updates_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CInventory_ModifyItems_Request_ItemPropertyUpdate >*
CInventory_ModifyItems_Request::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CInventory_ModifyItems_Request.updates)
  return &updates_;
}
inline const ::proto::steam::CInventory_ModifyItems_Request_ItemPropertyUpdate& CInventory_ModifyItems_Request::updates(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ModifyItems_Request.updates)
  return updates_.Get(index);
}
inline ::proto::steam::CInventory_ModifyItems_Request_ItemPropertyUpdate* CInventory_ModifyItems_Request::add_updates() {
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_ModifyItems_Request.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CInventory_ModifyItems_Request_ItemPropertyUpdate >&
CInventory_ModifyItems_Request::updates() const {
  // @@protoc_insertion_point(field_list:proto.steam.CInventory_ModifyItems_Request.updates)
  return updates_;
}

// optional uint32 timestamp = 4;
inline bool CInventory_ModifyItems_Request::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_ModifyItems_Request::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CInventory_ModifyItems_Request::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ModifyItems_Request.timestamp)
  return timestamp_;
}
inline void CInventory_ModifyItems_Request::set_timestamp(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ModifyItems_Request.timestamp)
}

// -------------------------------------------------------------------

// CInventory_ConsumePlaytime_Request

// optional uint32 appid = 1;
inline bool CInventory_ConsumePlaytime_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_ConsumePlaytime_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CInventory_ConsumePlaytime_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumePlaytime_Request.appid)
  return appid_;
}
inline void CInventory_ConsumePlaytime_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumePlaytime_Request.appid)
}

// optional uint64 itemdefid = 2;
inline bool CInventory_ConsumePlaytime_Request::has_itemdefid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_ConsumePlaytime_Request::clear_itemdefid() {
  itemdefid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CInventory_ConsumePlaytime_Request::itemdefid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumePlaytime_Request.itemdefid)
  return itemdefid_;
}
inline void CInventory_ConsumePlaytime_Request::set_itemdefid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  itemdefid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumePlaytime_Request.itemdefid)
}

// -------------------------------------------------------------------

// CInventory_ConsumeItem_Request

// optional uint32 appid = 1;
inline bool CInventory_ConsumeItem_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_ConsumeItem_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CInventory_ConsumeItem_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumeItem_Request.appid)
  return appid_;
}
inline void CInventory_ConsumeItem_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumeItem_Request.appid)
}

// optional uint64 itemid = 2;
inline bool CInventory_ConsumeItem_Request::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_ConsumeItem_Request::clear_itemid() {
  itemid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CInventory_ConsumeItem_Request::itemid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumeItem_Request.itemid)
  return itemid_;
}
inline void CInventory_ConsumeItem_Request::set_itemid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  itemid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumeItem_Request.itemid)
}

// optional uint32 quantity = 3;
inline bool CInventory_ConsumeItem_Request::has_quantity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CInventory_ConsumeItem_Request::clear_quantity() {
  quantity_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CInventory_ConsumeItem_Request::quantity() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumeItem_Request.quantity)
  return quantity_;
}
inline void CInventory_ConsumeItem_Request::set_quantity(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  quantity_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumeItem_Request.quantity)
}

// optional string timestamp = 4;
inline bool CInventory_ConsumeItem_Request::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_ConsumeItem_Request::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CInventory_ConsumeItem_Request::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumeItem_Request.timestamp)
  return timestamp_.GetNoArena();
}
inline void CInventory_ConsumeItem_Request::set_timestamp(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumeItem_Request.timestamp)
}
#if LANG_CXX11
inline void CInventory_ConsumeItem_Request::set_timestamp(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  timestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_ConsumeItem_Request.timestamp)
}
#endif
inline void CInventory_ConsumeItem_Request::set_timestamp(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_ConsumeItem_Request.timestamp)
}
inline void CInventory_ConsumeItem_Request::set_timestamp(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_ConsumeItem_Request.timestamp)
}
inline ::std::string* CInventory_ConsumeItem_Request::mutable_timestamp() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_ConsumeItem_Request.timestamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_ConsumeItem_Request::release_timestamp() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_ConsumeItem_Request.timestamp)
  if (!has_timestamp()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return timestamp_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_ConsumeItem_Request::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_ConsumeItem_Request.timestamp)
}

// optional uint64 steamid = 5;
inline bool CInventory_ConsumeItem_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CInventory_ConsumeItem_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 CInventory_ConsumeItem_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumeItem_Request.steamid)
  return steamid_;
}
inline void CInventory_ConsumeItem_Request::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumeItem_Request.steamid)
}

// optional uint64 requestid = 6;
inline bool CInventory_ConsumeItem_Request::has_requestid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CInventory_ConsumeItem_Request::clear_requestid() {
  requestid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint64 CInventory_ConsumeItem_Request::requestid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumeItem_Request.requestid)
  return requestid_;
}
inline void CInventory_ConsumeItem_Request::set_requestid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  requestid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumeItem_Request.requestid)
}

// -------------------------------------------------------------------

// CInventory_DevSetNextDrop_Request

// optional uint32 appid = 1;
inline bool CInventory_DevSetNextDrop_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_DevSetNextDrop_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CInventory_DevSetNextDrop_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_DevSetNextDrop_Request.appid)
  return appid_;
}
inline void CInventory_DevSetNextDrop_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_DevSetNextDrop_Request.appid)
}

// optional uint64 itemdefid = 2;
inline bool CInventory_DevSetNextDrop_Request::has_itemdefid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_DevSetNextDrop_Request::clear_itemdefid() {
  itemdefid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CInventory_DevSetNextDrop_Request::itemdefid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_DevSetNextDrop_Request.itemdefid)
  return itemdefid_;
}
inline void CInventory_DevSetNextDrop_Request::set_itemdefid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  itemdefid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_DevSetNextDrop_Request.itemdefid)
}

// optional string droptime = 3;
inline bool CInventory_DevSetNextDrop_Request::has_droptime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_DevSetNextDrop_Request::clear_droptime() {
  droptime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CInventory_DevSetNextDrop_Request::droptime() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
  return droptime_.GetNoArena();
}
inline void CInventory_DevSetNextDrop_Request::set_droptime(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  droptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
}
#if LANG_CXX11
inline void CInventory_DevSetNextDrop_Request::set_droptime(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  droptime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
}
#endif
inline void CInventory_DevSetNextDrop_Request::set_droptime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  droptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
}
inline void CInventory_DevSetNextDrop_Request::set_droptime(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  droptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
}
inline ::std::string* CInventory_DevSetNextDrop_Request::mutable_droptime() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
  return droptime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_DevSetNextDrop_Request::release_droptime() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
  if (!has_droptime()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return droptime_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_DevSetNextDrop_Request::set_allocated_droptime(::std::string* droptime) {
  if (droptime != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  droptime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), droptime);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
}

// -------------------------------------------------------------------

// CInventory_SplitItemStack_Request

// optional uint32 appid = 1;
inline bool CInventory_SplitItemStack_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_SplitItemStack_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CInventory_SplitItemStack_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_SplitItemStack_Request.appid)
  return appid_;
}
inline void CInventory_SplitItemStack_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_SplitItemStack_Request.appid)
}

// optional uint64 itemid = 2;
inline bool CInventory_SplitItemStack_Request::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_SplitItemStack_Request::clear_itemid() {
  itemid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CInventory_SplitItemStack_Request::itemid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_SplitItemStack_Request.itemid)
  return itemid_;
}
inline void CInventory_SplitItemStack_Request::set_itemid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  itemid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_SplitItemStack_Request.itemid)
}

// optional uint32 quantity = 3;
inline bool CInventory_SplitItemStack_Request::has_quantity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_SplitItemStack_Request::clear_quantity() {
  quantity_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CInventory_SplitItemStack_Request::quantity() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_SplitItemStack_Request.quantity)
  return quantity_;
}
inline void CInventory_SplitItemStack_Request::set_quantity(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  quantity_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_SplitItemStack_Request.quantity)
}

// -------------------------------------------------------------------

// CInventory_CombineItemStacks_Request

// optional uint32 appid = 1;
inline bool CInventory_CombineItemStacks_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_CombineItemStacks_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CInventory_CombineItemStacks_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_CombineItemStacks_Request.appid)
  return appid_;
}
inline void CInventory_CombineItemStacks_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_CombineItemStacks_Request.appid)
}

// optional uint64 fromitemid = 2;
inline bool CInventory_CombineItemStacks_Request::has_fromitemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_CombineItemStacks_Request::clear_fromitemid() {
  fromitemid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CInventory_CombineItemStacks_Request::fromitemid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_CombineItemStacks_Request.fromitemid)
  return fromitemid_;
}
inline void CInventory_CombineItemStacks_Request::set_fromitemid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  fromitemid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_CombineItemStacks_Request.fromitemid)
}

// optional uint64 destitemid = 3;
inline bool CInventory_CombineItemStacks_Request::has_destitemid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CInventory_CombineItemStacks_Request::clear_destitemid() {
  destitemid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 CInventory_CombineItemStacks_Request::destitemid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_CombineItemStacks_Request.destitemid)
  return destitemid_;
}
inline void CInventory_CombineItemStacks_Request::set_destitemid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  destitemid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_CombineItemStacks_Request.destitemid)
}

// optional uint32 quantity = 4;
inline bool CInventory_CombineItemStacks_Request::has_quantity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_CombineItemStacks_Request::clear_quantity() {
  quantity_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CInventory_CombineItemStacks_Request::quantity() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_CombineItemStacks_Request.quantity)
  return quantity_;
}
inline void CInventory_CombineItemStacks_Request::set_quantity(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  quantity_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_CombineItemStacks_Request.quantity)
}

// -------------------------------------------------------------------

// CInventory_GetItemDefMeta_Request

// optional uint32 appid = 1;
inline bool CInventory_GetItemDefMeta_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_GetItemDefMeta_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CInventory_GetItemDefMeta_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetItemDefMeta_Request.appid)
  return appid_;
}
inline void CInventory_GetItemDefMeta_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetItemDefMeta_Request.appid)
}

// -------------------------------------------------------------------

// CInventory_GetItemDefMeta_Response

// optional uint32 modified = 1;
inline bool CInventory_GetItemDefMeta_Response::has_modified() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_GetItemDefMeta_Response::clear_modified() {
  modified_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CInventory_GetItemDefMeta_Response::modified() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetItemDefMeta_Response.modified)
  return modified_;
}
inline void CInventory_GetItemDefMeta_Response::set_modified(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  modified_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetItemDefMeta_Response.modified)
}

// optional string digest = 2;
inline bool CInventory_GetItemDefMeta_Response::has_digest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_GetItemDefMeta_Response::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CInventory_GetItemDefMeta_Response::digest() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetItemDefMeta_Response.digest)
  return digest_.GetNoArena();
}
inline void CInventory_GetItemDefMeta_Response::set_digest(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetItemDefMeta_Response.digest)
}
#if LANG_CXX11
inline void CInventory_GetItemDefMeta_Response::set_digest(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_GetItemDefMeta_Response.digest)
}
#endif
inline void CInventory_GetItemDefMeta_Response::set_digest(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_GetItemDefMeta_Response.digest)
}
inline void CInventory_GetItemDefMeta_Response::set_digest(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_GetItemDefMeta_Response.digest)
}
inline ::std::string* CInventory_GetItemDefMeta_Response::mutable_digest() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_GetItemDefMeta_Response.digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_GetItemDefMeta_Response::release_digest() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_GetItemDefMeta_Response.digest)
  if (!has_digest()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return digest_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_GetItemDefMeta_Response::set_allocated_digest(::std::string* digest) {
  if (digest != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_GetItemDefMeta_Response.digest)
}

// -------------------------------------------------------------------

// CInventory_GetUserPurchaseInfo_Request

// -------------------------------------------------------------------

// CInventory_GetUserPurchaseInfo_Response

// optional int32 ecurrency = 1;
inline bool CInventory_GetUserPurchaseInfo_Response::has_ecurrency() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_GetUserPurchaseInfo_Response::clear_ecurrency() {
  ecurrency_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 CInventory_GetUserPurchaseInfo_Response::ecurrency() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetUserPurchaseInfo_Response.ecurrency)
  return ecurrency_;
}
inline void CInventory_GetUserPurchaseInfo_Response::set_ecurrency(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  ecurrency_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetUserPurchaseInfo_Response.ecurrency)
}

// -------------------------------------------------------------------

// CInventory_PurchaseInit_Request_LineItem

// optional uint64 itemdefid = 1;
inline bool CInventory_PurchaseInit_Request_LineItem::has_itemdefid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_PurchaseInit_Request_LineItem::clear_itemdefid() {
  itemdefid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CInventory_PurchaseInit_Request_LineItem::itemdefid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_PurchaseInit_Request.LineItem.itemdefid)
  return itemdefid_;
}
inline void CInventory_PurchaseInit_Request_LineItem::set_itemdefid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  itemdefid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_PurchaseInit_Request.LineItem.itemdefid)
}

// optional uint32 quantity = 2;
inline bool CInventory_PurchaseInit_Request_LineItem::has_quantity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_PurchaseInit_Request_LineItem::clear_quantity() {
  quantity_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CInventory_PurchaseInit_Request_LineItem::quantity() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_PurchaseInit_Request.LineItem.quantity)
  return quantity_;
}
inline void CInventory_PurchaseInit_Request_LineItem::set_quantity(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  quantity_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_PurchaseInit_Request.LineItem.quantity)
}

// -------------------------------------------------------------------

// CInventory_PurchaseInit_Request

// optional uint32 appid = 1;
inline bool CInventory_PurchaseInit_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_PurchaseInit_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CInventory_PurchaseInit_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_PurchaseInit_Request.appid)
  return appid_;
}
inline void CInventory_PurchaseInit_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_PurchaseInit_Request.appid)
}

// optional int32 language = 2;
inline bool CInventory_PurchaseInit_Request::has_language() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_PurchaseInit_Request::clear_language() {
  language_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CInventory_PurchaseInit_Request::language() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_PurchaseInit_Request.language)
  return language_;
}
inline void CInventory_PurchaseInit_Request::set_language(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  language_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_PurchaseInit_Request.language)
}

// repeated .proto.steam.CInventory_PurchaseInit_Request.LineItem line_items = 3;
inline int CInventory_PurchaseInit_Request::line_items_size() const {
  return line_items_.size();
}
inline void CInventory_PurchaseInit_Request::clear_line_items() {
  line_items_.Clear();
}
inline ::proto::steam::CInventory_PurchaseInit_Request_LineItem* CInventory_PurchaseInit_Request::mutable_line_items(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_PurchaseInit_Request.line_items)
  return line_items_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CInventory_PurchaseInit_Request_LineItem >*
CInventory_PurchaseInit_Request::mutable_line_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CInventory_PurchaseInit_Request.line_items)
  return &line_items_;
}
inline const ::proto::steam::CInventory_PurchaseInit_Request_LineItem& CInventory_PurchaseInit_Request::line_items(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_PurchaseInit_Request.line_items)
  return line_items_.Get(index);
}
inline ::proto::steam::CInventory_PurchaseInit_Request_LineItem* CInventory_PurchaseInit_Request::add_line_items() {
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_PurchaseInit_Request.line_items)
  return line_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CInventory_PurchaseInit_Request_LineItem >&
CInventory_PurchaseInit_Request::line_items() const {
  // @@protoc_insertion_point(field_list:proto.steam.CInventory_PurchaseInit_Request.line_items)
  return line_items_;
}

// -------------------------------------------------------------------

// CInventory_PurchaseInit_Response

// optional uint64 orderid = 1;
inline bool CInventory_PurchaseInit_Response::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_PurchaseInit_Response::clear_orderid() {
  orderid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CInventory_PurchaseInit_Response::orderid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_PurchaseInit_Response.orderid)
  return orderid_;
}
inline void CInventory_PurchaseInit_Response::set_orderid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  orderid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_PurchaseInit_Response.orderid)
}

// optional uint64 transid = 2;
inline bool CInventory_PurchaseInit_Response::has_transid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_PurchaseInit_Response::clear_transid() {
  transid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CInventory_PurchaseInit_Response::transid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_PurchaseInit_Response.transid)
  return transid_;
}
inline void CInventory_PurchaseInit_Response::set_transid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  transid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_PurchaseInit_Response.transid)
}

// -------------------------------------------------------------------

// CInventory_PurchaseFinalize_Request

// optional uint32 appid = 1;
inline bool CInventory_PurchaseFinalize_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_PurchaseFinalize_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CInventory_PurchaseFinalize_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_PurchaseFinalize_Request.appid)
  return appid_;
}
inline void CInventory_PurchaseFinalize_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_PurchaseFinalize_Request.appid)
}

// optional int32 language = 2;
inline bool CInventory_PurchaseFinalize_Request::has_language() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_PurchaseFinalize_Request::clear_language() {
  language_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CInventory_PurchaseFinalize_Request::language() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_PurchaseFinalize_Request.language)
  return language_;
}
inline void CInventory_PurchaseFinalize_Request::set_language(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  language_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_PurchaseFinalize_Request.language)
}

// optional uint64 orderid = 3;
inline bool CInventory_PurchaseFinalize_Request::has_orderid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_PurchaseFinalize_Request::clear_orderid() {
  orderid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CInventory_PurchaseFinalize_Request::orderid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_PurchaseFinalize_Request.orderid)
  return orderid_;
}
inline void CInventory_PurchaseFinalize_Request::set_orderid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  orderid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_PurchaseFinalize_Request.orderid)
}

// -------------------------------------------------------------------

// CInventoryClient_NewItems_Notification

// optional uint32 appid = 1;
inline bool CInventoryClient_NewItems_Notification::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventoryClient_NewItems_Notification::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CInventoryClient_NewItems_Notification::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventoryClient_NewItems_Notification.appid)
  return appid_;
}
inline void CInventoryClient_NewItems_Notification::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventoryClient_NewItems_Notification.appid)
}

// optional .proto.steam.CInventory_Response inventory_response = 2;
inline bool CInventoryClient_NewItems_Notification::has_inventory_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventoryClient_NewItems_Notification::clear_inventory_response() {
  if (inventory_response_ != nullptr) inventory_response_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::steam::CInventory_Response& CInventoryClient_NewItems_Notification::inventory_response() const {
  const ::proto::steam::CInventory_Response* p = inventory_response_;
  // @@protoc_insertion_point(field_get:proto.steam.CInventoryClient_NewItems_Notification.inventory_response)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::steam::CInventory_Response*>(
      &::proto::steam::_CInventory_Response_default_instance_);
}
inline ::proto::steam::CInventory_Response* CInventoryClient_NewItems_Notification::release_inventory_response() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventoryClient_NewItems_Notification.inventory_response)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::steam::CInventory_Response* temp = inventory_response_;
  inventory_response_ = nullptr;
  return temp;
}
inline ::proto::steam::CInventory_Response* CInventoryClient_NewItems_Notification::mutable_inventory_response() {
  _has_bits_[0] |= 0x00000001u;
  if (inventory_response_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::steam::CInventory_Response>(GetArenaNoVirtual());
    inventory_response_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventoryClient_NewItems_Notification.inventory_response)
  return inventory_response_;
}
inline void CInventoryClient_NewItems_Notification::set_allocated_inventory_response(::proto::steam::CInventory_Response* inventory_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete inventory_response_;
  }
  if (inventory_response) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      inventory_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inventory_response, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  inventory_response_ = inventory_response;
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventoryClient_NewItems_Notification.inventory_response)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_steammessages_5finventory_2esteamclient_2eproto
