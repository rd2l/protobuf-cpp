// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_unified_test.steamclient.proto

#ifndef PROTOBUF_INCLUDED_steammessages_5funified_5ftest_2esteamclient_2eproto
#define PROTOBUF_INCLUDED_steammessages_5funified_5ftest_2esteamclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5funified_5ftest_2esteamclient_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5funified_5ftest_2esteamclient_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_steammessages_5funified_5ftest_2esteamclient_2eproto();
namespace proto {
namespace steam {
class CMsgTest_MessageToClient_Request;
class CMsgTest_MessageToClient_RequestDefaultTypeInternal;
extern CMsgTest_MessageToClient_RequestDefaultTypeInternal _CMsgTest_MessageToClient_Request_default_instance_;
class CMsgTest_MessageToClient_Response;
class CMsgTest_MessageToClient_ResponseDefaultTypeInternal;
extern CMsgTest_MessageToClient_ResponseDefaultTypeInternal _CMsgTest_MessageToClient_Response_default_instance_;
class CMsgTest_MessageToServer_Request;
class CMsgTest_MessageToServer_RequestDefaultTypeInternal;
extern CMsgTest_MessageToServer_RequestDefaultTypeInternal _CMsgTest_MessageToServer_Request_default_instance_;
class CMsgTest_MessageToServer_Response;
class CMsgTest_MessageToServer_ResponseDefaultTypeInternal;
extern CMsgTest_MessageToServer_ResponseDefaultTypeInternal _CMsgTest_MessageToServer_Response_default_instance_;
class CMsgTest_NotifyClient_Notification;
class CMsgTest_NotifyClient_NotificationDefaultTypeInternal;
extern CMsgTest_NotifyClient_NotificationDefaultTypeInternal _CMsgTest_NotifyClient_Notification_default_instance_;
class CMsgTest_NotifyServer_Notification;
class CMsgTest_NotifyServer_NotificationDefaultTypeInternal;
extern CMsgTest_NotifyServer_NotificationDefaultTypeInternal _CMsgTest_NotifyServer_Notification_default_instance_;
}  // namespace steam
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::steam::CMsgTest_MessageToClient_Request* Arena::CreateMaybeMessage<::proto::steam::CMsgTest_MessageToClient_Request>(Arena*);
template<> ::proto::steam::CMsgTest_MessageToClient_Response* Arena::CreateMaybeMessage<::proto::steam::CMsgTest_MessageToClient_Response>(Arena*);
template<> ::proto::steam::CMsgTest_MessageToServer_Request* Arena::CreateMaybeMessage<::proto::steam::CMsgTest_MessageToServer_Request>(Arena*);
template<> ::proto::steam::CMsgTest_MessageToServer_Response* Arena::CreateMaybeMessage<::proto::steam::CMsgTest_MessageToServer_Response>(Arena*);
template<> ::proto::steam::CMsgTest_NotifyClient_Notification* Arena::CreateMaybeMessage<::proto::steam::CMsgTest_NotifyClient_Notification>(Arena*);
template<> ::proto::steam::CMsgTest_NotifyServer_Notification* Arena::CreateMaybeMessage<::proto::steam::CMsgTest_NotifyServer_Notification>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace steam {

// ===================================================================

class CMsgTest_MessageToClient_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgTest_MessageToClient_Request) */ {
 public:
  CMsgTest_MessageToClient_Request();
  virtual ~CMsgTest_MessageToClient_Request();

  CMsgTest_MessageToClient_Request(const CMsgTest_MessageToClient_Request& from);

  inline CMsgTest_MessageToClient_Request& operator=(const CMsgTest_MessageToClient_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTest_MessageToClient_Request(CMsgTest_MessageToClient_Request&& from) noexcept
    : CMsgTest_MessageToClient_Request() {
    *this = ::std::move(from);
  }

  inline CMsgTest_MessageToClient_Request& operator=(CMsgTest_MessageToClient_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgTest_MessageToClient_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTest_MessageToClient_Request* internal_default_instance() {
    return reinterpret_cast<const CMsgTest_MessageToClient_Request*>(
               &_CMsgTest_MessageToClient_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CMsgTest_MessageToClient_Request* other);
  friend void swap(CMsgTest_MessageToClient_Request& a, CMsgTest_MessageToClient_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTest_MessageToClient_Request* New() const final {
    return CreateMaybeMessage<CMsgTest_MessageToClient_Request>(nullptr);
  }

  CMsgTest_MessageToClient_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTest_MessageToClient_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgTest_MessageToClient_Request& from);
  void MergeFrom(const CMsgTest_MessageToClient_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTest_MessageToClient_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string some_text = 1 [(.proto.steam.description) = "Some string."];
  bool has_some_text() const;
  void clear_some_text();
  static const int kSomeTextFieldNumber = 1;
  const ::std::string& some_text() const;
  void set_some_text(const ::std::string& value);
  #if LANG_CXX11
  void set_some_text(::std::string&& value);
  #endif
  void set_some_text(const char* value);
  void set_some_text(const char* value, size_t size);
  ::std::string* mutable_some_text();
  ::std::string* release_some_text();
  void set_allocated_some_text(::std::string* some_text);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgTest_MessageToClient_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr some_text_;
  friend struct ::TableStruct_steammessages_5funified_5ftest_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgTest_MessageToClient_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgTest_MessageToClient_Response) */ {
 public:
  CMsgTest_MessageToClient_Response();
  virtual ~CMsgTest_MessageToClient_Response();

  CMsgTest_MessageToClient_Response(const CMsgTest_MessageToClient_Response& from);

  inline CMsgTest_MessageToClient_Response& operator=(const CMsgTest_MessageToClient_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTest_MessageToClient_Response(CMsgTest_MessageToClient_Response&& from) noexcept
    : CMsgTest_MessageToClient_Response() {
    *this = ::std::move(from);
  }

  inline CMsgTest_MessageToClient_Response& operator=(CMsgTest_MessageToClient_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgTest_MessageToClient_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTest_MessageToClient_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgTest_MessageToClient_Response*>(
               &_CMsgTest_MessageToClient_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CMsgTest_MessageToClient_Response* other);
  friend void swap(CMsgTest_MessageToClient_Response& a, CMsgTest_MessageToClient_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTest_MessageToClient_Response* New() const final {
    return CreateMaybeMessage<CMsgTest_MessageToClient_Response>(nullptr);
  }

  CMsgTest_MessageToClient_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTest_MessageToClient_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgTest_MessageToClient_Response& from);
  void MergeFrom(const CMsgTest_MessageToClient_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTest_MessageToClient_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string some_text = 1 [(.proto.steam.description) = "Some string."];
  bool has_some_text() const;
  void clear_some_text();
  static const int kSomeTextFieldNumber = 1;
  const ::std::string& some_text() const;
  void set_some_text(const ::std::string& value);
  #if LANG_CXX11
  void set_some_text(::std::string&& value);
  #endif
  void set_some_text(const char* value);
  void set_some_text(const char* value, size_t size);
  ::std::string* mutable_some_text();
  ::std::string* release_some_text();
  void set_allocated_some_text(::std::string* some_text);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgTest_MessageToClient_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr some_text_;
  friend struct ::TableStruct_steammessages_5funified_5ftest_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgTest_NotifyClient_Notification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgTest_NotifyClient_Notification) */ {
 public:
  CMsgTest_NotifyClient_Notification();
  virtual ~CMsgTest_NotifyClient_Notification();

  CMsgTest_NotifyClient_Notification(const CMsgTest_NotifyClient_Notification& from);

  inline CMsgTest_NotifyClient_Notification& operator=(const CMsgTest_NotifyClient_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTest_NotifyClient_Notification(CMsgTest_NotifyClient_Notification&& from) noexcept
    : CMsgTest_NotifyClient_Notification() {
    *this = ::std::move(from);
  }

  inline CMsgTest_NotifyClient_Notification& operator=(CMsgTest_NotifyClient_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgTest_NotifyClient_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTest_NotifyClient_Notification* internal_default_instance() {
    return reinterpret_cast<const CMsgTest_NotifyClient_Notification*>(
               &_CMsgTest_NotifyClient_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CMsgTest_NotifyClient_Notification* other);
  friend void swap(CMsgTest_NotifyClient_Notification& a, CMsgTest_NotifyClient_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTest_NotifyClient_Notification* New() const final {
    return CreateMaybeMessage<CMsgTest_NotifyClient_Notification>(nullptr);
  }

  CMsgTest_NotifyClient_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTest_NotifyClient_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgTest_NotifyClient_Notification& from);
  void MergeFrom(const CMsgTest_NotifyClient_Notification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTest_NotifyClient_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string some_text = 1 [(.proto.steam.description) = "Some string."];
  bool has_some_text() const;
  void clear_some_text();
  static const int kSomeTextFieldNumber = 1;
  const ::std::string& some_text() const;
  void set_some_text(const ::std::string& value);
  #if LANG_CXX11
  void set_some_text(::std::string&& value);
  #endif
  void set_some_text(const char* value);
  void set_some_text(const char* value, size_t size);
  ::std::string* mutable_some_text();
  ::std::string* release_some_text();
  void set_allocated_some_text(::std::string* some_text);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgTest_NotifyClient_Notification)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr some_text_;
  friend struct ::TableStruct_steammessages_5funified_5ftest_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgTest_MessageToServer_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgTest_MessageToServer_Request) */ {
 public:
  CMsgTest_MessageToServer_Request();
  virtual ~CMsgTest_MessageToServer_Request();

  CMsgTest_MessageToServer_Request(const CMsgTest_MessageToServer_Request& from);

  inline CMsgTest_MessageToServer_Request& operator=(const CMsgTest_MessageToServer_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTest_MessageToServer_Request(CMsgTest_MessageToServer_Request&& from) noexcept
    : CMsgTest_MessageToServer_Request() {
    *this = ::std::move(from);
  }

  inline CMsgTest_MessageToServer_Request& operator=(CMsgTest_MessageToServer_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgTest_MessageToServer_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTest_MessageToServer_Request* internal_default_instance() {
    return reinterpret_cast<const CMsgTest_MessageToServer_Request*>(
               &_CMsgTest_MessageToServer_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CMsgTest_MessageToServer_Request* other);
  friend void swap(CMsgTest_MessageToServer_Request& a, CMsgTest_MessageToServer_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTest_MessageToServer_Request* New() const final {
    return CreateMaybeMessage<CMsgTest_MessageToServer_Request>(nullptr);
  }

  CMsgTest_MessageToServer_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTest_MessageToServer_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgTest_MessageToServer_Request& from);
  void MergeFrom(const CMsgTest_MessageToServer_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTest_MessageToServer_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string some_text = 1 [(.proto.steam.description) = "Some string."];
  bool has_some_text() const;
  void clear_some_text();
  static const int kSomeTextFieldNumber = 1;
  const ::std::string& some_text() const;
  void set_some_text(const ::std::string& value);
  #if LANG_CXX11
  void set_some_text(::std::string&& value);
  #endif
  void set_some_text(const char* value);
  void set_some_text(const char* value, size_t size);
  ::std::string* mutable_some_text();
  ::std::string* release_some_text();
  void set_allocated_some_text(::std::string* some_text);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgTest_MessageToServer_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr some_text_;
  friend struct ::TableStruct_steammessages_5funified_5ftest_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgTest_MessageToServer_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgTest_MessageToServer_Response) */ {
 public:
  CMsgTest_MessageToServer_Response();
  virtual ~CMsgTest_MessageToServer_Response();

  CMsgTest_MessageToServer_Response(const CMsgTest_MessageToServer_Response& from);

  inline CMsgTest_MessageToServer_Response& operator=(const CMsgTest_MessageToServer_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTest_MessageToServer_Response(CMsgTest_MessageToServer_Response&& from) noexcept
    : CMsgTest_MessageToServer_Response() {
    *this = ::std::move(from);
  }

  inline CMsgTest_MessageToServer_Response& operator=(CMsgTest_MessageToServer_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgTest_MessageToServer_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTest_MessageToServer_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgTest_MessageToServer_Response*>(
               &_CMsgTest_MessageToServer_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CMsgTest_MessageToServer_Response* other);
  friend void swap(CMsgTest_MessageToServer_Response& a, CMsgTest_MessageToServer_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTest_MessageToServer_Response* New() const final {
    return CreateMaybeMessage<CMsgTest_MessageToServer_Response>(nullptr);
  }

  CMsgTest_MessageToServer_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTest_MessageToServer_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgTest_MessageToServer_Response& from);
  void MergeFrom(const CMsgTest_MessageToServer_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTest_MessageToServer_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string some_text = 1 [(.proto.steam.description) = "Some string."];
  bool has_some_text() const;
  void clear_some_text();
  static const int kSomeTextFieldNumber = 1;
  const ::std::string& some_text() const;
  void set_some_text(const ::std::string& value);
  #if LANG_CXX11
  void set_some_text(::std::string&& value);
  #endif
  void set_some_text(const char* value);
  void set_some_text(const char* value, size_t size);
  ::std::string* mutable_some_text();
  ::std::string* release_some_text();
  void set_allocated_some_text(::std::string* some_text);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgTest_MessageToServer_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr some_text_;
  friend struct ::TableStruct_steammessages_5funified_5ftest_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CMsgTest_NotifyServer_Notification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgTest_NotifyServer_Notification) */ {
 public:
  CMsgTest_NotifyServer_Notification();
  virtual ~CMsgTest_NotifyServer_Notification();

  CMsgTest_NotifyServer_Notification(const CMsgTest_NotifyServer_Notification& from);

  inline CMsgTest_NotifyServer_Notification& operator=(const CMsgTest_NotifyServer_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTest_NotifyServer_Notification(CMsgTest_NotifyServer_Notification&& from) noexcept
    : CMsgTest_NotifyServer_Notification() {
    *this = ::std::move(from);
  }

  inline CMsgTest_NotifyServer_Notification& operator=(CMsgTest_NotifyServer_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgTest_NotifyServer_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTest_NotifyServer_Notification* internal_default_instance() {
    return reinterpret_cast<const CMsgTest_NotifyServer_Notification*>(
               &_CMsgTest_NotifyServer_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CMsgTest_NotifyServer_Notification* other);
  friend void swap(CMsgTest_NotifyServer_Notification& a, CMsgTest_NotifyServer_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTest_NotifyServer_Notification* New() const final {
    return CreateMaybeMessage<CMsgTest_NotifyServer_Notification>(nullptr);
  }

  CMsgTest_NotifyServer_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTest_NotifyServer_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgTest_NotifyServer_Notification& from);
  void MergeFrom(const CMsgTest_NotifyServer_Notification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTest_NotifyServer_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string some_text = 1 [(.proto.steam.description) = "Some string."];
  bool has_some_text() const;
  void clear_some_text();
  static const int kSomeTextFieldNumber = 1;
  const ::std::string& some_text() const;
  void set_some_text(const ::std::string& value);
  #if LANG_CXX11
  void set_some_text(::std::string&& value);
  #endif
  void set_some_text(const char* value);
  void set_some_text(const char* value, size_t size);
  ::std::string* mutable_some_text();
  ::std::string* release_some_text();
  void set_allocated_some_text(::std::string* some_text);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgTest_NotifyServer_Notification)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr some_text_;
  friend struct ::TableStruct_steammessages_5funified_5ftest_2esteamclient_2eproto;
};
// ===================================================================

class TestSteamClient_Stub;

class TestSteamClient : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline TestSteamClient() {};
 public:
  virtual ~TestSteamClient();

  typedef TestSteamClient_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void MessageToClient(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CMsgTest_MessageToClient_Request* request,
                       ::proto::steam::CMsgTest_MessageToClient_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyClient(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CMsgTest_NotifyClient_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(TestSteamClient);
};

class TestSteamClient_Stub : public TestSteamClient {
 public:
  TestSteamClient_Stub(::google::protobuf::RpcChannel* channel);
  TestSteamClient_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~TestSteamClient_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements TestSteamClient ------------------------------------------

  void MessageToClient(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CMsgTest_MessageToClient_Request* request,
                       ::proto::steam::CMsgTest_MessageToClient_Response* response,
                       ::google::protobuf::Closure* done);
  void NotifyClient(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CMsgTest_NotifyClient_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(TestSteamClient_Stub);
};


// -------------------------------------------------------------------

class TestServerFromClient_Stub;

class TestServerFromClient : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline TestServerFromClient() {};
 public:
  virtual ~TestServerFromClient();

  typedef TestServerFromClient_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void MessageToServer(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CMsgTest_MessageToServer_Request* request,
                       ::proto::steam::CMsgTest_MessageToServer_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyServer(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CMsgTest_NotifyServer_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(TestServerFromClient);
};

class TestServerFromClient_Stub : public TestServerFromClient {
 public:
  TestServerFromClient_Stub(::google::protobuf::RpcChannel* channel);
  TestServerFromClient_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~TestServerFromClient_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements TestServerFromClient ------------------------------------------

  void MessageToServer(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CMsgTest_MessageToServer_Request* request,
                       ::proto::steam::CMsgTest_MessageToServer_Response* response,
                       ::google::protobuf::Closure* done);
  void NotifyServer(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CMsgTest_NotifyServer_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(TestServerFromClient_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgTest_MessageToClient_Request

// optional string some_text = 1 [(.proto.steam.description) = "Some string."];
inline bool CMsgTest_MessageToClient_Request::has_some_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTest_MessageToClient_Request::clear_some_text() {
  some_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgTest_MessageToClient_Request::some_text() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTest_MessageToClient_Request.some_text)
  return some_text_.GetNoArena();
}
inline void CMsgTest_MessageToClient_Request::set_some_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTest_MessageToClient_Request.some_text)
}
#if LANG_CXX11
inline void CMsgTest_MessageToClient_Request::set_some_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgTest_MessageToClient_Request.some_text)
}
#endif
inline void CMsgTest_MessageToClient_Request::set_some_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgTest_MessageToClient_Request.some_text)
}
inline void CMsgTest_MessageToClient_Request::set_some_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgTest_MessageToClient_Request.some_text)
}
inline ::std::string* CMsgTest_MessageToClient_Request::mutable_some_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgTest_MessageToClient_Request.some_text)
  return some_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTest_MessageToClient_Request::release_some_text() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgTest_MessageToClient_Request.some_text)
  if (!has_some_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return some_text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTest_MessageToClient_Request::set_allocated_some_text(::std::string* some_text) {
  if (some_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  some_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), some_text);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgTest_MessageToClient_Request.some_text)
}

// -------------------------------------------------------------------

// CMsgTest_MessageToClient_Response

// optional string some_text = 1 [(.proto.steam.description) = "Some string."];
inline bool CMsgTest_MessageToClient_Response::has_some_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTest_MessageToClient_Response::clear_some_text() {
  some_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgTest_MessageToClient_Response::some_text() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTest_MessageToClient_Response.some_text)
  return some_text_.GetNoArena();
}
inline void CMsgTest_MessageToClient_Response::set_some_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTest_MessageToClient_Response.some_text)
}
#if LANG_CXX11
inline void CMsgTest_MessageToClient_Response::set_some_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgTest_MessageToClient_Response.some_text)
}
#endif
inline void CMsgTest_MessageToClient_Response::set_some_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgTest_MessageToClient_Response.some_text)
}
inline void CMsgTest_MessageToClient_Response::set_some_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgTest_MessageToClient_Response.some_text)
}
inline ::std::string* CMsgTest_MessageToClient_Response::mutable_some_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgTest_MessageToClient_Response.some_text)
  return some_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTest_MessageToClient_Response::release_some_text() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgTest_MessageToClient_Response.some_text)
  if (!has_some_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return some_text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTest_MessageToClient_Response::set_allocated_some_text(::std::string* some_text) {
  if (some_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  some_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), some_text);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgTest_MessageToClient_Response.some_text)
}

// -------------------------------------------------------------------

// CMsgTest_NotifyClient_Notification

// optional string some_text = 1 [(.proto.steam.description) = "Some string."];
inline bool CMsgTest_NotifyClient_Notification::has_some_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTest_NotifyClient_Notification::clear_some_text() {
  some_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgTest_NotifyClient_Notification::some_text() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTest_NotifyClient_Notification.some_text)
  return some_text_.GetNoArena();
}
inline void CMsgTest_NotifyClient_Notification::set_some_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTest_NotifyClient_Notification.some_text)
}
#if LANG_CXX11
inline void CMsgTest_NotifyClient_Notification::set_some_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgTest_NotifyClient_Notification.some_text)
}
#endif
inline void CMsgTest_NotifyClient_Notification::set_some_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgTest_NotifyClient_Notification.some_text)
}
inline void CMsgTest_NotifyClient_Notification::set_some_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgTest_NotifyClient_Notification.some_text)
}
inline ::std::string* CMsgTest_NotifyClient_Notification::mutable_some_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgTest_NotifyClient_Notification.some_text)
  return some_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTest_NotifyClient_Notification::release_some_text() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgTest_NotifyClient_Notification.some_text)
  if (!has_some_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return some_text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTest_NotifyClient_Notification::set_allocated_some_text(::std::string* some_text) {
  if (some_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  some_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), some_text);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgTest_NotifyClient_Notification.some_text)
}

// -------------------------------------------------------------------

// CMsgTest_MessageToServer_Request

// optional string some_text = 1 [(.proto.steam.description) = "Some string."];
inline bool CMsgTest_MessageToServer_Request::has_some_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTest_MessageToServer_Request::clear_some_text() {
  some_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgTest_MessageToServer_Request::some_text() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTest_MessageToServer_Request.some_text)
  return some_text_.GetNoArena();
}
inline void CMsgTest_MessageToServer_Request::set_some_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTest_MessageToServer_Request.some_text)
}
#if LANG_CXX11
inline void CMsgTest_MessageToServer_Request::set_some_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgTest_MessageToServer_Request.some_text)
}
#endif
inline void CMsgTest_MessageToServer_Request::set_some_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgTest_MessageToServer_Request.some_text)
}
inline void CMsgTest_MessageToServer_Request::set_some_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgTest_MessageToServer_Request.some_text)
}
inline ::std::string* CMsgTest_MessageToServer_Request::mutable_some_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgTest_MessageToServer_Request.some_text)
  return some_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTest_MessageToServer_Request::release_some_text() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgTest_MessageToServer_Request.some_text)
  if (!has_some_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return some_text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTest_MessageToServer_Request::set_allocated_some_text(::std::string* some_text) {
  if (some_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  some_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), some_text);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgTest_MessageToServer_Request.some_text)
}

// -------------------------------------------------------------------

// CMsgTest_MessageToServer_Response

// optional string some_text = 1 [(.proto.steam.description) = "Some string."];
inline bool CMsgTest_MessageToServer_Response::has_some_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTest_MessageToServer_Response::clear_some_text() {
  some_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgTest_MessageToServer_Response::some_text() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTest_MessageToServer_Response.some_text)
  return some_text_.GetNoArena();
}
inline void CMsgTest_MessageToServer_Response::set_some_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTest_MessageToServer_Response.some_text)
}
#if LANG_CXX11
inline void CMsgTest_MessageToServer_Response::set_some_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgTest_MessageToServer_Response.some_text)
}
#endif
inline void CMsgTest_MessageToServer_Response::set_some_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgTest_MessageToServer_Response.some_text)
}
inline void CMsgTest_MessageToServer_Response::set_some_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgTest_MessageToServer_Response.some_text)
}
inline ::std::string* CMsgTest_MessageToServer_Response::mutable_some_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgTest_MessageToServer_Response.some_text)
  return some_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTest_MessageToServer_Response::release_some_text() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgTest_MessageToServer_Response.some_text)
  if (!has_some_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return some_text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTest_MessageToServer_Response::set_allocated_some_text(::std::string* some_text) {
  if (some_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  some_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), some_text);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgTest_MessageToServer_Response.some_text)
}

// -------------------------------------------------------------------

// CMsgTest_NotifyServer_Notification

// optional string some_text = 1 [(.proto.steam.description) = "Some string."];
inline bool CMsgTest_NotifyServer_Notification::has_some_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTest_NotifyServer_Notification::clear_some_text() {
  some_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgTest_NotifyServer_Notification::some_text() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTest_NotifyServer_Notification.some_text)
  return some_text_.GetNoArena();
}
inline void CMsgTest_NotifyServer_Notification::set_some_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTest_NotifyServer_Notification.some_text)
}
#if LANG_CXX11
inline void CMsgTest_NotifyServer_Notification::set_some_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgTest_NotifyServer_Notification.some_text)
}
#endif
inline void CMsgTest_NotifyServer_Notification::set_some_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgTest_NotifyServer_Notification.some_text)
}
inline void CMsgTest_NotifyServer_Notification::set_some_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  some_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgTest_NotifyServer_Notification.some_text)
}
inline ::std::string* CMsgTest_NotifyServer_Notification::mutable_some_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgTest_NotifyServer_Notification.some_text)
  return some_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTest_NotifyServer_Notification::release_some_text() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgTest_NotifyServer_Notification.some_text)
  if (!has_some_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return some_text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTest_NotifyServer_Notification::set_allocated_some_text(::std::string* some_text) {
  if (some_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  some_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), some_text);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgTest_NotifyServer_Notification.some_text)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_steammessages_5funified_5ftest_2esteamclient_2eproto
