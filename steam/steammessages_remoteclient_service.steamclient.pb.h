// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_remoteclient_service.steamclient.proto

#ifndef PROTOBUF_INCLUDED_steammessages_5fremoteclient_5fservice_2esteamclient_2eproto
#define PROTOBUF_INCLUDED_steammessages_5fremoteclient_5fservice_2esteamclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fremoteclient_5fservice_2esteamclient_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fremoteclient_5fservice_2esteamclient_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_steammessages_5fremoteclient_5fservice_2esteamclient_2eproto();
namespace proto {
namespace steam {
class CRemoteClient_GetPairingInfo_Request;
class CRemoteClient_GetPairingInfo_RequestDefaultTypeInternal;
extern CRemoteClient_GetPairingInfo_RequestDefaultTypeInternal _CRemoteClient_GetPairingInfo_Request_default_instance_;
class CRemoteClient_GetPairingInfo_Response;
class CRemoteClient_GetPairingInfo_ResponseDefaultTypeInternal;
extern CRemoteClient_GetPairingInfo_ResponseDefaultTypeInternal _CRemoteClient_GetPairingInfo_Response_default_instance_;
class CRemoteClient_RemotePacket_Notification;
class CRemoteClient_RemotePacket_NotificationDefaultTypeInternal;
extern CRemoteClient_RemotePacket_NotificationDefaultTypeInternal _CRemoteClient_RemotePacket_Notification_default_instance_;
class CRemoteClient_ReplyPacket_Notification;
class CRemoteClient_ReplyPacket_NotificationDefaultTypeInternal;
extern CRemoteClient_ReplyPacket_NotificationDefaultTypeInternal _CRemoteClient_ReplyPacket_Notification_default_instance_;
}  // namespace steam
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::steam::CRemoteClient_GetPairingInfo_Request* Arena::CreateMaybeMessage<::proto::steam::CRemoteClient_GetPairingInfo_Request>(Arena*);
template<> ::proto::steam::CRemoteClient_GetPairingInfo_Response* Arena::CreateMaybeMessage<::proto::steam::CRemoteClient_GetPairingInfo_Response>(Arena*);
template<> ::proto::steam::CRemoteClient_RemotePacket_Notification* Arena::CreateMaybeMessage<::proto::steam::CRemoteClient_RemotePacket_Notification>(Arena*);
template<> ::proto::steam::CRemoteClient_ReplyPacket_Notification* Arena::CreateMaybeMessage<::proto::steam::CRemoteClient_ReplyPacket_Notification>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace steam {

// ===================================================================

class CRemoteClient_GetPairingInfo_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CRemoteClient_GetPairingInfo_Request) */ {
 public:
  CRemoteClient_GetPairingInfo_Request();
  virtual ~CRemoteClient_GetPairingInfo_Request();

  CRemoteClient_GetPairingInfo_Request(const CRemoteClient_GetPairingInfo_Request& from);

  inline CRemoteClient_GetPairingInfo_Request& operator=(const CRemoteClient_GetPairingInfo_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CRemoteClient_GetPairingInfo_Request(CRemoteClient_GetPairingInfo_Request&& from) noexcept
    : CRemoteClient_GetPairingInfo_Request() {
    *this = ::std::move(from);
  }

  inline CRemoteClient_GetPairingInfo_Request& operator=(CRemoteClient_GetPairingInfo_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CRemoteClient_GetPairingInfo_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CRemoteClient_GetPairingInfo_Request* internal_default_instance() {
    return reinterpret_cast<const CRemoteClient_GetPairingInfo_Request*>(
               &_CRemoteClient_GetPairingInfo_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CRemoteClient_GetPairingInfo_Request* other);
  friend void swap(CRemoteClient_GetPairingInfo_Request& a, CRemoteClient_GetPairingInfo_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CRemoteClient_GetPairingInfo_Request* New() const final {
    return CreateMaybeMessage<CRemoteClient_GetPairingInfo_Request>(nullptr);
  }

  CRemoteClient_GetPairingInfo_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CRemoteClient_GetPairingInfo_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CRemoteClient_GetPairingInfo_Request& from);
  void MergeFrom(const CRemoteClient_GetPairingInfo_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CRemoteClient_GetPairingInfo_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pin = 1;
  bool has_pin() const;
  void clear_pin();
  static const int kPinFieldNumber = 1;
  ::google::protobuf::uint32 pin() const;
  void set_pin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CRemoteClient_GetPairingInfo_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 pin_;
  friend struct ::TableStruct_steammessages_5fremoteclient_5fservice_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CRemoteClient_GetPairingInfo_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CRemoteClient_GetPairingInfo_Response) */ {
 public:
  CRemoteClient_GetPairingInfo_Response();
  virtual ~CRemoteClient_GetPairingInfo_Response();

  CRemoteClient_GetPairingInfo_Response(const CRemoteClient_GetPairingInfo_Response& from);

  inline CRemoteClient_GetPairingInfo_Response& operator=(const CRemoteClient_GetPairingInfo_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CRemoteClient_GetPairingInfo_Response(CRemoteClient_GetPairingInfo_Response&& from) noexcept
    : CRemoteClient_GetPairingInfo_Response() {
    *this = ::std::move(from);
  }

  inline CRemoteClient_GetPairingInfo_Response& operator=(CRemoteClient_GetPairingInfo_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CRemoteClient_GetPairingInfo_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CRemoteClient_GetPairingInfo_Response* internal_default_instance() {
    return reinterpret_cast<const CRemoteClient_GetPairingInfo_Response*>(
               &_CRemoteClient_GetPairingInfo_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CRemoteClient_GetPairingInfo_Response* other);
  friend void swap(CRemoteClient_GetPairingInfo_Response& a, CRemoteClient_GetPairingInfo_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CRemoteClient_GetPairingInfo_Response* New() const final {
    return CreateMaybeMessage<CRemoteClient_GetPairingInfo_Response>(nullptr);
  }

  CRemoteClient_GetPairingInfo_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CRemoteClient_GetPairingInfo_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CRemoteClient_GetPairingInfo_Response& from);
  void MergeFrom(const CRemoteClient_GetPairingInfo_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CRemoteClient_GetPairingInfo_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes request = 3;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 3;
  const ::std::string& request() const;
  void set_request(const ::std::string& value);
  #if LANG_CXX11
  void set_request(::std::string&& value);
  #endif
  void set_request(const char* value);
  void set_request(const void* value, size_t size);
  ::std::string* mutable_request();
  ::std::string* release_request();
  void set_allocated_request(::std::string* request);

  // optional fixed64 session_id = 1;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::uint64 session_id() const;
  void set_session_id(::google::protobuf::uint64 value);

  // optional fixed64 device_id = 2;
  bool has_device_id() const;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 2;
  ::google::protobuf::uint64 device_id() const;
  void set_device_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CRemoteClient_GetPairingInfo_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr request_;
  ::google::protobuf::uint64 session_id_;
  ::google::protobuf::uint64 device_id_;
  friend struct ::TableStruct_steammessages_5fremoteclient_5fservice_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CRemoteClient_ReplyPacket_Notification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CRemoteClient_ReplyPacket_Notification) */ {
 public:
  CRemoteClient_ReplyPacket_Notification();
  virtual ~CRemoteClient_ReplyPacket_Notification();

  CRemoteClient_ReplyPacket_Notification(const CRemoteClient_ReplyPacket_Notification& from);

  inline CRemoteClient_ReplyPacket_Notification& operator=(const CRemoteClient_ReplyPacket_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CRemoteClient_ReplyPacket_Notification(CRemoteClient_ReplyPacket_Notification&& from) noexcept
    : CRemoteClient_ReplyPacket_Notification() {
    *this = ::std::move(from);
  }

  inline CRemoteClient_ReplyPacket_Notification& operator=(CRemoteClient_ReplyPacket_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CRemoteClient_ReplyPacket_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CRemoteClient_ReplyPacket_Notification* internal_default_instance() {
    return reinterpret_cast<const CRemoteClient_ReplyPacket_Notification*>(
               &_CRemoteClient_ReplyPacket_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CRemoteClient_ReplyPacket_Notification* other);
  friend void swap(CRemoteClient_ReplyPacket_Notification& a, CRemoteClient_ReplyPacket_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CRemoteClient_ReplyPacket_Notification* New() const final {
    return CreateMaybeMessage<CRemoteClient_ReplyPacket_Notification>(nullptr);
  }

  CRemoteClient_ReplyPacket_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CRemoteClient_ReplyPacket_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CRemoteClient_ReplyPacket_Notification& from);
  void MergeFrom(const CRemoteClient_ReplyPacket_Notification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CRemoteClient_ReplyPacket_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes payload = 2;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // optional fixed64 session_id = 1;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::uint64 session_id() const;
  void set_session_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CRemoteClient_ReplyPacket_Notification)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::google::protobuf::uint64 session_id_;
  friend struct ::TableStruct_steammessages_5fremoteclient_5fservice_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CRemoteClient_RemotePacket_Notification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CRemoteClient_RemotePacket_Notification) */ {
 public:
  CRemoteClient_RemotePacket_Notification();
  virtual ~CRemoteClient_RemotePacket_Notification();

  CRemoteClient_RemotePacket_Notification(const CRemoteClient_RemotePacket_Notification& from);

  inline CRemoteClient_RemotePacket_Notification& operator=(const CRemoteClient_RemotePacket_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CRemoteClient_RemotePacket_Notification(CRemoteClient_RemotePacket_Notification&& from) noexcept
    : CRemoteClient_RemotePacket_Notification() {
    *this = ::std::move(from);
  }

  inline CRemoteClient_RemotePacket_Notification& operator=(CRemoteClient_RemotePacket_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CRemoteClient_RemotePacket_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CRemoteClient_RemotePacket_Notification* internal_default_instance() {
    return reinterpret_cast<const CRemoteClient_RemotePacket_Notification*>(
               &_CRemoteClient_RemotePacket_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CRemoteClient_RemotePacket_Notification* other);
  friend void swap(CRemoteClient_RemotePacket_Notification& a, CRemoteClient_RemotePacket_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CRemoteClient_RemotePacket_Notification* New() const final {
    return CreateMaybeMessage<CRemoteClient_RemotePacket_Notification>(nullptr);
  }

  CRemoteClient_RemotePacket_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CRemoteClient_RemotePacket_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CRemoteClient_RemotePacket_Notification& from);
  void MergeFrom(const CRemoteClient_RemotePacket_Notification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CRemoteClient_RemotePacket_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes payload = 4;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 4;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // optional fixed64 session_id = 1;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::uint64 session_id() const;
  void set_session_id(::google::protobuf::uint64 value);

  // optional fixed64 steamid = 2;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CRemoteClient_RemotePacket_Notification)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::google::protobuf::uint64 session_id_;
  ::google::protobuf::uint64 steamid_;
  friend struct ::TableStruct_steammessages_5fremoteclient_5fservice_2esteamclient_2eproto;
};
// ===================================================================

class RemoteClient_Stub;

class RemoteClient : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline RemoteClient() {};
 public:
  virtual ~RemoteClient();

  typedef RemoteClient_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void GetPairingInfo(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CRemoteClient_GetPairingInfo_Request* request,
                       ::proto::steam::CRemoteClient_GetPairingInfo_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyReplyPacket(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CRemoteClient_ReplyPacket_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RemoteClient);
};

class RemoteClient_Stub : public RemoteClient {
 public:
  RemoteClient_Stub(::google::protobuf::RpcChannel* channel);
  RemoteClient_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~RemoteClient_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements RemoteClient ------------------------------------------

  void GetPairingInfo(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CRemoteClient_GetPairingInfo_Request* request,
                       ::proto::steam::CRemoteClient_GetPairingInfo_Response* response,
                       ::google::protobuf::Closure* done);
  void NotifyReplyPacket(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CRemoteClient_ReplyPacket_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RemoteClient_Stub);
};


// -------------------------------------------------------------------

class RemoteClientSteamClient_Stub;

class RemoteClientSteamClient : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline RemoteClientSteamClient() {};
 public:
  virtual ~RemoteClientSteamClient();

  typedef RemoteClientSteamClient_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void NotifyRemotePacket(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CRemoteClient_RemotePacket_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RemoteClientSteamClient);
};

class RemoteClientSteamClient_Stub : public RemoteClientSteamClient {
 public:
  RemoteClientSteamClient_Stub(::google::protobuf::RpcChannel* channel);
  RemoteClientSteamClient_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~RemoteClientSteamClient_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements RemoteClientSteamClient ------------------------------------------

  void NotifyRemotePacket(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CRemoteClient_RemotePacket_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RemoteClientSteamClient_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CRemoteClient_GetPairingInfo_Request

// optional uint32 pin = 1;
inline bool CRemoteClient_GetPairingInfo_Request::has_pin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CRemoteClient_GetPairingInfo_Request::clear_pin() {
  pin_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CRemoteClient_GetPairingInfo_Request::pin() const {
  // @@protoc_insertion_point(field_get:proto.steam.CRemoteClient_GetPairingInfo_Request.pin)
  return pin_;
}
inline void CRemoteClient_GetPairingInfo_Request::set_pin(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  pin_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CRemoteClient_GetPairingInfo_Request.pin)
}

// -------------------------------------------------------------------

// CRemoteClient_GetPairingInfo_Response

// optional fixed64 session_id = 1;
inline bool CRemoteClient_GetPairingInfo_Response::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CRemoteClient_GetPairingInfo_Response::clear_session_id() {
  session_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CRemoteClient_GetPairingInfo_Response::session_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CRemoteClient_GetPairingInfo_Response.session_id)
  return session_id_;
}
inline void CRemoteClient_GetPairingInfo_Response::set_session_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  session_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CRemoteClient_GetPairingInfo_Response.session_id)
}

// optional fixed64 device_id = 2;
inline bool CRemoteClient_GetPairingInfo_Response::has_device_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CRemoteClient_GetPairingInfo_Response::clear_device_id() {
  device_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CRemoteClient_GetPairingInfo_Response::device_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CRemoteClient_GetPairingInfo_Response.device_id)
  return device_id_;
}
inline void CRemoteClient_GetPairingInfo_Response::set_device_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  device_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CRemoteClient_GetPairingInfo_Response.device_id)
}

// optional bytes request = 3;
inline bool CRemoteClient_GetPairingInfo_Response::has_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CRemoteClient_GetPairingInfo_Response::clear_request() {
  request_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CRemoteClient_GetPairingInfo_Response::request() const {
  // @@protoc_insertion_point(field_get:proto.steam.CRemoteClient_GetPairingInfo_Response.request)
  return request_.GetNoArena();
}
inline void CRemoteClient_GetPairingInfo_Response::set_request(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  request_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CRemoteClient_GetPairingInfo_Response.request)
}
#if LANG_CXX11
inline void CRemoteClient_GetPairingInfo_Response::set_request(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  request_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CRemoteClient_GetPairingInfo_Response.request)
}
#endif
inline void CRemoteClient_GetPairingInfo_Response::set_request(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  request_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CRemoteClient_GetPairingInfo_Response.request)
}
inline void CRemoteClient_GetPairingInfo_Response::set_request(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  request_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CRemoteClient_GetPairingInfo_Response.request)
}
inline ::std::string* CRemoteClient_GetPairingInfo_Response::mutable_request() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CRemoteClient_GetPairingInfo_Response.request)
  return request_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CRemoteClient_GetPairingInfo_Response::release_request() {
  // @@protoc_insertion_point(field_release:proto.steam.CRemoteClient_GetPairingInfo_Response.request)
  if (!has_request()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return request_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CRemoteClient_GetPairingInfo_Response::set_allocated_request(::std::string* request) {
  if (request != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  request_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CRemoteClient_GetPairingInfo_Response.request)
}

// -------------------------------------------------------------------

// CRemoteClient_ReplyPacket_Notification

// optional fixed64 session_id = 1;
inline bool CRemoteClient_ReplyPacket_Notification::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CRemoteClient_ReplyPacket_Notification::clear_session_id() {
  session_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CRemoteClient_ReplyPacket_Notification::session_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CRemoteClient_ReplyPacket_Notification.session_id)
  return session_id_;
}
inline void CRemoteClient_ReplyPacket_Notification::set_session_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  session_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CRemoteClient_ReplyPacket_Notification.session_id)
}

// optional bytes payload = 2;
inline bool CRemoteClient_ReplyPacket_Notification::has_payload() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CRemoteClient_ReplyPacket_Notification::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CRemoteClient_ReplyPacket_Notification::payload() const {
  // @@protoc_insertion_point(field_get:proto.steam.CRemoteClient_ReplyPacket_Notification.payload)
  return payload_.GetNoArena();
}
inline void CRemoteClient_ReplyPacket_Notification::set_payload(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CRemoteClient_ReplyPacket_Notification.payload)
}
#if LANG_CXX11
inline void CRemoteClient_ReplyPacket_Notification::set_payload(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CRemoteClient_ReplyPacket_Notification.payload)
}
#endif
inline void CRemoteClient_ReplyPacket_Notification::set_payload(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CRemoteClient_ReplyPacket_Notification.payload)
}
inline void CRemoteClient_ReplyPacket_Notification::set_payload(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CRemoteClient_ReplyPacket_Notification.payload)
}
inline ::std::string* CRemoteClient_ReplyPacket_Notification::mutable_payload() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CRemoteClient_ReplyPacket_Notification.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CRemoteClient_ReplyPacket_Notification::release_payload() {
  // @@protoc_insertion_point(field_release:proto.steam.CRemoteClient_ReplyPacket_Notification.payload)
  if (!has_payload()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return payload_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CRemoteClient_ReplyPacket_Notification::set_allocated_payload(::std::string* payload) {
  if (payload != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CRemoteClient_ReplyPacket_Notification.payload)
}

// -------------------------------------------------------------------

// CRemoteClient_RemotePacket_Notification

// optional fixed64 session_id = 1;
inline bool CRemoteClient_RemotePacket_Notification::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CRemoteClient_RemotePacket_Notification::clear_session_id() {
  session_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CRemoteClient_RemotePacket_Notification::session_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CRemoteClient_RemotePacket_Notification.session_id)
  return session_id_;
}
inline void CRemoteClient_RemotePacket_Notification::set_session_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  session_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CRemoteClient_RemotePacket_Notification.session_id)
}

// optional fixed64 steamid = 2;
inline bool CRemoteClient_RemotePacket_Notification::has_steamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CRemoteClient_RemotePacket_Notification::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CRemoteClient_RemotePacket_Notification::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CRemoteClient_RemotePacket_Notification.steamid)
  return steamid_;
}
inline void CRemoteClient_RemotePacket_Notification::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CRemoteClient_RemotePacket_Notification.steamid)
}

// optional bytes payload = 4;
inline bool CRemoteClient_RemotePacket_Notification::has_payload() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CRemoteClient_RemotePacket_Notification::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CRemoteClient_RemotePacket_Notification::payload() const {
  // @@protoc_insertion_point(field_get:proto.steam.CRemoteClient_RemotePacket_Notification.payload)
  return payload_.GetNoArena();
}
inline void CRemoteClient_RemotePacket_Notification::set_payload(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CRemoteClient_RemotePacket_Notification.payload)
}
#if LANG_CXX11
inline void CRemoteClient_RemotePacket_Notification::set_payload(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CRemoteClient_RemotePacket_Notification.payload)
}
#endif
inline void CRemoteClient_RemotePacket_Notification::set_payload(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CRemoteClient_RemotePacket_Notification.payload)
}
inline void CRemoteClient_RemotePacket_Notification::set_payload(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CRemoteClient_RemotePacket_Notification.payload)
}
inline ::std::string* CRemoteClient_RemotePacket_Notification::mutable_payload() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CRemoteClient_RemotePacket_Notification.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CRemoteClient_RemotePacket_Notification::release_payload() {
  // @@protoc_insertion_point(field_release:proto.steam.CRemoteClient_RemotePacket_Notification.payload)
  if (!has_payload()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return payload_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CRemoteClient_RemotePacket_Notification::set_allocated_payload(::std::string* payload) {
  if (payload != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CRemoteClient_RemotePacket_Notification.payload)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_steammessages_5fremoteclient_5fservice_2esteamclient_2eproto
