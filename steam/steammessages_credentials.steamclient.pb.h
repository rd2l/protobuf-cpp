// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_credentials.steamclient.proto

#ifndef PROTOBUF_INCLUDED_steammessages_5fcredentials_2esteamclient_2eproto
#define PROTOBUF_INCLUDED_steammessages_5fcredentials_2esteamclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fcredentials_2esteamclient_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fcredentials_2esteamclient_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[16]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_steammessages_5fcredentials_2esteamclient_2eproto();
namespace proto {
namespace steam {
class CCredentials_GetAccountAuthSecret_Request;
class CCredentials_GetAccountAuthSecret_RequestDefaultTypeInternal;
extern CCredentials_GetAccountAuthSecret_RequestDefaultTypeInternal _CCredentials_GetAccountAuthSecret_Request_default_instance_;
class CCredentials_GetAccountAuthSecret_Response;
class CCredentials_GetAccountAuthSecret_ResponseDefaultTypeInternal;
extern CCredentials_GetAccountAuthSecret_ResponseDefaultTypeInternal _CCredentials_GetAccountAuthSecret_Response_default_instance_;
class CCredentials_GetSteamGuardDetails_Request;
class CCredentials_GetSteamGuardDetails_RequestDefaultTypeInternal;
extern CCredentials_GetSteamGuardDetails_RequestDefaultTypeInternal _CCredentials_GetSteamGuardDetails_Request_default_instance_;
class CCredentials_GetSteamGuardDetails_Response;
class CCredentials_GetSteamGuardDetails_ResponseDefaultTypeInternal;
extern CCredentials_GetSteamGuardDetails_ResponseDefaultTypeInternal _CCredentials_GetSteamGuardDetails_Response_default_instance_;
class CCredentials_GetSteamGuardDetails_Response_NewAuthentication;
class CCredentials_GetSteamGuardDetails_Response_NewAuthenticationDefaultTypeInternal;
extern CCredentials_GetSteamGuardDetails_Response_NewAuthenticationDefaultTypeInternal _CCredentials_GetSteamGuardDetails_Response_NewAuthentication_default_instance_;
class CCredentials_GetSteamGuardDetails_Response_SessionData;
class CCredentials_GetSteamGuardDetails_Response_SessionDataDefaultTypeInternal;
extern CCredentials_GetSteamGuardDetails_Response_SessionDataDefaultTypeInternal _CCredentials_GetSteamGuardDetails_Response_SessionData_default_instance_;
class CCredentials_LastCredentialChangeTime_Request;
class CCredentials_LastCredentialChangeTime_RequestDefaultTypeInternal;
extern CCredentials_LastCredentialChangeTime_RequestDefaultTypeInternal _CCredentials_LastCredentialChangeTime_Request_default_instance_;
class CCredentials_LastCredentialChangeTime_Response;
class CCredentials_LastCredentialChangeTime_ResponseDefaultTypeInternal;
extern CCredentials_LastCredentialChangeTime_ResponseDefaultTypeInternal _CCredentials_LastCredentialChangeTime_Response_default_instance_;
class CCredentials_NewMachineNotificationDialog_Request;
class CCredentials_NewMachineNotificationDialog_RequestDefaultTypeInternal;
extern CCredentials_NewMachineNotificationDialog_RequestDefaultTypeInternal _CCredentials_NewMachineNotificationDialog_Request_default_instance_;
class CCredentials_NewMachineNotificationDialog_Response;
class CCredentials_NewMachineNotificationDialog_ResponseDefaultTypeInternal;
extern CCredentials_NewMachineNotificationDialog_ResponseDefaultTypeInternal _CCredentials_NewMachineNotificationDialog_Response_default_instance_;
class CCredentials_SteamGuardPhishingReport_Request;
class CCredentials_SteamGuardPhishingReport_RequestDefaultTypeInternal;
extern CCredentials_SteamGuardPhishingReport_RequestDefaultTypeInternal _CCredentials_SteamGuardPhishingReport_Request_default_instance_;
class CCredentials_SteamGuardPhishingReport_Response;
class CCredentials_SteamGuardPhishingReport_ResponseDefaultTypeInternal;
extern CCredentials_SteamGuardPhishingReport_ResponseDefaultTypeInternal _CCredentials_SteamGuardPhishingReport_Response_default_instance_;
class CCredentials_TestAvailablePassword_Request;
class CCredentials_TestAvailablePassword_RequestDefaultTypeInternal;
extern CCredentials_TestAvailablePassword_RequestDefaultTypeInternal _CCredentials_TestAvailablePassword_Request_default_instance_;
class CCredentials_TestAvailablePassword_Response;
class CCredentials_TestAvailablePassword_ResponseDefaultTypeInternal;
extern CCredentials_TestAvailablePassword_ResponseDefaultTypeInternal _CCredentials_TestAvailablePassword_Response_default_instance_;
class CCredentials_ValidateEmailAddress_Request;
class CCredentials_ValidateEmailAddress_RequestDefaultTypeInternal;
extern CCredentials_ValidateEmailAddress_RequestDefaultTypeInternal _CCredentials_ValidateEmailAddress_Request_default_instance_;
class CCredentials_ValidateEmailAddress_Response;
class CCredentials_ValidateEmailAddress_ResponseDefaultTypeInternal;
extern CCredentials_ValidateEmailAddress_ResponseDefaultTypeInternal _CCredentials_ValidateEmailAddress_Response_default_instance_;
}  // namespace steam
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::steam::CCredentials_GetAccountAuthSecret_Request* Arena::CreateMaybeMessage<::proto::steam::CCredentials_GetAccountAuthSecret_Request>(Arena*);
template<> ::proto::steam::CCredentials_GetAccountAuthSecret_Response* Arena::CreateMaybeMessage<::proto::steam::CCredentials_GetAccountAuthSecret_Response>(Arena*);
template<> ::proto::steam::CCredentials_GetSteamGuardDetails_Request* Arena::CreateMaybeMessage<::proto::steam::CCredentials_GetSteamGuardDetails_Request>(Arena*);
template<> ::proto::steam::CCredentials_GetSteamGuardDetails_Response* Arena::CreateMaybeMessage<::proto::steam::CCredentials_GetSteamGuardDetails_Response>(Arena*);
template<> ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication* Arena::CreateMaybeMessage<::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication>(Arena*);
template<> ::proto::steam::CCredentials_GetSteamGuardDetails_Response_SessionData* Arena::CreateMaybeMessage<::proto::steam::CCredentials_GetSteamGuardDetails_Response_SessionData>(Arena*);
template<> ::proto::steam::CCredentials_LastCredentialChangeTime_Request* Arena::CreateMaybeMessage<::proto::steam::CCredentials_LastCredentialChangeTime_Request>(Arena*);
template<> ::proto::steam::CCredentials_LastCredentialChangeTime_Response* Arena::CreateMaybeMessage<::proto::steam::CCredentials_LastCredentialChangeTime_Response>(Arena*);
template<> ::proto::steam::CCredentials_NewMachineNotificationDialog_Request* Arena::CreateMaybeMessage<::proto::steam::CCredentials_NewMachineNotificationDialog_Request>(Arena*);
template<> ::proto::steam::CCredentials_NewMachineNotificationDialog_Response* Arena::CreateMaybeMessage<::proto::steam::CCredentials_NewMachineNotificationDialog_Response>(Arena*);
template<> ::proto::steam::CCredentials_SteamGuardPhishingReport_Request* Arena::CreateMaybeMessage<::proto::steam::CCredentials_SteamGuardPhishingReport_Request>(Arena*);
template<> ::proto::steam::CCredentials_SteamGuardPhishingReport_Response* Arena::CreateMaybeMessage<::proto::steam::CCredentials_SteamGuardPhishingReport_Response>(Arena*);
template<> ::proto::steam::CCredentials_TestAvailablePassword_Request* Arena::CreateMaybeMessage<::proto::steam::CCredentials_TestAvailablePassword_Request>(Arena*);
template<> ::proto::steam::CCredentials_TestAvailablePassword_Response* Arena::CreateMaybeMessage<::proto::steam::CCredentials_TestAvailablePassword_Response>(Arena*);
template<> ::proto::steam::CCredentials_ValidateEmailAddress_Request* Arena::CreateMaybeMessage<::proto::steam::CCredentials_ValidateEmailAddress_Request>(Arena*);
template<> ::proto::steam::CCredentials_ValidateEmailAddress_Response* Arena::CreateMaybeMessage<::proto::steam::CCredentials_ValidateEmailAddress_Response>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace steam {

// ===================================================================

class CCredentials_TestAvailablePassword_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_TestAvailablePassword_Request) */ {
 public:
  CCredentials_TestAvailablePassword_Request();
  virtual ~CCredentials_TestAvailablePassword_Request();

  CCredentials_TestAvailablePassword_Request(const CCredentials_TestAvailablePassword_Request& from);

  inline CCredentials_TestAvailablePassword_Request& operator=(const CCredentials_TestAvailablePassword_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_TestAvailablePassword_Request(CCredentials_TestAvailablePassword_Request&& from) noexcept
    : CCredentials_TestAvailablePassword_Request() {
    *this = ::std::move(from);
  }

  inline CCredentials_TestAvailablePassword_Request& operator=(CCredentials_TestAvailablePassword_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_TestAvailablePassword_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_TestAvailablePassword_Request* internal_default_instance() {
    return reinterpret_cast<const CCredentials_TestAvailablePassword_Request*>(
               &_CCredentials_TestAvailablePassword_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CCredentials_TestAvailablePassword_Request* other);
  friend void swap(CCredentials_TestAvailablePassword_Request& a, CCredentials_TestAvailablePassword_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_TestAvailablePassword_Request* New() const final {
    return CreateMaybeMessage<CCredentials_TestAvailablePassword_Request>(nullptr);
  }

  CCredentials_TestAvailablePassword_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_TestAvailablePassword_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_TestAvailablePassword_Request& from);
  void MergeFrom(const CCredentials_TestAvailablePassword_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_TestAvailablePassword_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string password = 1;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 1;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional bytes sha_digest_password = 2;
  bool has_sha_digest_password() const;
  void clear_sha_digest_password();
  static const int kShaDigestPasswordFieldNumber = 2;
  const ::std::string& sha_digest_password() const;
  void set_sha_digest_password(const ::std::string& value);
  #if LANG_CXX11
  void set_sha_digest_password(::std::string&& value);
  #endif
  void set_sha_digest_password(const char* value);
  void set_sha_digest_password(const void* value, size_t size);
  ::std::string* mutable_sha_digest_password();
  ::std::string* release_sha_digest_password();
  void set_allocated_sha_digest_password(::std::string* sha_digest_password);

  // optional string account_name = 3;
  bool has_account_name() const;
  void clear_account_name();
  static const int kAccountNameFieldNumber = 3;
  const ::std::string& account_name() const;
  void set_account_name(const ::std::string& value);
  #if LANG_CXX11
  void set_account_name(::std::string&& value);
  #endif
  void set_account_name(const char* value);
  void set_account_name(const char* value, size_t size);
  ::std::string* mutable_account_name();
  ::std::string* release_account_name();
  void set_allocated_account_name(::std::string* account_name);

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_TestAvailablePassword_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr sha_digest_password_;
  ::google::protobuf::internal::ArenaStringPtr account_name_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCredentials_TestAvailablePassword_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_TestAvailablePassword_Response) */ {
 public:
  CCredentials_TestAvailablePassword_Response();
  virtual ~CCredentials_TestAvailablePassword_Response();

  CCredentials_TestAvailablePassword_Response(const CCredentials_TestAvailablePassword_Response& from);

  inline CCredentials_TestAvailablePassword_Response& operator=(const CCredentials_TestAvailablePassword_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_TestAvailablePassword_Response(CCredentials_TestAvailablePassword_Response&& from) noexcept
    : CCredentials_TestAvailablePassword_Response() {
    *this = ::std::move(from);
  }

  inline CCredentials_TestAvailablePassword_Response& operator=(CCredentials_TestAvailablePassword_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_TestAvailablePassword_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_TestAvailablePassword_Response* internal_default_instance() {
    return reinterpret_cast<const CCredentials_TestAvailablePassword_Response*>(
               &_CCredentials_TestAvailablePassword_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CCredentials_TestAvailablePassword_Response* other);
  friend void swap(CCredentials_TestAvailablePassword_Response& a, CCredentials_TestAvailablePassword_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_TestAvailablePassword_Response* New() const final {
    return CreateMaybeMessage<CCredentials_TestAvailablePassword_Response>(nullptr);
  }

  CCredentials_TestAvailablePassword_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_TestAvailablePassword_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_TestAvailablePassword_Response& from);
  void MergeFrom(const CCredentials_TestAvailablePassword_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_TestAvailablePassword_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_valid = 3;
  bool has_is_valid() const;
  void clear_is_valid();
  static const int kIsValidFieldNumber = 3;
  bool is_valid() const;
  void set_is_valid(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_TestAvailablePassword_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool is_valid_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCredentials_GetSteamGuardDetails_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_GetSteamGuardDetails_Request) */ {
 public:
  CCredentials_GetSteamGuardDetails_Request();
  virtual ~CCredentials_GetSteamGuardDetails_Request();

  CCredentials_GetSteamGuardDetails_Request(const CCredentials_GetSteamGuardDetails_Request& from);

  inline CCredentials_GetSteamGuardDetails_Request& operator=(const CCredentials_GetSteamGuardDetails_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_GetSteamGuardDetails_Request(CCredentials_GetSteamGuardDetails_Request&& from) noexcept
    : CCredentials_GetSteamGuardDetails_Request() {
    *this = ::std::move(from);
  }

  inline CCredentials_GetSteamGuardDetails_Request& operator=(CCredentials_GetSteamGuardDetails_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_GetSteamGuardDetails_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_GetSteamGuardDetails_Request* internal_default_instance() {
    return reinterpret_cast<const CCredentials_GetSteamGuardDetails_Request*>(
               &_CCredentials_GetSteamGuardDetails_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CCredentials_GetSteamGuardDetails_Request* other);
  friend void swap(CCredentials_GetSteamGuardDetails_Request& a, CCredentials_GetSteamGuardDetails_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_GetSteamGuardDetails_Request* New() const final {
    return CreateMaybeMessage<CCredentials_GetSteamGuardDetails_Request>(nullptr);
  }

  CCredentials_GetSteamGuardDetails_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_GetSteamGuardDetails_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_GetSteamGuardDetails_Request& from);
  void MergeFrom(const CCredentials_GetSteamGuardDetails_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_GetSteamGuardDetails_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string webcookie = 2 [(.proto.steam.description) = "The user\'s Steam Guard machine auth cookie. If present, it\'ll be used to get the user\'s machine ID instead of the AM session."];
  bool has_webcookie() const;
  void clear_webcookie();
  static const int kWebcookieFieldNumber = 2;
  const ::std::string& webcookie() const;
  void set_webcookie(const ::std::string& value);
  #if LANG_CXX11
  void set_webcookie(::std::string&& value);
  #endif
  void set_webcookie(const char* value);
  void set_webcookie(const char* value, size_t size);
  ::std::string* mutable_webcookie();
  ::std::string* release_webcookie();
  void set_allocated_webcookie(::std::string* webcookie);

  // optional fixed32 timestamp_minimum_wanted = 3;
  bool has_timestamp_minimum_wanted() const;
  void clear_timestamp_minimum_wanted();
  static const int kTimestampMinimumWantedFieldNumber = 3;
  ::google::protobuf::uint32 timestamp_minimum_wanted() const;
  void set_timestamp_minimum_wanted(::google::protobuf::uint32 value);

  // optional int32 ipaddress = 4;
  bool has_ipaddress() const;
  void clear_ipaddress();
  static const int kIpaddressFieldNumber = 4;
  ::google::protobuf::int32 ipaddress() const;
  void set_ipaddress(::google::protobuf::int32 value);

  // optional bool include_new_authentications = 1 [default = true, (.proto.steam.description) = "Whether or not to populate the newauthentication field in the response"];
  bool has_include_new_authentications() const;
  void clear_include_new_authentications();
  static const int kIncludeNewAuthenticationsFieldNumber = 1;
  bool include_new_authentications() const;
  void set_include_new_authentications(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_GetSteamGuardDetails_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr webcookie_;
  ::google::protobuf::uint32 timestamp_minimum_wanted_;
  ::google::protobuf::int32 ipaddress_;
  bool include_new_authentications_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCredentials_GetSteamGuardDetails_Response_NewAuthentication final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication) */ {
 public:
  CCredentials_GetSteamGuardDetails_Response_NewAuthentication();
  virtual ~CCredentials_GetSteamGuardDetails_Response_NewAuthentication();

  CCredentials_GetSteamGuardDetails_Response_NewAuthentication(const CCredentials_GetSteamGuardDetails_Response_NewAuthentication& from);

  inline CCredentials_GetSteamGuardDetails_Response_NewAuthentication& operator=(const CCredentials_GetSteamGuardDetails_Response_NewAuthentication& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_GetSteamGuardDetails_Response_NewAuthentication(CCredentials_GetSteamGuardDetails_Response_NewAuthentication&& from) noexcept
    : CCredentials_GetSteamGuardDetails_Response_NewAuthentication() {
    *this = ::std::move(from);
  }

  inline CCredentials_GetSteamGuardDetails_Response_NewAuthentication& operator=(CCredentials_GetSteamGuardDetails_Response_NewAuthentication&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_GetSteamGuardDetails_Response_NewAuthentication& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_GetSteamGuardDetails_Response_NewAuthentication* internal_default_instance() {
    return reinterpret_cast<const CCredentials_GetSteamGuardDetails_Response_NewAuthentication*>(
               &_CCredentials_GetSteamGuardDetails_Response_NewAuthentication_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CCredentials_GetSteamGuardDetails_Response_NewAuthentication* other);
  friend void swap(CCredentials_GetSteamGuardDetails_Response_NewAuthentication& a, CCredentials_GetSteamGuardDetails_Response_NewAuthentication& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_GetSteamGuardDetails_Response_NewAuthentication* New() const final {
    return CreateMaybeMessage<CCredentials_GetSteamGuardDetails_Response_NewAuthentication>(nullptr);
  }

  CCredentials_GetSteamGuardDetails_Response_NewAuthentication* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_GetSteamGuardDetails_Response_NewAuthentication>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_GetSteamGuardDetails_Response_NewAuthentication& from);
  void MergeFrom(const CCredentials_GetSteamGuardDetails_Response_NewAuthentication& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_GetSteamGuardDetails_Response_NewAuthentication* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string geoloc_info = 4;
  bool has_geoloc_info() const;
  void clear_geoloc_info();
  static const int kGeolocInfoFieldNumber = 4;
  const ::std::string& geoloc_info() const;
  void set_geoloc_info(const ::std::string& value);
  #if LANG_CXX11
  void set_geoloc_info(::std::string&& value);
  #endif
  void set_geoloc_info(const char* value);
  void set_geoloc_info(const char* value, size_t size);
  ::std::string* mutable_geoloc_info();
  ::std::string* release_geoloc_info();
  void set_allocated_geoloc_info(::std::string* geoloc_info);

  // optional string machine_name_user_supplied = 6;
  bool has_machine_name_user_supplied() const;
  void clear_machine_name_user_supplied();
  static const int kMachineNameUserSuppliedFieldNumber = 6;
  const ::std::string& machine_name_user_supplied() const;
  void set_machine_name_user_supplied(const ::std::string& value);
  #if LANG_CXX11
  void set_machine_name_user_supplied(::std::string&& value);
  #endif
  void set_machine_name_user_supplied(const char* value);
  void set_machine_name_user_supplied(const char* value, size_t size);
  ::std::string* mutable_machine_name_user_supplied();
  ::std::string* release_machine_name_user_supplied();
  void set_allocated_machine_name_user_supplied(::std::string* machine_name_user_supplied);

  // optional fixed32 timestamp_steamguard_enabled = 1;
  bool has_timestamp_steamguard_enabled() const;
  void clear_timestamp_steamguard_enabled();
  static const int kTimestampSteamguardEnabledFieldNumber = 1;
  ::google::protobuf::uint32 timestamp_steamguard_enabled() const;
  void set_timestamp_steamguard_enabled(::google::protobuf::uint32 value);

  // optional int32 ipaddress = 3;
  bool has_ipaddress() const;
  void clear_ipaddress();
  static const int kIpaddressFieldNumber = 3;
  ::google::protobuf::int32 ipaddress() const;
  void set_ipaddress(::google::protobuf::int32 value);

  // optional bool is_web_cookie = 2;
  bool has_is_web_cookie() const;
  void clear_is_web_cookie();
  static const int kIsWebCookieFieldNumber = 2;
  bool is_web_cookie() const;
  void set_is_web_cookie(bool value);

  // optional bool is_remembered = 5;
  bool has_is_remembered() const;
  void clear_is_remembered();
  static const int kIsRememberedFieldNumber = 5;
  bool is_remembered() const;
  void set_is_remembered(bool value);

  // optional int32 status = 7;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 7;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr geoloc_info_;
  ::google::protobuf::internal::ArenaStringPtr machine_name_user_supplied_;
  ::google::protobuf::uint32 timestamp_steamguard_enabled_;
  ::google::protobuf::int32 ipaddress_;
  bool is_web_cookie_;
  bool is_remembered_;
  ::google::protobuf::int32 status_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCredentials_GetSteamGuardDetails_Response_SessionData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData) */ {
 public:
  CCredentials_GetSteamGuardDetails_Response_SessionData();
  virtual ~CCredentials_GetSteamGuardDetails_Response_SessionData();

  CCredentials_GetSteamGuardDetails_Response_SessionData(const CCredentials_GetSteamGuardDetails_Response_SessionData& from);

  inline CCredentials_GetSteamGuardDetails_Response_SessionData& operator=(const CCredentials_GetSteamGuardDetails_Response_SessionData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_GetSteamGuardDetails_Response_SessionData(CCredentials_GetSteamGuardDetails_Response_SessionData&& from) noexcept
    : CCredentials_GetSteamGuardDetails_Response_SessionData() {
    *this = ::std::move(from);
  }

  inline CCredentials_GetSteamGuardDetails_Response_SessionData& operator=(CCredentials_GetSteamGuardDetails_Response_SessionData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_GetSteamGuardDetails_Response_SessionData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_GetSteamGuardDetails_Response_SessionData* internal_default_instance() {
    return reinterpret_cast<const CCredentials_GetSteamGuardDetails_Response_SessionData*>(
               &_CCredentials_GetSteamGuardDetails_Response_SessionData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CCredentials_GetSteamGuardDetails_Response_SessionData* other);
  friend void swap(CCredentials_GetSteamGuardDetails_Response_SessionData& a, CCredentials_GetSteamGuardDetails_Response_SessionData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_GetSteamGuardDetails_Response_SessionData* New() const final {
    return CreateMaybeMessage<CCredentials_GetSteamGuardDetails_Response_SessionData>(nullptr);
  }

  CCredentials_GetSteamGuardDetails_Response_SessionData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_GetSteamGuardDetails_Response_SessionData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_GetSteamGuardDetails_Response_SessionData& from);
  void MergeFrom(const CCredentials_GetSteamGuardDetails_Response_SessionData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_GetSteamGuardDetails_Response_SessionData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication newauthentication = 5;
  int newauthentication_size() const;
  void clear_newauthentication();
  static const int kNewauthenticationFieldNumber = 5;
  ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication* mutable_newauthentication(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication >*
      mutable_newauthentication();
  const ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication& newauthentication(int index) const;
  ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication* add_newauthentication();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication >&
      newauthentication() const;

  // optional string machine_name_userchosen = 2;
  bool has_machine_name_userchosen() const;
  void clear_machine_name_userchosen();
  static const int kMachineNameUserchosenFieldNumber = 2;
  const ::std::string& machine_name_userchosen() const;
  void set_machine_name_userchosen(const ::std::string& value);
  #if LANG_CXX11
  void set_machine_name_userchosen(::std::string&& value);
  #endif
  void set_machine_name_userchosen(const char* value);
  void set_machine_name_userchosen(const char* value, size_t size);
  ::std::string* mutable_machine_name_userchosen();
  ::std::string* release_machine_name_userchosen();
  void set_allocated_machine_name_userchosen(::std::string* machine_name_userchosen);

  // optional uint64 machine_id = 1;
  bool has_machine_id() const;
  void clear_machine_id();
  static const int kMachineIdFieldNumber = 1;
  ::google::protobuf::uint64 machine_id() const;
  void set_machine_id(::google::protobuf::uint64 value);

  // optional fixed32 timestamp_machine_steamguard_enabled = 3;
  bool has_timestamp_machine_steamguard_enabled() const;
  void clear_timestamp_machine_steamguard_enabled();
  static const int kTimestampMachineSteamguardEnabledFieldNumber = 3;
  ::google::protobuf::uint32 timestamp_machine_steamguard_enabled() const;
  void set_timestamp_machine_steamguard_enabled(::google::protobuf::uint32 value);

  // optional bool authentication_exists_from_geoloc_before_mintime = 4;
  bool has_authentication_exists_from_geoloc_before_mintime() const;
  void clear_authentication_exists_from_geoloc_before_mintime();
  static const int kAuthenticationExistsFromGeolocBeforeMintimeFieldNumber = 4;
  bool authentication_exists_from_geoloc_before_mintime() const;
  void set_authentication_exists_from_geoloc_before_mintime(bool value);

  // optional bool authentication_exists_from_same_ip_before_mintime = 6;
  bool has_authentication_exists_from_same_ip_before_mintime() const;
  void clear_authentication_exists_from_same_ip_before_mintime();
  static const int kAuthenticationExistsFromSameIpBeforeMintimeFieldNumber = 6;
  bool authentication_exists_from_same_ip_before_mintime() const;
  void set_authentication_exists_from_same_ip_before_mintime(bool value);

  // optional uint32 public_ipv4 = 7;
  bool has_public_ipv4() const;
  void clear_public_ipv4();
  static const int kPublicIpv4FieldNumber = 7;
  ::google::protobuf::uint32 public_ipv4() const;
  void set_public_ipv4(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication > newauthentication_;
  ::google::protobuf::internal::ArenaStringPtr machine_name_userchosen_;
  ::google::protobuf::uint64 machine_id_;
  ::google::protobuf::uint32 timestamp_machine_steamguard_enabled_;
  bool authentication_exists_from_geoloc_before_mintime_;
  bool authentication_exists_from_same_ip_before_mintime_;
  ::google::protobuf::uint32 public_ipv4_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCredentials_GetSteamGuardDetails_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_GetSteamGuardDetails_Response) */ {
 public:
  CCredentials_GetSteamGuardDetails_Response();
  virtual ~CCredentials_GetSteamGuardDetails_Response();

  CCredentials_GetSteamGuardDetails_Response(const CCredentials_GetSteamGuardDetails_Response& from);

  inline CCredentials_GetSteamGuardDetails_Response& operator=(const CCredentials_GetSteamGuardDetails_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_GetSteamGuardDetails_Response(CCredentials_GetSteamGuardDetails_Response&& from) noexcept
    : CCredentials_GetSteamGuardDetails_Response() {
    *this = ::std::move(from);
  }

  inline CCredentials_GetSteamGuardDetails_Response& operator=(CCredentials_GetSteamGuardDetails_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_GetSteamGuardDetails_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_GetSteamGuardDetails_Response* internal_default_instance() {
    return reinterpret_cast<const CCredentials_GetSteamGuardDetails_Response*>(
               &_CCredentials_GetSteamGuardDetails_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CCredentials_GetSteamGuardDetails_Response* other);
  friend void swap(CCredentials_GetSteamGuardDetails_Response& a, CCredentials_GetSteamGuardDetails_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_GetSteamGuardDetails_Response* New() const final {
    return CreateMaybeMessage<CCredentials_GetSteamGuardDetails_Response>(nullptr);
  }

  CCredentials_GetSteamGuardDetails_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_GetSteamGuardDetails_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_GetSteamGuardDetails_Response& from);
  void MergeFrom(const CCredentials_GetSteamGuardDetails_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_GetSteamGuardDetails_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CCredentials_GetSteamGuardDetails_Response_NewAuthentication NewAuthentication;
  typedef CCredentials_GetSteamGuardDetails_Response_SessionData SessionData;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication deprecated_newauthentication = 3;
  int deprecated_newauthentication_size() const;
  void clear_deprecated_newauthentication();
  static const int kDeprecatedNewauthenticationFieldNumber = 3;
  ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication* mutable_deprecated_newauthentication(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication >*
      mutable_deprecated_newauthentication();
  const ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication& deprecated_newauthentication(int index) const;
  ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication* add_deprecated_newauthentication();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication >&
      deprecated_newauthentication() const;

  // repeated .proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData session_data = 8;
  int session_data_size() const;
  void clear_session_data();
  static const int kSessionDataFieldNumber = 8;
  ::proto::steam::CCredentials_GetSteamGuardDetails_Response_SessionData* mutable_session_data(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CCredentials_GetSteamGuardDetails_Response_SessionData >*
      mutable_session_data();
  const ::proto::steam::CCredentials_GetSteamGuardDetails_Response_SessionData& session_data(int index) const;
  ::proto::steam::CCredentials_GetSteamGuardDetails_Response_SessionData* add_session_data();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CCredentials_GetSteamGuardDetails_Response_SessionData >&
      session_data() const;

  // optional string deprecated_machine_name_userchosen = 4;
  bool has_deprecated_machine_name_userchosen() const;
  void clear_deprecated_machine_name_userchosen();
  static const int kDeprecatedMachineNameUserchosenFieldNumber = 4;
  const ::std::string& deprecated_machine_name_userchosen() const;
  void set_deprecated_machine_name_userchosen(const ::std::string& value);
  #if LANG_CXX11
  void set_deprecated_machine_name_userchosen(::std::string&& value);
  #endif
  void set_deprecated_machine_name_userchosen(const char* value);
  void set_deprecated_machine_name_userchosen(const char* value, size_t size);
  ::std::string* mutable_deprecated_machine_name_userchosen();
  ::std::string* release_deprecated_machine_name_userchosen();
  void set_allocated_deprecated_machine_name_userchosen(::std::string* deprecated_machine_name_userchosen);

  // optional fixed32 timestamp_steamguard_enabled = 2;
  bool has_timestamp_steamguard_enabled() const;
  void clear_timestamp_steamguard_enabled();
  static const int kTimestampSteamguardEnabledFieldNumber = 2;
  ::google::protobuf::uint32 timestamp_steamguard_enabled() const;
  void set_timestamp_steamguard_enabled(::google::protobuf::uint32 value);

  // optional fixed32 deprecated_timestamp_machine_steamguard_enabled = 5;
  bool has_deprecated_timestamp_machine_steamguard_enabled() const;
  void clear_deprecated_timestamp_machine_steamguard_enabled();
  static const int kDeprecatedTimestampMachineSteamguardEnabledFieldNumber = 5;
  ::google::protobuf::uint32 deprecated_timestamp_machine_steamguard_enabled() const;
  void set_deprecated_timestamp_machine_steamguard_enabled(::google::protobuf::uint32 value);

  // optional uint64 deprecated_machine_id = 7;
  bool has_deprecated_machine_id() const;
  void clear_deprecated_machine_id();
  static const int kDeprecatedMachineIdFieldNumber = 7;
  ::google::protobuf::uint64 deprecated_machine_id() const;
  void set_deprecated_machine_id(::google::protobuf::uint64 value);

  // optional bool is_steamguard_enabled = 1;
  bool has_is_steamguard_enabled() const;
  void clear_is_steamguard_enabled();
  static const int kIsSteamguardEnabledFieldNumber = 1;
  bool is_steamguard_enabled() const;
  void set_is_steamguard_enabled(bool value);

  // optional bool deprecated_authentication_exists_from_geoloc_before_mintime = 6;
  bool has_deprecated_authentication_exists_from_geoloc_before_mintime() const;
  void clear_deprecated_authentication_exists_from_geoloc_before_mintime();
  static const int kDeprecatedAuthenticationExistsFromGeolocBeforeMintimeFieldNumber = 6;
  bool deprecated_authentication_exists_from_geoloc_before_mintime() const;
  void set_deprecated_authentication_exists_from_geoloc_before_mintime(bool value);

  // optional bool is_twofactor_enabled = 9;
  bool has_is_twofactor_enabled() const;
  void clear_is_twofactor_enabled();
  static const int kIsTwofactorEnabledFieldNumber = 9;
  bool is_twofactor_enabled() const;
  void set_is_twofactor_enabled(bool value);

  // optional bool is_phone_verified = 11;
  bool has_is_phone_verified() const;
  void clear_is_phone_verified();
  static const int kIsPhoneVerifiedFieldNumber = 11;
  bool is_phone_verified() const;
  void set_is_phone_verified(bool value);

  // optional fixed32 timestamp_twofactor_enabled = 10;
  bool has_timestamp_twofactor_enabled() const;
  void clear_timestamp_twofactor_enabled();
  static const int kTimestampTwofactorEnabledFieldNumber = 10;
  ::google::protobuf::uint32 timestamp_twofactor_enabled() const;
  void set_timestamp_twofactor_enabled(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_GetSteamGuardDetails_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication > deprecated_newauthentication_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CCredentials_GetSteamGuardDetails_Response_SessionData > session_data_;
  ::google::protobuf::internal::ArenaStringPtr deprecated_machine_name_userchosen_;
  ::google::protobuf::uint32 timestamp_steamguard_enabled_;
  ::google::protobuf::uint32 deprecated_timestamp_machine_steamguard_enabled_;
  ::google::protobuf::uint64 deprecated_machine_id_;
  bool is_steamguard_enabled_;
  bool deprecated_authentication_exists_from_geoloc_before_mintime_;
  bool is_twofactor_enabled_;
  bool is_phone_verified_;
  ::google::protobuf::uint32 timestamp_twofactor_enabled_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCredentials_NewMachineNotificationDialog_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_NewMachineNotificationDialog_Request) */ {
 public:
  CCredentials_NewMachineNotificationDialog_Request();
  virtual ~CCredentials_NewMachineNotificationDialog_Request();

  CCredentials_NewMachineNotificationDialog_Request(const CCredentials_NewMachineNotificationDialog_Request& from);

  inline CCredentials_NewMachineNotificationDialog_Request& operator=(const CCredentials_NewMachineNotificationDialog_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_NewMachineNotificationDialog_Request(CCredentials_NewMachineNotificationDialog_Request&& from) noexcept
    : CCredentials_NewMachineNotificationDialog_Request() {
    *this = ::std::move(from);
  }

  inline CCredentials_NewMachineNotificationDialog_Request& operator=(CCredentials_NewMachineNotificationDialog_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_NewMachineNotificationDialog_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_NewMachineNotificationDialog_Request* internal_default_instance() {
    return reinterpret_cast<const CCredentials_NewMachineNotificationDialog_Request*>(
               &_CCredentials_NewMachineNotificationDialog_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CCredentials_NewMachineNotificationDialog_Request* other);
  friend void swap(CCredentials_NewMachineNotificationDialog_Request& a, CCredentials_NewMachineNotificationDialog_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_NewMachineNotificationDialog_Request* New() const final {
    return CreateMaybeMessage<CCredentials_NewMachineNotificationDialog_Request>(nullptr);
  }

  CCredentials_NewMachineNotificationDialog_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_NewMachineNotificationDialog_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_NewMachineNotificationDialog_Request& from);
  void MergeFrom(const CCredentials_NewMachineNotificationDialog_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_NewMachineNotificationDialog_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_approved = 1;
  bool has_is_approved() const;
  void clear_is_approved();
  static const int kIsApprovedFieldNumber = 1;
  bool is_approved() const;
  void set_is_approved(bool value);

  // optional bool is_wizard_complete = 2;
  bool has_is_wizard_complete() const;
  void clear_is_wizard_complete();
  static const int kIsWizardCompleteFieldNumber = 2;
  bool is_wizard_complete() const;
  void set_is_wizard_complete(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_NewMachineNotificationDialog_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool is_approved_;
  bool is_wizard_complete_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCredentials_NewMachineNotificationDialog_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_NewMachineNotificationDialog_Response) */ {
 public:
  CCredentials_NewMachineNotificationDialog_Response();
  virtual ~CCredentials_NewMachineNotificationDialog_Response();

  CCredentials_NewMachineNotificationDialog_Response(const CCredentials_NewMachineNotificationDialog_Response& from);

  inline CCredentials_NewMachineNotificationDialog_Response& operator=(const CCredentials_NewMachineNotificationDialog_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_NewMachineNotificationDialog_Response(CCredentials_NewMachineNotificationDialog_Response&& from) noexcept
    : CCredentials_NewMachineNotificationDialog_Response() {
    *this = ::std::move(from);
  }

  inline CCredentials_NewMachineNotificationDialog_Response& operator=(CCredentials_NewMachineNotificationDialog_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_NewMachineNotificationDialog_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_NewMachineNotificationDialog_Response* internal_default_instance() {
    return reinterpret_cast<const CCredentials_NewMachineNotificationDialog_Response*>(
               &_CCredentials_NewMachineNotificationDialog_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CCredentials_NewMachineNotificationDialog_Response* other);
  friend void swap(CCredentials_NewMachineNotificationDialog_Response& a, CCredentials_NewMachineNotificationDialog_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_NewMachineNotificationDialog_Response* New() const final {
    return CreateMaybeMessage<CCredentials_NewMachineNotificationDialog_Response>(nullptr);
  }

  CCredentials_NewMachineNotificationDialog_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_NewMachineNotificationDialog_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_NewMachineNotificationDialog_Response& from);
  void MergeFrom(const CCredentials_NewMachineNotificationDialog_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_NewMachineNotificationDialog_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_NewMachineNotificationDialog_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCredentials_ValidateEmailAddress_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_ValidateEmailAddress_Request) */ {
 public:
  CCredentials_ValidateEmailAddress_Request();
  virtual ~CCredentials_ValidateEmailAddress_Request();

  CCredentials_ValidateEmailAddress_Request(const CCredentials_ValidateEmailAddress_Request& from);

  inline CCredentials_ValidateEmailAddress_Request& operator=(const CCredentials_ValidateEmailAddress_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_ValidateEmailAddress_Request(CCredentials_ValidateEmailAddress_Request&& from) noexcept
    : CCredentials_ValidateEmailAddress_Request() {
    *this = ::std::move(from);
  }

  inline CCredentials_ValidateEmailAddress_Request& operator=(CCredentials_ValidateEmailAddress_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_ValidateEmailAddress_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_ValidateEmailAddress_Request* internal_default_instance() {
    return reinterpret_cast<const CCredentials_ValidateEmailAddress_Request*>(
               &_CCredentials_ValidateEmailAddress_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CCredentials_ValidateEmailAddress_Request* other);
  friend void swap(CCredentials_ValidateEmailAddress_Request& a, CCredentials_ValidateEmailAddress_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_ValidateEmailAddress_Request* New() const final {
    return CreateMaybeMessage<CCredentials_ValidateEmailAddress_Request>(nullptr);
  }

  CCredentials_ValidateEmailAddress_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_ValidateEmailAddress_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_ValidateEmailAddress_Request& from);
  void MergeFrom(const CCredentials_ValidateEmailAddress_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_ValidateEmailAddress_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string stoken = 1;
  bool has_stoken() const;
  void clear_stoken();
  static const int kStokenFieldNumber = 1;
  const ::std::string& stoken() const;
  void set_stoken(const ::std::string& value);
  #if LANG_CXX11
  void set_stoken(::std::string&& value);
  #endif
  void set_stoken(const char* value);
  void set_stoken(const char* value, size_t size);
  ::std::string* mutable_stoken();
  ::std::string* release_stoken();
  void set_allocated_stoken(::std::string* stoken);

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_ValidateEmailAddress_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr stoken_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCredentials_ValidateEmailAddress_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_ValidateEmailAddress_Response) */ {
 public:
  CCredentials_ValidateEmailAddress_Response();
  virtual ~CCredentials_ValidateEmailAddress_Response();

  CCredentials_ValidateEmailAddress_Response(const CCredentials_ValidateEmailAddress_Response& from);

  inline CCredentials_ValidateEmailAddress_Response& operator=(const CCredentials_ValidateEmailAddress_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_ValidateEmailAddress_Response(CCredentials_ValidateEmailAddress_Response&& from) noexcept
    : CCredentials_ValidateEmailAddress_Response() {
    *this = ::std::move(from);
  }

  inline CCredentials_ValidateEmailAddress_Response& operator=(CCredentials_ValidateEmailAddress_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_ValidateEmailAddress_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_ValidateEmailAddress_Response* internal_default_instance() {
    return reinterpret_cast<const CCredentials_ValidateEmailAddress_Response*>(
               &_CCredentials_ValidateEmailAddress_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CCredentials_ValidateEmailAddress_Response* other);
  friend void swap(CCredentials_ValidateEmailAddress_Response& a, CCredentials_ValidateEmailAddress_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_ValidateEmailAddress_Response* New() const final {
    return CreateMaybeMessage<CCredentials_ValidateEmailAddress_Response>(nullptr);
  }

  CCredentials_ValidateEmailAddress_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_ValidateEmailAddress_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_ValidateEmailAddress_Response& from);
  void MergeFrom(const CCredentials_ValidateEmailAddress_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_ValidateEmailAddress_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool was_validated = 1;
  bool has_was_validated() const;
  void clear_was_validated();
  static const int kWasValidatedFieldNumber = 1;
  bool was_validated() const;
  void set_was_validated(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_ValidateEmailAddress_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool was_validated_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCredentials_SteamGuardPhishingReport_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_SteamGuardPhishingReport_Request) */ {
 public:
  CCredentials_SteamGuardPhishingReport_Request();
  virtual ~CCredentials_SteamGuardPhishingReport_Request();

  CCredentials_SteamGuardPhishingReport_Request(const CCredentials_SteamGuardPhishingReport_Request& from);

  inline CCredentials_SteamGuardPhishingReport_Request& operator=(const CCredentials_SteamGuardPhishingReport_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_SteamGuardPhishingReport_Request(CCredentials_SteamGuardPhishingReport_Request&& from) noexcept
    : CCredentials_SteamGuardPhishingReport_Request() {
    *this = ::std::move(from);
  }

  inline CCredentials_SteamGuardPhishingReport_Request& operator=(CCredentials_SteamGuardPhishingReport_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_SteamGuardPhishingReport_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_SteamGuardPhishingReport_Request* internal_default_instance() {
    return reinterpret_cast<const CCredentials_SteamGuardPhishingReport_Request*>(
               &_CCredentials_SteamGuardPhishingReport_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CCredentials_SteamGuardPhishingReport_Request* other);
  friend void swap(CCredentials_SteamGuardPhishingReport_Request& a, CCredentials_SteamGuardPhishingReport_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_SteamGuardPhishingReport_Request* New() const final {
    return CreateMaybeMessage<CCredentials_SteamGuardPhishingReport_Request>(nullptr);
  }

  CCredentials_SteamGuardPhishingReport_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_SteamGuardPhishingReport_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_SteamGuardPhishingReport_Request& from);
  void MergeFrom(const CCredentials_SteamGuardPhishingReport_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_SteamGuardPhishingReport_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string param_string = 1;
  bool has_param_string() const;
  void clear_param_string();
  static const int kParamStringFieldNumber = 1;
  const ::std::string& param_string() const;
  void set_param_string(const ::std::string& value);
  #if LANG_CXX11
  void set_param_string(::std::string&& value);
  #endif
  void set_param_string(const char* value);
  void set_param_string(const char* value, size_t size);
  ::std::string* mutable_param_string();
  ::std::string* release_param_string();
  void set_allocated_param_string(::std::string* param_string);

  // optional uint32 ipaddress_actual = 2;
  bool has_ipaddress_actual() const;
  void clear_ipaddress_actual();
  static const int kIpaddressActualFieldNumber = 2;
  ::google::protobuf::uint32 ipaddress_actual() const;
  void set_ipaddress_actual(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_SteamGuardPhishingReport_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr param_string_;
  ::google::protobuf::uint32 ipaddress_actual_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCredentials_SteamGuardPhishingReport_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_SteamGuardPhishingReport_Response) */ {
 public:
  CCredentials_SteamGuardPhishingReport_Response();
  virtual ~CCredentials_SteamGuardPhishingReport_Response();

  CCredentials_SteamGuardPhishingReport_Response(const CCredentials_SteamGuardPhishingReport_Response& from);

  inline CCredentials_SteamGuardPhishingReport_Response& operator=(const CCredentials_SteamGuardPhishingReport_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_SteamGuardPhishingReport_Response(CCredentials_SteamGuardPhishingReport_Response&& from) noexcept
    : CCredentials_SteamGuardPhishingReport_Response() {
    *this = ::std::move(from);
  }

  inline CCredentials_SteamGuardPhishingReport_Response& operator=(CCredentials_SteamGuardPhishingReport_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_SteamGuardPhishingReport_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_SteamGuardPhishingReport_Response* internal_default_instance() {
    return reinterpret_cast<const CCredentials_SteamGuardPhishingReport_Response*>(
               &_CCredentials_SteamGuardPhishingReport_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(CCredentials_SteamGuardPhishingReport_Response* other);
  friend void swap(CCredentials_SteamGuardPhishingReport_Response& a, CCredentials_SteamGuardPhishingReport_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_SteamGuardPhishingReport_Response* New() const final {
    return CreateMaybeMessage<CCredentials_SteamGuardPhishingReport_Response>(nullptr);
  }

  CCredentials_SteamGuardPhishingReport_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_SteamGuardPhishingReport_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_SteamGuardPhishingReport_Response& from);
  void MergeFrom(const CCredentials_SteamGuardPhishingReport_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_SteamGuardPhishingReport_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string countryname_loginattempt = 2;
  bool has_countryname_loginattempt() const;
  void clear_countryname_loginattempt();
  static const int kCountrynameLoginattemptFieldNumber = 2;
  const ::std::string& countryname_loginattempt() const;
  void set_countryname_loginattempt(const ::std::string& value);
  #if LANG_CXX11
  void set_countryname_loginattempt(::std::string&& value);
  #endif
  void set_countryname_loginattempt(const char* value);
  void set_countryname_loginattempt(const char* value, size_t size);
  ::std::string* mutable_countryname_loginattempt();
  ::std::string* release_countryname_loginattempt();
  void set_allocated_countryname_loginattempt(::std::string* countryname_loginattempt);

  // optional string statename_loginattempt = 3;
  bool has_statename_loginattempt() const;
  void clear_statename_loginattempt();
  static const int kStatenameLoginattemptFieldNumber = 3;
  const ::std::string& statename_loginattempt() const;
  void set_statename_loginattempt(const ::std::string& value);
  #if LANG_CXX11
  void set_statename_loginattempt(::std::string&& value);
  #endif
  void set_statename_loginattempt(const char* value);
  void set_statename_loginattempt(const char* value, size_t size);
  ::std::string* mutable_statename_loginattempt();
  ::std::string* release_statename_loginattempt();
  void set_allocated_statename_loginattempt(::std::string* statename_loginattempt);

  // optional string cityname_loginattempt = 4;
  bool has_cityname_loginattempt() const;
  void clear_cityname_loginattempt();
  static const int kCitynameLoginattemptFieldNumber = 4;
  const ::std::string& cityname_loginattempt() const;
  void set_cityname_loginattempt(const ::std::string& value);
  #if LANG_CXX11
  void set_cityname_loginattempt(::std::string&& value);
  #endif
  void set_cityname_loginattempt(const char* value);
  void set_cityname_loginattempt(const char* value, size_t size);
  ::std::string* mutable_cityname_loginattempt();
  ::std::string* release_cityname_loginattempt();
  void set_allocated_cityname_loginattempt(::std::string* cityname_loginattempt);

  // optional string countryname_actual = 6;
  bool has_countryname_actual() const;
  void clear_countryname_actual();
  static const int kCountrynameActualFieldNumber = 6;
  const ::std::string& countryname_actual() const;
  void set_countryname_actual(const ::std::string& value);
  #if LANG_CXX11
  void set_countryname_actual(::std::string&& value);
  #endif
  void set_countryname_actual(const char* value);
  void set_countryname_actual(const char* value, size_t size);
  ::std::string* mutable_countryname_actual();
  ::std::string* release_countryname_actual();
  void set_allocated_countryname_actual(::std::string* countryname_actual);

  // optional string statename_actual = 7;
  bool has_statename_actual() const;
  void clear_statename_actual();
  static const int kStatenameActualFieldNumber = 7;
  const ::std::string& statename_actual() const;
  void set_statename_actual(const ::std::string& value);
  #if LANG_CXX11
  void set_statename_actual(::std::string&& value);
  #endif
  void set_statename_actual(const char* value);
  void set_statename_actual(const char* value, size_t size);
  ::std::string* mutable_statename_actual();
  ::std::string* release_statename_actual();
  void set_allocated_statename_actual(::std::string* statename_actual);

  // optional string cityname_actual = 8;
  bool has_cityname_actual() const;
  void clear_cityname_actual();
  static const int kCitynameActualFieldNumber = 8;
  const ::std::string& cityname_actual() const;
  void set_cityname_actual(const ::std::string& value);
  #if LANG_CXX11
  void set_cityname_actual(::std::string&& value);
  #endif
  void set_cityname_actual(const char* value);
  void set_cityname_actual(const char* value, size_t size);
  ::std::string* mutable_cityname_actual();
  ::std::string* release_cityname_actual();
  void set_allocated_cityname_actual(::std::string* cityname_actual);

  // optional string steamguard_code = 9;
  bool has_steamguard_code() const;
  void clear_steamguard_code();
  static const int kSteamguardCodeFieldNumber = 9;
  const ::std::string& steamguard_code() const;
  void set_steamguard_code(const ::std::string& value);
  #if LANG_CXX11
  void set_steamguard_code(::std::string&& value);
  #endif
  void set_steamguard_code(const char* value);
  void set_steamguard_code(const char* value, size_t size);
  ::std::string* mutable_steamguard_code();
  ::std::string* release_steamguard_code();
  void set_allocated_steamguard_code(::std::string* steamguard_code);

  // optional uint32 ipaddress_loginattempt = 1;
  bool has_ipaddress_loginattempt() const;
  void clear_ipaddress_loginattempt();
  static const int kIpaddressLoginattemptFieldNumber = 1;
  ::google::protobuf::uint32 ipaddress_loginattempt() const;
  void set_ipaddress_loginattempt(::google::protobuf::uint32 value);

  // optional uint32 ipaddress_actual = 5;
  bool has_ipaddress_actual() const;
  void clear_ipaddress_actual();
  static const int kIpaddressActualFieldNumber = 5;
  ::google::protobuf::uint32 ipaddress_actual() const;
  void set_ipaddress_actual(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_SteamGuardPhishingReport_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr countryname_loginattempt_;
  ::google::protobuf::internal::ArenaStringPtr statename_loginattempt_;
  ::google::protobuf::internal::ArenaStringPtr cityname_loginattempt_;
  ::google::protobuf::internal::ArenaStringPtr countryname_actual_;
  ::google::protobuf::internal::ArenaStringPtr statename_actual_;
  ::google::protobuf::internal::ArenaStringPtr cityname_actual_;
  ::google::protobuf::internal::ArenaStringPtr steamguard_code_;
  ::google::protobuf::uint32 ipaddress_loginattempt_;
  ::google::protobuf::uint32 ipaddress_actual_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCredentials_LastCredentialChangeTime_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_LastCredentialChangeTime_Request) */ {
 public:
  CCredentials_LastCredentialChangeTime_Request();
  virtual ~CCredentials_LastCredentialChangeTime_Request();

  CCredentials_LastCredentialChangeTime_Request(const CCredentials_LastCredentialChangeTime_Request& from);

  inline CCredentials_LastCredentialChangeTime_Request& operator=(const CCredentials_LastCredentialChangeTime_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_LastCredentialChangeTime_Request(CCredentials_LastCredentialChangeTime_Request&& from) noexcept
    : CCredentials_LastCredentialChangeTime_Request() {
    *this = ::std::move(from);
  }

  inline CCredentials_LastCredentialChangeTime_Request& operator=(CCredentials_LastCredentialChangeTime_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_LastCredentialChangeTime_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_LastCredentialChangeTime_Request* internal_default_instance() {
    return reinterpret_cast<const CCredentials_LastCredentialChangeTime_Request*>(
               &_CCredentials_LastCredentialChangeTime_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CCredentials_LastCredentialChangeTime_Request* other);
  friend void swap(CCredentials_LastCredentialChangeTime_Request& a, CCredentials_LastCredentialChangeTime_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_LastCredentialChangeTime_Request* New() const final {
    return CreateMaybeMessage<CCredentials_LastCredentialChangeTime_Request>(nullptr);
  }

  CCredentials_LastCredentialChangeTime_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_LastCredentialChangeTime_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_LastCredentialChangeTime_Request& from);
  void MergeFrom(const CCredentials_LastCredentialChangeTime_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_LastCredentialChangeTime_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_LastCredentialChangeTime_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCredentials_LastCredentialChangeTime_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_LastCredentialChangeTime_Response) */ {
 public:
  CCredentials_LastCredentialChangeTime_Response();
  virtual ~CCredentials_LastCredentialChangeTime_Response();

  CCredentials_LastCredentialChangeTime_Response(const CCredentials_LastCredentialChangeTime_Response& from);

  inline CCredentials_LastCredentialChangeTime_Response& operator=(const CCredentials_LastCredentialChangeTime_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_LastCredentialChangeTime_Response(CCredentials_LastCredentialChangeTime_Response&& from) noexcept
    : CCredentials_LastCredentialChangeTime_Response() {
    *this = ::std::move(from);
  }

  inline CCredentials_LastCredentialChangeTime_Response& operator=(CCredentials_LastCredentialChangeTime_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_LastCredentialChangeTime_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_LastCredentialChangeTime_Response* internal_default_instance() {
    return reinterpret_cast<const CCredentials_LastCredentialChangeTime_Response*>(
               &_CCredentials_LastCredentialChangeTime_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(CCredentials_LastCredentialChangeTime_Response* other);
  friend void swap(CCredentials_LastCredentialChangeTime_Response& a, CCredentials_LastCredentialChangeTime_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_LastCredentialChangeTime_Response* New() const final {
    return CreateMaybeMessage<CCredentials_LastCredentialChangeTime_Response>(nullptr);
  }

  CCredentials_LastCredentialChangeTime_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_LastCredentialChangeTime_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_LastCredentialChangeTime_Response& from);
  void MergeFrom(const CCredentials_LastCredentialChangeTime_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_LastCredentialChangeTime_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 timestamp_last_password_change = 1;
  bool has_timestamp_last_password_change() const;
  void clear_timestamp_last_password_change();
  static const int kTimestampLastPasswordChangeFieldNumber = 1;
  ::google::protobuf::uint32 timestamp_last_password_change() const;
  void set_timestamp_last_password_change(::google::protobuf::uint32 value);

  // optional fixed32 timestamp_last_email_change = 2;
  bool has_timestamp_last_email_change() const;
  void clear_timestamp_last_email_change();
  static const int kTimestampLastEmailChangeFieldNumber = 2;
  ::google::protobuf::uint32 timestamp_last_email_change() const;
  void set_timestamp_last_email_change(::google::protobuf::uint32 value);

  // optional fixed32 timestamp_last_password_reset = 3;
  bool has_timestamp_last_password_reset() const;
  void clear_timestamp_last_password_reset();
  static const int kTimestampLastPasswordResetFieldNumber = 3;
  ::google::protobuf::uint32 timestamp_last_password_reset() const;
  void set_timestamp_last_password_reset(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_LastCredentialChangeTime_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 timestamp_last_password_change_;
  ::google::protobuf::uint32 timestamp_last_email_change_;
  ::google::protobuf::uint32 timestamp_last_password_reset_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCredentials_GetAccountAuthSecret_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_GetAccountAuthSecret_Request) */ {
 public:
  CCredentials_GetAccountAuthSecret_Request();
  virtual ~CCredentials_GetAccountAuthSecret_Request();

  CCredentials_GetAccountAuthSecret_Request(const CCredentials_GetAccountAuthSecret_Request& from);

  inline CCredentials_GetAccountAuthSecret_Request& operator=(const CCredentials_GetAccountAuthSecret_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_GetAccountAuthSecret_Request(CCredentials_GetAccountAuthSecret_Request&& from) noexcept
    : CCredentials_GetAccountAuthSecret_Request() {
    *this = ::std::move(from);
  }

  inline CCredentials_GetAccountAuthSecret_Request& operator=(CCredentials_GetAccountAuthSecret_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_GetAccountAuthSecret_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_GetAccountAuthSecret_Request* internal_default_instance() {
    return reinterpret_cast<const CCredentials_GetAccountAuthSecret_Request*>(
               &_CCredentials_GetAccountAuthSecret_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(CCredentials_GetAccountAuthSecret_Request* other);
  friend void swap(CCredentials_GetAccountAuthSecret_Request& a, CCredentials_GetAccountAuthSecret_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_GetAccountAuthSecret_Request* New() const final {
    return CreateMaybeMessage<CCredentials_GetAccountAuthSecret_Request>(nullptr);
  }

  CCredentials_GetAccountAuthSecret_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_GetAccountAuthSecret_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_GetAccountAuthSecret_Request& from);
  void MergeFrom(const CCredentials_GetAccountAuthSecret_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_GetAccountAuthSecret_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_GetAccountAuthSecret_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCredentials_GetAccountAuthSecret_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCredentials_GetAccountAuthSecret_Response) */ {
 public:
  CCredentials_GetAccountAuthSecret_Response();
  virtual ~CCredentials_GetAccountAuthSecret_Response();

  CCredentials_GetAccountAuthSecret_Response(const CCredentials_GetAccountAuthSecret_Response& from);

  inline CCredentials_GetAccountAuthSecret_Response& operator=(const CCredentials_GetAccountAuthSecret_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCredentials_GetAccountAuthSecret_Response(CCredentials_GetAccountAuthSecret_Response&& from) noexcept
    : CCredentials_GetAccountAuthSecret_Response() {
    *this = ::std::move(from);
  }

  inline CCredentials_GetAccountAuthSecret_Response& operator=(CCredentials_GetAccountAuthSecret_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCredentials_GetAccountAuthSecret_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCredentials_GetAccountAuthSecret_Response* internal_default_instance() {
    return reinterpret_cast<const CCredentials_GetAccountAuthSecret_Response*>(
               &_CCredentials_GetAccountAuthSecret_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(CCredentials_GetAccountAuthSecret_Response* other);
  friend void swap(CCredentials_GetAccountAuthSecret_Response& a, CCredentials_GetAccountAuthSecret_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCredentials_GetAccountAuthSecret_Response* New() const final {
    return CreateMaybeMessage<CCredentials_GetAccountAuthSecret_Response>(nullptr);
  }

  CCredentials_GetAccountAuthSecret_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCredentials_GetAccountAuthSecret_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCredentials_GetAccountAuthSecret_Response& from);
  void MergeFrom(const CCredentials_GetAccountAuthSecret_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCredentials_GetAccountAuthSecret_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes secret = 2;
  bool has_secret() const;
  void clear_secret();
  static const int kSecretFieldNumber = 2;
  const ::std::string& secret() const;
  void set_secret(const ::std::string& value);
  #if LANG_CXX11
  void set_secret(::std::string&& value);
  #endif
  void set_secret(const char* value);
  void set_secret(const void* value, size_t size);
  ::std::string* mutable_secret();
  ::std::string* release_secret();
  void set_allocated_secret(::std::string* secret);

  // optional int32 secret_id = 1;
  bool has_secret_id() const;
  void clear_secret_id();
  static const int kSecretIdFieldNumber = 1;
  ::google::protobuf::int32 secret_id() const;
  void set_secret_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CCredentials_GetAccountAuthSecret_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr secret_;
  ::google::protobuf::int32 secret_id_;
  friend struct ::TableStruct_steammessages_5fcredentials_2esteamclient_2eproto;
};
// ===================================================================

class Credentials_Stub;

class Credentials : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Credentials() {};
 public:
  virtual ~Credentials();

  typedef Credentials_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void TestAvailablePassword(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CCredentials_TestAvailablePassword_Request* request,
                       ::proto::steam::CCredentials_TestAvailablePassword_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetSteamGuardDetails(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CCredentials_GetSteamGuardDetails_Request* request,
                       ::proto::steam::CCredentials_GetSteamGuardDetails_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void NewMachineNotificationDialogResult(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CCredentials_NewMachineNotificationDialog_Request* request,
                       ::proto::steam::CCredentials_NewMachineNotificationDialog_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ValidateEmailAddress(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CCredentials_ValidateEmailAddress_Request* request,
                       ::proto::steam::CCredentials_ValidateEmailAddress_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SteamGuardPhishingReport(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CCredentials_SteamGuardPhishingReport_Request* request,
                       ::proto::steam::CCredentials_SteamGuardPhishingReport_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetCredentialChangeTimeDetails(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CCredentials_LastCredentialChangeTime_Request* request,
                       ::proto::steam::CCredentials_LastCredentialChangeTime_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetAccountAuthSecret(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CCredentials_GetAccountAuthSecret_Request* request,
                       ::proto::steam::CCredentials_GetAccountAuthSecret_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Credentials);
};

class Credentials_Stub : public Credentials {
 public:
  Credentials_Stub(::google::protobuf::RpcChannel* channel);
  Credentials_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Credentials_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Credentials ------------------------------------------

  void TestAvailablePassword(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CCredentials_TestAvailablePassword_Request* request,
                       ::proto::steam::CCredentials_TestAvailablePassword_Response* response,
                       ::google::protobuf::Closure* done);
  void GetSteamGuardDetails(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CCredentials_GetSteamGuardDetails_Request* request,
                       ::proto::steam::CCredentials_GetSteamGuardDetails_Response* response,
                       ::google::protobuf::Closure* done);
  void NewMachineNotificationDialogResult(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CCredentials_NewMachineNotificationDialog_Request* request,
                       ::proto::steam::CCredentials_NewMachineNotificationDialog_Response* response,
                       ::google::protobuf::Closure* done);
  void ValidateEmailAddress(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CCredentials_ValidateEmailAddress_Request* request,
                       ::proto::steam::CCredentials_ValidateEmailAddress_Response* response,
                       ::google::protobuf::Closure* done);
  void SteamGuardPhishingReport(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CCredentials_SteamGuardPhishingReport_Request* request,
                       ::proto::steam::CCredentials_SteamGuardPhishingReport_Response* response,
                       ::google::protobuf::Closure* done);
  void GetCredentialChangeTimeDetails(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CCredentials_LastCredentialChangeTime_Request* request,
                       ::proto::steam::CCredentials_LastCredentialChangeTime_Response* response,
                       ::google::protobuf::Closure* done);
  void GetAccountAuthSecret(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CCredentials_GetAccountAuthSecret_Request* request,
                       ::proto::steam::CCredentials_GetAccountAuthSecret_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Credentials_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CCredentials_TestAvailablePassword_Request

// optional string password = 1;
inline bool CCredentials_TestAvailablePassword_Request::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCredentials_TestAvailablePassword_Request::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCredentials_TestAvailablePassword_Request::password() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_TestAvailablePassword_Request.password)
  return password_.GetNoArena();
}
inline void CCredentials_TestAvailablePassword_Request::set_password(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_TestAvailablePassword_Request.password)
}
#if LANG_CXX11
inline void CCredentials_TestAvailablePassword_Request::set_password(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_TestAvailablePassword_Request.password)
}
#endif
inline void CCredentials_TestAvailablePassword_Request::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_TestAvailablePassword_Request.password)
}
inline void CCredentials_TestAvailablePassword_Request::set_password(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_TestAvailablePassword_Request.password)
}
inline ::std::string* CCredentials_TestAvailablePassword_Request::mutable_password() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_TestAvailablePassword_Request.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_TestAvailablePassword_Request::release_password() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_TestAvailablePassword_Request.password)
  if (!has_password()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return password_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_TestAvailablePassword_Request::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_TestAvailablePassword_Request.password)
}

// optional bytes sha_digest_password = 2;
inline bool CCredentials_TestAvailablePassword_Request::has_sha_digest_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCredentials_TestAvailablePassword_Request::clear_sha_digest_password() {
  sha_digest_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CCredentials_TestAvailablePassword_Request::sha_digest_password() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_TestAvailablePassword_Request.sha_digest_password)
  return sha_digest_password_.GetNoArena();
}
inline void CCredentials_TestAvailablePassword_Request::set_sha_digest_password(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  sha_digest_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_TestAvailablePassword_Request.sha_digest_password)
}
#if LANG_CXX11
inline void CCredentials_TestAvailablePassword_Request::set_sha_digest_password(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  sha_digest_password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_TestAvailablePassword_Request.sha_digest_password)
}
#endif
inline void CCredentials_TestAvailablePassword_Request::set_sha_digest_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  sha_digest_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_TestAvailablePassword_Request.sha_digest_password)
}
inline void CCredentials_TestAvailablePassword_Request::set_sha_digest_password(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  sha_digest_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_TestAvailablePassword_Request.sha_digest_password)
}
inline ::std::string* CCredentials_TestAvailablePassword_Request::mutable_sha_digest_password() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_TestAvailablePassword_Request.sha_digest_password)
  return sha_digest_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_TestAvailablePassword_Request::release_sha_digest_password() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_TestAvailablePassword_Request.sha_digest_password)
  if (!has_sha_digest_password()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return sha_digest_password_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_TestAvailablePassword_Request::set_allocated_sha_digest_password(::std::string* sha_digest_password) {
  if (sha_digest_password != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sha_digest_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha_digest_password);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_TestAvailablePassword_Request.sha_digest_password)
}

// optional string account_name = 3;
inline bool CCredentials_TestAvailablePassword_Request::has_account_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCredentials_TestAvailablePassword_Request::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CCredentials_TestAvailablePassword_Request::account_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_TestAvailablePassword_Request.account_name)
  return account_name_.GetNoArena();
}
inline void CCredentials_TestAvailablePassword_Request::set_account_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_TestAvailablePassword_Request.account_name)
}
#if LANG_CXX11
inline void CCredentials_TestAvailablePassword_Request::set_account_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_TestAvailablePassword_Request.account_name)
}
#endif
inline void CCredentials_TestAvailablePassword_Request::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_TestAvailablePassword_Request.account_name)
}
inline void CCredentials_TestAvailablePassword_Request::set_account_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_TestAvailablePassword_Request.account_name)
}
inline ::std::string* CCredentials_TestAvailablePassword_Request::mutable_account_name() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_TestAvailablePassword_Request.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_TestAvailablePassword_Request::release_account_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_TestAvailablePassword_Request.account_name)
  if (!has_account_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return account_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_TestAvailablePassword_Request::set_allocated_account_name(::std::string* account_name) {
  if (account_name != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_TestAvailablePassword_Request.account_name)
}

// -------------------------------------------------------------------

// CCredentials_TestAvailablePassword_Response

// optional bool is_valid = 3;
inline bool CCredentials_TestAvailablePassword_Response::has_is_valid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCredentials_TestAvailablePassword_Response::clear_is_valid() {
  is_valid_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CCredentials_TestAvailablePassword_Response::is_valid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_TestAvailablePassword_Response.is_valid)
  return is_valid_;
}
inline void CCredentials_TestAvailablePassword_Response::set_is_valid(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_valid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_TestAvailablePassword_Response.is_valid)
}

// -------------------------------------------------------------------

// CCredentials_GetSteamGuardDetails_Request

// optional bool include_new_authentications = 1 [default = true, (.proto.steam.description) = "Whether or not to populate the newauthentication field in the response"];
inline bool CCredentials_GetSteamGuardDetails_Request::has_include_new_authentications() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Request::clear_include_new_authentications() {
  include_new_authentications_ = true;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CCredentials_GetSteamGuardDetails_Request::include_new_authentications() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Request.include_new_authentications)
  return include_new_authentications_;
}
inline void CCredentials_GetSteamGuardDetails_Request::set_include_new_authentications(bool value) {
  _has_bits_[0] |= 0x00000008u;
  include_new_authentications_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Request.include_new_authentications)
}

// optional string webcookie = 2 [(.proto.steam.description) = "The user\'s Steam Guard machine auth cookie. If present, it\'ll be used to get the user\'s machine ID instead of the AM session."];
inline bool CCredentials_GetSteamGuardDetails_Request::has_webcookie() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Request::clear_webcookie() {
  webcookie_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCredentials_GetSteamGuardDetails_Request::webcookie() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Request.webcookie)
  return webcookie_.GetNoArena();
}
inline void CCredentials_GetSteamGuardDetails_Request::set_webcookie(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  webcookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Request.webcookie)
}
#if LANG_CXX11
inline void CCredentials_GetSteamGuardDetails_Request::set_webcookie(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  webcookie_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_GetSteamGuardDetails_Request.webcookie)
}
#endif
inline void CCredentials_GetSteamGuardDetails_Request::set_webcookie(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  webcookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_GetSteamGuardDetails_Request.webcookie)
}
inline void CCredentials_GetSteamGuardDetails_Request::set_webcookie(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  webcookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_GetSteamGuardDetails_Request.webcookie)
}
inline ::std::string* CCredentials_GetSteamGuardDetails_Request::mutable_webcookie() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_GetSteamGuardDetails_Request.webcookie)
  return webcookie_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_GetSteamGuardDetails_Request::release_webcookie() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_GetSteamGuardDetails_Request.webcookie)
  if (!has_webcookie()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return webcookie_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_GetSteamGuardDetails_Request::set_allocated_webcookie(::std::string* webcookie) {
  if (webcookie != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  webcookie_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), webcookie);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_GetSteamGuardDetails_Request.webcookie)
}

// optional fixed32 timestamp_minimum_wanted = 3;
inline bool CCredentials_GetSteamGuardDetails_Request::has_timestamp_minimum_wanted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Request::clear_timestamp_minimum_wanted() {
  timestamp_minimum_wanted_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CCredentials_GetSteamGuardDetails_Request::timestamp_minimum_wanted() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Request.timestamp_minimum_wanted)
  return timestamp_minimum_wanted_;
}
inline void CCredentials_GetSteamGuardDetails_Request::set_timestamp_minimum_wanted(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  timestamp_minimum_wanted_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Request.timestamp_minimum_wanted)
}

// optional int32 ipaddress = 4;
inline bool CCredentials_GetSteamGuardDetails_Request::has_ipaddress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Request::clear_ipaddress() {
  ipaddress_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CCredentials_GetSteamGuardDetails_Request::ipaddress() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Request.ipaddress)
  return ipaddress_;
}
inline void CCredentials_GetSteamGuardDetails_Request::set_ipaddress(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  ipaddress_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Request.ipaddress)
}

// -------------------------------------------------------------------

// CCredentials_GetSteamGuardDetails_Response_NewAuthentication

// optional fixed32 timestamp_steamguard_enabled = 1;
inline bool CCredentials_GetSteamGuardDetails_Response_NewAuthentication::has_timestamp_steamguard_enabled() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::clear_timestamp_steamguard_enabled() {
  timestamp_steamguard_enabled_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CCredentials_GetSteamGuardDetails_Response_NewAuthentication::timestamp_steamguard_enabled() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.timestamp_steamguard_enabled)
  return timestamp_steamguard_enabled_;
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::set_timestamp_steamguard_enabled(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  timestamp_steamguard_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.timestamp_steamguard_enabled)
}

// optional bool is_web_cookie = 2;
inline bool CCredentials_GetSteamGuardDetails_Response_NewAuthentication::has_is_web_cookie() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::clear_is_web_cookie() {
  is_web_cookie_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CCredentials_GetSteamGuardDetails_Response_NewAuthentication::is_web_cookie() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.is_web_cookie)
  return is_web_cookie_;
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::set_is_web_cookie(bool value) {
  _has_bits_[0] |= 0x00000010u;
  is_web_cookie_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.is_web_cookie)
}

// optional int32 ipaddress = 3;
inline bool CCredentials_GetSteamGuardDetails_Response_NewAuthentication::has_ipaddress() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::clear_ipaddress() {
  ipaddress_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 CCredentials_GetSteamGuardDetails_Response_NewAuthentication::ipaddress() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.ipaddress)
  return ipaddress_;
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::set_ipaddress(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  ipaddress_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.ipaddress)
}

// optional string geoloc_info = 4;
inline bool CCredentials_GetSteamGuardDetails_Response_NewAuthentication::has_geoloc_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::clear_geoloc_info() {
  geoloc_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCredentials_GetSteamGuardDetails_Response_NewAuthentication::geoloc_info() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.geoloc_info)
  return geoloc_info_.GetNoArena();
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::set_geoloc_info(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  geoloc_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.geoloc_info)
}
#if LANG_CXX11
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::set_geoloc_info(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  geoloc_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.geoloc_info)
}
#endif
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::set_geoloc_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  geoloc_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.geoloc_info)
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::set_geoloc_info(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  geoloc_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.geoloc_info)
}
inline ::std::string* CCredentials_GetSteamGuardDetails_Response_NewAuthentication::mutable_geoloc_info() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.geoloc_info)
  return geoloc_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_GetSteamGuardDetails_Response_NewAuthentication::release_geoloc_info() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.geoloc_info)
  if (!has_geoloc_info()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return geoloc_info_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::set_allocated_geoloc_info(::std::string* geoloc_info) {
  if (geoloc_info != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  geoloc_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), geoloc_info);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.geoloc_info)
}

// optional bool is_remembered = 5;
inline bool CCredentials_GetSteamGuardDetails_Response_NewAuthentication::has_is_remembered() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::clear_is_remembered() {
  is_remembered_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CCredentials_GetSteamGuardDetails_Response_NewAuthentication::is_remembered() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.is_remembered)
  return is_remembered_;
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::set_is_remembered(bool value) {
  _has_bits_[0] |= 0x00000020u;
  is_remembered_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.is_remembered)
}

// optional string machine_name_user_supplied = 6;
inline bool CCredentials_GetSteamGuardDetails_Response_NewAuthentication::has_machine_name_user_supplied() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::clear_machine_name_user_supplied() {
  machine_name_user_supplied_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CCredentials_GetSteamGuardDetails_Response_NewAuthentication::machine_name_user_supplied() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.machine_name_user_supplied)
  return machine_name_user_supplied_.GetNoArena();
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::set_machine_name_user_supplied(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  machine_name_user_supplied_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.machine_name_user_supplied)
}
#if LANG_CXX11
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::set_machine_name_user_supplied(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  machine_name_user_supplied_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.machine_name_user_supplied)
}
#endif
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::set_machine_name_user_supplied(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  machine_name_user_supplied_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.machine_name_user_supplied)
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::set_machine_name_user_supplied(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  machine_name_user_supplied_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.machine_name_user_supplied)
}
inline ::std::string* CCredentials_GetSteamGuardDetails_Response_NewAuthentication::mutable_machine_name_user_supplied() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.machine_name_user_supplied)
  return machine_name_user_supplied_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_GetSteamGuardDetails_Response_NewAuthentication::release_machine_name_user_supplied() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.machine_name_user_supplied)
  if (!has_machine_name_user_supplied()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return machine_name_user_supplied_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::set_allocated_machine_name_user_supplied(::std::string* machine_name_user_supplied) {
  if (machine_name_user_supplied != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  machine_name_user_supplied_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machine_name_user_supplied);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.machine_name_user_supplied)
}

// optional int32 status = 7;
inline bool CCredentials_GetSteamGuardDetails_Response_NewAuthentication::has_status() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::clear_status() {
  status_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::int32 CCredentials_GetSteamGuardDetails_Response_NewAuthentication::status() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.status)
  return status_;
}
inline void CCredentials_GetSteamGuardDetails_Response_NewAuthentication::set_status(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  status_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication.status)
}

// -------------------------------------------------------------------

// CCredentials_GetSteamGuardDetails_Response_SessionData

// optional uint64 machine_id = 1;
inline bool CCredentials_GetSteamGuardDetails_Response_SessionData::has_machine_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::clear_machine_id() {
  machine_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CCredentials_GetSteamGuardDetails_Response_SessionData::machine_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.machine_id)
  return machine_id_;
}
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::set_machine_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  machine_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.machine_id)
}

// optional string machine_name_userchosen = 2;
inline bool CCredentials_GetSteamGuardDetails_Response_SessionData::has_machine_name_userchosen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::clear_machine_name_userchosen() {
  machine_name_userchosen_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCredentials_GetSteamGuardDetails_Response_SessionData::machine_name_userchosen() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.machine_name_userchosen)
  return machine_name_userchosen_.GetNoArena();
}
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::set_machine_name_userchosen(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  machine_name_userchosen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.machine_name_userchosen)
}
#if LANG_CXX11
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::set_machine_name_userchosen(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  machine_name_userchosen_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.machine_name_userchosen)
}
#endif
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::set_machine_name_userchosen(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  machine_name_userchosen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.machine_name_userchosen)
}
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::set_machine_name_userchosen(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  machine_name_userchosen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.machine_name_userchosen)
}
inline ::std::string* CCredentials_GetSteamGuardDetails_Response_SessionData::mutable_machine_name_userchosen() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.machine_name_userchosen)
  return machine_name_userchosen_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_GetSteamGuardDetails_Response_SessionData::release_machine_name_userchosen() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.machine_name_userchosen)
  if (!has_machine_name_userchosen()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return machine_name_userchosen_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::set_allocated_machine_name_userchosen(::std::string* machine_name_userchosen) {
  if (machine_name_userchosen != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  machine_name_userchosen_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machine_name_userchosen);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.machine_name_userchosen)
}

// optional fixed32 timestamp_machine_steamguard_enabled = 3;
inline bool CCredentials_GetSteamGuardDetails_Response_SessionData::has_timestamp_machine_steamguard_enabled() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::clear_timestamp_machine_steamguard_enabled() {
  timestamp_machine_steamguard_enabled_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CCredentials_GetSteamGuardDetails_Response_SessionData::timestamp_machine_steamguard_enabled() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.timestamp_machine_steamguard_enabled)
  return timestamp_machine_steamguard_enabled_;
}
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::set_timestamp_machine_steamguard_enabled(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  timestamp_machine_steamguard_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.timestamp_machine_steamguard_enabled)
}

// optional bool authentication_exists_from_geoloc_before_mintime = 4;
inline bool CCredentials_GetSteamGuardDetails_Response_SessionData::has_authentication_exists_from_geoloc_before_mintime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::clear_authentication_exists_from_geoloc_before_mintime() {
  authentication_exists_from_geoloc_before_mintime_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CCredentials_GetSteamGuardDetails_Response_SessionData::authentication_exists_from_geoloc_before_mintime() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.authentication_exists_from_geoloc_before_mintime)
  return authentication_exists_from_geoloc_before_mintime_;
}
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::set_authentication_exists_from_geoloc_before_mintime(bool value) {
  _has_bits_[0] |= 0x00000008u;
  authentication_exists_from_geoloc_before_mintime_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.authentication_exists_from_geoloc_before_mintime)
}

// repeated .proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication newauthentication = 5;
inline int CCredentials_GetSteamGuardDetails_Response_SessionData::newauthentication_size() const {
  return newauthentication_.size();
}
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::clear_newauthentication() {
  newauthentication_.Clear();
}
inline ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication* CCredentials_GetSteamGuardDetails_Response_SessionData::mutable_newauthentication(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.newauthentication)
  return newauthentication_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication >*
CCredentials_GetSteamGuardDetails_Response_SessionData::mutable_newauthentication() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.newauthentication)
  return &newauthentication_;
}
inline const ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication& CCredentials_GetSteamGuardDetails_Response_SessionData::newauthentication(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.newauthentication)
  return newauthentication_.Get(index);
}
inline ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication* CCredentials_GetSteamGuardDetails_Response_SessionData::add_newauthentication() {
  // @@protoc_insertion_point(field_add:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.newauthentication)
  return newauthentication_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication >&
CCredentials_GetSteamGuardDetails_Response_SessionData::newauthentication() const {
  // @@protoc_insertion_point(field_list:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.newauthentication)
  return newauthentication_;
}

// optional bool authentication_exists_from_same_ip_before_mintime = 6;
inline bool CCredentials_GetSteamGuardDetails_Response_SessionData::has_authentication_exists_from_same_ip_before_mintime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::clear_authentication_exists_from_same_ip_before_mintime() {
  authentication_exists_from_same_ip_before_mintime_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CCredentials_GetSteamGuardDetails_Response_SessionData::authentication_exists_from_same_ip_before_mintime() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.authentication_exists_from_same_ip_before_mintime)
  return authentication_exists_from_same_ip_before_mintime_;
}
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::set_authentication_exists_from_same_ip_before_mintime(bool value) {
  _has_bits_[0] |= 0x00000010u;
  authentication_exists_from_same_ip_before_mintime_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.authentication_exists_from_same_ip_before_mintime)
}

// optional uint32 public_ipv4 = 7;
inline bool CCredentials_GetSteamGuardDetails_Response_SessionData::has_public_ipv4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::clear_public_ipv4() {
  public_ipv4_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CCredentials_GetSteamGuardDetails_Response_SessionData::public_ipv4() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.public_ipv4)
  return public_ipv4_;
}
inline void CCredentials_GetSteamGuardDetails_Response_SessionData::set_public_ipv4(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  public_ipv4_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData.public_ipv4)
}

// -------------------------------------------------------------------

// CCredentials_GetSteamGuardDetails_Response

// optional bool is_steamguard_enabled = 1;
inline bool CCredentials_GetSteamGuardDetails_Response::has_is_steamguard_enabled() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response::clear_is_steamguard_enabled() {
  is_steamguard_enabled_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CCredentials_GetSteamGuardDetails_Response::is_steamguard_enabled() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.is_steamguard_enabled)
  return is_steamguard_enabled_;
}
inline void CCredentials_GetSteamGuardDetails_Response::set_is_steamguard_enabled(bool value) {
  _has_bits_[0] |= 0x00000010u;
  is_steamguard_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.is_steamguard_enabled)
}

// optional fixed32 timestamp_steamguard_enabled = 2;
inline bool CCredentials_GetSteamGuardDetails_Response::has_timestamp_steamguard_enabled() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response::clear_timestamp_steamguard_enabled() {
  timestamp_steamguard_enabled_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CCredentials_GetSteamGuardDetails_Response::timestamp_steamguard_enabled() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.timestamp_steamguard_enabled)
  return timestamp_steamguard_enabled_;
}
inline void CCredentials_GetSteamGuardDetails_Response::set_timestamp_steamguard_enabled(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  timestamp_steamguard_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.timestamp_steamguard_enabled)
}

// repeated .proto.steam.CCredentials_GetSteamGuardDetails_Response.NewAuthentication deprecated_newauthentication = 3;
inline int CCredentials_GetSteamGuardDetails_Response::deprecated_newauthentication_size() const {
  return deprecated_newauthentication_.size();
}
inline void CCredentials_GetSteamGuardDetails_Response::clear_deprecated_newauthentication() {
  deprecated_newauthentication_.Clear();
}
inline ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication* CCredentials_GetSteamGuardDetails_Response::mutable_deprecated_newauthentication(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_newauthentication)
  return deprecated_newauthentication_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication >*
CCredentials_GetSteamGuardDetails_Response::mutable_deprecated_newauthentication() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_newauthentication)
  return &deprecated_newauthentication_;
}
inline const ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication& CCredentials_GetSteamGuardDetails_Response::deprecated_newauthentication(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_newauthentication)
  return deprecated_newauthentication_.Get(index);
}
inline ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication* CCredentials_GetSteamGuardDetails_Response::add_deprecated_newauthentication() {
  // @@protoc_insertion_point(field_add:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_newauthentication)
  return deprecated_newauthentication_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CCredentials_GetSteamGuardDetails_Response_NewAuthentication >&
CCredentials_GetSteamGuardDetails_Response::deprecated_newauthentication() const {
  // @@protoc_insertion_point(field_list:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_newauthentication)
  return deprecated_newauthentication_;
}

// optional string deprecated_machine_name_userchosen = 4;
inline bool CCredentials_GetSteamGuardDetails_Response::has_deprecated_machine_name_userchosen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response::clear_deprecated_machine_name_userchosen() {
  deprecated_machine_name_userchosen_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCredentials_GetSteamGuardDetails_Response::deprecated_machine_name_userchosen() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_machine_name_userchosen)
  return deprecated_machine_name_userchosen_.GetNoArena();
}
inline void CCredentials_GetSteamGuardDetails_Response::set_deprecated_machine_name_userchosen(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  deprecated_machine_name_userchosen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_machine_name_userchosen)
}
#if LANG_CXX11
inline void CCredentials_GetSteamGuardDetails_Response::set_deprecated_machine_name_userchosen(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  deprecated_machine_name_userchosen_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_machine_name_userchosen)
}
#endif
inline void CCredentials_GetSteamGuardDetails_Response::set_deprecated_machine_name_userchosen(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  deprecated_machine_name_userchosen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_machine_name_userchosen)
}
inline void CCredentials_GetSteamGuardDetails_Response::set_deprecated_machine_name_userchosen(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  deprecated_machine_name_userchosen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_machine_name_userchosen)
}
inline ::std::string* CCredentials_GetSteamGuardDetails_Response::mutable_deprecated_machine_name_userchosen() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_machine_name_userchosen)
  return deprecated_machine_name_userchosen_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_GetSteamGuardDetails_Response::release_deprecated_machine_name_userchosen() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_machine_name_userchosen)
  if (!has_deprecated_machine_name_userchosen()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return deprecated_machine_name_userchosen_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_GetSteamGuardDetails_Response::set_allocated_deprecated_machine_name_userchosen(::std::string* deprecated_machine_name_userchosen) {
  if (deprecated_machine_name_userchosen != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  deprecated_machine_name_userchosen_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deprecated_machine_name_userchosen);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_machine_name_userchosen)
}

// optional fixed32 deprecated_timestamp_machine_steamguard_enabled = 5;
inline bool CCredentials_GetSteamGuardDetails_Response::has_deprecated_timestamp_machine_steamguard_enabled() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response::clear_deprecated_timestamp_machine_steamguard_enabled() {
  deprecated_timestamp_machine_steamguard_enabled_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CCredentials_GetSteamGuardDetails_Response::deprecated_timestamp_machine_steamguard_enabled() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_timestamp_machine_steamguard_enabled)
  return deprecated_timestamp_machine_steamguard_enabled_;
}
inline void CCredentials_GetSteamGuardDetails_Response::set_deprecated_timestamp_machine_steamguard_enabled(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  deprecated_timestamp_machine_steamguard_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_timestamp_machine_steamguard_enabled)
}

// optional bool deprecated_authentication_exists_from_geoloc_before_mintime = 6;
inline bool CCredentials_GetSteamGuardDetails_Response::has_deprecated_authentication_exists_from_geoloc_before_mintime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response::clear_deprecated_authentication_exists_from_geoloc_before_mintime() {
  deprecated_authentication_exists_from_geoloc_before_mintime_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CCredentials_GetSteamGuardDetails_Response::deprecated_authentication_exists_from_geoloc_before_mintime() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_authentication_exists_from_geoloc_before_mintime)
  return deprecated_authentication_exists_from_geoloc_before_mintime_;
}
inline void CCredentials_GetSteamGuardDetails_Response::set_deprecated_authentication_exists_from_geoloc_before_mintime(bool value) {
  _has_bits_[0] |= 0x00000020u;
  deprecated_authentication_exists_from_geoloc_before_mintime_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_authentication_exists_from_geoloc_before_mintime)
}

// optional uint64 deprecated_machine_id = 7;
inline bool CCredentials_GetSteamGuardDetails_Response::has_deprecated_machine_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response::clear_deprecated_machine_id() {
  deprecated_machine_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 CCredentials_GetSteamGuardDetails_Response::deprecated_machine_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_machine_id)
  return deprecated_machine_id_;
}
inline void CCredentials_GetSteamGuardDetails_Response::set_deprecated_machine_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  deprecated_machine_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.deprecated_machine_id)
}

// repeated .proto.steam.CCredentials_GetSteamGuardDetails_Response.SessionData session_data = 8;
inline int CCredentials_GetSteamGuardDetails_Response::session_data_size() const {
  return session_data_.size();
}
inline void CCredentials_GetSteamGuardDetails_Response::clear_session_data() {
  session_data_.Clear();
}
inline ::proto::steam::CCredentials_GetSteamGuardDetails_Response_SessionData* CCredentials_GetSteamGuardDetails_Response::mutable_session_data(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_GetSteamGuardDetails_Response.session_data)
  return session_data_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CCredentials_GetSteamGuardDetails_Response_SessionData >*
CCredentials_GetSteamGuardDetails_Response::mutable_session_data() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CCredentials_GetSteamGuardDetails_Response.session_data)
  return &session_data_;
}
inline const ::proto::steam::CCredentials_GetSteamGuardDetails_Response_SessionData& CCredentials_GetSteamGuardDetails_Response::session_data(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.session_data)
  return session_data_.Get(index);
}
inline ::proto::steam::CCredentials_GetSteamGuardDetails_Response_SessionData* CCredentials_GetSteamGuardDetails_Response::add_session_data() {
  // @@protoc_insertion_point(field_add:proto.steam.CCredentials_GetSteamGuardDetails_Response.session_data)
  return session_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CCredentials_GetSteamGuardDetails_Response_SessionData >&
CCredentials_GetSteamGuardDetails_Response::session_data() const {
  // @@protoc_insertion_point(field_list:proto.steam.CCredentials_GetSteamGuardDetails_Response.session_data)
  return session_data_;
}

// optional bool is_twofactor_enabled = 9;
inline bool CCredentials_GetSteamGuardDetails_Response::has_is_twofactor_enabled() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response::clear_is_twofactor_enabled() {
  is_twofactor_enabled_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CCredentials_GetSteamGuardDetails_Response::is_twofactor_enabled() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.is_twofactor_enabled)
  return is_twofactor_enabled_;
}
inline void CCredentials_GetSteamGuardDetails_Response::set_is_twofactor_enabled(bool value) {
  _has_bits_[0] |= 0x00000040u;
  is_twofactor_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.is_twofactor_enabled)
}

// optional fixed32 timestamp_twofactor_enabled = 10;
inline bool CCredentials_GetSteamGuardDetails_Response::has_timestamp_twofactor_enabled() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response::clear_timestamp_twofactor_enabled() {
  timestamp_twofactor_enabled_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CCredentials_GetSteamGuardDetails_Response::timestamp_twofactor_enabled() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.timestamp_twofactor_enabled)
  return timestamp_twofactor_enabled_;
}
inline void CCredentials_GetSteamGuardDetails_Response::set_timestamp_twofactor_enabled(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  timestamp_twofactor_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.timestamp_twofactor_enabled)
}

// optional bool is_phone_verified = 11;
inline bool CCredentials_GetSteamGuardDetails_Response::has_is_phone_verified() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CCredentials_GetSteamGuardDetails_Response::clear_is_phone_verified() {
  is_phone_verified_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CCredentials_GetSteamGuardDetails_Response::is_phone_verified() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetSteamGuardDetails_Response.is_phone_verified)
  return is_phone_verified_;
}
inline void CCredentials_GetSteamGuardDetails_Response::set_is_phone_verified(bool value) {
  _has_bits_[0] |= 0x00000080u;
  is_phone_verified_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetSteamGuardDetails_Response.is_phone_verified)
}

// -------------------------------------------------------------------

// CCredentials_NewMachineNotificationDialog_Request

// optional bool is_approved = 1;
inline bool CCredentials_NewMachineNotificationDialog_Request::has_is_approved() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCredentials_NewMachineNotificationDialog_Request::clear_is_approved() {
  is_approved_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CCredentials_NewMachineNotificationDialog_Request::is_approved() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_NewMachineNotificationDialog_Request.is_approved)
  return is_approved_;
}
inline void CCredentials_NewMachineNotificationDialog_Request::set_is_approved(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_approved_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_NewMachineNotificationDialog_Request.is_approved)
}

// optional bool is_wizard_complete = 2;
inline bool CCredentials_NewMachineNotificationDialog_Request::has_is_wizard_complete() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCredentials_NewMachineNotificationDialog_Request::clear_is_wizard_complete() {
  is_wizard_complete_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CCredentials_NewMachineNotificationDialog_Request::is_wizard_complete() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_NewMachineNotificationDialog_Request.is_wizard_complete)
  return is_wizard_complete_;
}
inline void CCredentials_NewMachineNotificationDialog_Request::set_is_wizard_complete(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_wizard_complete_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_NewMachineNotificationDialog_Request.is_wizard_complete)
}

// -------------------------------------------------------------------

// CCredentials_NewMachineNotificationDialog_Response

// -------------------------------------------------------------------

// CCredentials_ValidateEmailAddress_Request

// optional string stoken = 1;
inline bool CCredentials_ValidateEmailAddress_Request::has_stoken() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCredentials_ValidateEmailAddress_Request::clear_stoken() {
  stoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCredentials_ValidateEmailAddress_Request::stoken() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_ValidateEmailAddress_Request.stoken)
  return stoken_.GetNoArena();
}
inline void CCredentials_ValidateEmailAddress_Request::set_stoken(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  stoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_ValidateEmailAddress_Request.stoken)
}
#if LANG_CXX11
inline void CCredentials_ValidateEmailAddress_Request::set_stoken(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  stoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_ValidateEmailAddress_Request.stoken)
}
#endif
inline void CCredentials_ValidateEmailAddress_Request::set_stoken(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  stoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_ValidateEmailAddress_Request.stoken)
}
inline void CCredentials_ValidateEmailAddress_Request::set_stoken(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  stoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_ValidateEmailAddress_Request.stoken)
}
inline ::std::string* CCredentials_ValidateEmailAddress_Request::mutable_stoken() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_ValidateEmailAddress_Request.stoken)
  return stoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_ValidateEmailAddress_Request::release_stoken() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_ValidateEmailAddress_Request.stoken)
  if (!has_stoken()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return stoken_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_ValidateEmailAddress_Request::set_allocated_stoken(::std::string* stoken) {
  if (stoken != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  stoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stoken);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_ValidateEmailAddress_Request.stoken)
}

// -------------------------------------------------------------------

// CCredentials_ValidateEmailAddress_Response

// optional bool was_validated = 1;
inline bool CCredentials_ValidateEmailAddress_Response::has_was_validated() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCredentials_ValidateEmailAddress_Response::clear_was_validated() {
  was_validated_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CCredentials_ValidateEmailAddress_Response::was_validated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_ValidateEmailAddress_Response.was_validated)
  return was_validated_;
}
inline void CCredentials_ValidateEmailAddress_Response::set_was_validated(bool value) {
  _has_bits_[0] |= 0x00000001u;
  was_validated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_ValidateEmailAddress_Response.was_validated)
}

// -------------------------------------------------------------------

// CCredentials_SteamGuardPhishingReport_Request

// optional string param_string = 1;
inline bool CCredentials_SteamGuardPhishingReport_Request::has_param_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCredentials_SteamGuardPhishingReport_Request::clear_param_string() {
  param_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCredentials_SteamGuardPhishingReport_Request::param_string() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_SteamGuardPhishingReport_Request.param_string)
  return param_string_.GetNoArena();
}
inline void CCredentials_SteamGuardPhishingReport_Request::set_param_string(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  param_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_SteamGuardPhishingReport_Request.param_string)
}
#if LANG_CXX11
inline void CCredentials_SteamGuardPhishingReport_Request::set_param_string(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  param_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_SteamGuardPhishingReport_Request.param_string)
}
#endif
inline void CCredentials_SteamGuardPhishingReport_Request::set_param_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  param_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_SteamGuardPhishingReport_Request.param_string)
}
inline void CCredentials_SteamGuardPhishingReport_Request::set_param_string(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  param_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_SteamGuardPhishingReport_Request.param_string)
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Request::mutable_param_string() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_SteamGuardPhishingReport_Request.param_string)
  return param_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Request::release_param_string() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_SteamGuardPhishingReport_Request.param_string)
  if (!has_param_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return param_string_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_SteamGuardPhishingReport_Request::set_allocated_param_string(::std::string* param_string) {
  if (param_string != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  param_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param_string);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_SteamGuardPhishingReport_Request.param_string)
}

// optional uint32 ipaddress_actual = 2;
inline bool CCredentials_SteamGuardPhishingReport_Request::has_ipaddress_actual() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCredentials_SteamGuardPhishingReport_Request::clear_ipaddress_actual() {
  ipaddress_actual_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CCredentials_SteamGuardPhishingReport_Request::ipaddress_actual() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_SteamGuardPhishingReport_Request.ipaddress_actual)
  return ipaddress_actual_;
}
inline void CCredentials_SteamGuardPhishingReport_Request::set_ipaddress_actual(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  ipaddress_actual_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_SteamGuardPhishingReport_Request.ipaddress_actual)
}

// -------------------------------------------------------------------

// CCredentials_SteamGuardPhishingReport_Response

// optional uint32 ipaddress_loginattempt = 1;
inline bool CCredentials_SteamGuardPhishingReport_Response::has_ipaddress_loginattempt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CCredentials_SteamGuardPhishingReport_Response::clear_ipaddress_loginattempt() {
  ipaddress_loginattempt_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CCredentials_SteamGuardPhishingReport_Response::ipaddress_loginattempt() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_SteamGuardPhishingReport_Response.ipaddress_loginattempt)
  return ipaddress_loginattempt_;
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_ipaddress_loginattempt(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  ipaddress_loginattempt_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_SteamGuardPhishingReport_Response.ipaddress_loginattempt)
}

// optional string countryname_loginattempt = 2;
inline bool CCredentials_SteamGuardPhishingReport_Response::has_countryname_loginattempt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCredentials_SteamGuardPhishingReport_Response::clear_countryname_loginattempt() {
  countryname_loginattempt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCredentials_SteamGuardPhishingReport_Response::countryname_loginattempt() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_loginattempt)
  return countryname_loginattempt_.GetNoArena();
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_countryname_loginattempt(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  countryname_loginattempt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_loginattempt)
}
#if LANG_CXX11
inline void CCredentials_SteamGuardPhishingReport_Response::set_countryname_loginattempt(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  countryname_loginattempt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_loginattempt)
}
#endif
inline void CCredentials_SteamGuardPhishingReport_Response::set_countryname_loginattempt(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  countryname_loginattempt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_loginattempt)
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_countryname_loginattempt(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  countryname_loginattempt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_loginattempt)
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Response::mutable_countryname_loginattempt() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_loginattempt)
  return countryname_loginattempt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Response::release_countryname_loginattempt() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_loginattempt)
  if (!has_countryname_loginattempt()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return countryname_loginattempt_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_allocated_countryname_loginattempt(::std::string* countryname_loginattempt) {
  if (countryname_loginattempt != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  countryname_loginattempt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), countryname_loginattempt);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_loginattempt)
}

// optional string statename_loginattempt = 3;
inline bool CCredentials_SteamGuardPhishingReport_Response::has_statename_loginattempt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCredentials_SteamGuardPhishingReport_Response::clear_statename_loginattempt() {
  statename_loginattempt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CCredentials_SteamGuardPhishingReport_Response::statename_loginattempt() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_loginattempt)
  return statename_loginattempt_.GetNoArena();
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_statename_loginattempt(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  statename_loginattempt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_loginattempt)
}
#if LANG_CXX11
inline void CCredentials_SteamGuardPhishingReport_Response::set_statename_loginattempt(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  statename_loginattempt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_loginattempt)
}
#endif
inline void CCredentials_SteamGuardPhishingReport_Response::set_statename_loginattempt(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  statename_loginattempt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_loginattempt)
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_statename_loginattempt(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  statename_loginattempt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_loginattempt)
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Response::mutable_statename_loginattempt() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_loginattempt)
  return statename_loginattempt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Response::release_statename_loginattempt() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_loginattempt)
  if (!has_statename_loginattempt()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return statename_loginattempt_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_allocated_statename_loginattempt(::std::string* statename_loginattempt) {
  if (statename_loginattempt != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  statename_loginattempt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), statename_loginattempt);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_loginattempt)
}

// optional string cityname_loginattempt = 4;
inline bool CCredentials_SteamGuardPhishingReport_Response::has_cityname_loginattempt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCredentials_SteamGuardPhishingReport_Response::clear_cityname_loginattempt() {
  cityname_loginattempt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CCredentials_SteamGuardPhishingReport_Response::cityname_loginattempt() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_loginattempt)
  return cityname_loginattempt_.GetNoArena();
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_cityname_loginattempt(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  cityname_loginattempt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_loginattempt)
}
#if LANG_CXX11
inline void CCredentials_SteamGuardPhishingReport_Response::set_cityname_loginattempt(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  cityname_loginattempt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_loginattempt)
}
#endif
inline void CCredentials_SteamGuardPhishingReport_Response::set_cityname_loginattempt(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  cityname_loginattempt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_loginattempt)
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_cityname_loginattempt(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  cityname_loginattempt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_loginattempt)
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Response::mutable_cityname_loginattempt() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_loginattempt)
  return cityname_loginattempt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Response::release_cityname_loginattempt() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_loginattempt)
  if (!has_cityname_loginattempt()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return cityname_loginattempt_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_allocated_cityname_loginattempt(::std::string* cityname_loginattempt) {
  if (cityname_loginattempt != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  cityname_loginattempt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cityname_loginattempt);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_loginattempt)
}

// optional uint32 ipaddress_actual = 5;
inline bool CCredentials_SteamGuardPhishingReport_Response::has_ipaddress_actual() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CCredentials_SteamGuardPhishingReport_Response::clear_ipaddress_actual() {
  ipaddress_actual_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CCredentials_SteamGuardPhishingReport_Response::ipaddress_actual() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_SteamGuardPhishingReport_Response.ipaddress_actual)
  return ipaddress_actual_;
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_ipaddress_actual(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  ipaddress_actual_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_SteamGuardPhishingReport_Response.ipaddress_actual)
}

// optional string countryname_actual = 6;
inline bool CCredentials_SteamGuardPhishingReport_Response::has_countryname_actual() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCredentials_SteamGuardPhishingReport_Response::clear_countryname_actual() {
  countryname_actual_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& CCredentials_SteamGuardPhishingReport_Response::countryname_actual() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_actual)
  return countryname_actual_.GetNoArena();
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_countryname_actual(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  countryname_actual_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_actual)
}
#if LANG_CXX11
inline void CCredentials_SteamGuardPhishingReport_Response::set_countryname_actual(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  countryname_actual_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_actual)
}
#endif
inline void CCredentials_SteamGuardPhishingReport_Response::set_countryname_actual(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  countryname_actual_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_actual)
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_countryname_actual(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  countryname_actual_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_actual)
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Response::mutable_countryname_actual() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_actual)
  return countryname_actual_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Response::release_countryname_actual() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_actual)
  if (!has_countryname_actual()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return countryname_actual_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_allocated_countryname_actual(::std::string* countryname_actual) {
  if (countryname_actual != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  countryname_actual_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), countryname_actual);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_SteamGuardPhishingReport_Response.countryname_actual)
}

// optional string statename_actual = 7;
inline bool CCredentials_SteamGuardPhishingReport_Response::has_statename_actual() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCredentials_SteamGuardPhishingReport_Response::clear_statename_actual() {
  statename_actual_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& CCredentials_SteamGuardPhishingReport_Response::statename_actual() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_actual)
  return statename_actual_.GetNoArena();
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_statename_actual(const ::std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  statename_actual_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_actual)
}
#if LANG_CXX11
inline void CCredentials_SteamGuardPhishingReport_Response::set_statename_actual(::std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  statename_actual_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_actual)
}
#endif
inline void CCredentials_SteamGuardPhishingReport_Response::set_statename_actual(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  statename_actual_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_actual)
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_statename_actual(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  statename_actual_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_actual)
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Response::mutable_statename_actual() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_actual)
  return statename_actual_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Response::release_statename_actual() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_actual)
  if (!has_statename_actual()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return statename_actual_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_allocated_statename_actual(::std::string* statename_actual) {
  if (statename_actual != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  statename_actual_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), statename_actual);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_SteamGuardPhishingReport_Response.statename_actual)
}

// optional string cityname_actual = 8;
inline bool CCredentials_SteamGuardPhishingReport_Response::has_cityname_actual() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCredentials_SteamGuardPhishingReport_Response::clear_cityname_actual() {
  cityname_actual_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::std::string& CCredentials_SteamGuardPhishingReport_Response::cityname_actual() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_actual)
  return cityname_actual_.GetNoArena();
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_cityname_actual(const ::std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  cityname_actual_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_actual)
}
#if LANG_CXX11
inline void CCredentials_SteamGuardPhishingReport_Response::set_cityname_actual(::std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  cityname_actual_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_actual)
}
#endif
inline void CCredentials_SteamGuardPhishingReport_Response::set_cityname_actual(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  cityname_actual_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_actual)
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_cityname_actual(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  cityname_actual_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_actual)
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Response::mutable_cityname_actual() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_actual)
  return cityname_actual_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Response::release_cityname_actual() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_actual)
  if (!has_cityname_actual()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return cityname_actual_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_allocated_cityname_actual(::std::string* cityname_actual) {
  if (cityname_actual != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  cityname_actual_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cityname_actual);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_SteamGuardPhishingReport_Response.cityname_actual)
}

// optional string steamguard_code = 9;
inline bool CCredentials_SteamGuardPhishingReport_Response::has_steamguard_code() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CCredentials_SteamGuardPhishingReport_Response::clear_steamguard_code() {
  steamguard_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::std::string& CCredentials_SteamGuardPhishingReport_Response::steamguard_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_SteamGuardPhishingReport_Response.steamguard_code)
  return steamguard_code_.GetNoArena();
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_steamguard_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  steamguard_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_SteamGuardPhishingReport_Response.steamguard_code)
}
#if LANG_CXX11
inline void CCredentials_SteamGuardPhishingReport_Response::set_steamguard_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  steamguard_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_SteamGuardPhishingReport_Response.steamguard_code)
}
#endif
inline void CCredentials_SteamGuardPhishingReport_Response::set_steamguard_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  steamguard_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_SteamGuardPhishingReport_Response.steamguard_code)
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_steamguard_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  steamguard_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_SteamGuardPhishingReport_Response.steamguard_code)
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Response::mutable_steamguard_code() {
  _has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_SteamGuardPhishingReport_Response.steamguard_code)
  return steamguard_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_SteamGuardPhishingReport_Response::release_steamguard_code() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_SteamGuardPhishingReport_Response.steamguard_code)
  if (!has_steamguard_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return steamguard_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_SteamGuardPhishingReport_Response::set_allocated_steamguard_code(::std::string* steamguard_code) {
  if (steamguard_code != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  steamguard_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), steamguard_code);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_SteamGuardPhishingReport_Response.steamguard_code)
}

// -------------------------------------------------------------------

// CCredentials_LastCredentialChangeTime_Request

// -------------------------------------------------------------------

// CCredentials_LastCredentialChangeTime_Response

// optional fixed32 timestamp_last_password_change = 1;
inline bool CCredentials_LastCredentialChangeTime_Response::has_timestamp_last_password_change() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCredentials_LastCredentialChangeTime_Response::clear_timestamp_last_password_change() {
  timestamp_last_password_change_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CCredentials_LastCredentialChangeTime_Response::timestamp_last_password_change() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_LastCredentialChangeTime_Response.timestamp_last_password_change)
  return timestamp_last_password_change_;
}
inline void CCredentials_LastCredentialChangeTime_Response::set_timestamp_last_password_change(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  timestamp_last_password_change_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_LastCredentialChangeTime_Response.timestamp_last_password_change)
}

// optional fixed32 timestamp_last_email_change = 2;
inline bool CCredentials_LastCredentialChangeTime_Response::has_timestamp_last_email_change() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCredentials_LastCredentialChangeTime_Response::clear_timestamp_last_email_change() {
  timestamp_last_email_change_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CCredentials_LastCredentialChangeTime_Response::timestamp_last_email_change() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_LastCredentialChangeTime_Response.timestamp_last_email_change)
  return timestamp_last_email_change_;
}
inline void CCredentials_LastCredentialChangeTime_Response::set_timestamp_last_email_change(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  timestamp_last_email_change_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_LastCredentialChangeTime_Response.timestamp_last_email_change)
}

// optional fixed32 timestamp_last_password_reset = 3;
inline bool CCredentials_LastCredentialChangeTime_Response::has_timestamp_last_password_reset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCredentials_LastCredentialChangeTime_Response::clear_timestamp_last_password_reset() {
  timestamp_last_password_reset_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CCredentials_LastCredentialChangeTime_Response::timestamp_last_password_reset() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_LastCredentialChangeTime_Response.timestamp_last_password_reset)
  return timestamp_last_password_reset_;
}
inline void CCredentials_LastCredentialChangeTime_Response::set_timestamp_last_password_reset(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  timestamp_last_password_reset_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_LastCredentialChangeTime_Response.timestamp_last_password_reset)
}

// -------------------------------------------------------------------

// CCredentials_GetAccountAuthSecret_Request

// -------------------------------------------------------------------

// CCredentials_GetAccountAuthSecret_Response

// optional int32 secret_id = 1;
inline bool CCredentials_GetAccountAuthSecret_Response::has_secret_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCredentials_GetAccountAuthSecret_Response::clear_secret_id() {
  secret_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 CCredentials_GetAccountAuthSecret_Response::secret_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetAccountAuthSecret_Response.secret_id)
  return secret_id_;
}
inline void CCredentials_GetAccountAuthSecret_Response::set_secret_id(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  secret_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetAccountAuthSecret_Response.secret_id)
}

// optional bytes secret = 2;
inline bool CCredentials_GetAccountAuthSecret_Response::has_secret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCredentials_GetAccountAuthSecret_Response::clear_secret() {
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCredentials_GetAccountAuthSecret_Response::secret() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCredentials_GetAccountAuthSecret_Response.secret)
  return secret_.GetNoArena();
}
inline void CCredentials_GetAccountAuthSecret_Response::set_secret(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCredentials_GetAccountAuthSecret_Response.secret)
}
#if LANG_CXX11
inline void CCredentials_GetAccountAuthSecret_Response::set_secret(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCredentials_GetAccountAuthSecret_Response.secret)
}
#endif
inline void CCredentials_GetAccountAuthSecret_Response::set_secret(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCredentials_GetAccountAuthSecret_Response.secret)
}
inline void CCredentials_GetAccountAuthSecret_Response::set_secret(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCredentials_GetAccountAuthSecret_Response.secret)
}
inline ::std::string* CCredentials_GetAccountAuthSecret_Response::mutable_secret() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCredentials_GetAccountAuthSecret_Response.secret)
  return secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCredentials_GetAccountAuthSecret_Response::release_secret() {
  // @@protoc_insertion_point(field_release:proto.steam.CCredentials_GetAccountAuthSecret_Response.secret)
  if (!has_secret()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return secret_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCredentials_GetAccountAuthSecret_Response::set_allocated_secret(::std::string* secret) {
  if (secret != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCredentials_GetAccountAuthSecret_Response.secret)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_steammessages_5fcredentials_2esteamclient_2eproto
