// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_siteserverui.proto

#ifndef PROTOBUF_INCLUDED_steammessages_5fsiteserverui_2eproto
#define PROTOBUF_INCLUDED_steammessages_5fsiteserverui_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_base.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fsiteserverui_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fsiteserverui_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[23]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_steammessages_5fsiteserverui_2eproto();
namespace proto {
namespace steam {
class SiteServerUI_CancelLogin_Request;
class SiteServerUI_CancelLogin_RequestDefaultTypeInternal;
extern SiteServerUI_CancelLogin_RequestDefaultTypeInternal _SiteServerUI_CancelLogin_Request_default_instance_;
class SiteServerUI_CancelLogin_Response;
class SiteServerUI_CancelLogin_ResponseDefaultTypeInternal;
extern SiteServerUI_CancelLogin_ResponseDefaultTypeInternal _SiteServerUI_CancelLogin_Response_default_instance_;
class SiteServerUI_ClientStatus_Request;
class SiteServerUI_ClientStatus_RequestDefaultTypeInternal;
extern SiteServerUI_ClientStatus_RequestDefaultTypeInternal _SiteServerUI_ClientStatus_Request_default_instance_;
class SiteServerUI_ClientStatus_Response;
class SiteServerUI_ClientStatus_ResponseDefaultTypeInternal;
extern SiteServerUI_ClientStatus_ResponseDefaultTypeInternal _SiteServerUI_ClientStatus_Response_default_instance_;
class SiteServerUI_ClientStatus_Response_ClientInfo;
class SiteServerUI_ClientStatus_Response_ClientInfoDefaultTypeInternal;
extern SiteServerUI_ClientStatus_Response_ClientInfoDefaultTypeInternal _SiteServerUI_ClientStatus_Response_ClientInfo_default_instance_;
class SiteServerUI_ContentCacheConfig_Request;
class SiteServerUI_ContentCacheConfig_RequestDefaultTypeInternal;
extern SiteServerUI_ContentCacheConfig_RequestDefaultTypeInternal _SiteServerUI_ContentCacheConfig_Request_default_instance_;
class SiteServerUI_ContentCacheConfig_Response;
class SiteServerUI_ContentCacheConfig_ResponseDefaultTypeInternal;
extern SiteServerUI_ContentCacheConfig_ResponseDefaultTypeInternal _SiteServerUI_ContentCacheConfig_Response_default_instance_;
class SiteServerUI_ContentCacheStatus_Request;
class SiteServerUI_ContentCacheStatus_RequestDefaultTypeInternal;
extern SiteServerUI_ContentCacheStatus_RequestDefaultTypeInternal _SiteServerUI_ContentCacheStatus_Request_default_instance_;
class SiteServerUI_ContentCacheStatus_Response;
class SiteServerUI_ContentCacheStatus_ResponseDefaultTypeInternal;
extern SiteServerUI_ContentCacheStatus_ResponseDefaultTypeInternal _SiteServerUI_ContentCacheStatus_Response_default_instance_;
class SiteServerUI_GetLanguage_Request;
class SiteServerUI_GetLanguage_RequestDefaultTypeInternal;
extern SiteServerUI_GetLanguage_RequestDefaultTypeInternal _SiteServerUI_GetLanguage_Request_default_instance_;
class SiteServerUI_GetLanguage_Response;
class SiteServerUI_GetLanguage_ResponseDefaultTypeInternal;
extern SiteServerUI_GetLanguage_ResponseDefaultTypeInternal _SiteServerUI_GetLanguage_Response_default_instance_;
class SiteServerUI_LoginStatus_Request;
class SiteServerUI_LoginStatus_RequestDefaultTypeInternal;
extern SiteServerUI_LoginStatus_RequestDefaultTypeInternal _SiteServerUI_LoginStatus_Request_default_instance_;
class SiteServerUI_LoginStatus_Response;
class SiteServerUI_LoginStatus_ResponseDefaultTypeInternal;
extern SiteServerUI_LoginStatus_ResponseDefaultTypeInternal _SiteServerUI_LoginStatus_Response_default_instance_;
class SiteServerUI_Login_Request;
class SiteServerUI_Login_RequestDefaultTypeInternal;
extern SiteServerUI_Login_RequestDefaultTypeInternal _SiteServerUI_Login_Request_default_instance_;
class SiteServerUI_Login_Response;
class SiteServerUI_Login_ResponseDefaultTypeInternal;
extern SiteServerUI_Login_ResponseDefaultTypeInternal _SiteServerUI_Login_Response_default_instance_;
class SiteServerUI_Logout_Request;
class SiteServerUI_Logout_RequestDefaultTypeInternal;
extern SiteServerUI_Logout_RequestDefaultTypeInternal _SiteServerUI_Logout_Request_default_instance_;
class SiteServerUI_Logout_Response;
class SiteServerUI_Logout_ResponseDefaultTypeInternal;
extern SiteServerUI_Logout_ResponseDefaultTypeInternal _SiteServerUI_Logout_Response_default_instance_;
class SiteServerUI_Quit_Request;
class SiteServerUI_Quit_RequestDefaultTypeInternal;
extern SiteServerUI_Quit_RequestDefaultTypeInternal _SiteServerUI_Quit_Request_default_instance_;
class SiteServerUI_Quit_Response;
class SiteServerUI_Quit_ResponseDefaultTypeInternal;
extern SiteServerUI_Quit_ResponseDefaultTypeInternal _SiteServerUI_Quit_Response_default_instance_;
class SiteServerUI_SetLanguage_Request;
class SiteServerUI_SetLanguage_RequestDefaultTypeInternal;
extern SiteServerUI_SetLanguage_RequestDefaultTypeInternal _SiteServerUI_SetLanguage_Request_default_instance_;
class SiteServerUI_SetLanguage_Response;
class SiteServerUI_SetLanguage_ResponseDefaultTypeInternal;
extern SiteServerUI_SetLanguage_ResponseDefaultTypeInternal _SiteServerUI_SetLanguage_Response_default_instance_;
class SiteServerUI_Status_Request;
class SiteServerUI_Status_RequestDefaultTypeInternal;
extern SiteServerUI_Status_RequestDefaultTypeInternal _SiteServerUI_Status_Request_default_instance_;
class SiteServerUI_Status_Response;
class SiteServerUI_Status_ResponseDefaultTypeInternal;
extern SiteServerUI_Status_ResponseDefaultTypeInternal _SiteServerUI_Status_Response_default_instance_;
}  // namespace steam
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::steam::SiteServerUI_CancelLogin_Request* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_CancelLogin_Request>(Arena*);
template<> ::proto::steam::SiteServerUI_CancelLogin_Response* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_CancelLogin_Response>(Arena*);
template<> ::proto::steam::SiteServerUI_ClientStatus_Request* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_ClientStatus_Request>(Arena*);
template<> ::proto::steam::SiteServerUI_ClientStatus_Response* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_ClientStatus_Response>(Arena*);
template<> ::proto::steam::SiteServerUI_ClientStatus_Response_ClientInfo* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_ClientStatus_Response_ClientInfo>(Arena*);
template<> ::proto::steam::SiteServerUI_ContentCacheConfig_Request* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_ContentCacheConfig_Request>(Arena*);
template<> ::proto::steam::SiteServerUI_ContentCacheConfig_Response* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_ContentCacheConfig_Response>(Arena*);
template<> ::proto::steam::SiteServerUI_ContentCacheStatus_Request* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_ContentCacheStatus_Request>(Arena*);
template<> ::proto::steam::SiteServerUI_ContentCacheStatus_Response* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_ContentCacheStatus_Response>(Arena*);
template<> ::proto::steam::SiteServerUI_GetLanguage_Request* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_GetLanguage_Request>(Arena*);
template<> ::proto::steam::SiteServerUI_GetLanguage_Response* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_GetLanguage_Response>(Arena*);
template<> ::proto::steam::SiteServerUI_LoginStatus_Request* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_LoginStatus_Request>(Arena*);
template<> ::proto::steam::SiteServerUI_LoginStatus_Response* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_LoginStatus_Response>(Arena*);
template<> ::proto::steam::SiteServerUI_Login_Request* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_Login_Request>(Arena*);
template<> ::proto::steam::SiteServerUI_Login_Response* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_Login_Response>(Arena*);
template<> ::proto::steam::SiteServerUI_Logout_Request* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_Logout_Request>(Arena*);
template<> ::proto::steam::SiteServerUI_Logout_Response* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_Logout_Response>(Arena*);
template<> ::proto::steam::SiteServerUI_Quit_Request* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_Quit_Request>(Arena*);
template<> ::proto::steam::SiteServerUI_Quit_Response* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_Quit_Response>(Arena*);
template<> ::proto::steam::SiteServerUI_SetLanguage_Request* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_SetLanguage_Request>(Arena*);
template<> ::proto::steam::SiteServerUI_SetLanguage_Response* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_SetLanguage_Response>(Arena*);
template<> ::proto::steam::SiteServerUI_Status_Request* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_Status_Request>(Arena*);
template<> ::proto::steam::SiteServerUI_Status_Response* Arena::CreateMaybeMessage<::proto::steam::SiteServerUI_Status_Response>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace steam {

// ===================================================================

class SiteServerUI_Login_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_Login_Request) */ {
 public:
  SiteServerUI_Login_Request();
  virtual ~SiteServerUI_Login_Request();

  SiteServerUI_Login_Request(const SiteServerUI_Login_Request& from);

  inline SiteServerUI_Login_Request& operator=(const SiteServerUI_Login_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_Login_Request(SiteServerUI_Login_Request&& from) noexcept
    : SiteServerUI_Login_Request() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_Login_Request& operator=(SiteServerUI_Login_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_Login_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_Login_Request* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_Login_Request*>(
               &_SiteServerUI_Login_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SiteServerUI_Login_Request* other);
  friend void swap(SiteServerUI_Login_Request& a, SiteServerUI_Login_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_Login_Request* New() const final {
    return CreateMaybeMessage<SiteServerUI_Login_Request>(nullptr);
  }

  SiteServerUI_Login_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_Login_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_Login_Request& from);
  void MergeFrom(const SiteServerUI_Login_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_Login_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string username = 1;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string steamguardcode = 3;
  bool has_steamguardcode() const;
  void clear_steamguardcode();
  static const int kSteamguardcodeFieldNumber = 3;
  const ::std::string& steamguardcode() const;
  void set_steamguardcode(const ::std::string& value);
  #if LANG_CXX11
  void set_steamguardcode(::std::string&& value);
  #endif
  void set_steamguardcode(const char* value);
  void set_steamguardcode(const char* value, size_t size);
  ::std::string* mutable_steamguardcode();
  ::std::string* release_steamguardcode();
  void set_allocated_steamguardcode(::std::string* steamguardcode);

  // optional bool remember_password = 4;
  bool has_remember_password() const;
  void clear_remember_password();
  static const int kRememberPasswordFieldNumber = 4;
  bool remember_password() const;
  void set_remember_password(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_Login_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr steamguardcode_;
  bool remember_password_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_Login_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_Login_Response) */ {
 public:
  SiteServerUI_Login_Response();
  virtual ~SiteServerUI_Login_Response();

  SiteServerUI_Login_Response(const SiteServerUI_Login_Response& from);

  inline SiteServerUI_Login_Response& operator=(const SiteServerUI_Login_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_Login_Response(SiteServerUI_Login_Response&& from) noexcept
    : SiteServerUI_Login_Response() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_Login_Response& operator=(SiteServerUI_Login_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_Login_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_Login_Response* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_Login_Response*>(
               &_SiteServerUI_Login_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SiteServerUI_Login_Response* other);
  friend void swap(SiteServerUI_Login_Response& a, SiteServerUI_Login_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_Login_Response* New() const final {
    return CreateMaybeMessage<SiteServerUI_Login_Response>(nullptr);
  }

  SiteServerUI_Login_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_Login_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_Login_Response& from);
  void MergeFrom(const SiteServerUI_Login_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_Login_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 logon_state = 1;
  bool has_logon_state() const;
  void clear_logon_state();
  static const int kLogonStateFieldNumber = 1;
  ::google::protobuf::int32 logon_state() const;
  void set_logon_state(::google::protobuf::int32 value);

  // optional int32 logon_eresult = 2;
  bool has_logon_eresult() const;
  void clear_logon_eresult();
  static const int kLogonEresultFieldNumber = 2;
  ::google::protobuf::int32 logon_eresult() const;
  void set_logon_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_Login_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 logon_state_;
  ::google::protobuf::int32 logon_eresult_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_LoginStatus_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_LoginStatus_Request) */ {
 public:
  SiteServerUI_LoginStatus_Request();
  virtual ~SiteServerUI_LoginStatus_Request();

  SiteServerUI_LoginStatus_Request(const SiteServerUI_LoginStatus_Request& from);

  inline SiteServerUI_LoginStatus_Request& operator=(const SiteServerUI_LoginStatus_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_LoginStatus_Request(SiteServerUI_LoginStatus_Request&& from) noexcept
    : SiteServerUI_LoginStatus_Request() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_LoginStatus_Request& operator=(SiteServerUI_LoginStatus_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_LoginStatus_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_LoginStatus_Request* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_LoginStatus_Request*>(
               &_SiteServerUI_LoginStatus_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SiteServerUI_LoginStatus_Request* other);
  friend void swap(SiteServerUI_LoginStatus_Request& a, SiteServerUI_LoginStatus_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_LoginStatus_Request* New() const final {
    return CreateMaybeMessage<SiteServerUI_LoginStatus_Request>(nullptr);
  }

  SiteServerUI_LoginStatus_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_LoginStatus_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_LoginStatus_Request& from);
  void MergeFrom(const SiteServerUI_LoginStatus_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_LoginStatus_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_LoginStatus_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_LoginStatus_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_LoginStatus_Response) */ {
 public:
  SiteServerUI_LoginStatus_Response();
  virtual ~SiteServerUI_LoginStatus_Response();

  SiteServerUI_LoginStatus_Response(const SiteServerUI_LoginStatus_Response& from);

  inline SiteServerUI_LoginStatus_Response& operator=(const SiteServerUI_LoginStatus_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_LoginStatus_Response(SiteServerUI_LoginStatus_Response&& from) noexcept
    : SiteServerUI_LoginStatus_Response() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_LoginStatus_Response& operator=(SiteServerUI_LoginStatus_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_LoginStatus_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_LoginStatus_Response* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_LoginStatus_Response*>(
               &_SiteServerUI_LoginStatus_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(SiteServerUI_LoginStatus_Response* other);
  friend void swap(SiteServerUI_LoginStatus_Response& a, SiteServerUI_LoginStatus_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_LoginStatus_Response* New() const final {
    return CreateMaybeMessage<SiteServerUI_LoginStatus_Response>(nullptr);
  }

  SiteServerUI_LoginStatus_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_LoginStatus_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_LoginStatus_Response& from);
  void MergeFrom(const SiteServerUI_LoginStatus_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_LoginStatus_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string username = 1;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional bool cached_credentials = 2;
  bool has_cached_credentials() const;
  void clear_cached_credentials();
  static const int kCachedCredentialsFieldNumber = 2;
  bool cached_credentials() const;
  void set_cached_credentials(bool value);

  // optional int32 logon_state = 3;
  bool has_logon_state() const;
  void clear_logon_state();
  static const int kLogonStateFieldNumber = 3;
  ::google::protobuf::int32 logon_state() const;
  void set_logon_state(::google::protobuf::int32 value);

  // optional int32 logon_eresult = 4;
  bool has_logon_eresult() const;
  void clear_logon_eresult();
  static const int kLogonEresultFieldNumber = 4;
  ::google::protobuf::int32 logon_eresult() const;
  void set_logon_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_LoginStatus_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  bool cached_credentials_;
  ::google::protobuf::int32 logon_state_;
  ::google::protobuf::int32 logon_eresult_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_CancelLogin_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_CancelLogin_Request) */ {
 public:
  SiteServerUI_CancelLogin_Request();
  virtual ~SiteServerUI_CancelLogin_Request();

  SiteServerUI_CancelLogin_Request(const SiteServerUI_CancelLogin_Request& from);

  inline SiteServerUI_CancelLogin_Request& operator=(const SiteServerUI_CancelLogin_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_CancelLogin_Request(SiteServerUI_CancelLogin_Request&& from) noexcept
    : SiteServerUI_CancelLogin_Request() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_CancelLogin_Request& operator=(SiteServerUI_CancelLogin_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_CancelLogin_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_CancelLogin_Request* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_CancelLogin_Request*>(
               &_SiteServerUI_CancelLogin_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SiteServerUI_CancelLogin_Request* other);
  friend void swap(SiteServerUI_CancelLogin_Request& a, SiteServerUI_CancelLogin_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_CancelLogin_Request* New() const final {
    return CreateMaybeMessage<SiteServerUI_CancelLogin_Request>(nullptr);
  }

  SiteServerUI_CancelLogin_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_CancelLogin_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_CancelLogin_Request& from);
  void MergeFrom(const SiteServerUI_CancelLogin_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_CancelLogin_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_CancelLogin_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_CancelLogin_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_CancelLogin_Response) */ {
 public:
  SiteServerUI_CancelLogin_Response();
  virtual ~SiteServerUI_CancelLogin_Response();

  SiteServerUI_CancelLogin_Response(const SiteServerUI_CancelLogin_Response& from);

  inline SiteServerUI_CancelLogin_Response& operator=(const SiteServerUI_CancelLogin_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_CancelLogin_Response(SiteServerUI_CancelLogin_Response&& from) noexcept
    : SiteServerUI_CancelLogin_Response() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_CancelLogin_Response& operator=(SiteServerUI_CancelLogin_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_CancelLogin_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_CancelLogin_Response* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_CancelLogin_Response*>(
               &_SiteServerUI_CancelLogin_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(SiteServerUI_CancelLogin_Response* other);
  friend void swap(SiteServerUI_CancelLogin_Response& a, SiteServerUI_CancelLogin_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_CancelLogin_Response* New() const final {
    return CreateMaybeMessage<SiteServerUI_CancelLogin_Response>(nullptr);
  }

  SiteServerUI_CancelLogin_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_CancelLogin_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_CancelLogin_Response& from);
  void MergeFrom(const SiteServerUI_CancelLogin_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_CancelLogin_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 logon_state = 1;
  bool has_logon_state() const;
  void clear_logon_state();
  static const int kLogonStateFieldNumber = 1;
  ::google::protobuf::int32 logon_state() const;
  void set_logon_state(::google::protobuf::int32 value);

  // optional int32 logon_eresult = 2;
  bool has_logon_eresult() const;
  void clear_logon_eresult();
  static const int kLogonEresultFieldNumber = 2;
  ::google::protobuf::int32 logon_eresult() const;
  void set_logon_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_CancelLogin_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 logon_state_;
  ::google::protobuf::int32 logon_eresult_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_Logout_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_Logout_Request) */ {
 public:
  SiteServerUI_Logout_Request();
  virtual ~SiteServerUI_Logout_Request();

  SiteServerUI_Logout_Request(const SiteServerUI_Logout_Request& from);

  inline SiteServerUI_Logout_Request& operator=(const SiteServerUI_Logout_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_Logout_Request(SiteServerUI_Logout_Request&& from) noexcept
    : SiteServerUI_Logout_Request() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_Logout_Request& operator=(SiteServerUI_Logout_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_Logout_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_Logout_Request* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_Logout_Request*>(
               &_SiteServerUI_Logout_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(SiteServerUI_Logout_Request* other);
  friend void swap(SiteServerUI_Logout_Request& a, SiteServerUI_Logout_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_Logout_Request* New() const final {
    return CreateMaybeMessage<SiteServerUI_Logout_Request>(nullptr);
  }

  SiteServerUI_Logout_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_Logout_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_Logout_Request& from);
  void MergeFrom(const SiteServerUI_Logout_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_Logout_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_Logout_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_Logout_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_Logout_Response) */ {
 public:
  SiteServerUI_Logout_Response();
  virtual ~SiteServerUI_Logout_Response();

  SiteServerUI_Logout_Response(const SiteServerUI_Logout_Response& from);

  inline SiteServerUI_Logout_Response& operator=(const SiteServerUI_Logout_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_Logout_Response(SiteServerUI_Logout_Response&& from) noexcept
    : SiteServerUI_Logout_Response() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_Logout_Response& operator=(SiteServerUI_Logout_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_Logout_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_Logout_Response* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_Logout_Response*>(
               &_SiteServerUI_Logout_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(SiteServerUI_Logout_Response* other);
  friend void swap(SiteServerUI_Logout_Response& a, SiteServerUI_Logout_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_Logout_Response* New() const final {
    return CreateMaybeMessage<SiteServerUI_Logout_Response>(nullptr);
  }

  SiteServerUI_Logout_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_Logout_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_Logout_Response& from);
  void MergeFrom(const SiteServerUI_Logout_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_Logout_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 logon_state = 1;
  bool has_logon_state() const;
  void clear_logon_state();
  static const int kLogonStateFieldNumber = 1;
  ::google::protobuf::int32 logon_state() const;
  void set_logon_state(::google::protobuf::int32 value);

  // optional int32 logout_eresult = 2;
  bool has_logout_eresult() const;
  void clear_logout_eresult();
  static const int kLogoutEresultFieldNumber = 2;
  ::google::protobuf::int32 logout_eresult() const;
  void set_logout_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_Logout_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 logon_state_;
  ::google::protobuf::int32 logout_eresult_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_Quit_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_Quit_Request) */ {
 public:
  SiteServerUI_Quit_Request();
  virtual ~SiteServerUI_Quit_Request();

  SiteServerUI_Quit_Request(const SiteServerUI_Quit_Request& from);

  inline SiteServerUI_Quit_Request& operator=(const SiteServerUI_Quit_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_Quit_Request(SiteServerUI_Quit_Request&& from) noexcept
    : SiteServerUI_Quit_Request() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_Quit_Request& operator=(SiteServerUI_Quit_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_Quit_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_Quit_Request* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_Quit_Request*>(
               &_SiteServerUI_Quit_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(SiteServerUI_Quit_Request* other);
  friend void swap(SiteServerUI_Quit_Request& a, SiteServerUI_Quit_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_Quit_Request* New() const final {
    return CreateMaybeMessage<SiteServerUI_Quit_Request>(nullptr);
  }

  SiteServerUI_Quit_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_Quit_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_Quit_Request& from);
  void MergeFrom(const SiteServerUI_Quit_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_Quit_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool restart = 1;
  bool has_restart() const;
  void clear_restart();
  static const int kRestartFieldNumber = 1;
  bool restart() const;
  void set_restart(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_Quit_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool restart_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_Quit_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_Quit_Response) */ {
 public:
  SiteServerUI_Quit_Response();
  virtual ~SiteServerUI_Quit_Response();

  SiteServerUI_Quit_Response(const SiteServerUI_Quit_Response& from);

  inline SiteServerUI_Quit_Response& operator=(const SiteServerUI_Quit_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_Quit_Response(SiteServerUI_Quit_Response&& from) noexcept
    : SiteServerUI_Quit_Response() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_Quit_Response& operator=(SiteServerUI_Quit_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_Quit_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_Quit_Response* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_Quit_Response*>(
               &_SiteServerUI_Quit_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(SiteServerUI_Quit_Response* other);
  friend void swap(SiteServerUI_Quit_Response& a, SiteServerUI_Quit_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_Quit_Response* New() const final {
    return CreateMaybeMessage<SiteServerUI_Quit_Response>(nullptr);
  }

  SiteServerUI_Quit_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_Quit_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_Quit_Response& from);
  void MergeFrom(const SiteServerUI_Quit_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_Quit_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_Quit_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_Status_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_Status_Request) */ {
 public:
  SiteServerUI_Status_Request();
  virtual ~SiteServerUI_Status_Request();

  SiteServerUI_Status_Request(const SiteServerUI_Status_Request& from);

  inline SiteServerUI_Status_Request& operator=(const SiteServerUI_Status_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_Status_Request(SiteServerUI_Status_Request&& from) noexcept
    : SiteServerUI_Status_Request() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_Status_Request& operator=(SiteServerUI_Status_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_Status_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_Status_Request* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_Status_Request*>(
               &_SiteServerUI_Status_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(SiteServerUI_Status_Request* other);
  friend void swap(SiteServerUI_Status_Request& a, SiteServerUI_Status_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_Status_Request* New() const final {
    return CreateMaybeMessage<SiteServerUI_Status_Request>(nullptr);
  }

  SiteServerUI_Status_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_Status_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_Status_Request& from);
  void MergeFrom(const SiteServerUI_Status_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_Status_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_Status_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_Status_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_Status_Response) */ {
 public:
  SiteServerUI_Status_Response();
  virtual ~SiteServerUI_Status_Response();

  SiteServerUI_Status_Response(const SiteServerUI_Status_Response& from);

  inline SiteServerUI_Status_Response& operator=(const SiteServerUI_Status_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_Status_Response(SiteServerUI_Status_Response&& from) noexcept
    : SiteServerUI_Status_Response() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_Status_Response& operator=(SiteServerUI_Status_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_Status_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_Status_Response* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_Status_Response*>(
               &_SiteServerUI_Status_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(SiteServerUI_Status_Response* other);
  friend void swap(SiteServerUI_Status_Response& a, SiteServerUI_Status_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_Status_Response* New() const final {
    return CreateMaybeMessage<SiteServerUI_Status_Response>(nullptr);
  }

  SiteServerUI_Status_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_Status_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_Status_Response& from);
  void MergeFrom(const SiteServerUI_Status_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_Status_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 logon_state = 1;
  bool has_logon_state() const;
  void clear_logon_state();
  static const int kLogonStateFieldNumber = 1;
  ::google::protobuf::int32 logon_state() const;
  void set_logon_state(::google::protobuf::int32 value);

  // optional int32 logon_eresult = 2;
  bool has_logon_eresult() const;
  void clear_logon_eresult();
  static const int kLogonEresultFieldNumber = 2;
  ::google::protobuf::int32 logon_eresult() const;
  void set_logon_eresult(::google::protobuf::int32 value);

  // optional bool connected = 3;
  bool has_connected() const;
  void clear_connected();
  static const int kConnectedFieldNumber = 3;
  bool connected() const;
  void set_connected(bool value);

  // optional bool cache_enabled = 4;
  bool has_cache_enabled() const;
  void clear_cache_enabled();
  static const int kCacheEnabledFieldNumber = 4;
  bool cache_enabled() const;
  void set_cache_enabled(bool value);

  // optional int32 acct_status = 5;
  bool has_acct_status() const;
  void clear_acct_status();
  static const int kAcctStatusFieldNumber = 5;
  ::google::protobuf::int32 acct_status() const;
  void set_acct_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_Status_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 logon_state_;
  ::google::protobuf::int32 logon_eresult_;
  bool connected_;
  bool cache_enabled_;
  ::google::protobuf::int32 acct_status_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_GetLanguage_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_GetLanguage_Request) */ {
 public:
  SiteServerUI_GetLanguage_Request();
  virtual ~SiteServerUI_GetLanguage_Request();

  SiteServerUI_GetLanguage_Request(const SiteServerUI_GetLanguage_Request& from);

  inline SiteServerUI_GetLanguage_Request& operator=(const SiteServerUI_GetLanguage_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_GetLanguage_Request(SiteServerUI_GetLanguage_Request&& from) noexcept
    : SiteServerUI_GetLanguage_Request() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_GetLanguage_Request& operator=(SiteServerUI_GetLanguage_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_GetLanguage_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_GetLanguage_Request* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_GetLanguage_Request*>(
               &_SiteServerUI_GetLanguage_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(SiteServerUI_GetLanguage_Request* other);
  friend void swap(SiteServerUI_GetLanguage_Request& a, SiteServerUI_GetLanguage_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_GetLanguage_Request* New() const final {
    return CreateMaybeMessage<SiteServerUI_GetLanguage_Request>(nullptr);
  }

  SiteServerUI_GetLanguage_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_GetLanguage_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_GetLanguage_Request& from);
  void MergeFrom(const SiteServerUI_GetLanguage_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_GetLanguage_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_GetLanguage_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_GetLanguage_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_GetLanguage_Response) */ {
 public:
  SiteServerUI_GetLanguage_Response();
  virtual ~SiteServerUI_GetLanguage_Response();

  SiteServerUI_GetLanguage_Response(const SiteServerUI_GetLanguage_Response& from);

  inline SiteServerUI_GetLanguage_Response& operator=(const SiteServerUI_GetLanguage_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_GetLanguage_Response(SiteServerUI_GetLanguage_Response&& from) noexcept
    : SiteServerUI_GetLanguage_Response() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_GetLanguage_Response& operator=(SiteServerUI_GetLanguage_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_GetLanguage_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_GetLanguage_Response* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_GetLanguage_Response*>(
               &_SiteServerUI_GetLanguage_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(SiteServerUI_GetLanguage_Response* other);
  friend void swap(SiteServerUI_GetLanguage_Response& a, SiteServerUI_GetLanguage_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_GetLanguage_Response* New() const final {
    return CreateMaybeMessage<SiteServerUI_GetLanguage_Response>(nullptr);
  }

  SiteServerUI_GetLanguage_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_GetLanguage_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_GetLanguage_Response& from);
  void MergeFrom(const SiteServerUI_GetLanguage_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_GetLanguage_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string language = 1;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 1;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  #if LANG_CXX11
  void set_language(::std::string&& value);
  #endif
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_GetLanguage_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_SetLanguage_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_SetLanguage_Request) */ {
 public:
  SiteServerUI_SetLanguage_Request();
  virtual ~SiteServerUI_SetLanguage_Request();

  SiteServerUI_SetLanguage_Request(const SiteServerUI_SetLanguage_Request& from);

  inline SiteServerUI_SetLanguage_Request& operator=(const SiteServerUI_SetLanguage_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_SetLanguage_Request(SiteServerUI_SetLanguage_Request&& from) noexcept
    : SiteServerUI_SetLanguage_Request() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_SetLanguage_Request& operator=(SiteServerUI_SetLanguage_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_SetLanguage_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_SetLanguage_Request* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_SetLanguage_Request*>(
               &_SiteServerUI_SetLanguage_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(SiteServerUI_SetLanguage_Request* other);
  friend void swap(SiteServerUI_SetLanguage_Request& a, SiteServerUI_SetLanguage_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_SetLanguage_Request* New() const final {
    return CreateMaybeMessage<SiteServerUI_SetLanguage_Request>(nullptr);
  }

  SiteServerUI_SetLanguage_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_SetLanguage_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_SetLanguage_Request& from);
  void MergeFrom(const SiteServerUI_SetLanguage_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_SetLanguage_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string language = 1;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 1;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  #if LANG_CXX11
  void set_language(::std::string&& value);
  #endif
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_SetLanguage_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_SetLanguage_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_SetLanguage_Response) */ {
 public:
  SiteServerUI_SetLanguage_Response();
  virtual ~SiteServerUI_SetLanguage_Response();

  SiteServerUI_SetLanguage_Response(const SiteServerUI_SetLanguage_Response& from);

  inline SiteServerUI_SetLanguage_Response& operator=(const SiteServerUI_SetLanguage_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_SetLanguage_Response(SiteServerUI_SetLanguage_Response&& from) noexcept
    : SiteServerUI_SetLanguage_Response() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_SetLanguage_Response& operator=(SiteServerUI_SetLanguage_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_SetLanguage_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_SetLanguage_Response* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_SetLanguage_Response*>(
               &_SiteServerUI_SetLanguage_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(SiteServerUI_SetLanguage_Response* other);
  friend void swap(SiteServerUI_SetLanguage_Response& a, SiteServerUI_SetLanguage_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_SetLanguage_Response* New() const final {
    return CreateMaybeMessage<SiteServerUI_SetLanguage_Response>(nullptr);
  }

  SiteServerUI_SetLanguage_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_SetLanguage_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_SetLanguage_Response& from);
  void MergeFrom(const SiteServerUI_SetLanguage_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_SetLanguage_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_SetLanguage_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_ClientStatus_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_ClientStatus_Request) */ {
 public:
  SiteServerUI_ClientStatus_Request();
  virtual ~SiteServerUI_ClientStatus_Request();

  SiteServerUI_ClientStatus_Request(const SiteServerUI_ClientStatus_Request& from);

  inline SiteServerUI_ClientStatus_Request& operator=(const SiteServerUI_ClientStatus_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_ClientStatus_Request(SiteServerUI_ClientStatus_Request&& from) noexcept
    : SiteServerUI_ClientStatus_Request() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_ClientStatus_Request& operator=(SiteServerUI_ClientStatus_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_ClientStatus_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_ClientStatus_Request* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_ClientStatus_Request*>(
               &_SiteServerUI_ClientStatus_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(SiteServerUI_ClientStatus_Request* other);
  friend void swap(SiteServerUI_ClientStatus_Request& a, SiteServerUI_ClientStatus_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_ClientStatus_Request* New() const final {
    return CreateMaybeMessage<SiteServerUI_ClientStatus_Request>(nullptr);
  }

  SiteServerUI_ClientStatus_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_ClientStatus_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_ClientStatus_Request& from);
  void MergeFrom(const SiteServerUI_ClientStatus_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_ClientStatus_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_ClientStatus_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_ClientStatus_Response_ClientInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo) */ {
 public:
  SiteServerUI_ClientStatus_Response_ClientInfo();
  virtual ~SiteServerUI_ClientStatus_Response_ClientInfo();

  SiteServerUI_ClientStatus_Response_ClientInfo(const SiteServerUI_ClientStatus_Response_ClientInfo& from);

  inline SiteServerUI_ClientStatus_Response_ClientInfo& operator=(const SiteServerUI_ClientStatus_Response_ClientInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_ClientStatus_Response_ClientInfo(SiteServerUI_ClientStatus_Response_ClientInfo&& from) noexcept
    : SiteServerUI_ClientStatus_Response_ClientInfo() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_ClientStatus_Response_ClientInfo& operator=(SiteServerUI_ClientStatus_Response_ClientInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_ClientStatus_Response_ClientInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_ClientStatus_Response_ClientInfo* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_ClientStatus_Response_ClientInfo*>(
               &_SiteServerUI_ClientStatus_Response_ClientInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(SiteServerUI_ClientStatus_Response_ClientInfo* other);
  friend void swap(SiteServerUI_ClientStatus_Response_ClientInfo& a, SiteServerUI_ClientStatus_Response_ClientInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_ClientStatus_Response_ClientInfo* New() const final {
    return CreateMaybeMessage<SiteServerUI_ClientStatus_Response_ClientInfo>(nullptr);
  }

  SiteServerUI_ClientStatus_Response_ClientInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_ClientStatus_Response_ClientInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_ClientStatus_Response_ClientInfo& from);
  void MergeFrom(const SiteServerUI_ClientStatus_Response_ClientInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_ClientStatus_Response_ClientInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string hostname = 2;
  bool has_hostname() const;
  void clear_hostname();
  static const int kHostnameFieldNumber = 2;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostname(::std::string&& value);
  #endif
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // optional uint32 ip = 1;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // optional bool connected = 3;
  bool has_connected() const;
  void clear_connected();
  static const int kConnectedFieldNumber = 3;
  bool connected() const;
  void set_connected(bool value);

  // optional uint64 instance_id = 4;
  bool has_instance_id() const;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 4;
  ::google::protobuf::uint64 instance_id() const;
  void set_instance_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::google::protobuf::uint32 ip_;
  bool connected_;
  ::google::protobuf::uint64 instance_id_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_ClientStatus_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_ClientStatus_Response) */ {
 public:
  SiteServerUI_ClientStatus_Response();
  virtual ~SiteServerUI_ClientStatus_Response();

  SiteServerUI_ClientStatus_Response(const SiteServerUI_ClientStatus_Response& from);

  inline SiteServerUI_ClientStatus_Response& operator=(const SiteServerUI_ClientStatus_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_ClientStatus_Response(SiteServerUI_ClientStatus_Response&& from) noexcept
    : SiteServerUI_ClientStatus_Response() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_ClientStatus_Response& operator=(SiteServerUI_ClientStatus_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_ClientStatus_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_ClientStatus_Response* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_ClientStatus_Response*>(
               &_SiteServerUI_ClientStatus_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(SiteServerUI_ClientStatus_Response* other);
  friend void swap(SiteServerUI_ClientStatus_Response& a, SiteServerUI_ClientStatus_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_ClientStatus_Response* New() const final {
    return CreateMaybeMessage<SiteServerUI_ClientStatus_Response>(nullptr);
  }

  SiteServerUI_ClientStatus_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_ClientStatus_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_ClientStatus_Response& from);
  void MergeFrom(const SiteServerUI_ClientStatus_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_ClientStatus_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SiteServerUI_ClientStatus_Response_ClientInfo ClientInfo;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo clients = 4;
  int clients_size() const;
  void clear_clients();
  static const int kClientsFieldNumber = 4;
  ::proto::steam::SiteServerUI_ClientStatus_Response_ClientInfo* mutable_clients(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::steam::SiteServerUI_ClientStatus_Response_ClientInfo >*
      mutable_clients();
  const ::proto::steam::SiteServerUI_ClientStatus_Response_ClientInfo& clients(int index) const;
  ::proto::steam::SiteServerUI_ClientStatus_Response_ClientInfo* add_clients();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::SiteServerUI_ClientStatus_Response_ClientInfo >&
      clients() const;

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_ClientStatus_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::SiteServerUI_ClientStatus_Response_ClientInfo > clients_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_ContentCacheStatus_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_ContentCacheStatus_Request) */ {
 public:
  SiteServerUI_ContentCacheStatus_Request();
  virtual ~SiteServerUI_ContentCacheStatus_Request();

  SiteServerUI_ContentCacheStatus_Request(const SiteServerUI_ContentCacheStatus_Request& from);

  inline SiteServerUI_ContentCacheStatus_Request& operator=(const SiteServerUI_ContentCacheStatus_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_ContentCacheStatus_Request(SiteServerUI_ContentCacheStatus_Request&& from) noexcept
    : SiteServerUI_ContentCacheStatus_Request() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_ContentCacheStatus_Request& operator=(SiteServerUI_ContentCacheStatus_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_ContentCacheStatus_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_ContentCacheStatus_Request* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_ContentCacheStatus_Request*>(
               &_SiteServerUI_ContentCacheStatus_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(SiteServerUI_ContentCacheStatus_Request* other);
  friend void swap(SiteServerUI_ContentCacheStatus_Request& a, SiteServerUI_ContentCacheStatus_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_ContentCacheStatus_Request* New() const final {
    return CreateMaybeMessage<SiteServerUI_ContentCacheStatus_Request>(nullptr);
  }

  SiteServerUI_ContentCacheStatus_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_ContentCacheStatus_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_ContentCacheStatus_Request& from);
  void MergeFrom(const SiteServerUI_ContentCacheStatus_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_ContentCacheStatus_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_ContentCacheStatus_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_ContentCacheStatus_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_ContentCacheStatus_Response) */ {
 public:
  SiteServerUI_ContentCacheStatus_Response();
  virtual ~SiteServerUI_ContentCacheStatus_Response();

  SiteServerUI_ContentCacheStatus_Response(const SiteServerUI_ContentCacheStatus_Response& from);

  inline SiteServerUI_ContentCacheStatus_Response& operator=(const SiteServerUI_ContentCacheStatus_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_ContentCacheStatus_Response(SiteServerUI_ContentCacheStatus_Response&& from) noexcept
    : SiteServerUI_ContentCacheStatus_Response() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_ContentCacheStatus_Response& operator=(SiteServerUI_ContentCacheStatus_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_ContentCacheStatus_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_ContentCacheStatus_Response* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_ContentCacheStatus_Response*>(
               &_SiteServerUI_ContentCacheStatus_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(SiteServerUI_ContentCacheStatus_Response* other);
  friend void swap(SiteServerUI_ContentCacheStatus_Response& a, SiteServerUI_ContentCacheStatus_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_ContentCacheStatus_Response* New() const final {
    return CreateMaybeMessage<SiteServerUI_ContentCacheStatus_Response>(nullptr);
  }

  SiteServerUI_ContentCacheStatus_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_ContentCacheStatus_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_ContentCacheStatus_Response& from);
  void MergeFrom(const SiteServerUI_ContentCacheStatus_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_ContentCacheStatus_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string cache_location = 3;
  bool has_cache_location() const;
  void clear_cache_location();
  static const int kCacheLocationFieldNumber = 3;
  const ::std::string& cache_location() const;
  void set_cache_location(const ::std::string& value);
  #if LANG_CXX11
  void set_cache_location(::std::string&& value);
  #endif
  void set_cache_location(const char* value);
  void set_cache_location(const char* value, size_t size);
  ::std::string* mutable_cache_location();
  ::std::string* release_cache_location();
  void set_allocated_cache_location(::std::string* cache_location);

  // optional uint32 port = 2;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // optional bool enabled = 1;
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 1;
  bool enabled() const;
  void set_enabled(bool value);

  // optional bool p2p_enabled = 5;
  bool has_p2p_enabled() const;
  void clear_p2p_enabled();
  static const int kP2PEnabledFieldNumber = 5;
  bool p2p_enabled() const;
  void set_p2p_enabled(bool value);

  // optional uint32 max_size_gb = 4;
  bool has_max_size_gb() const;
  void clear_max_size_gb();
  static const int kMaxSizeGbFieldNumber = 4;
  ::google::protobuf::uint32 max_size_gb() const;
  void set_max_size_gb(::google::protobuf::uint32 value);

  // optional uint32 current_size_gb = 6;
  bool has_current_size_gb() const;
  void clear_current_size_gb();
  static const int kCurrentSizeGbFieldNumber = 6;
  ::google::protobuf::uint32 current_size_gb() const;
  void set_current_size_gb(::google::protobuf::uint32 value);

  // optional uint64 current_bw = 7;
  bool has_current_bw() const;
  void clear_current_bw();
  static const int kCurrentBwFieldNumber = 7;
  ::google::protobuf::uint64 current_bw() const;
  void set_current_bw(::google::protobuf::uint64 value);

  // optional uint64 total_bytes_served = 8;
  bool has_total_bytes_served() const;
  void clear_total_bytes_served();
  static const int kTotalBytesServedFieldNumber = 8;
  ::google::protobuf::uint64 total_bytes_served() const;
  void set_total_bytes_served(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_ContentCacheStatus_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cache_location_;
  ::google::protobuf::uint32 port_;
  bool enabled_;
  bool p2p_enabled_;
  ::google::protobuf::uint32 max_size_gb_;
  ::google::protobuf::uint32 current_size_gb_;
  ::google::protobuf::uint64 current_bw_;
  ::google::protobuf::uint64 total_bytes_served_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_ContentCacheConfig_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_ContentCacheConfig_Request) */ {
 public:
  SiteServerUI_ContentCacheConfig_Request();
  virtual ~SiteServerUI_ContentCacheConfig_Request();

  SiteServerUI_ContentCacheConfig_Request(const SiteServerUI_ContentCacheConfig_Request& from);

  inline SiteServerUI_ContentCacheConfig_Request& operator=(const SiteServerUI_ContentCacheConfig_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_ContentCacheConfig_Request(SiteServerUI_ContentCacheConfig_Request&& from) noexcept
    : SiteServerUI_ContentCacheConfig_Request() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_ContentCacheConfig_Request& operator=(SiteServerUI_ContentCacheConfig_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_ContentCacheConfig_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_ContentCacheConfig_Request* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_ContentCacheConfig_Request*>(
               &_SiteServerUI_ContentCacheConfig_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(SiteServerUI_ContentCacheConfig_Request* other);
  friend void swap(SiteServerUI_ContentCacheConfig_Request& a, SiteServerUI_ContentCacheConfig_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_ContentCacheConfig_Request* New() const final {
    return CreateMaybeMessage<SiteServerUI_ContentCacheConfig_Request>(nullptr);
  }

  SiteServerUI_ContentCacheConfig_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_ContentCacheConfig_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_ContentCacheConfig_Request& from);
  void MergeFrom(const SiteServerUI_ContentCacheConfig_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_ContentCacheConfig_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string cache_location = 3;
  bool has_cache_location() const;
  void clear_cache_location();
  static const int kCacheLocationFieldNumber = 3;
  const ::std::string& cache_location() const;
  void set_cache_location(const ::std::string& value);
  #if LANG_CXX11
  void set_cache_location(::std::string&& value);
  #endif
  void set_cache_location(const char* value);
  void set_cache_location(const char* value, size_t size);
  ::std::string* mutable_cache_location();
  ::std::string* release_cache_location();
  void set_allocated_cache_location(::std::string* cache_location);

  // optional uint32 port = 2;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // optional bool enabled = 1;
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 1;
  bool enabled() const;
  void set_enabled(bool value);

  // optional bool p2p_enabled = 5;
  bool has_p2p_enabled() const;
  void clear_p2p_enabled();
  static const int kP2PEnabledFieldNumber = 5;
  bool p2p_enabled() const;
  void set_p2p_enabled(bool value);

  // optional uint32 max_size_gb = 4;
  bool has_max_size_gb() const;
  void clear_max_size_gb();
  static const int kMaxSizeGbFieldNumber = 4;
  ::google::protobuf::uint32 max_size_gb() const;
  void set_max_size_gb(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_ContentCacheConfig_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cache_location_;
  ::google::protobuf::uint32 port_;
  bool enabled_;
  bool p2p_enabled_;
  ::google::protobuf::uint32 max_size_gb_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// -------------------------------------------------------------------

class SiteServerUI_ContentCacheConfig_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.SiteServerUI_ContentCacheConfig_Response) */ {
 public:
  SiteServerUI_ContentCacheConfig_Response();
  virtual ~SiteServerUI_ContentCacheConfig_Response();

  SiteServerUI_ContentCacheConfig_Response(const SiteServerUI_ContentCacheConfig_Response& from);

  inline SiteServerUI_ContentCacheConfig_Response& operator=(const SiteServerUI_ContentCacheConfig_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SiteServerUI_ContentCacheConfig_Response(SiteServerUI_ContentCacheConfig_Response&& from) noexcept
    : SiteServerUI_ContentCacheConfig_Response() {
    *this = ::std::move(from);
  }

  inline SiteServerUI_ContentCacheConfig_Response& operator=(SiteServerUI_ContentCacheConfig_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SiteServerUI_ContentCacheConfig_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SiteServerUI_ContentCacheConfig_Response* internal_default_instance() {
    return reinterpret_cast<const SiteServerUI_ContentCacheConfig_Response*>(
               &_SiteServerUI_ContentCacheConfig_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(SiteServerUI_ContentCacheConfig_Response* other);
  friend void swap(SiteServerUI_ContentCacheConfig_Response& a, SiteServerUI_ContentCacheConfig_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SiteServerUI_ContentCacheConfig_Response* New() const final {
    return CreateMaybeMessage<SiteServerUI_ContentCacheConfig_Response>(nullptr);
  }

  SiteServerUI_ContentCacheConfig_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SiteServerUI_ContentCacheConfig_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SiteServerUI_ContentCacheConfig_Response& from);
  void MergeFrom(const SiteServerUI_ContentCacheConfig_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SiteServerUI_ContentCacheConfig_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.SiteServerUI_ContentCacheConfig_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fsiteserverui_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SiteServerUI_Login_Request

// optional string username = 1;
inline bool SiteServerUI_Login_Request::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SiteServerUI_Login_Request::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SiteServerUI_Login_Request::username() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_Login_Request.username)
  return username_.GetNoArena();
}
inline void SiteServerUI_Login_Request::set_username(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_Login_Request.username)
}
#if LANG_CXX11
inline void SiteServerUI_Login_Request::set_username(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.SiteServerUI_Login_Request.username)
}
#endif
inline void SiteServerUI_Login_Request::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.SiteServerUI_Login_Request.username)
}
inline void SiteServerUI_Login_Request::set_username(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.SiteServerUI_Login_Request.username)
}
inline ::std::string* SiteServerUI_Login_Request::mutable_username() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.SiteServerUI_Login_Request.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SiteServerUI_Login_Request::release_username() {
  // @@protoc_insertion_point(field_release:proto.steam.SiteServerUI_Login_Request.username)
  if (!has_username()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return username_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SiteServerUI_Login_Request::set_allocated_username(::std::string* username) {
  if (username != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.SiteServerUI_Login_Request.username)
}

// optional string password = 2;
inline bool SiteServerUI_Login_Request::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SiteServerUI_Login_Request::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& SiteServerUI_Login_Request::password() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_Login_Request.password)
  return password_.GetNoArena();
}
inline void SiteServerUI_Login_Request::set_password(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_Login_Request.password)
}
#if LANG_CXX11
inline void SiteServerUI_Login_Request::set_password(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.SiteServerUI_Login_Request.password)
}
#endif
inline void SiteServerUI_Login_Request::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.SiteServerUI_Login_Request.password)
}
inline void SiteServerUI_Login_Request::set_password(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.SiteServerUI_Login_Request.password)
}
inline ::std::string* SiteServerUI_Login_Request::mutable_password() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.SiteServerUI_Login_Request.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SiteServerUI_Login_Request::release_password() {
  // @@protoc_insertion_point(field_release:proto.steam.SiteServerUI_Login_Request.password)
  if (!has_password()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return password_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SiteServerUI_Login_Request::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.SiteServerUI_Login_Request.password)
}

// optional string steamguardcode = 3;
inline bool SiteServerUI_Login_Request::has_steamguardcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SiteServerUI_Login_Request::clear_steamguardcode() {
  steamguardcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& SiteServerUI_Login_Request::steamguardcode() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_Login_Request.steamguardcode)
  return steamguardcode_.GetNoArena();
}
inline void SiteServerUI_Login_Request::set_steamguardcode(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  steamguardcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_Login_Request.steamguardcode)
}
#if LANG_CXX11
inline void SiteServerUI_Login_Request::set_steamguardcode(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  steamguardcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.SiteServerUI_Login_Request.steamguardcode)
}
#endif
inline void SiteServerUI_Login_Request::set_steamguardcode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  steamguardcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.SiteServerUI_Login_Request.steamguardcode)
}
inline void SiteServerUI_Login_Request::set_steamguardcode(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  steamguardcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.SiteServerUI_Login_Request.steamguardcode)
}
inline ::std::string* SiteServerUI_Login_Request::mutable_steamguardcode() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.steam.SiteServerUI_Login_Request.steamguardcode)
  return steamguardcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SiteServerUI_Login_Request::release_steamguardcode() {
  // @@protoc_insertion_point(field_release:proto.steam.SiteServerUI_Login_Request.steamguardcode)
  if (!has_steamguardcode()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return steamguardcode_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SiteServerUI_Login_Request::set_allocated_steamguardcode(::std::string* steamguardcode) {
  if (steamguardcode != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  steamguardcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), steamguardcode);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.SiteServerUI_Login_Request.steamguardcode)
}

// optional bool remember_password = 4;
inline bool SiteServerUI_Login_Request::has_remember_password() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SiteServerUI_Login_Request::clear_remember_password() {
  remember_password_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool SiteServerUI_Login_Request::remember_password() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_Login_Request.remember_password)
  return remember_password_;
}
inline void SiteServerUI_Login_Request::set_remember_password(bool value) {
  _has_bits_[0] |= 0x00000008u;
  remember_password_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_Login_Request.remember_password)
}

// -------------------------------------------------------------------

// SiteServerUI_Login_Response

// optional int32 logon_state = 1;
inline bool SiteServerUI_Login_Response::has_logon_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SiteServerUI_Login_Response::clear_logon_state() {
  logon_state_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 SiteServerUI_Login_Response::logon_state() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_Login_Response.logon_state)
  return logon_state_;
}
inline void SiteServerUI_Login_Response::set_logon_state(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  logon_state_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_Login_Response.logon_state)
}

// optional int32 logon_eresult = 2;
inline bool SiteServerUI_Login_Response::has_logon_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SiteServerUI_Login_Response::clear_logon_eresult() {
  logon_eresult_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 SiteServerUI_Login_Response::logon_eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_Login_Response.logon_eresult)
  return logon_eresult_;
}
inline void SiteServerUI_Login_Response::set_logon_eresult(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  logon_eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_Login_Response.logon_eresult)
}

// -------------------------------------------------------------------

// SiteServerUI_LoginStatus_Request

// -------------------------------------------------------------------

// SiteServerUI_LoginStatus_Response

// optional string username = 1;
inline bool SiteServerUI_LoginStatus_Response::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SiteServerUI_LoginStatus_Response::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SiteServerUI_LoginStatus_Response::username() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_LoginStatus_Response.username)
  return username_.GetNoArena();
}
inline void SiteServerUI_LoginStatus_Response::set_username(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_LoginStatus_Response.username)
}
#if LANG_CXX11
inline void SiteServerUI_LoginStatus_Response::set_username(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.SiteServerUI_LoginStatus_Response.username)
}
#endif
inline void SiteServerUI_LoginStatus_Response::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.SiteServerUI_LoginStatus_Response.username)
}
inline void SiteServerUI_LoginStatus_Response::set_username(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.SiteServerUI_LoginStatus_Response.username)
}
inline ::std::string* SiteServerUI_LoginStatus_Response::mutable_username() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.SiteServerUI_LoginStatus_Response.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SiteServerUI_LoginStatus_Response::release_username() {
  // @@protoc_insertion_point(field_release:proto.steam.SiteServerUI_LoginStatus_Response.username)
  if (!has_username()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return username_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SiteServerUI_LoginStatus_Response::set_allocated_username(::std::string* username) {
  if (username != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.SiteServerUI_LoginStatus_Response.username)
}

// optional bool cached_credentials = 2;
inline bool SiteServerUI_LoginStatus_Response::has_cached_credentials() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SiteServerUI_LoginStatus_Response::clear_cached_credentials() {
  cached_credentials_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool SiteServerUI_LoginStatus_Response::cached_credentials() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_LoginStatus_Response.cached_credentials)
  return cached_credentials_;
}
inline void SiteServerUI_LoginStatus_Response::set_cached_credentials(bool value) {
  _has_bits_[0] |= 0x00000002u;
  cached_credentials_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_LoginStatus_Response.cached_credentials)
}

// optional int32 logon_state = 3;
inline bool SiteServerUI_LoginStatus_Response::has_logon_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SiteServerUI_LoginStatus_Response::clear_logon_state() {
  logon_state_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 SiteServerUI_LoginStatus_Response::logon_state() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_LoginStatus_Response.logon_state)
  return logon_state_;
}
inline void SiteServerUI_LoginStatus_Response::set_logon_state(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  logon_state_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_LoginStatus_Response.logon_state)
}

// optional int32 logon_eresult = 4;
inline bool SiteServerUI_LoginStatus_Response::has_logon_eresult() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SiteServerUI_LoginStatus_Response::clear_logon_eresult() {
  logon_eresult_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 SiteServerUI_LoginStatus_Response::logon_eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_LoginStatus_Response.logon_eresult)
  return logon_eresult_;
}
inline void SiteServerUI_LoginStatus_Response::set_logon_eresult(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  logon_eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_LoginStatus_Response.logon_eresult)
}

// -------------------------------------------------------------------

// SiteServerUI_CancelLogin_Request

// -------------------------------------------------------------------

// SiteServerUI_CancelLogin_Response

// optional int32 logon_state = 1;
inline bool SiteServerUI_CancelLogin_Response::has_logon_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SiteServerUI_CancelLogin_Response::clear_logon_state() {
  logon_state_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 SiteServerUI_CancelLogin_Response::logon_state() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_CancelLogin_Response.logon_state)
  return logon_state_;
}
inline void SiteServerUI_CancelLogin_Response::set_logon_state(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  logon_state_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_CancelLogin_Response.logon_state)
}

// optional int32 logon_eresult = 2;
inline bool SiteServerUI_CancelLogin_Response::has_logon_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SiteServerUI_CancelLogin_Response::clear_logon_eresult() {
  logon_eresult_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 SiteServerUI_CancelLogin_Response::logon_eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_CancelLogin_Response.logon_eresult)
  return logon_eresult_;
}
inline void SiteServerUI_CancelLogin_Response::set_logon_eresult(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  logon_eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_CancelLogin_Response.logon_eresult)
}

// -------------------------------------------------------------------

// SiteServerUI_Logout_Request

// -------------------------------------------------------------------

// SiteServerUI_Logout_Response

// optional int32 logon_state = 1;
inline bool SiteServerUI_Logout_Response::has_logon_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SiteServerUI_Logout_Response::clear_logon_state() {
  logon_state_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 SiteServerUI_Logout_Response::logon_state() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_Logout_Response.logon_state)
  return logon_state_;
}
inline void SiteServerUI_Logout_Response::set_logon_state(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  logon_state_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_Logout_Response.logon_state)
}

// optional int32 logout_eresult = 2;
inline bool SiteServerUI_Logout_Response::has_logout_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SiteServerUI_Logout_Response::clear_logout_eresult() {
  logout_eresult_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 SiteServerUI_Logout_Response::logout_eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_Logout_Response.logout_eresult)
  return logout_eresult_;
}
inline void SiteServerUI_Logout_Response::set_logout_eresult(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  logout_eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_Logout_Response.logout_eresult)
}

// -------------------------------------------------------------------

// SiteServerUI_Quit_Request

// optional bool restart = 1;
inline bool SiteServerUI_Quit_Request::has_restart() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SiteServerUI_Quit_Request::clear_restart() {
  restart_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool SiteServerUI_Quit_Request::restart() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_Quit_Request.restart)
  return restart_;
}
inline void SiteServerUI_Quit_Request::set_restart(bool value) {
  _has_bits_[0] |= 0x00000001u;
  restart_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_Quit_Request.restart)
}

// -------------------------------------------------------------------

// SiteServerUI_Quit_Response

// -------------------------------------------------------------------

// SiteServerUI_Status_Request

// -------------------------------------------------------------------

// SiteServerUI_Status_Response

// optional int32 logon_state = 1;
inline bool SiteServerUI_Status_Response::has_logon_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SiteServerUI_Status_Response::clear_logon_state() {
  logon_state_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 SiteServerUI_Status_Response::logon_state() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_Status_Response.logon_state)
  return logon_state_;
}
inline void SiteServerUI_Status_Response::set_logon_state(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  logon_state_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_Status_Response.logon_state)
}

// optional int32 logon_eresult = 2;
inline bool SiteServerUI_Status_Response::has_logon_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SiteServerUI_Status_Response::clear_logon_eresult() {
  logon_eresult_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 SiteServerUI_Status_Response::logon_eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_Status_Response.logon_eresult)
  return logon_eresult_;
}
inline void SiteServerUI_Status_Response::set_logon_eresult(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  logon_eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_Status_Response.logon_eresult)
}

// optional bool connected = 3;
inline bool SiteServerUI_Status_Response::has_connected() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SiteServerUI_Status_Response::clear_connected() {
  connected_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool SiteServerUI_Status_Response::connected() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_Status_Response.connected)
  return connected_;
}
inline void SiteServerUI_Status_Response::set_connected(bool value) {
  _has_bits_[0] |= 0x00000004u;
  connected_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_Status_Response.connected)
}

// optional bool cache_enabled = 4;
inline bool SiteServerUI_Status_Response::has_cache_enabled() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SiteServerUI_Status_Response::clear_cache_enabled() {
  cache_enabled_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool SiteServerUI_Status_Response::cache_enabled() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_Status_Response.cache_enabled)
  return cache_enabled_;
}
inline void SiteServerUI_Status_Response::set_cache_enabled(bool value) {
  _has_bits_[0] |= 0x00000008u;
  cache_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_Status_Response.cache_enabled)
}

// optional int32 acct_status = 5;
inline bool SiteServerUI_Status_Response::has_acct_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SiteServerUI_Status_Response::clear_acct_status() {
  acct_status_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 SiteServerUI_Status_Response::acct_status() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_Status_Response.acct_status)
  return acct_status_;
}
inline void SiteServerUI_Status_Response::set_acct_status(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  acct_status_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_Status_Response.acct_status)
}

// -------------------------------------------------------------------

// SiteServerUI_GetLanguage_Request

// -------------------------------------------------------------------

// SiteServerUI_GetLanguage_Response

// optional string language = 1;
inline bool SiteServerUI_GetLanguage_Response::has_language() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SiteServerUI_GetLanguage_Response::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SiteServerUI_GetLanguage_Response::language() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_GetLanguage_Response.language)
  return language_.GetNoArena();
}
inline void SiteServerUI_GetLanguage_Response::set_language(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_GetLanguage_Response.language)
}
#if LANG_CXX11
inline void SiteServerUI_GetLanguage_Response::set_language(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.SiteServerUI_GetLanguage_Response.language)
}
#endif
inline void SiteServerUI_GetLanguage_Response::set_language(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.SiteServerUI_GetLanguage_Response.language)
}
inline void SiteServerUI_GetLanguage_Response::set_language(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.SiteServerUI_GetLanguage_Response.language)
}
inline ::std::string* SiteServerUI_GetLanguage_Response::mutable_language() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.SiteServerUI_GetLanguage_Response.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SiteServerUI_GetLanguage_Response::release_language() {
  // @@protoc_insertion_point(field_release:proto.steam.SiteServerUI_GetLanguage_Response.language)
  if (!has_language()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return language_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SiteServerUI_GetLanguage_Response::set_allocated_language(::std::string* language) {
  if (language != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.SiteServerUI_GetLanguage_Response.language)
}

// -------------------------------------------------------------------

// SiteServerUI_SetLanguage_Request

// optional string language = 1;
inline bool SiteServerUI_SetLanguage_Request::has_language() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SiteServerUI_SetLanguage_Request::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SiteServerUI_SetLanguage_Request::language() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_SetLanguage_Request.language)
  return language_.GetNoArena();
}
inline void SiteServerUI_SetLanguage_Request::set_language(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_SetLanguage_Request.language)
}
#if LANG_CXX11
inline void SiteServerUI_SetLanguage_Request::set_language(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.SiteServerUI_SetLanguage_Request.language)
}
#endif
inline void SiteServerUI_SetLanguage_Request::set_language(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.SiteServerUI_SetLanguage_Request.language)
}
inline void SiteServerUI_SetLanguage_Request::set_language(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.SiteServerUI_SetLanguage_Request.language)
}
inline ::std::string* SiteServerUI_SetLanguage_Request::mutable_language() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.SiteServerUI_SetLanguage_Request.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SiteServerUI_SetLanguage_Request::release_language() {
  // @@protoc_insertion_point(field_release:proto.steam.SiteServerUI_SetLanguage_Request.language)
  if (!has_language()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return language_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SiteServerUI_SetLanguage_Request::set_allocated_language(::std::string* language) {
  if (language != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.SiteServerUI_SetLanguage_Request.language)
}

// -------------------------------------------------------------------

// SiteServerUI_SetLanguage_Response

// -------------------------------------------------------------------

// SiteServerUI_ClientStatus_Request

// -------------------------------------------------------------------

// SiteServerUI_ClientStatus_Response_ClientInfo

// optional uint32 ip = 1;
inline bool SiteServerUI_ClientStatus_Response_ClientInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SiteServerUI_ClientStatus_Response_ClientInfo::clear_ip() {
  ip_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 SiteServerUI_ClientStatus_Response_ClientInfo::ip() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo.ip)
  return ip_;
}
inline void SiteServerUI_ClientStatus_Response_ClientInfo::set_ip(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  ip_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo.ip)
}

// optional string hostname = 2;
inline bool SiteServerUI_ClientStatus_Response_ClientInfo::has_hostname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SiteServerUI_ClientStatus_Response_ClientInfo::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SiteServerUI_ClientStatus_Response_ClientInfo::hostname() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo.hostname)
  return hostname_.GetNoArena();
}
inline void SiteServerUI_ClientStatus_Response_ClientInfo::set_hostname(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo.hostname)
}
#if LANG_CXX11
inline void SiteServerUI_ClientStatus_Response_ClientInfo::set_hostname(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo.hostname)
}
#endif
inline void SiteServerUI_ClientStatus_Response_ClientInfo::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo.hostname)
}
inline void SiteServerUI_ClientStatus_Response_ClientInfo::set_hostname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo.hostname)
}
inline ::std::string* SiteServerUI_ClientStatus_Response_ClientInfo::mutable_hostname() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SiteServerUI_ClientStatus_Response_ClientInfo::release_hostname() {
  // @@protoc_insertion_point(field_release:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo.hostname)
  if (!has_hostname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return hostname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SiteServerUI_ClientStatus_Response_ClientInfo::set_allocated_hostname(::std::string* hostname) {
  if (hostname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo.hostname)
}

// optional bool connected = 3;
inline bool SiteServerUI_ClientStatus_Response_ClientInfo::has_connected() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SiteServerUI_ClientStatus_Response_ClientInfo::clear_connected() {
  connected_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool SiteServerUI_ClientStatus_Response_ClientInfo::connected() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo.connected)
  return connected_;
}
inline void SiteServerUI_ClientStatus_Response_ClientInfo::set_connected(bool value) {
  _has_bits_[0] |= 0x00000004u;
  connected_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo.connected)
}

// optional uint64 instance_id = 4;
inline bool SiteServerUI_ClientStatus_Response_ClientInfo::has_instance_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SiteServerUI_ClientStatus_Response_ClientInfo::clear_instance_id() {
  instance_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 SiteServerUI_ClientStatus_Response_ClientInfo::instance_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo.instance_id)
  return instance_id_;
}
inline void SiteServerUI_ClientStatus_Response_ClientInfo::set_instance_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo.instance_id)
}

// -------------------------------------------------------------------

// SiteServerUI_ClientStatus_Response

// repeated .proto.steam.SiteServerUI_ClientStatus_Response.ClientInfo clients = 4;
inline int SiteServerUI_ClientStatus_Response::clients_size() const {
  return clients_.size();
}
inline void SiteServerUI_ClientStatus_Response::clear_clients() {
  clients_.Clear();
}
inline ::proto::steam::SiteServerUI_ClientStatus_Response_ClientInfo* SiteServerUI_ClientStatus_Response::mutable_clients(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.SiteServerUI_ClientStatus_Response.clients)
  return clients_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::SiteServerUI_ClientStatus_Response_ClientInfo >*
SiteServerUI_ClientStatus_Response::mutable_clients() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.SiteServerUI_ClientStatus_Response.clients)
  return &clients_;
}
inline const ::proto::steam::SiteServerUI_ClientStatus_Response_ClientInfo& SiteServerUI_ClientStatus_Response::clients(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ClientStatus_Response.clients)
  return clients_.Get(index);
}
inline ::proto::steam::SiteServerUI_ClientStatus_Response_ClientInfo* SiteServerUI_ClientStatus_Response::add_clients() {
  // @@protoc_insertion_point(field_add:proto.steam.SiteServerUI_ClientStatus_Response.clients)
  return clients_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::SiteServerUI_ClientStatus_Response_ClientInfo >&
SiteServerUI_ClientStatus_Response::clients() const {
  // @@protoc_insertion_point(field_list:proto.steam.SiteServerUI_ClientStatus_Response.clients)
  return clients_;
}

// -------------------------------------------------------------------

// SiteServerUI_ContentCacheStatus_Request

// -------------------------------------------------------------------

// SiteServerUI_ContentCacheStatus_Response

// optional bool enabled = 1;
inline bool SiteServerUI_ContentCacheStatus_Response::has_enabled() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SiteServerUI_ContentCacheStatus_Response::clear_enabled() {
  enabled_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool SiteServerUI_ContentCacheStatus_Response::enabled() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ContentCacheStatus_Response.enabled)
  return enabled_;
}
inline void SiteServerUI_ContentCacheStatus_Response::set_enabled(bool value) {
  _has_bits_[0] |= 0x00000004u;
  enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ContentCacheStatus_Response.enabled)
}

// optional uint32 port = 2;
inline bool SiteServerUI_ContentCacheStatus_Response::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SiteServerUI_ContentCacheStatus_Response::clear_port() {
  port_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 SiteServerUI_ContentCacheStatus_Response::port() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ContentCacheStatus_Response.port)
  return port_;
}
inline void SiteServerUI_ContentCacheStatus_Response::set_port(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  port_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ContentCacheStatus_Response.port)
}

// optional string cache_location = 3;
inline bool SiteServerUI_ContentCacheStatus_Response::has_cache_location() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SiteServerUI_ContentCacheStatus_Response::clear_cache_location() {
  cache_location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SiteServerUI_ContentCacheStatus_Response::cache_location() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ContentCacheStatus_Response.cache_location)
  return cache_location_.GetNoArena();
}
inline void SiteServerUI_ContentCacheStatus_Response::set_cache_location(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  cache_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ContentCacheStatus_Response.cache_location)
}
#if LANG_CXX11
inline void SiteServerUI_ContentCacheStatus_Response::set_cache_location(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  cache_location_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.SiteServerUI_ContentCacheStatus_Response.cache_location)
}
#endif
inline void SiteServerUI_ContentCacheStatus_Response::set_cache_location(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  cache_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.SiteServerUI_ContentCacheStatus_Response.cache_location)
}
inline void SiteServerUI_ContentCacheStatus_Response::set_cache_location(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  cache_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.SiteServerUI_ContentCacheStatus_Response.cache_location)
}
inline ::std::string* SiteServerUI_ContentCacheStatus_Response::mutable_cache_location() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.SiteServerUI_ContentCacheStatus_Response.cache_location)
  return cache_location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SiteServerUI_ContentCacheStatus_Response::release_cache_location() {
  // @@protoc_insertion_point(field_release:proto.steam.SiteServerUI_ContentCacheStatus_Response.cache_location)
  if (!has_cache_location()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return cache_location_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SiteServerUI_ContentCacheStatus_Response::set_allocated_cache_location(::std::string* cache_location) {
  if (cache_location != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  cache_location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cache_location);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.SiteServerUI_ContentCacheStatus_Response.cache_location)
}

// optional uint32 max_size_gb = 4;
inline bool SiteServerUI_ContentCacheStatus_Response::has_max_size_gb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SiteServerUI_ContentCacheStatus_Response::clear_max_size_gb() {
  max_size_gb_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 SiteServerUI_ContentCacheStatus_Response::max_size_gb() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ContentCacheStatus_Response.max_size_gb)
  return max_size_gb_;
}
inline void SiteServerUI_ContentCacheStatus_Response::set_max_size_gb(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  max_size_gb_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ContentCacheStatus_Response.max_size_gb)
}

// optional bool p2p_enabled = 5;
inline bool SiteServerUI_ContentCacheStatus_Response::has_p2p_enabled() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SiteServerUI_ContentCacheStatus_Response::clear_p2p_enabled() {
  p2p_enabled_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool SiteServerUI_ContentCacheStatus_Response::p2p_enabled() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ContentCacheStatus_Response.p2p_enabled)
  return p2p_enabled_;
}
inline void SiteServerUI_ContentCacheStatus_Response::set_p2p_enabled(bool value) {
  _has_bits_[0] |= 0x00000008u;
  p2p_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ContentCacheStatus_Response.p2p_enabled)
}

// optional uint32 current_size_gb = 6;
inline bool SiteServerUI_ContentCacheStatus_Response::has_current_size_gb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SiteServerUI_ContentCacheStatus_Response::clear_current_size_gb() {
  current_size_gb_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 SiteServerUI_ContentCacheStatus_Response::current_size_gb() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ContentCacheStatus_Response.current_size_gb)
  return current_size_gb_;
}
inline void SiteServerUI_ContentCacheStatus_Response::set_current_size_gb(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  current_size_gb_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ContentCacheStatus_Response.current_size_gb)
}

// optional uint64 current_bw = 7;
inline bool SiteServerUI_ContentCacheStatus_Response::has_current_bw() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SiteServerUI_ContentCacheStatus_Response::clear_current_bw() {
  current_bw_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint64 SiteServerUI_ContentCacheStatus_Response::current_bw() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ContentCacheStatus_Response.current_bw)
  return current_bw_;
}
inline void SiteServerUI_ContentCacheStatus_Response::set_current_bw(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  current_bw_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ContentCacheStatus_Response.current_bw)
}

// optional uint64 total_bytes_served = 8;
inline bool SiteServerUI_ContentCacheStatus_Response::has_total_bytes_served() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SiteServerUI_ContentCacheStatus_Response::clear_total_bytes_served() {
  total_bytes_served_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint64 SiteServerUI_ContentCacheStatus_Response::total_bytes_served() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ContentCacheStatus_Response.total_bytes_served)
  return total_bytes_served_;
}
inline void SiteServerUI_ContentCacheStatus_Response::set_total_bytes_served(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000080u;
  total_bytes_served_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ContentCacheStatus_Response.total_bytes_served)
}

// -------------------------------------------------------------------

// SiteServerUI_ContentCacheConfig_Request

// optional bool enabled = 1;
inline bool SiteServerUI_ContentCacheConfig_Request::has_enabled() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SiteServerUI_ContentCacheConfig_Request::clear_enabled() {
  enabled_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool SiteServerUI_ContentCacheConfig_Request::enabled() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ContentCacheConfig_Request.enabled)
  return enabled_;
}
inline void SiteServerUI_ContentCacheConfig_Request::set_enabled(bool value) {
  _has_bits_[0] |= 0x00000004u;
  enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ContentCacheConfig_Request.enabled)
}

// optional uint32 port = 2;
inline bool SiteServerUI_ContentCacheConfig_Request::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SiteServerUI_ContentCacheConfig_Request::clear_port() {
  port_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 SiteServerUI_ContentCacheConfig_Request::port() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ContentCacheConfig_Request.port)
  return port_;
}
inline void SiteServerUI_ContentCacheConfig_Request::set_port(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  port_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ContentCacheConfig_Request.port)
}

// optional string cache_location = 3;
inline bool SiteServerUI_ContentCacheConfig_Request::has_cache_location() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SiteServerUI_ContentCacheConfig_Request::clear_cache_location() {
  cache_location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SiteServerUI_ContentCacheConfig_Request::cache_location() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ContentCacheConfig_Request.cache_location)
  return cache_location_.GetNoArena();
}
inline void SiteServerUI_ContentCacheConfig_Request::set_cache_location(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  cache_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ContentCacheConfig_Request.cache_location)
}
#if LANG_CXX11
inline void SiteServerUI_ContentCacheConfig_Request::set_cache_location(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  cache_location_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.SiteServerUI_ContentCacheConfig_Request.cache_location)
}
#endif
inline void SiteServerUI_ContentCacheConfig_Request::set_cache_location(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  cache_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.SiteServerUI_ContentCacheConfig_Request.cache_location)
}
inline void SiteServerUI_ContentCacheConfig_Request::set_cache_location(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  cache_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.SiteServerUI_ContentCacheConfig_Request.cache_location)
}
inline ::std::string* SiteServerUI_ContentCacheConfig_Request::mutable_cache_location() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.SiteServerUI_ContentCacheConfig_Request.cache_location)
  return cache_location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SiteServerUI_ContentCacheConfig_Request::release_cache_location() {
  // @@protoc_insertion_point(field_release:proto.steam.SiteServerUI_ContentCacheConfig_Request.cache_location)
  if (!has_cache_location()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return cache_location_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SiteServerUI_ContentCacheConfig_Request::set_allocated_cache_location(::std::string* cache_location) {
  if (cache_location != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  cache_location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cache_location);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.SiteServerUI_ContentCacheConfig_Request.cache_location)
}

// optional uint32 max_size_gb = 4;
inline bool SiteServerUI_ContentCacheConfig_Request::has_max_size_gb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SiteServerUI_ContentCacheConfig_Request::clear_max_size_gb() {
  max_size_gb_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 SiteServerUI_ContentCacheConfig_Request::max_size_gb() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ContentCacheConfig_Request.max_size_gb)
  return max_size_gb_;
}
inline void SiteServerUI_ContentCacheConfig_Request::set_max_size_gb(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  max_size_gb_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ContentCacheConfig_Request.max_size_gb)
}

// optional bool p2p_enabled = 5;
inline bool SiteServerUI_ContentCacheConfig_Request::has_p2p_enabled() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SiteServerUI_ContentCacheConfig_Request::clear_p2p_enabled() {
  p2p_enabled_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool SiteServerUI_ContentCacheConfig_Request::p2p_enabled() const {
  // @@protoc_insertion_point(field_get:proto.steam.SiteServerUI_ContentCacheConfig_Request.p2p_enabled)
  return p2p_enabled_;
}
inline void SiteServerUI_ContentCacheConfig_Request::set_p2p_enabled(bool value) {
  _has_bits_[0] |= 0x00000008u;
  p2p_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.SiteServerUI_ContentCacheConfig_Request.p2p_enabled)
}

// -------------------------------------------------------------------

// SiteServerUI_ContentCacheConfig_Response

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_steammessages_5fsiteserverui_2eproto
