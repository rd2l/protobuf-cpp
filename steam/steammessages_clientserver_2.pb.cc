// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_clientserver_2.proto

#include "steammessages_clientserver_2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREItemVoteSummaryResponse_ItemVoteSummary_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREItemVoteSummary_PublishedFileId_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientCheckAppBetaPasswordResponse_BetaPassword_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFSGetFriendsSteamLevelsResponse_Friend_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRichPresenceInfo_RichPresence_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientSharedLibraryLockStatus_LockedLibrary_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientSharedLibraryStopPlaying_StopApp_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMAddScreenshot_Tag_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMUpdatePublishedFile_AdditionalPreview_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMUpdatePublishedFile_KeyValueTag_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_Stat_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUseLocalDeviceAuthorizations_DeviceToken_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUserNotifications_Notification_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientWorkshopItemInfoRequest_WorkshopItem_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDownloadRateStatistics_StatsInfo_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGMSClientServerQueryResponse_Server_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGameServerData_Player_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGameServerPingSample_Sample_steammessages_5fclientserver_5f2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_steammessages_5fclientserver_5f2_2eproto;
namespace proto {
namespace steam {
class CMsgClientUCMAddScreenshot_TagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMAddScreenshot_Tag> _instance;
} _CMsgClientUCMAddScreenshot_Tag_default_instance_;
class CMsgClientUCMAddScreenshotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMAddScreenshot> _instance;
} _CMsgClientUCMAddScreenshot_default_instance_;
class CMsgClientUCMAddScreenshotResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMAddScreenshotResponse> _instance;
} _CMsgClientUCMAddScreenshotResponse_default_instance_;
class CMsgClientUCMDeleteScreenshotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMDeleteScreenshot> _instance;
} _CMsgClientUCMDeleteScreenshot_default_instance_;
class CMsgClientUCMDeleteScreenshotResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMDeleteScreenshotResponse> _instance;
} _CMsgClientUCMDeleteScreenshotResponse_default_instance_;
class CMsgClientUCMPublishFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishFile> _instance;
} _CMsgClientUCMPublishFile_default_instance_;
class CMsgClientUCMPublishFileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishFileResponse> _instance;
} _CMsgClientUCMPublishFileResponse_default_instance_;
class CMsgClientUCMUpdatePublishedFile_KeyValueTagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMUpdatePublishedFile_KeyValueTag> _instance;
} _CMsgClientUCMUpdatePublishedFile_KeyValueTag_default_instance_;
class CMsgClientUCMUpdatePublishedFile_AdditionalPreviewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMUpdatePublishedFile_AdditionalPreview> _instance;
} _CMsgClientUCMUpdatePublishedFile_AdditionalPreview_default_instance_;
class CMsgClientUCMUpdatePublishedFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMUpdatePublishedFile> _instance;
} _CMsgClientUCMUpdatePublishedFile_default_instance_;
class CMsgClientUCMUpdatePublishedFileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMUpdatePublishedFileResponse> _instance;
} _CMsgClientUCMUpdatePublishedFileResponse_default_instance_;
class CMsgClientUCMDeletePublishedFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMDeletePublishedFile> _instance;
} _CMsgClientUCMDeletePublishedFile_default_instance_;
class CMsgClientUCMDeletePublishedFileResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMDeletePublishedFileResponse> _instance;
} _CMsgClientUCMDeletePublishedFileResponse_default_instance_;
class CMsgClientUCMEnumerateUserPublishedFilesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserPublishedFiles> _instance;
} _CMsgClientUCMEnumerateUserPublishedFiles_default_instance_;
class CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId> _instance;
} _CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_default_instance_;
class CMsgClientUCMEnumerateUserPublishedFilesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserPublishedFilesResponse> _instance;
} _CMsgClientUCMEnumerateUserPublishedFilesResponse_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFiles> _instance;
} _CMsgClientUCMEnumerateUserSubscribedFiles_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId> _instance;
} _CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFilesResponse> _instance;
} _CMsgClientUCMEnumerateUserSubscribedFilesResponse_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates> _instance;
} _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId> _instance;
} _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse> _instance;
} _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_default_instance_;
class CMsgClientUCMPublishedFileSubscribedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishedFileSubscribed> _instance;
} _CMsgClientUCMPublishedFileSubscribed_default_instance_;
class CMsgClientUCMPublishedFileUnsubscribedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishedFileUnsubscribed> _instance;
} _CMsgClientUCMPublishedFileUnsubscribed_default_instance_;
class CMsgClientUCMPublishedFileDeletedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishedFileDeleted> _instance;
} _CMsgClientUCMPublishedFileDeleted_default_instance_;
class CMsgClientUCMPublishedFileUpdatedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishedFileUpdated> _instance;
} _CMsgClientUCMPublishedFileUpdated_default_instance_;
class CMsgClientWorkshopItemChangesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemChangesRequest> _instance;
} _CMsgClientWorkshopItemChangesRequest_default_instance_;
class CMsgClientWorkshopItemChangesResponse_WorkshopItemInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo> _instance;
} _CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_default_instance_;
class CMsgClientWorkshopItemChangesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemChangesResponse> _instance;
} _CMsgClientWorkshopItemChangesResponse_default_instance_;
class CMsgClientWorkshopItemInfoRequest_WorkshopItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemInfoRequest_WorkshopItem> _instance;
} _CMsgClientWorkshopItemInfoRequest_WorkshopItem_default_instance_;
class CMsgClientWorkshopItemInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemInfoRequest> _instance;
} _CMsgClientWorkshopItemInfoRequest_default_instance_;
class CMsgClientWorkshopItemInfoResponse_WorkshopItemInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo> _instance;
} _CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_default_instance_;
class CMsgClientWorkshopItemInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemInfoResponse> _instance;
} _CMsgClientWorkshopItemInfoResponse_default_instance_;
class CMsgClientUCMGetPublishedFilesForUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMGetPublishedFilesForUser> _instance;
} _CMsgClientUCMGetPublishedFilesForUser_default_instance_;
class CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId> _instance;
} _CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_default_instance_;
class CMsgClientUCMGetPublishedFilesForUserResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMGetPublishedFilesForUserResponse> _instance;
} _CMsgClientUCMGetPublishedFilesForUserResponse_default_instance_;
class CMsgClientUCMSetUserPublishedFileActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMSetUserPublishedFileAction> _instance;
} _CMsgClientUCMSetUserPublishedFileAction_default_instance_;
class CMsgClientUCMSetUserPublishedFileActionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMSetUserPublishedFileActionResponse> _instance;
} _CMsgClientUCMSetUserPublishedFileActionResponse_default_instance_;
class CMsgClientUCMEnumeratePublishedFilesByUserActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumeratePublishedFilesByUserAction> _instance;
} _CMsgClientUCMEnumeratePublishedFilesByUserAction_default_instance_;
class CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId> _instance;
} _CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_default_instance_;
class CMsgClientUCMEnumeratePublishedFilesByUserActionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse> _instance;
} _CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_default_instance_;
class CMsgClientScreenshotsChangedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientScreenshotsChanged> _instance;
} _CMsgClientScreenshotsChanged_default_instance_;
class CMsgClientUpdateUserGameInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUpdateUserGameInfo> _instance;
} _CMsgClientUpdateUserGameInfo_default_instance_;
class CMsgClientRichPresenceUploadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRichPresenceUpload> _instance;
} _CMsgClientRichPresenceUpload_default_instance_;
class CMsgClientRichPresenceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRichPresenceRequest> _instance;
} _CMsgClientRichPresenceRequest_default_instance_;
class CMsgClientRichPresenceInfo_RichPresenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRichPresenceInfo_RichPresence> _instance;
} _CMsgClientRichPresenceInfo_RichPresence_default_instance_;
class CMsgClientRichPresenceInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRichPresenceInfo> _instance;
} _CMsgClientRichPresenceInfo_default_instance_;
class CMsgClientCheckFileSignatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCheckFileSignature> _instance;
} _CMsgClientCheckFileSignature_default_instance_;
class CMsgClientCheckFileSignatureResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCheckFileSignatureResponse> _instance;
} _CMsgClientCheckFileSignatureResponse_default_instance_;
class CMsgClientReadMachineAuthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientReadMachineAuth> _instance;
} _CMsgClientReadMachineAuth_default_instance_;
class CMsgClientReadMachineAuthResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientReadMachineAuthResponse> _instance;
} _CMsgClientReadMachineAuthResponse_default_instance_;
class CMsgClientUpdateMachineAuthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUpdateMachineAuth> _instance;
} _CMsgClientUpdateMachineAuth_default_instance_;
class CMsgClientUpdateMachineAuthResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUpdateMachineAuthResponse> _instance;
} _CMsgClientUpdateMachineAuthResponse_default_instance_;
class CMsgClientRequestMachineAuthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestMachineAuth> _instance;
} _CMsgClientRequestMachineAuth_default_instance_;
class CMsgClientRequestMachineAuthResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestMachineAuthResponse> _instance;
} _CMsgClientRequestMachineAuthResponse_default_instance_;
class CMsgClientRegisterKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRegisterKey> _instance;
} _CMsgClientRegisterKey_default_instance_;
class CMsgClientPurchaseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPurchaseResponse> _instance;
} _CMsgClientPurchaseResponse_default_instance_;
class CMsgClientActivateOEMLicenseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientActivateOEMLicense> _instance;
} _CMsgClientActivateOEMLicense_default_instance_;
class CMsgClientRegisterOEMMachineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRegisterOEMMachine> _instance;
} _CMsgClientRegisterOEMMachine_default_instance_;
class CMsgClientRegisterOEMMachineResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRegisterOEMMachineResponse> _instance;
} _CMsgClientRegisterOEMMachineResponse_default_instance_;
class CMsgClientPurchaseWithMachineIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPurchaseWithMachineID> _instance;
} _CMsgClientPurchaseWithMachineID_default_instance_;
class CMsgTrading_InitiateTradeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgTrading_InitiateTradeRequest> _instance;
} _CMsgTrading_InitiateTradeRequest_default_instance_;
class CMsgTrading_InitiateTradeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgTrading_InitiateTradeResponse> _instance;
} _CMsgTrading_InitiateTradeResponse_default_instance_;
class CMsgTrading_CancelTradeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgTrading_CancelTradeRequest> _instance;
} _CMsgTrading_CancelTradeRequest_default_instance_;
class CMsgTrading_StartSessionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgTrading_StartSession> _instance;
} _CMsgTrading_StartSession_default_instance_;
class CMsgClientGetCDNAuthTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetCDNAuthToken> _instance;
} _CMsgClientGetCDNAuthToken_default_instance_;
class CMsgClientGetDepotDecryptionKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetDepotDecryptionKey> _instance;
} _CMsgClientGetDepotDecryptionKey_default_instance_;
class CMsgClientGetDepotDecryptionKeyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetDepotDecryptionKeyResponse> _instance;
} _CMsgClientGetDepotDecryptionKeyResponse_default_instance_;
class CMsgClientCheckAppBetaPasswordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCheckAppBetaPassword> _instance;
} _CMsgClientCheckAppBetaPassword_default_instance_;
class CMsgClientCheckAppBetaPasswordResponse_BetaPasswordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCheckAppBetaPasswordResponse_BetaPassword> _instance;
} _CMsgClientCheckAppBetaPasswordResponse_BetaPassword_default_instance_;
class CMsgClientCheckAppBetaPasswordResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCheckAppBetaPasswordResponse> _instance;
} _CMsgClientCheckAppBetaPasswordResponse_default_instance_;
class CMsgClientUpdateAppJobReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUpdateAppJobReport> _instance;
} _CMsgClientUpdateAppJobReport_default_instance_;
class CMsgClientDPContentStatsReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDPContentStatsReport> _instance;
} _CMsgClientDPContentStatsReport_default_instance_;
class CMsgClientGetCDNAuthTokenResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetCDNAuthTokenResponse> _instance;
} _CMsgClientGetCDNAuthTokenResponse_default_instance_;
class CMsgDownloadRateStatistics_StatsInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDownloadRateStatistics_StatsInfo> _instance;
} _CMsgDownloadRateStatistics_StatsInfo_default_instance_;
class CMsgDownloadRateStatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDownloadRateStatistics> _instance;
} _CMsgDownloadRateStatistics_default_instance_;
class CMsgClientRequestAccountDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestAccountData> _instance;
} _CMsgClientRequestAccountData_default_instance_;
class CMsgClientRequestAccountDataResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestAccountDataResponse> _instance;
} _CMsgClientRequestAccountDataResponse_default_instance_;
class CMsgClientUGSGetGlobalStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUGSGetGlobalStats> _instance;
} _CMsgClientUGSGetGlobalStats_default_instance_;
class CMsgClientUGSGetGlobalStatsResponse_Day_StatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUGSGetGlobalStatsResponse_Day_Stat> _instance;
} _CMsgClientUGSGetGlobalStatsResponse_Day_Stat_default_instance_;
class CMsgClientUGSGetGlobalStatsResponse_DayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUGSGetGlobalStatsResponse_Day> _instance;
} _CMsgClientUGSGetGlobalStatsResponse_Day_default_instance_;
class CMsgClientUGSGetGlobalStatsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUGSGetGlobalStatsResponse> _instance;
} _CMsgClientUGSGetGlobalStatsResponse_default_instance_;
class CMsgGameServerData_PlayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerData_Player> _instance;
} _CMsgGameServerData_Player_default_instance_;
class CMsgGameServerDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerData> _instance;
} _CMsgGameServerData_default_instance_;
class CMsgGameServerRemoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerRemove> _instance;
} _CMsgGameServerRemove_default_instance_;
class CMsgClientGMSServerQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGMSServerQuery> _instance;
} _CMsgClientGMSServerQuery_default_instance_;
class CMsgGMSClientServerQueryResponse_ServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGMSClientServerQueryResponse_Server> _instance;
} _CMsgGMSClientServerQueryResponse_Server_default_instance_;
class CMsgGMSClientServerQueryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGMSClientServerQueryResponse> _instance;
} _CMsgGMSClientServerQueryResponse_default_instance_;
class CMsgGameServerOutOfDateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerOutOfDate> _instance;
} _CMsgGameServerOutOfDate_default_instance_;
class CMsgClientRedeemGuestPassDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRedeemGuestPass> _instance;
} _CMsgClientRedeemGuestPass_default_instance_;
class CMsgClientRedeemGuestPassResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRedeemGuestPassResponse> _instance;
} _CMsgClientRedeemGuestPassResponse_default_instance_;
class CMsgClientGetClanActivityCountsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetClanActivityCounts> _instance;
} _CMsgClientGetClanActivityCounts_default_instance_;
class CMsgClientGetClanActivityCountsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetClanActivityCountsResponse> _instance;
} _CMsgClientGetClanActivityCountsResponse_default_instance_;
class CMsgClientOGSReportStringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientOGSReportString> _instance;
} _CMsgClientOGSReportString_default_instance_;
class CMsgClientOGSReportBugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientOGSReportBug> _instance;
} _CMsgClientOGSReportBug_default_instance_;
class CMsgGSAssociateWithClanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSAssociateWithClan> _instance;
} _CMsgGSAssociateWithClan_default_instance_;
class CMsgGSAssociateWithClanResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSAssociateWithClanResponse> _instance;
} _CMsgGSAssociateWithClanResponse_default_instance_;
class CMsgGSComputeNewPlayerCompatibilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSComputeNewPlayerCompatibility> _instance;
} _CMsgGSComputeNewPlayerCompatibility_default_instance_;
class CMsgGSComputeNewPlayerCompatibilityResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSComputeNewPlayerCompatibilityResponse> _instance;
} _CMsgGSComputeNewPlayerCompatibilityResponse_default_instance_;
class CMsgClientSentLogsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSentLogs> _instance;
} _CMsgClientSentLogs_default_instance_;
class CMsgGCClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCClient> _instance;
} _CMsgGCClient_default_instance_;
class CMsgClientRequestFreeLicenseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestFreeLicense> _instance;
} _CMsgClientRequestFreeLicense_default_instance_;
class CMsgClientRequestFreeLicenseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestFreeLicenseResponse> _instance;
} _CMsgClientRequestFreeLicenseResponse_default_instance_;
class CMsgDRMDownloadRequestWithCrashDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDRMDownloadRequestWithCrashData> _instance;
} _CMsgDRMDownloadRequestWithCrashData_default_instance_;
class CMsgDRMDownloadResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDRMDownloadResponse> _instance;
} _CMsgDRMDownloadResponse_default_instance_;
class CMsgDRMFinalResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDRMFinalResult> _instance;
} _CMsgDRMFinalResult_default_instance_;
class CMsgClientDPCheckSpecialSurveyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDPCheckSpecialSurvey> _instance;
} _CMsgClientDPCheckSpecialSurvey_default_instance_;
class CMsgClientDPCheckSpecialSurveyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDPCheckSpecialSurveyResponse> _instance;
} _CMsgClientDPCheckSpecialSurveyResponse_default_instance_;
class CMsgClientDPSendSpecialSurveyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDPSendSpecialSurveyResponse> _instance;
} _CMsgClientDPSendSpecialSurveyResponse_default_instance_;
class CMsgClientDPSendSpecialSurveyResponseReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDPSendSpecialSurveyResponseReply> _instance;
} _CMsgClientDPSendSpecialSurveyResponseReply_default_instance_;
class CMsgClientRequestForgottenPasswordEmailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestForgottenPasswordEmail> _instance;
} _CMsgClientRequestForgottenPasswordEmail_default_instance_;
class CMsgClientRequestForgottenPasswordEmailResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestForgottenPasswordEmailResponse> _instance;
} _CMsgClientRequestForgottenPasswordEmailResponse_default_instance_;
class CMsgClientItemAnnouncementsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientItemAnnouncements> _instance;
} _CMsgClientItemAnnouncements_default_instance_;
class CMsgClientRequestItemAnnouncementsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestItemAnnouncements> _instance;
} _CMsgClientRequestItemAnnouncements_default_instance_;
class CMsgClientUserNotifications_NotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUserNotifications_Notification> _instance;
} _CMsgClientUserNotifications_Notification_default_instance_;
class CMsgClientUserNotificationsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUserNotifications> _instance;
} _CMsgClientUserNotifications_default_instance_;
class CMsgClientCommentNotificationsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCommentNotifications> _instance;
} _CMsgClientCommentNotifications_default_instance_;
class CMsgClientRequestCommentNotificationsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestCommentNotifications> _instance;
} _CMsgClientRequestCommentNotifications_default_instance_;
class CMsgClientOfflineMessageNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientOfflineMessageNotification> _instance;
} _CMsgClientOfflineMessageNotification_default_instance_;
class CMsgClientRequestOfflineMessageCountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestOfflineMessageCount> _instance;
} _CMsgClientRequestOfflineMessageCount_default_instance_;
class CMsgClientChatGetFriendMessageHistoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientChatGetFriendMessageHistory> _instance;
} _CMsgClientChatGetFriendMessageHistory_default_instance_;
class CMsgClientChatGetFriendMessageHistoryResponse_FriendMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage> _instance;
} _CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_default_instance_;
class CMsgClientChatGetFriendMessageHistoryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientChatGetFriendMessageHistoryResponse> _instance;
} _CMsgClientChatGetFriendMessageHistoryResponse_default_instance_;
class CMsgClientChatGetFriendMessageHistoryForOfflineMessagesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientChatGetFriendMessageHistoryForOfflineMessages> _instance;
} _CMsgClientChatGetFriendMessageHistoryForOfflineMessages_default_instance_;
class CMsgClientFSGetFriendsSteamLevelsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFSGetFriendsSteamLevels> _instance;
} _CMsgClientFSGetFriendsSteamLevels_default_instance_;
class CMsgClientFSGetFriendsSteamLevelsResponse_FriendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFSGetFriendsSteamLevelsResponse_Friend> _instance;
} _CMsgClientFSGetFriendsSteamLevelsResponse_Friend_default_instance_;
class CMsgClientFSGetFriendsSteamLevelsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFSGetFriendsSteamLevelsResponse> _instance;
} _CMsgClientFSGetFriendsSteamLevelsResponse_default_instance_;
class CMsgClientEmailAddrInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientEmailAddrInfo> _instance;
} _CMsgClientEmailAddrInfo_default_instance_;
class CMsgCREEnumeratePublishedFilesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREEnumeratePublishedFiles> _instance;
} _CMsgCREEnumeratePublishedFiles_default_instance_;
class CMsgCREEnumeratePublishedFilesResponse_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREEnumeratePublishedFilesResponse_PublishedFileId> _instance;
} _CMsgCREEnumeratePublishedFilesResponse_PublishedFileId_default_instance_;
class CMsgCREEnumeratePublishedFilesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREEnumeratePublishedFilesResponse> _instance;
} _CMsgCREEnumeratePublishedFilesResponse_default_instance_;
class CMsgCREItemVoteSummary_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREItemVoteSummary_PublishedFileId> _instance;
} _CMsgCREItemVoteSummary_PublishedFileId_default_instance_;
class CMsgCREItemVoteSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREItemVoteSummary> _instance;
} _CMsgCREItemVoteSummary_default_instance_;
class CMsgCREItemVoteSummaryResponse_ItemVoteSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREItemVoteSummaryResponse_ItemVoteSummary> _instance;
} _CMsgCREItemVoteSummaryResponse_ItemVoteSummary_default_instance_;
class CMsgCREItemVoteSummaryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREItemVoteSummaryResponse> _instance;
} _CMsgCREItemVoteSummaryResponse_default_instance_;
class CMsgCREUpdateUserPublishedItemVoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREUpdateUserPublishedItemVote> _instance;
} _CMsgCREUpdateUserPublishedItemVote_default_instance_;
class CMsgCREUpdateUserPublishedItemVoteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREUpdateUserPublishedItemVoteResponse> _instance;
} _CMsgCREUpdateUserPublishedItemVoteResponse_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetails_PublishedFileIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId> _instance;
} _CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREGetUserPublishedItemVoteDetails> _instance;
} _CMsgCREGetUserPublishedItemVoteDetails_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail> _instance;
} _CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetailsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREGetUserPublishedItemVoteDetailsResponse> _instance;
} _CMsgCREGetUserPublishedItemVoteDetailsResponse_default_instance_;
class CMsgGameServerPingSample_SampleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerPingSample_Sample> _instance;
} _CMsgGameServerPingSample_Sample_default_instance_;
class CMsgGameServerPingSampleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerPingSample> _instance;
} _CMsgGameServerPingSample_default_instance_;
class CMsgFSGetFollowerCountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSGetFollowerCount> _instance;
} _CMsgFSGetFollowerCount_default_instance_;
class CMsgFSGetFollowerCountResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSGetFollowerCountResponse> _instance;
} _CMsgFSGetFollowerCountResponse_default_instance_;
class CMsgFSGetIsFollowingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSGetIsFollowing> _instance;
} _CMsgFSGetIsFollowing_default_instance_;
class CMsgFSGetIsFollowingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSGetIsFollowingResponse> _instance;
} _CMsgFSGetIsFollowingResponse_default_instance_;
class CMsgFSEnumerateFollowingListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSEnumerateFollowingList> _instance;
} _CMsgFSEnumerateFollowingList_default_instance_;
class CMsgFSEnumerateFollowingListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSEnumerateFollowingListResponse> _instance;
} _CMsgFSEnumerateFollowingListResponse_default_instance_;
class CMsgDPGetNumberOfCurrentPlayersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDPGetNumberOfCurrentPlayers> _instance;
} _CMsgDPGetNumberOfCurrentPlayers_default_instance_;
class CMsgDPGetNumberOfCurrentPlayersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgDPGetNumberOfCurrentPlayersResponse> _instance;
} _CMsgDPGetNumberOfCurrentPlayersResponse_default_instance_;
class CMsgClientFriendUserStatusPublishedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFriendUserStatusPublished> _instance;
} _CMsgClientFriendUserStatusPublished_default_instance_;
class CMsgClientServiceMethodDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServiceMethod> _instance;
} _CMsgClientServiceMethod_default_instance_;
class CMsgClientServiceMethodResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServiceMethodResponse> _instance;
} _CMsgClientServiceMethodResponse_default_instance_;
class CMsgClientUIModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUIMode> _instance;
} _CMsgClientUIMode_default_instance_;
class CMsgClientVanityURLChangedNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientVanityURLChangedNotification> _instance;
} _CMsgClientVanityURLChangedNotification_default_instance_;
class CMsgClientAuthorizeLocalDeviceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAuthorizeLocalDeviceRequest> _instance;
} _CMsgClientAuthorizeLocalDeviceRequest_default_instance_;
class CMsgClientAuthorizeLocalDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAuthorizeLocalDevice> _instance;
} _CMsgClientAuthorizeLocalDevice_default_instance_;
class CMsgClientAuthorizeLocalDeviceNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAuthorizeLocalDeviceNotification> _instance;
} _CMsgClientAuthorizeLocalDeviceNotification_default_instance_;
class CMsgClientDeauthorizeDeviceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDeauthorizeDeviceRequest> _instance;
} _CMsgClientDeauthorizeDeviceRequest_default_instance_;
class CMsgClientDeauthorizeDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDeauthorizeDevice> _instance;
} _CMsgClientDeauthorizeDevice_default_instance_;
class CMsgClientUseLocalDeviceAuthorizations_DeviceTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUseLocalDeviceAuthorizations_DeviceToken> _instance;
} _CMsgClientUseLocalDeviceAuthorizations_DeviceToken_default_instance_;
class CMsgClientUseLocalDeviceAuthorizationsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUseLocalDeviceAuthorizations> _instance;
} _CMsgClientUseLocalDeviceAuthorizations_default_instance_;
class CMsgClientGetAuthorizedDevicesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetAuthorizedDevices> _instance;
} _CMsgClientGetAuthorizedDevices_default_instance_;
class CMsgClientGetAuthorizedDevicesResponse_AuthorizedDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice> _instance;
} _CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_default_instance_;
class CMsgClientGetAuthorizedDevicesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetAuthorizedDevicesResponse> _instance;
} _CMsgClientGetAuthorizedDevicesResponse_default_instance_;
class CMsgClientSharedLibraryLockStatus_LockedLibraryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSharedLibraryLockStatus_LockedLibrary> _instance;
} _CMsgClientSharedLibraryLockStatus_LockedLibrary_default_instance_;
class CMsgClientSharedLibraryLockStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSharedLibraryLockStatus> _instance;
} _CMsgClientSharedLibraryLockStatus_default_instance_;
class CMsgClientSharedLibraryStopPlaying_StopAppDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSharedLibraryStopPlaying_StopApp> _instance;
} _CMsgClientSharedLibraryStopPlaying_StopApp_default_instance_;
class CMsgClientSharedLibraryStopPlayingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSharedLibraryStopPlaying> _instance;
} _CMsgClientSharedLibraryStopPlaying_default_instance_;
class CMsgClientServiceCallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServiceCall> _instance;
} _CMsgClientServiceCall_default_instance_;
class CMsgClientServiceModuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServiceModule> _instance;
} _CMsgClientServiceModule_default_instance_;
class CMsgClientServiceCallResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServiceCallResponse> _instance;
} _CMsgClientServiceCallResponse_default_instance_;
class CMsgAMUnlockStreamingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMUnlockStreaming> _instance;
} _CMsgAMUnlockStreaming_default_instance_;
class CMsgAMUnlockStreamingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMUnlockStreamingResponse> _instance;
} _CMsgAMUnlockStreamingResponse_default_instance_;
class CMsgAMUnlockHEVCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMUnlockHEVC> _instance;
} _CMsgAMUnlockHEVC_default_instance_;
class CMsgAMUnlockHEVCResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMUnlockHEVCResponse> _instance;
} _CMsgAMUnlockHEVCResponse_default_instance_;
class CMsgClientPlayingSessionStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPlayingSessionState> _instance;
} _CMsgClientPlayingSessionState_default_instance_;
class CMsgClientKickPlayingSessionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientKickPlayingSession> _instance;
} _CMsgClientKickPlayingSession_default_instance_;
class CMsgClientVoiceCallPreAuthorizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientVoiceCallPreAuthorize> _instance;
} _CMsgClientVoiceCallPreAuthorize_default_instance_;
class CMsgClientVoiceCallPreAuthorizeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientVoiceCallPreAuthorizeResponse> _instance;
} _CMsgClientVoiceCallPreAuthorizeResponse_default_instance_;
}  // namespace steam
}  // namespace proto
static void InitDefaultsCMsgClientUCMAddScreenshot_Tag_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMAddScreenshot_Tag_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMAddScreenshot_Tag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMAddScreenshot_Tag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMAddScreenshot_Tag_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMAddScreenshot_Tag_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMAddScreenshot_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMAddScreenshot_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMAddScreenshot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMAddScreenshot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUCMAddScreenshot_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUCMAddScreenshot_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientUCMAddScreenshot_Tag_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientUCMAddScreenshotResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMAddScreenshotResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMAddScreenshotResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMAddScreenshotResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMAddScreenshotResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMAddScreenshotResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMDeleteScreenshot_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMDeleteScreenshot_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMDeleteScreenshot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMDeleteScreenshot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMDeleteScreenshot_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMDeleteScreenshot_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMDeleteScreenshotResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMDeleteScreenshotResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMDeleteScreenshotResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMDeleteScreenshotResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMDeleteScreenshotResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMDeleteScreenshotResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMPublishFile_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMPublishFile_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMPublishFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMPublishFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMPublishFile_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMPublishFile_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMPublishFileResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMPublishFileResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMPublishFileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMPublishFileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMPublishFileResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMPublishFileResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMUpdatePublishedFile_KeyValueTag_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMUpdatePublishedFile_KeyValueTag_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMUpdatePublishedFile_KeyValueTag_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMUpdatePublishedFile_KeyValueTag_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMUpdatePublishedFile_AdditionalPreview_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMUpdatePublishedFile_AdditionalPreview_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMUpdatePublishedFile_AdditionalPreview_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMUpdatePublishedFile_AdditionalPreview_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMUpdatePublishedFile_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMUpdatePublishedFile_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMUpdatePublishedFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMUpdatePublishedFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CMsgClientUCMUpdatePublishedFile_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCMsgClientUCMUpdatePublishedFile_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientUCMUpdatePublishedFile_KeyValueTag_steammessages_5fclientserver_5f2_2eproto.base,
      &scc_info_CMsgClientUCMUpdatePublishedFile_AdditionalPreview_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientUCMUpdatePublishedFileResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMUpdatePublishedFileResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMUpdatePublishedFileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMUpdatePublishedFileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMUpdatePublishedFileResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMUpdatePublishedFileResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMDeletePublishedFile_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMDeletePublishedFile_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMDeletePublishedFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMDeletePublishedFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMDeletePublishedFile_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMDeletePublishedFile_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMDeletePublishedFileResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMDeletePublishedFileResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMDeletePublishedFileResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMDeletePublishedFileResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMDeletePublishedFileResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMDeletePublishedFileResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMEnumerateUserPublishedFiles_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMEnumerateUserPublishedFiles_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMEnumerateUserPublishedFiles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMEnumerateUserPublishedFiles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserPublishedFiles_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumerateUserPublishedFiles_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMEnumerateUserPublishedFilesResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMEnumerateUserPublishedFilesResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUCMEnumerateUserPublishedFilesResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientUCMEnumerateUserSubscribedFiles_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMEnumerateUserSubscribedFiles_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFiles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFiles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserSubscribedFiles_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumerateUserSubscribedFiles_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMEnumerateUserSubscribedFilesResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientUCMPublishedFileSubscribed_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMPublishedFileSubscribed_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMPublishedFileSubscribed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMPublishedFileSubscribed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMPublishedFileSubscribed_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMPublishedFileSubscribed_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMPublishedFileUnsubscribed_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMPublishedFileUnsubscribed_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMPublishedFileUnsubscribed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMPublishedFileUnsubscribed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMPublishedFileUnsubscribed_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMPublishedFileUnsubscribed_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMPublishedFileDeleted_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMPublishedFileDeleted_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMPublishedFileDeleted();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMPublishedFileDeleted::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMPublishedFileDeleted_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMPublishedFileDeleted_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMPublishedFileUpdated_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMPublishedFileUpdated_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMPublishedFileUpdated();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMPublishedFileUpdated::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMPublishedFileUpdated_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMPublishedFileUpdated_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientWorkshopItemChangesRequest_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientWorkshopItemChangesRequest_default_instance_;
    new (ptr) ::proto::steam::CMsgClientWorkshopItemChangesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientWorkshopItemChangesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientWorkshopItemChangesRequest_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientWorkshopItemChangesRequest_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_default_instance_;
    new (ptr) ::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientWorkshopItemChangesResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientWorkshopItemChangesResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientWorkshopItemChangesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientWorkshopItemChangesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientWorkshopItemChangesResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientWorkshopItemChangesResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientWorkshopItemInfoRequest_WorkshopItem_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientWorkshopItemInfoRequest_WorkshopItem_default_instance_;
    new (ptr) ::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientWorkshopItemInfoRequest_WorkshopItem_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientWorkshopItemInfoRequest_WorkshopItem_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientWorkshopItemInfoRequest_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientWorkshopItemInfoRequest_default_instance_;
    new (ptr) ::proto::steam::CMsgClientWorkshopItemInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientWorkshopItemInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientWorkshopItemInfoRequest_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientWorkshopItemInfoRequest_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientWorkshopItemInfoRequest_WorkshopItem_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_default_instance_;
    new (ptr) ::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientWorkshopItemInfoResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientWorkshopItemInfoResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientWorkshopItemInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientWorkshopItemInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientWorkshopItemInfoResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientWorkshopItemInfoResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientUCMGetPublishedFilesForUser_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMGetPublishedFilesForUser_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMGetPublishedFilesForUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMGetPublishedFilesForUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMGetPublishedFilesForUser_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMGetPublishedFilesForUser_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMGetPublishedFilesForUserResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMGetPublishedFilesForUserResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUCMGetPublishedFilesForUserResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUCMGetPublishedFilesForUserResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientUCMSetUserPublishedFileAction_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMSetUserPublishedFileAction_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMSetUserPublishedFileAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMSetUserPublishedFileAction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMSetUserPublishedFileAction_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMSetUserPublishedFileAction_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMSetUserPublishedFileActionResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMSetUserPublishedFileActionResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMSetUserPublishedFileActionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMSetUserPublishedFileActionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMSetUserPublishedFileActionResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMSetUserPublishedFileActionResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMEnumeratePublishedFilesByUserAction_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMEnumeratePublishedFilesByUserAction_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserAction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumeratePublishedFilesByUserAction_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumeratePublishedFilesByUserAction_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUCMEnumeratePublishedFilesByUserActionResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUCMEnumeratePublishedFilesByUserActionResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientScreenshotsChanged_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientScreenshotsChanged_default_instance_;
    new (ptr) ::proto::steam::CMsgClientScreenshotsChanged();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientScreenshotsChanged::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientScreenshotsChanged_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientScreenshotsChanged_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUpdateUserGameInfo_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUpdateUserGameInfo_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUpdateUserGameInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUpdateUserGameInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUpdateUserGameInfo_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUpdateUserGameInfo_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRichPresenceUpload_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRichPresenceUpload_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRichPresenceUpload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRichPresenceUpload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRichPresenceUpload_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRichPresenceUpload_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRichPresenceRequest_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRichPresenceRequest_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRichPresenceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRichPresenceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRichPresenceRequest_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRichPresenceRequest_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRichPresenceInfo_RichPresence_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRichPresenceInfo_RichPresence_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRichPresenceInfo_RichPresence();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRichPresenceInfo_RichPresence::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRichPresenceInfo_RichPresence_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRichPresenceInfo_RichPresence_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRichPresenceInfo_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRichPresenceInfo_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRichPresenceInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRichPresenceInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientRichPresenceInfo_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientRichPresenceInfo_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientRichPresenceInfo_RichPresence_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientCheckFileSignature_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientCheckFileSignature_default_instance_;
    new (ptr) ::proto::steam::CMsgClientCheckFileSignature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientCheckFileSignature::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientCheckFileSignature_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientCheckFileSignature_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientCheckFileSignatureResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientCheckFileSignatureResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientCheckFileSignatureResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientCheckFileSignatureResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientCheckFileSignatureResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientCheckFileSignatureResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientReadMachineAuth_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientReadMachineAuth_default_instance_;
    new (ptr) ::proto::steam::CMsgClientReadMachineAuth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientReadMachineAuth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientReadMachineAuth_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientReadMachineAuth_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientReadMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientReadMachineAuthResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientReadMachineAuthResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientReadMachineAuthResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientReadMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientReadMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUpdateMachineAuth_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUpdateMachineAuth_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUpdateMachineAuth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUpdateMachineAuth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUpdateMachineAuth_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUpdateMachineAuth_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUpdateMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUpdateMachineAuthResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUpdateMachineAuthResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUpdateMachineAuthResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUpdateMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUpdateMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRequestMachineAuth_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRequestMachineAuth_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRequestMachineAuth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRequestMachineAuth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestMachineAuth_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestMachineAuth_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRequestMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRequestMachineAuthResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRequestMachineAuthResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRequestMachineAuthResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRegisterKey_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRegisterKey_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRegisterKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRegisterKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRegisterKey_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRegisterKey_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientPurchaseResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientPurchaseResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientPurchaseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientPurchaseResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPurchaseResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPurchaseResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientActivateOEMLicense_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientActivateOEMLicense_default_instance_;
    new (ptr) ::proto::steam::CMsgClientActivateOEMLicense();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientActivateOEMLicense::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientActivateOEMLicense_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientActivateOEMLicense_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRegisterOEMMachine_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRegisterOEMMachine_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRegisterOEMMachine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRegisterOEMMachine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRegisterOEMMachine_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRegisterOEMMachine_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRegisterOEMMachineResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRegisterOEMMachineResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRegisterOEMMachineResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRegisterOEMMachineResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRegisterOEMMachineResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRegisterOEMMachineResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientPurchaseWithMachineID_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientPurchaseWithMachineID_default_instance_;
    new (ptr) ::proto::steam::CMsgClientPurchaseWithMachineID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientPurchaseWithMachineID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPurchaseWithMachineID_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPurchaseWithMachineID_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgTrading_InitiateTradeRequest_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgTrading_InitiateTradeRequest_default_instance_;
    new (ptr) ::proto::steam::CMsgTrading_InitiateTradeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgTrading_InitiateTradeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgTrading_InitiateTradeRequest_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgTrading_InitiateTradeRequest_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgTrading_InitiateTradeResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgTrading_InitiateTradeResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgTrading_InitiateTradeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgTrading_InitiateTradeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgTrading_InitiateTradeResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgTrading_InitiateTradeResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgTrading_CancelTradeRequest_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgTrading_CancelTradeRequest_default_instance_;
    new (ptr) ::proto::steam::CMsgTrading_CancelTradeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgTrading_CancelTradeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgTrading_CancelTradeRequest_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgTrading_CancelTradeRequest_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgTrading_StartSession_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgTrading_StartSession_default_instance_;
    new (ptr) ::proto::steam::CMsgTrading_StartSession();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgTrading_StartSession::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgTrading_StartSession_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgTrading_StartSession_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientGetCDNAuthToken_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientGetCDNAuthToken_default_instance_;
    new (ptr) ::proto::steam::CMsgClientGetCDNAuthToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientGetCDNAuthToken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetCDNAuthToken_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetCDNAuthToken_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientGetDepotDecryptionKey_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientGetDepotDecryptionKey_default_instance_;
    new (ptr) ::proto::steam::CMsgClientGetDepotDecryptionKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientGetDepotDecryptionKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetDepotDecryptionKey_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetDepotDecryptionKey_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientGetDepotDecryptionKeyResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientGetDepotDecryptionKeyResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientGetDepotDecryptionKeyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientGetDepotDecryptionKeyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetDepotDecryptionKeyResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetDepotDecryptionKeyResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientCheckAppBetaPassword_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientCheckAppBetaPassword_default_instance_;
    new (ptr) ::proto::steam::CMsgClientCheckAppBetaPassword();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientCheckAppBetaPassword::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientCheckAppBetaPassword_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientCheckAppBetaPassword_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientCheckAppBetaPasswordResponse_BetaPassword_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientCheckAppBetaPasswordResponse_BetaPassword_default_instance_;
    new (ptr) ::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientCheckAppBetaPasswordResponse_BetaPassword_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientCheckAppBetaPasswordResponse_BetaPassword_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientCheckAppBetaPasswordResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientCheckAppBetaPasswordResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientCheckAppBetaPasswordResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientCheckAppBetaPasswordResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientCheckAppBetaPasswordResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientCheckAppBetaPasswordResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientCheckAppBetaPasswordResponse_BetaPassword_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientUpdateAppJobReport_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUpdateAppJobReport_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUpdateAppJobReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUpdateAppJobReport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUpdateAppJobReport_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUpdateAppJobReport_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientDPContentStatsReport_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientDPContentStatsReport_default_instance_;
    new (ptr) ::proto::steam::CMsgClientDPContentStatsReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientDPContentStatsReport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDPContentStatsReport_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDPContentStatsReport_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientGetCDNAuthTokenResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientGetCDNAuthTokenResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientGetCDNAuthTokenResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientGetCDNAuthTokenResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetCDNAuthTokenResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetCDNAuthTokenResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgDownloadRateStatistics_StatsInfo_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgDownloadRateStatistics_StatsInfo_default_instance_;
    new (ptr) ::proto::steam::CMsgDownloadRateStatistics_StatsInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgDownloadRateStatistics_StatsInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDownloadRateStatistics_StatsInfo_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDownloadRateStatistics_StatsInfo_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgDownloadRateStatistics_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgDownloadRateStatistics_default_instance_;
    new (ptr) ::proto::steam::CMsgDownloadRateStatistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgDownloadRateStatistics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgDownloadRateStatistics_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgDownloadRateStatistics_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgDownloadRateStatistics_StatsInfo_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientRequestAccountData_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRequestAccountData_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRequestAccountData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRequestAccountData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestAccountData_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestAccountData_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRequestAccountDataResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRequestAccountDataResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRequestAccountDataResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRequestAccountDataResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestAccountDataResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestAccountDataResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUGSGetGlobalStats_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUGSGetGlobalStats_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUGSGetGlobalStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUGSGetGlobalStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUGSGetGlobalStats_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUGSGetGlobalStats_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUGSGetGlobalStatsResponse_Day_Stat_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUGSGetGlobalStatsResponse_Day_Stat_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_Stat_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUGSGetGlobalStatsResponse_Day_Stat_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUGSGetGlobalStatsResponse_Day_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUGSGetGlobalStatsResponse_Day_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUGSGetGlobalStatsResponse_Day_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_Stat_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientUGSGetGlobalStatsResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUGSGetGlobalStatsResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUGSGetGlobalStatsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUGSGetGlobalStatsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUGSGetGlobalStatsResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUGSGetGlobalStatsResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgGameServerData_Player_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgGameServerData_Player_default_instance_;
    new (ptr) ::proto::steam::CMsgGameServerData_Player();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgGameServerData_Player::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGameServerData_Player_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGameServerData_Player_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgGameServerData_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgGameServerData_default_instance_;
    new (ptr) ::proto::steam::CMsgGameServerData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgGameServerData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGameServerData_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGameServerData_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgGameServerData_Player_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgGameServerRemove_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgGameServerRemove_default_instance_;
    new (ptr) ::proto::steam::CMsgGameServerRemove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgGameServerRemove::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGameServerRemove_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGameServerRemove_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientGMSServerQuery_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientGMSServerQuery_default_instance_;
    new (ptr) ::proto::steam::CMsgClientGMSServerQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientGMSServerQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGMSServerQuery_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGMSServerQuery_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgGMSClientServerQueryResponse_Server_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgGMSClientServerQueryResponse_Server_default_instance_;
    new (ptr) ::proto::steam::CMsgGMSClientServerQueryResponse_Server();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgGMSClientServerQueryResponse_Server::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGMSClientServerQueryResponse_Server_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGMSClientServerQueryResponse_Server_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgGMSClientServerQueryResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgGMSClientServerQueryResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgGMSClientServerQueryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgGMSClientServerQueryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGMSClientServerQueryResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGMSClientServerQueryResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgGMSClientServerQueryResponse_Server_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgGameServerOutOfDate_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgGameServerOutOfDate_default_instance_;
    new (ptr) ::proto::steam::CMsgGameServerOutOfDate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgGameServerOutOfDate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGameServerOutOfDate_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGameServerOutOfDate_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRedeemGuestPass_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRedeemGuestPass_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRedeemGuestPass();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRedeemGuestPass::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRedeemGuestPass_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRedeemGuestPass_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRedeemGuestPassResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRedeemGuestPassResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRedeemGuestPassResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRedeemGuestPassResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRedeemGuestPassResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRedeemGuestPassResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientGetClanActivityCounts_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientGetClanActivityCounts_default_instance_;
    new (ptr) ::proto::steam::CMsgClientGetClanActivityCounts();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientGetClanActivityCounts::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetClanActivityCounts_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetClanActivityCounts_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientGetClanActivityCountsResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientGetClanActivityCountsResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientGetClanActivityCountsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientGetClanActivityCountsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetClanActivityCountsResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetClanActivityCountsResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientOGSReportString_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientOGSReportString_default_instance_;
    new (ptr) ::proto::steam::CMsgClientOGSReportString();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientOGSReportString::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientOGSReportString_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientOGSReportString_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientOGSReportBug_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientOGSReportBug_default_instance_;
    new (ptr) ::proto::steam::CMsgClientOGSReportBug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientOGSReportBug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientOGSReportBug_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientOGSReportBug_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgGSAssociateWithClan_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgGSAssociateWithClan_default_instance_;
    new (ptr) ::proto::steam::CMsgGSAssociateWithClan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgGSAssociateWithClan::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSAssociateWithClan_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSAssociateWithClan_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgGSAssociateWithClanResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgGSAssociateWithClanResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgGSAssociateWithClanResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgGSAssociateWithClanResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSAssociateWithClanResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSAssociateWithClanResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgGSComputeNewPlayerCompatibility_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgGSComputeNewPlayerCompatibility_default_instance_;
    new (ptr) ::proto::steam::CMsgGSComputeNewPlayerCompatibility();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgGSComputeNewPlayerCompatibility::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSComputeNewPlayerCompatibility_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSComputeNewPlayerCompatibility_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgGSComputeNewPlayerCompatibilityResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgGSComputeNewPlayerCompatibilityResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgGSComputeNewPlayerCompatibilityResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgGSComputeNewPlayerCompatibilityResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGSComputeNewPlayerCompatibilityResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGSComputeNewPlayerCompatibilityResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientSentLogs_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientSentLogs_default_instance_;
    new (ptr) ::proto::steam::CMsgClientSentLogs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientSentLogs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientSentLogs_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientSentLogs_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgGCClient_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgGCClient_default_instance_;
    new (ptr) ::proto::steam::CMsgGCClient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgGCClient::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGCClient_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGCClient_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRequestFreeLicense_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRequestFreeLicense_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRequestFreeLicense();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRequestFreeLicense::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestFreeLicense_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestFreeLicense_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRequestFreeLicenseResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRequestFreeLicenseResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRequestFreeLicenseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRequestFreeLicenseResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestFreeLicenseResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestFreeLicenseResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgDRMDownloadRequestWithCrashData_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgDRMDownloadRequestWithCrashData_default_instance_;
    new (ptr) ::proto::steam::CMsgDRMDownloadRequestWithCrashData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgDRMDownloadRequestWithCrashData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDRMDownloadRequestWithCrashData_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDRMDownloadRequestWithCrashData_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgDRMDownloadResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgDRMDownloadResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgDRMDownloadResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgDRMDownloadResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDRMDownloadResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDRMDownloadResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgDRMFinalResult_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgDRMFinalResult_default_instance_;
    new (ptr) ::proto::steam::CMsgDRMFinalResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgDRMFinalResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDRMFinalResult_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDRMFinalResult_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientDPCheckSpecialSurvey_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientDPCheckSpecialSurvey_default_instance_;
    new (ptr) ::proto::steam::CMsgClientDPCheckSpecialSurvey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientDPCheckSpecialSurvey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDPCheckSpecialSurvey_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDPCheckSpecialSurvey_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientDPCheckSpecialSurveyResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientDPCheckSpecialSurveyResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientDPCheckSpecialSurveyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientDPCheckSpecialSurveyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDPCheckSpecialSurveyResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDPCheckSpecialSurveyResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientDPSendSpecialSurveyResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientDPSendSpecialSurveyResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientDPSendSpecialSurveyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientDPSendSpecialSurveyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDPSendSpecialSurveyResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDPSendSpecialSurveyResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientDPSendSpecialSurveyResponseReply_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientDPSendSpecialSurveyResponseReply_default_instance_;
    new (ptr) ::proto::steam::CMsgClientDPSendSpecialSurveyResponseReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientDPSendSpecialSurveyResponseReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDPSendSpecialSurveyResponseReply_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDPSendSpecialSurveyResponseReply_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRequestForgottenPasswordEmail_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRequestForgottenPasswordEmail_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRequestForgottenPasswordEmail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRequestForgottenPasswordEmail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestForgottenPasswordEmail_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestForgottenPasswordEmail_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRequestForgottenPasswordEmailResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRequestForgottenPasswordEmailResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRequestForgottenPasswordEmailResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRequestForgottenPasswordEmailResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestForgottenPasswordEmailResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestForgottenPasswordEmailResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientItemAnnouncements_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientItemAnnouncements_default_instance_;
    new (ptr) ::proto::steam::CMsgClientItemAnnouncements();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientItemAnnouncements::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientItemAnnouncements_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientItemAnnouncements_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRequestItemAnnouncements_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRequestItemAnnouncements_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRequestItemAnnouncements();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRequestItemAnnouncements::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestItemAnnouncements_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestItemAnnouncements_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUserNotifications_Notification_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUserNotifications_Notification_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUserNotifications_Notification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUserNotifications_Notification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUserNotifications_Notification_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUserNotifications_Notification_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUserNotifications_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUserNotifications_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUserNotifications();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUserNotifications::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUserNotifications_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUserNotifications_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientUserNotifications_Notification_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientCommentNotifications_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientCommentNotifications_default_instance_;
    new (ptr) ::proto::steam::CMsgClientCommentNotifications();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientCommentNotifications::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientCommentNotifications_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientCommentNotifications_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRequestCommentNotifications_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRequestCommentNotifications_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRequestCommentNotifications();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRequestCommentNotifications::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestCommentNotifications_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestCommentNotifications_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientOfflineMessageNotification_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientOfflineMessageNotification_default_instance_;
    new (ptr) ::proto::steam::CMsgClientOfflineMessageNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientOfflineMessageNotification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientOfflineMessageNotification_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientOfflineMessageNotification_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientRequestOfflineMessageCount_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientRequestOfflineMessageCount_default_instance_;
    new (ptr) ::proto::steam::CMsgClientRequestOfflineMessageCount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientRequestOfflineMessageCount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientRequestOfflineMessageCount_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientRequestOfflineMessageCount_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientChatGetFriendMessageHistory_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientChatGetFriendMessageHistory_default_instance_;
    new (ptr) ::proto::steam::CMsgClientChatGetFriendMessageHistory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientChatGetFriendMessageHistory::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientChatGetFriendMessageHistory_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientChatGetFriendMessageHistory_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_default_instance_;
    new (ptr) ::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientChatGetFriendMessageHistoryResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientChatGetFriendMessageHistoryResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientChatGetFriendMessageHistoryResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientChatGetFriendMessageHistoryResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientChatGetFriendMessageHistoryForOfflineMessages_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientChatGetFriendMessageHistoryForOfflineMessages_default_instance_;
    new (ptr) ::proto::steam::CMsgClientChatGetFriendMessageHistoryForOfflineMessages();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientChatGetFriendMessageHistoryForOfflineMessages::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientChatGetFriendMessageHistoryForOfflineMessages_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientChatGetFriendMessageHistoryForOfflineMessages_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientFSGetFriendsSteamLevels_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientFSGetFriendsSteamLevels_default_instance_;
    new (ptr) ::proto::steam::CMsgClientFSGetFriendsSteamLevels();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientFSGetFriendsSteamLevels::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFSGetFriendsSteamLevels_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientFSGetFriendsSteamLevels_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientFSGetFriendsSteamLevelsResponse_Friend_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientFSGetFriendsSteamLevelsResponse_Friend_default_instance_;
    new (ptr) ::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFSGetFriendsSteamLevelsResponse_Friend_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientFSGetFriendsSteamLevelsResponse_Friend_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientFSGetFriendsSteamLevelsResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientFSGetFriendsSteamLevelsResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientFSGetFriendsSteamLevelsResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientFSGetFriendsSteamLevelsResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientFSGetFriendsSteamLevelsResponse_Friend_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientEmailAddrInfo_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientEmailAddrInfo_default_instance_;
    new (ptr) ::proto::steam::CMsgClientEmailAddrInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientEmailAddrInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientEmailAddrInfo_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientEmailAddrInfo_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgCREEnumeratePublishedFiles_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgCREEnumeratePublishedFiles_default_instance_;
    new (ptr) ::proto::steam::CMsgCREEnumeratePublishedFiles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgCREEnumeratePublishedFiles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREEnumeratePublishedFiles_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREEnumeratePublishedFiles_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgCREEnumeratePublishedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId_default_instance_;
    new (ptr) ::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREEnumeratePublishedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgCREEnumeratePublishedFilesResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgCREEnumeratePublishedFilesResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgCREEnumeratePublishedFilesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgCREEnumeratePublishedFilesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgCREEnumeratePublishedFilesResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgCREEnumeratePublishedFilesResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgCREItemVoteSummary_PublishedFileId_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgCREItemVoteSummary_PublishedFileId_default_instance_;
    new (ptr) ::proto::steam::CMsgCREItemVoteSummary_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgCREItemVoteSummary_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREItemVoteSummary_PublishedFileId_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREItemVoteSummary_PublishedFileId_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgCREItemVoteSummary_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgCREItemVoteSummary_default_instance_;
    new (ptr) ::proto::steam::CMsgCREItemVoteSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgCREItemVoteSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgCREItemVoteSummary_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgCREItemVoteSummary_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgCREItemVoteSummary_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgCREItemVoteSummaryResponse_ItemVoteSummary_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgCREItemVoteSummaryResponse_ItemVoteSummary_default_instance_;
    new (ptr) ::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREItemVoteSummaryResponse_ItemVoteSummary_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREItemVoteSummaryResponse_ItemVoteSummary_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgCREItemVoteSummaryResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgCREItemVoteSummaryResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgCREItemVoteSummaryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgCREItemVoteSummaryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgCREItemVoteSummaryResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgCREItemVoteSummaryResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgCREItemVoteSummaryResponse_ItemVoteSummary_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgCREUpdateUserPublishedItemVote_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgCREUpdateUserPublishedItemVote_default_instance_;
    new (ptr) ::proto::steam::CMsgCREUpdateUserPublishedItemVote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgCREUpdateUserPublishedItemVote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREUpdateUserPublishedItemVote_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREUpdateUserPublishedItemVote_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgCREUpdateUserPublishedItemVoteResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgCREUpdateUserPublishedItemVoteResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgCREUpdateUserPublishedItemVoteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgCREUpdateUserPublishedItemVoteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREUpdateUserPublishedItemVoteResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREUpdateUserPublishedItemVoteResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_default_instance_;
    new (ptr) ::proto::steam::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgCREGetUserPublishedItemVoteDetails_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgCREGetUserPublishedItemVoteDetails_default_instance_;
    new (ptr) ::proto::steam::CMsgCREGetUserPublishedItemVoteDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgCREGetUserPublishedItemVoteDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgCREGetUserPublishedItemVoteDetails_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgCREGetUserPublishedItemVoteDetails_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_default_instance_;
    new (ptr) ::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgCREGetUserPublishedItemVoteDetailsResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgCREGetUserPublishedItemVoteDetailsResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgCREGetUserPublishedItemVoteDetailsResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgGameServerPingSample_Sample_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgGameServerPingSample_Sample_default_instance_;
    new (ptr) ::proto::steam::CMsgGameServerPingSample_Sample();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgGameServerPingSample_Sample::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgGameServerPingSample_Sample_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgGameServerPingSample_Sample_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgGameServerPingSample_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgGameServerPingSample_default_instance_;
    new (ptr) ::proto::steam::CMsgGameServerPingSample();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgGameServerPingSample::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgGameServerPingSample_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgGameServerPingSample_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgGameServerPingSample_Sample_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgFSGetFollowerCount_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgFSGetFollowerCount_default_instance_;
    new (ptr) ::proto::steam::CMsgFSGetFollowerCount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgFSGetFollowerCount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFSGetFollowerCount_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFSGetFollowerCount_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgFSGetFollowerCountResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgFSGetFollowerCountResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgFSGetFollowerCountResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgFSGetFollowerCountResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFSGetFollowerCountResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFSGetFollowerCountResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgFSGetIsFollowing_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgFSGetIsFollowing_default_instance_;
    new (ptr) ::proto::steam::CMsgFSGetIsFollowing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgFSGetIsFollowing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFSGetIsFollowing_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFSGetIsFollowing_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgFSGetIsFollowingResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgFSGetIsFollowingResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgFSGetIsFollowingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgFSGetIsFollowingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFSGetIsFollowingResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFSGetIsFollowingResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgFSEnumerateFollowingList_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgFSEnumerateFollowingList_default_instance_;
    new (ptr) ::proto::steam::CMsgFSEnumerateFollowingList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgFSEnumerateFollowingList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFSEnumerateFollowingList_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFSEnumerateFollowingList_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgFSEnumerateFollowingListResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgFSEnumerateFollowingListResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgFSEnumerateFollowingListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgFSEnumerateFollowingListResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgFSEnumerateFollowingListResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgFSEnumerateFollowingListResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgDPGetNumberOfCurrentPlayers_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgDPGetNumberOfCurrentPlayers_default_instance_;
    new (ptr) ::proto::steam::CMsgDPGetNumberOfCurrentPlayers();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgDPGetNumberOfCurrentPlayers::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDPGetNumberOfCurrentPlayers_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDPGetNumberOfCurrentPlayers_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgDPGetNumberOfCurrentPlayersResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgDPGetNumberOfCurrentPlayersResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgDPGetNumberOfCurrentPlayersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgDPGetNumberOfCurrentPlayersResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgDPGetNumberOfCurrentPlayersResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgDPGetNumberOfCurrentPlayersResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientFriendUserStatusPublished_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientFriendUserStatusPublished_default_instance_;
    new (ptr) ::proto::steam::CMsgClientFriendUserStatusPublished();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientFriendUserStatusPublished::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientFriendUserStatusPublished_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientFriendUserStatusPublished_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientServiceMethod_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientServiceMethod_default_instance_;
    new (ptr) ::proto::steam::CMsgClientServiceMethod();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientServiceMethod::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientServiceMethod_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientServiceMethod_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientServiceMethodResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientServiceMethodResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientServiceMethodResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientServiceMethodResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientServiceMethodResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientServiceMethodResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUIMode_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUIMode_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUIMode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUIMode::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUIMode_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUIMode_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientVanityURLChangedNotification_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientVanityURLChangedNotification_default_instance_;
    new (ptr) ::proto::steam::CMsgClientVanityURLChangedNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientVanityURLChangedNotification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientVanityURLChangedNotification_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientVanityURLChangedNotification_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientAuthorizeLocalDeviceRequest_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientAuthorizeLocalDeviceRequest_default_instance_;
    new (ptr) ::proto::steam::CMsgClientAuthorizeLocalDeviceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientAuthorizeLocalDeviceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAuthorizeLocalDeviceRequest_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAuthorizeLocalDeviceRequest_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientAuthorizeLocalDevice_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientAuthorizeLocalDevice_default_instance_;
    new (ptr) ::proto::steam::CMsgClientAuthorizeLocalDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientAuthorizeLocalDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAuthorizeLocalDevice_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAuthorizeLocalDevice_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientAuthorizeLocalDeviceNotification_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientAuthorizeLocalDeviceNotification_default_instance_;
    new (ptr) ::proto::steam::CMsgClientAuthorizeLocalDeviceNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientAuthorizeLocalDeviceNotification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientAuthorizeLocalDeviceNotification_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientAuthorizeLocalDeviceNotification_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientDeauthorizeDeviceRequest_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientDeauthorizeDeviceRequest_default_instance_;
    new (ptr) ::proto::steam::CMsgClientDeauthorizeDeviceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientDeauthorizeDeviceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDeauthorizeDeviceRequest_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDeauthorizeDeviceRequest_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientDeauthorizeDevice_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientDeauthorizeDevice_default_instance_;
    new (ptr) ::proto::steam::CMsgClientDeauthorizeDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientDeauthorizeDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientDeauthorizeDevice_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientDeauthorizeDevice_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUseLocalDeviceAuthorizations_DeviceToken_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUseLocalDeviceAuthorizations_DeviceToken_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientUseLocalDeviceAuthorizations_DeviceToken_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientUseLocalDeviceAuthorizations_DeviceToken_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientUseLocalDeviceAuthorizations_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientUseLocalDeviceAuthorizations_default_instance_;
    new (ptr) ::proto::steam::CMsgClientUseLocalDeviceAuthorizations();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientUseLocalDeviceAuthorizations::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientUseLocalDeviceAuthorizations_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientUseLocalDeviceAuthorizations_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientUseLocalDeviceAuthorizations_DeviceToken_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientGetAuthorizedDevices_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientGetAuthorizedDevices_default_instance_;
    new (ptr) ::proto::steam::CMsgClientGetAuthorizedDevices();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientGetAuthorizedDevices::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetAuthorizedDevices_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetAuthorizedDevices_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_default_instance_;
    new (ptr) ::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientGetAuthorizedDevicesResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientGetAuthorizedDevicesResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientGetAuthorizedDevicesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientGetAuthorizedDevicesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientGetAuthorizedDevicesResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientGetAuthorizedDevicesResponse_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientSharedLibraryLockStatus_LockedLibrary_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientSharedLibraryLockStatus_LockedLibrary_default_instance_;
    new (ptr) ::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientSharedLibraryLockStatus_LockedLibrary_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientSharedLibraryLockStatus_LockedLibrary_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientSharedLibraryLockStatus_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientSharedLibraryLockStatus_default_instance_;
    new (ptr) ::proto::steam::CMsgClientSharedLibraryLockStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientSharedLibraryLockStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientSharedLibraryLockStatus_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientSharedLibraryLockStatus_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientSharedLibraryLockStatus_LockedLibrary_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientSharedLibraryStopPlaying_StopApp_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientSharedLibraryStopPlaying_StopApp_default_instance_;
    new (ptr) ::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientSharedLibraryStopPlaying_StopApp_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientSharedLibraryStopPlaying_StopApp_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientSharedLibraryStopPlaying_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientSharedLibraryStopPlaying_default_instance_;
    new (ptr) ::proto::steam::CMsgClientSharedLibraryStopPlaying();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientSharedLibraryStopPlaying::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CMsgClientSharedLibraryStopPlaying_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCMsgClientSharedLibraryStopPlaying_steammessages_5fclientserver_5f2_2eproto}, {
      &scc_info_CMsgClientSharedLibraryStopPlaying_StopApp_steammessages_5fclientserver_5f2_2eproto.base,}};

static void InitDefaultsCMsgClientServiceCall_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientServiceCall_default_instance_;
    new (ptr) ::proto::steam::CMsgClientServiceCall();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientServiceCall::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientServiceCall_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientServiceCall_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientServiceModule_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientServiceModule_default_instance_;
    new (ptr) ::proto::steam::CMsgClientServiceModule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientServiceModule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientServiceModule_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientServiceModule_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientServiceCallResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientServiceCallResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientServiceCallResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientServiceCallResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientServiceCallResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientServiceCallResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgAMUnlockStreaming_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgAMUnlockStreaming_default_instance_;
    new (ptr) ::proto::steam::CMsgAMUnlockStreaming();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgAMUnlockStreaming::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgAMUnlockStreaming_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgAMUnlockStreaming_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgAMUnlockStreamingResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgAMUnlockStreamingResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgAMUnlockStreamingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgAMUnlockStreamingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgAMUnlockStreamingResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgAMUnlockStreamingResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgAMUnlockHEVC_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgAMUnlockHEVC_default_instance_;
    new (ptr) ::proto::steam::CMsgAMUnlockHEVC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgAMUnlockHEVC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgAMUnlockHEVC_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgAMUnlockHEVC_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgAMUnlockHEVCResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgAMUnlockHEVCResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgAMUnlockHEVCResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgAMUnlockHEVCResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgAMUnlockHEVCResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgAMUnlockHEVCResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientPlayingSessionState_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientPlayingSessionState_default_instance_;
    new (ptr) ::proto::steam::CMsgClientPlayingSessionState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientPlayingSessionState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientPlayingSessionState_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientPlayingSessionState_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientKickPlayingSession_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientKickPlayingSession_default_instance_;
    new (ptr) ::proto::steam::CMsgClientKickPlayingSession();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientKickPlayingSession::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientKickPlayingSession_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientKickPlayingSession_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientVoiceCallPreAuthorize_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientVoiceCallPreAuthorize_default_instance_;
    new (ptr) ::proto::steam::CMsgClientVoiceCallPreAuthorize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientVoiceCallPreAuthorize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientVoiceCallPreAuthorize_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientVoiceCallPreAuthorize_steammessages_5fclientserver_5f2_2eproto}, {}};

static void InitDefaultsCMsgClientVoiceCallPreAuthorizeResponse_steammessages_5fclientserver_5f2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CMsgClientVoiceCallPreAuthorizeResponse_default_instance_;
    new (ptr) ::proto::steam::CMsgClientVoiceCallPreAuthorizeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CMsgClientVoiceCallPreAuthorizeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CMsgClientVoiceCallPreAuthorizeResponse_steammessages_5fclientserver_5f2_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCMsgClientVoiceCallPreAuthorizeResponse_steammessages_5fclientserver_5f2_2eproto}, {}};

void InitDefaults_steammessages_5fclientserver_5f2_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMAddScreenshot_Tag_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMAddScreenshot_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMAddScreenshotResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMDeleteScreenshot_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMDeleteScreenshotResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMPublishFile_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMPublishFileResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMUpdatePublishedFile_KeyValueTag_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMUpdatePublishedFile_AdditionalPreview_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMUpdatePublishedFile_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMUpdatePublishedFileResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMDeletePublishedFile_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMDeletePublishedFileResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserPublishedFiles_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserSubscribedFiles_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMPublishedFileSubscribed_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMPublishedFileUnsubscribed_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMPublishedFileDeleted_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMPublishedFileUpdated_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientWorkshopItemChangesRequest_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientWorkshopItemChangesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientWorkshopItemInfoRequest_WorkshopItem_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientWorkshopItemInfoRequest_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientWorkshopItemInfoResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMGetPublishedFilesForUser_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMGetPublishedFilesForUserResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMSetUserPublishedFileAction_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMSetUserPublishedFileActionResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumeratePublishedFilesByUserAction_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientScreenshotsChanged_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUpdateUserGameInfo_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRichPresenceUpload_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRichPresenceRequest_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRichPresenceInfo_RichPresence_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRichPresenceInfo_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientCheckFileSignature_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientCheckFileSignatureResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientReadMachineAuth_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientReadMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUpdateMachineAuth_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUpdateMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestMachineAuth_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRegisterKey_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPurchaseResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientActivateOEMLicense_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRegisterOEMMachine_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRegisterOEMMachineResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPurchaseWithMachineID_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgTrading_InitiateTradeRequest_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgTrading_InitiateTradeResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgTrading_CancelTradeRequest_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgTrading_StartSession_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetCDNAuthToken_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetDepotDecryptionKey_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetDepotDecryptionKeyResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientCheckAppBetaPassword_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientCheckAppBetaPasswordResponse_BetaPassword_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientCheckAppBetaPasswordResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUpdateAppJobReport_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDPContentStatsReport_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetCDNAuthTokenResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDownloadRateStatistics_StatsInfo_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDownloadRateStatistics_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestAccountData_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestAccountDataResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUGSGetGlobalStats_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_Stat_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUGSGetGlobalStatsResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGameServerData_Player_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGameServerData_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGameServerRemove_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGMSServerQuery_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGMSClientServerQueryResponse_Server_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGMSClientServerQueryResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGameServerOutOfDate_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRedeemGuestPass_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRedeemGuestPassResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetClanActivityCounts_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetClanActivityCountsResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientOGSReportString_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientOGSReportBug_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSAssociateWithClan_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSAssociateWithClanResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSComputeNewPlayerCompatibility_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGSComputeNewPlayerCompatibilityResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientSentLogs_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGCClient_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestFreeLicense_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestFreeLicenseResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDRMDownloadRequestWithCrashData_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDRMDownloadResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDRMFinalResult_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDPCheckSpecialSurvey_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDPCheckSpecialSurveyResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDPSendSpecialSurveyResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDPSendSpecialSurveyResponseReply_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestForgottenPasswordEmail_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestForgottenPasswordEmailResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientItemAnnouncements_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestItemAnnouncements_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUserNotifications_Notification_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUserNotifications_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientCommentNotifications_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestCommentNotifications_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientOfflineMessageNotification_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientRequestOfflineMessageCount_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientChatGetFriendMessageHistory_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientChatGetFriendMessageHistoryResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientChatGetFriendMessageHistoryForOfflineMessages_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFSGetFriendsSteamLevels_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFSGetFriendsSteamLevelsResponse_Friend_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFSGetFriendsSteamLevelsResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientEmailAddrInfo_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREEnumeratePublishedFiles_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREEnumeratePublishedFilesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREItemVoteSummary_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREItemVoteSummary_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREItemVoteSummaryResponse_ItemVoteSummary_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREItemVoteSummaryResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREUpdateUserPublishedItemVote_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREUpdateUserPublishedItemVoteResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREGetUserPublishedItemVoteDetails_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGameServerPingSample_Sample_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgGameServerPingSample_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFSGetFollowerCount_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFSGetFollowerCountResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFSGetIsFollowing_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFSGetIsFollowingResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFSEnumerateFollowingList_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgFSEnumerateFollowingListResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDPGetNumberOfCurrentPlayers_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgDPGetNumberOfCurrentPlayersResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientFriendUserStatusPublished_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientServiceMethod_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientServiceMethodResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUIMode_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientVanityURLChangedNotification_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAuthorizeLocalDeviceRequest_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAuthorizeLocalDevice_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientAuthorizeLocalDeviceNotification_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDeauthorizeDeviceRequest_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientDeauthorizeDevice_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUseLocalDeviceAuthorizations_DeviceToken_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientUseLocalDeviceAuthorizations_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetAuthorizedDevices_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientGetAuthorizedDevicesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientSharedLibraryLockStatus_LockedLibrary_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientSharedLibraryLockStatus_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientSharedLibraryStopPlaying_StopApp_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientSharedLibraryStopPlaying_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientServiceCall_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientServiceModule_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientServiceCallResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgAMUnlockStreaming_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgAMUnlockStreamingResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgAMUnlockHEVC_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgAMUnlockHEVCResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientPlayingSessionState_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientKickPlayingSession_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientVoiceCallPreAuthorize_steammessages_5fclientserver_5f2_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CMsgClientVoiceCallPreAuthorizeResponse_steammessages_5fclientserver_5f2_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_steammessages_5fclientserver_5f2_2eproto[181];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_steammessages_5fclientserver_5f2_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_steammessages_5fclientserver_5f2_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_steammessages_5fclientserver_5f2_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot_Tag, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot_Tag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot_Tag, tag_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot_Tag, tag_value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, appid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, filename_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, thumbname_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, vr_filename_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, rtime32_created_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, width_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, height_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, permissions_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, caption_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, shortcut_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, tag_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, tagged_steamid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, spoiler_tag_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshot, tagged_publishedfileid_),
  5,
  0,
  1,
  4,
  6,
  7,
  8,
  9,
  2,
  3,
  ~0u,
  ~0u,
  10,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshotResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshotResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMAddScreenshotResponse, screenshotid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMDeleteScreenshot, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMDeleteScreenshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMDeleteScreenshot, screenshotid_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMDeleteScreenshotResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMDeleteScreenshotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMDeleteScreenshotResponse, eresult_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, file_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, preview_file_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, consumer_app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, title_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, description_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, tags_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, workshop_file_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, visibility_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, file_type_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, url_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, video_provider_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, video_account_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, video_identifier_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFile, in_progress_),
  7,
  0,
  1,
  8,
  2,
  3,
  ~0u,
  11,
  9,
  10,
  4,
  13,
  5,
  6,
  12,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFileResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFileResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFileResponse, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishFileResponse, needs_workshop_legal_agreement_acceptance_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag, key_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, original_file_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, internal_file_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, videoid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, preview_type_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, update_index_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, file_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, preview_file_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, title_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, description_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, tags_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, visibility_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, update_file_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, update_preview_file_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, update_title_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, update_description_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, update_tags_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, update_visibility_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, change_description_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, update_url_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, url_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, update_content_manifest_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, content_manifest_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, metadata_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, update_metadata_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, language_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, removed_kvtags_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, kvtags_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, previews_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, previews_to_remove_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFile, clear_in_progress_),
  8,
  7,
  0,
  1,
  2,
  3,
  ~0u,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  4,
  16,
  5,
  17,
  18,
  6,
  20,
  19,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  21,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFileResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFileResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMUpdatePublishedFileResponse, needs_workshop_legal_agreement_acceptance_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMDeletePublishedFile, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMDeletePublishedFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMDeletePublishedFile, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMDeletePublishedFile, app_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMDeletePublishedFileResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMDeletePublishedFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMDeletePublishedFileResponse, eresult_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserPublishedFiles, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserPublishedFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserPublishedFiles, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserPublishedFiles, start_index_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserPublishedFiles, sort_order_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId, published_file_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse, published_files_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse, total_results_),
  1,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFiles, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFiles, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFiles, start_index_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFiles, list_type_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFiles, matching_file_type_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFiles, count_),
  0,
  1,
  3,
  2,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId, rtime32_subscribed_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse, subscribed_files_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse, total_results_),
  1,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, start_index_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, start_time_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, rtime32_subscribed_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, appid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, file_hcontent_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, file_size_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, rtime32_last_updated_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, is_depot_content_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, subscribed_files_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, total_results_),
  1,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileSubscribed, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileSubscribed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileSubscribed, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileSubscribed, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileSubscribed, file_hcontent_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileSubscribed, file_size_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileSubscribed, rtime_subscribed_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileSubscribed, is_depot_content_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileSubscribed, rtime_updated_),
  0,
  2,
  1,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileUnsubscribed, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileUnsubscribed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileUnsubscribed, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileUnsubscribed, app_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileDeleted, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileDeleted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileDeleted, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileDeleted, app_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileUpdated, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileUpdated, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileUpdated, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileUpdated, time_updated_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileUpdated, hcontent_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileUpdated, file_size_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMPublishedFileUpdated, is_depot_content_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemChangesRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemChangesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemChangesRequest, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemChangesRequest, last_time_updated_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemChangesRequest, num_items_needed_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, time_updated_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, manifest_id_),
  0,
  2,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemChangesResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemChangesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemChangesResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemChangesResponse, update_time_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemChangesResponse, workshop_items_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem, time_updated_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoRequest, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoRequest, last_time_updated_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoRequest, workshop_items_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, time_updated_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, manifest_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, is_legacy_),
  0,
  2,
  1,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoResponse, update_time_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoResponse, workshop_items_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientWorkshopItemInfoResponse, private_items_),
  1,
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMGetPublishedFilesForUser, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMGetPublishedFilesForUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMGetPublishedFilesForUser, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMGetPublishedFilesForUser, creator_steam_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMGetPublishedFilesForUser, required_tags_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMGetPublishedFilesForUser, excluded_tags_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMGetPublishedFilesForUser, start_index_),
  1,
  0,
  ~0u,
  ~0u,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId, published_file_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse, published_files_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse, total_results_),
  1,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMSetUserPublishedFileAction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMSetUserPublishedFileAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMSetUserPublishedFileAction, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMSetUserPublishedFileAction, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMSetUserPublishedFileAction, action_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMSetUserPublishedFileActionResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMSetUserPublishedFileActionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMSetUserPublishedFileActionResponse, eresult_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserAction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserAction, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserAction, start_index_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserAction, action_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, rtime_time_stamp_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, published_files_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, total_results_),
  1,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientScreenshotsChanged, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientScreenshotsChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateUserGameInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateUserGameInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateUserGameInfo, steamid_idgs_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateUserGameInfo, gameid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateUserGameInfo, game_ip_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateUserGameInfo, game_port_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateUserGameInfo, token_),
  1,
  2,
  3,
  4,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRichPresenceUpload, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRichPresenceUpload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRichPresenceUpload, rich_presence_kv_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRichPresenceUpload, steamid_broadcast_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRichPresenceRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRichPresenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRichPresenceRequest, steamid_request_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRichPresenceInfo_RichPresence, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRichPresenceInfo_RichPresence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRichPresenceInfo_RichPresence, steamid_user_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRichPresenceInfo_RichPresence, rich_presence_kv_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRichPresenceInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRichPresenceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRichPresenceInfo, rich_presence_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckFileSignature, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckFileSignature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckFileSignature, app_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckFileSignatureResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckFileSignatureResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckFileSignatureResponse, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckFileSignatureResponse, pid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckFileSignatureResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckFileSignatureResponse, filename_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckFileSignatureResponse, esignatureresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckFileSignatureResponse, sha_file_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckFileSignatureResponse, signatureheader_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckFileSignatureResponse, filesize_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckFileSignatureResponse, getlasterror_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckFileSignatureResponse, evalvesignaturecheckdetail_),
  3,
  4,
  5,
  0,
  6,
  1,
  2,
  7,
  8,
  9,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuth, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuth, filename_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuth, offset_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuth, cubtoread_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuthResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuthResponse, filename_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuthResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuthResponse, filesize_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuthResponse, sha_file_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuthResponse, getlasterror_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuthResponse, offset_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuthResponse, cubread_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuthResponse, bytes_read_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientReadMachineAuthResponse, filename_sentry_),
  0,
  4,
  5,
  1,
  6,
  7,
  8,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuth, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuth, filename_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuth, offset_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuth, cubtowrite_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuth, bytes_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuth, otp_type_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuth, otp_identifier_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuth, otp_sharedsecret_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuth, otp_timedrift_),
  0,
  4,
  5,
  1,
  6,
  2,
  3,
  7,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuthResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuthResponse, filename_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuthResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuthResponse, filesize_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuthResponse, sha_file_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuthResponse, getlasterror_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuthResponse, offset_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuthResponse, cubwrote_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuthResponse, otp_type_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuthResponse, otp_value_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateMachineAuthResponse, otp_identifier_),
  0,
  3,
  4,
  1,
  5,
  6,
  7,
  8,
  9,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuth, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuth, filename_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuth, eresult_sentryfile_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuth, filesize_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuth, sha_sentryfile_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuth, lock_account_action_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuth, otp_type_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuth, otp_identifier_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuth, otp_sharedsecret_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuth, otp_value_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuth, machine_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuth, machine_name_userchosen_),
  0,
  6,
  7,
  1,
  8,
  9,
  2,
  3,
  10,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuthResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestMachineAuthResponse, eresult_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRegisterKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRegisterKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRegisterKey, key_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientPurchaseResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientPurchaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientPurchaseResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientPurchaseResponse, purchase_result_details_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientPurchaseResponse, purchase_receipt_info_),
  2,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientActivateOEMLicense, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientActivateOEMLicense, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientActivateOEMLicense, bios_manufacturer_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientActivateOEMLicense, bios_serialnumber_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientActivateOEMLicense, license_file_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientActivateOEMLicense, mainboard_manufacturer_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientActivateOEMLicense, mainboard_product_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientActivateOEMLicense, mainboard_serialnumber_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRegisterOEMMachine, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRegisterOEMMachine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRegisterOEMMachine, oem_register_file_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRegisterOEMMachineResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRegisterOEMMachineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRegisterOEMMachineResponse, eresult_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientPurchaseWithMachineID, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientPurchaseWithMachineID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientPurchaseWithMachineID, package_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientPurchaseWithMachineID, machine_info_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeRequest, trade_request_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeRequest, other_steamid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeRequest, other_name_),
  2,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeResponse, response_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeResponse, trade_request_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeResponse, other_steamid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeResponse, steamguard_required_days_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeResponse, new_device_cooldown_days_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeResponse, default_password_reset_probation_days_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeResponse, password_reset_probation_days_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeResponse, default_email_change_probation_days_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_InitiateTradeResponse, email_change_probation_days_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_CancelTradeRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_CancelTradeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_CancelTradeRequest, other_steamid_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_StartSession, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_StartSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgTrading_StartSession, other_steamid_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetCDNAuthToken, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetCDNAuthToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetCDNAuthToken, depot_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetCDNAuthToken, host_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetCDNAuthToken, app_id_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetDepotDecryptionKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetDepotDecryptionKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetDepotDecryptionKey, depot_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetDepotDecryptionKey, app_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetDepotDecryptionKeyResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetDepotDecryptionKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetDepotDecryptionKeyResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetDepotDecryptionKeyResponse, depot_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetDepotDecryptionKeyResponse, depot_encryption_key_),
  2,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckAppBetaPassword, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckAppBetaPassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckAppBetaPassword, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckAppBetaPassword, betapassword_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword, betaname_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword, betapassword_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckAppBetaPasswordResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckAppBetaPasswordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckAppBetaPasswordResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCheckAppBetaPasswordResponse, betapasswords_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, depot_ids_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, app_state_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, job_app_error_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, error_details_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, job_duration_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, files_validation_failed_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, job_bytes_downloaded_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, job_bytes_staged_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, bytes_comitted_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, start_app_state_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, stats_machine_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, branch_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, total_bytes_downloaded_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, total_bytes_staged_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, total_bytes_restored_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, is_borrowed_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, is_free_weekend_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, total_bytes_legacy_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, total_bytes_patched_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUpdateAppJobReport, total_bytes_saved_),
  2,
  ~0u,
  3,
  4,
  0,
  5,
  8,
  6,
  7,
  10,
  9,
  11,
  1,
  12,
  13,
  14,
  18,
  19,
  15,
  16,
  17,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPContentStatsReport, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPContentStatsReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPContentStatsReport, stats_machine_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPContentStatsReport, country_code_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPContentStatsReport, os_type_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPContentStatsReport, language_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPContentStatsReport, num_install_folders_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPContentStatsReport, num_installed_games_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPContentStatsReport, size_installed_games_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetCDNAuthTokenResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetCDNAuthTokenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetCDNAuthTokenResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetCDNAuthTokenResponse, token_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetCDNAuthTokenResponse, expiration_time_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDownloadRateStatistics_StatsInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDownloadRateStatistics_StatsInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDownloadRateStatistics_StatsInfo, source_type_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDownloadRateStatistics_StatsInfo, source_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDownloadRateStatistics_StatsInfo, seconds_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDownloadRateStatistics_StatsInfo, bytes_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDownloadRateStatistics_StatsInfo, host_name_),
  1,
  2,
  4,
  3,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDownloadRateStatistics, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDownloadRateStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDownloadRateStatistics, cell_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDownloadRateStatistics, stats_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestAccountData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestAccountData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestAccountData, account_or_email_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestAccountData, action_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestAccountDataResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestAccountDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestAccountDataResponse, action_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestAccountDataResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestAccountDataResponse, account_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestAccountDataResponse, ct_matches_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestAccountDataResponse, account_name_suggestion1_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestAccountDataResponse, account_name_suggestion2_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestAccountDataResponse, account_name_suggestion3_),
  4,
  5,
  0,
  6,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStats, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStats, gameid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStats, history_days_requested_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStats, time_last_requested_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStats, first_day_cached_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStats, days_cached_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat, stat_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat, data_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day, day_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day, stats_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStatsResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStatsResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStatsResponse, timestamp_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStatsResponse, day_current_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUGSGetGlobalStatsResponse, days_),
  2,
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData_Player, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData_Player, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData_Player, steam_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, steam_id_gs_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, ip_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, query_port_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, game_port_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, sourcetv_port_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, gamedir_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, version_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, product_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, region_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, players_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, max_players_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, bot_count_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, password_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, secure_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, dedicated_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, os_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, game_data_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, game_data_version_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, game_type_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerData, map_),
  9,
  10,
  11,
  12,
  13,
  8,
  14,
  0,
  1,
  2,
  3,
  ~0u,
  15,
  16,
  17,
  18,
  19,
  4,
  5,
  20,
  6,
  7,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerRemove, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerRemove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerRemove, steam_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerRemove, ip_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerRemove, query_port_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGMSServerQuery, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGMSServerQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGMSServerQuery, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGMSServerQuery, geo_location_ip_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGMSServerQuery, region_code_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGMSServerQuery, filter_text_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGMSServerQuery, max_servers_),
  1,
  2,
  3,
  0,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGMSClientServerQueryResponse_Server, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGMSClientServerQueryResponse_Server, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGMSClientServerQueryResponse_Server, server_ip_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGMSClientServerQueryResponse_Server, server_port_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGMSClientServerQueryResponse_Server, auth_players_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGMSClientServerQueryResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGMSClientServerQueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGMSClientServerQueryResponse, servers_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGMSClientServerQueryResponse, error_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerOutOfDate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerOutOfDate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerOutOfDate, steam_id_gs_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerOutOfDate, reject_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerOutOfDate, message_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRedeemGuestPass, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRedeemGuestPass, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRedeemGuestPass, guest_pass_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRedeemGuestPassResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRedeemGuestPassResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRedeemGuestPassResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRedeemGuestPassResponse, package_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRedeemGuestPassResponse, must_own_appid_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetClanActivityCounts, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetClanActivityCounts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetClanActivityCounts, steamid_clans_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetClanActivityCountsResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetClanActivityCountsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetClanActivityCountsResponse, eresult_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOGSReportString, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOGSReportString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOGSReportString, accumulated_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOGSReportString, sessionid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOGSReportString, severity_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOGSReportString, formatter_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOGSReportString, varargs_),
  3,
  2,
  4,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOGSReportBug, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOGSReportBug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOGSReportBug, sessionid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOGSReportBug, bugtext_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOGSReportBug, screenshot_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSAssociateWithClan, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSAssociateWithClan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSAssociateWithClan, steam_id_clan_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSAssociateWithClanResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSAssociateWithClanResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSAssociateWithClanResponse, steam_id_clan_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSAssociateWithClanResponse, eresult_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSComputeNewPlayerCompatibility, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSComputeNewPlayerCompatibility, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSComputeNewPlayerCompatibility, steam_id_candidate_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSComputeNewPlayerCompatibilityResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSComputeNewPlayerCompatibilityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSComputeNewPlayerCompatibilityResponse, steam_id_candidate_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSComputeNewPlayerCompatibilityResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSComputeNewPlayerCompatibilityResponse, is_clan_member_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSComputeNewPlayerCompatibilityResponse, ct_dont_like_you_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSComputeNewPlayerCompatibilityResponse, ct_you_dont_like_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGSComputeNewPlayerCompatibilityResponse, ct_clanmembers_dont_like_you_),
  0,
  5,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSentLogs, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSentLogs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGCClient, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGCClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGCClient, appid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGCClient, msgtype_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGCClient, payload_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGCClient, steamid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGCClient, gcname_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGCClient, ip_),
  2,
  3,
  0,
  4,
  1,
  5,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestFreeLicense, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestFreeLicense, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestFreeLicense, appids_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestFreeLicenseResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestFreeLicenseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestFreeLicenseResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestFreeLicenseResponse, granted_packageids_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestFreeLicenseResponse, granted_appids_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadRequestWithCrashData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadRequestWithCrashData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadRequestWithCrashData, download_flags_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadRequestWithCrashData, download_types_known_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadRequestWithCrashData, guid_drm_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadRequestWithCrashData, guid_split_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadRequestWithCrashData, guid_merge_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadRequestWithCrashData, module_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadRequestWithCrashData, module_path_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadRequestWithCrashData, crash_data_),
  6,
  7,
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadResponse, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadResponse, blob_download_type_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadResponse, merge_guid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadResponse, download_file_dfs_ip_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadResponse, download_file_dfs_port_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadResponse, download_file_url_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMDownloadResponse, module_path_),
  7,
  3,
  4,
  0,
  5,
  6,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMFinalResult, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMFinalResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMFinalResult, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMFinalResult, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMFinalResult, blob_download_type_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMFinalResult, error_detail_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMFinalResult, merge_guid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMFinalResult, download_file_dfs_ip_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMFinalResult, download_file_dfs_port_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDRMFinalResult, download_file_url_),
  7,
  2,
  3,
  4,
  0,
  5,
  6,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPCheckSpecialSurvey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPCheckSpecialSurvey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPCheckSpecialSurvey, survey_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPCheckSpecialSurveyResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPCheckSpecialSurveyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPCheckSpecialSurveyResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPCheckSpecialSurveyResponse, state_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPCheckSpecialSurveyResponse, name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPCheckSpecialSurveyResponse, custom_url_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPCheckSpecialSurveyResponse, include_software_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPCheckSpecialSurveyResponse, token_),
  5,
  3,
  0,
  1,
  4,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPSendSpecialSurveyResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPSendSpecialSurveyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPSendSpecialSurveyResponse, survey_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPSendSpecialSurveyResponse, data_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPSendSpecialSurveyResponseReply, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPSendSpecialSurveyResponseReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPSendSpecialSurveyResponseReply, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDPSendSpecialSurveyResponseReply, token_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestForgottenPasswordEmail, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestForgottenPasswordEmail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestForgottenPasswordEmail, account_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestForgottenPasswordEmail, password_tried_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestForgottenPasswordEmailResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestForgottenPasswordEmailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestForgottenPasswordEmailResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestForgottenPasswordEmailResponse, use_secret_question_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientItemAnnouncements, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientItemAnnouncements, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientItemAnnouncements, count_new_items_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestItemAnnouncements, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestItemAnnouncements, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUserNotifications_Notification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUserNotifications_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUserNotifications_Notification, user_notification_type_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUserNotifications_Notification, count_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUserNotifications, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUserNotifications, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUserNotifications, notifications_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCommentNotifications, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCommentNotifications, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCommentNotifications, count_new_comments_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCommentNotifications, count_new_comments_owner_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientCommentNotifications, count_new_comments_subscriptions_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestCommentNotifications, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestCommentNotifications, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOfflineMessageNotification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOfflineMessageNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOfflineMessageNotification, offline_messages_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientOfflineMessageNotification, friends_with_offline_messages_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestOfflineMessageCount, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientRequestOfflineMessageCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistory, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistory, steamid_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, accountid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, timestamp_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, message_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, unread_),
  1,
  2,
  0,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse, steamid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse, success_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse, messages_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistoryForOfflineMessages, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientChatGetFriendMessageHistoryForOfflineMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientFSGetFriendsSteamLevels, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientFSGetFriendsSteamLevels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientFSGetFriendsSteamLevels, accountids_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend, accountid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend, level_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse, friends_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientEmailAddrInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientEmailAddrInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientEmailAddrInfo, email_address_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientEmailAddrInfo, email_is_validated_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientEmailAddrInfo, email_validation_changed_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientEmailAddrInfo, credential_change_requires_code_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientEmailAddrInfo, password_or_secretqa_change_requires_code_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientEmailAddrInfo, remind_user_about_email_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFiles, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFiles, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFiles, query_type_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFiles, start_index_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFiles, days_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFiles, count_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFiles, tags_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFiles, user_tags_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFiles, matching_file_type_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  ~0u,
  5,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, votes_for_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, votes_against_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, reports_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, score_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFilesResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFilesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFilesResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFilesResponse, published_files_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREEnumeratePublishedFilesResponse, total_results_),
  1,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummary_PublishedFileId, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummary_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummary_PublishedFileId, published_file_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummary, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummary, published_file_ids_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary, votes_for_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary, votes_against_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary, reports_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary, score_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummaryResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummaryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummaryResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREItemVoteSummaryResponse, item_vote_summaries_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREUpdateUserPublishedItemVote, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREUpdateUserPublishedItemVote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREUpdateUserPublishedItemVote, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREUpdateUserPublishedItemVote, vote_up_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREUpdateUserPublishedItemVoteResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREUpdateUserPublishedItemVoteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREUpdateUserPublishedItemVoteResponse, eresult_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId, published_file_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREGetUserPublishedItemVoteDetails, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREGetUserPublishedItemVoteDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREGetUserPublishedItemVoteDetails, published_file_ids_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail, vote_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse, user_item_vote_details_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerPingSample_Sample, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerPingSample_Sample, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerPingSample_Sample, ip_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerPingSample_Sample, avg_ping_ms_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerPingSample_Sample, stddev_ping_ms_x10_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerPingSample, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerPingSample, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerPingSample, my_ip_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerPingSample, gs_app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgGameServerPingSample, gs_samples_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSGetFollowerCount, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSGetFollowerCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSGetFollowerCount, steam_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSGetFollowerCountResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSGetFollowerCountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSGetFollowerCountResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSGetFollowerCountResponse, count_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSGetIsFollowing, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSGetIsFollowing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSGetIsFollowing, steam_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSGetIsFollowingResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSGetIsFollowingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSGetIsFollowingResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSGetIsFollowingResponse, is_following_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSEnumerateFollowingList, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSEnumerateFollowingList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSEnumerateFollowingList, start_index_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSEnumerateFollowingListResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSEnumerateFollowingListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSEnumerateFollowingListResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSEnumerateFollowingListResponse, total_results_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgFSEnumerateFollowingListResponse, steam_ids_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDPGetNumberOfCurrentPlayers, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDPGetNumberOfCurrentPlayers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDPGetNumberOfCurrentPlayers, appid_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDPGetNumberOfCurrentPlayersResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDPGetNumberOfCurrentPlayersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDPGetNumberOfCurrentPlayersResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgDPGetNumberOfCurrentPlayersResponse, player_count_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientFriendUserStatusPublished, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientFriendUserStatusPublished, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientFriendUserStatusPublished, friend_steamid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientFriendUserStatusPublished, appid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientFriendUserStatusPublished, status_text_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceMethod, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceMethod, method_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceMethod, serialized_method_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceMethod, is_notification_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceMethodResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceMethodResponse, method_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceMethodResponse, serialized_method_response_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUIMode, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUIMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUIMode, uimode_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUIMode, chat_mode_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientVanityURLChangedNotification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientVanityURLChangedNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientVanityURLChangedNotification, vanity_url_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientAuthorizeLocalDeviceRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientAuthorizeLocalDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientAuthorizeLocalDeviceRequest, device_description_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientAuthorizeLocalDeviceRequest, owner_account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientAuthorizeLocalDeviceRequest, local_device_token_),
  0,
  2,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientAuthorizeLocalDevice, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientAuthorizeLocalDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientAuthorizeLocalDevice, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientAuthorizeLocalDevice, owner_account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientAuthorizeLocalDevice, authed_device_token_),
  2,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientAuthorizeLocalDeviceNotification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientAuthorizeLocalDeviceNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientAuthorizeLocalDeviceNotification, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientAuthorizeLocalDeviceNotification, owner_account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientAuthorizeLocalDeviceNotification, local_device_token_),
  2,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDeauthorizeDeviceRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDeauthorizeDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDeauthorizeDeviceRequest, deauthorization_account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDeauthorizeDeviceRequest, deauthorization_device_token_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDeauthorizeDevice, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDeauthorizeDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDeauthorizeDevice, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientDeauthorizeDevice, deauthorization_account_id_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken, owner_account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken, token_id_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUseLocalDeviceAuthorizations, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUseLocalDeviceAuthorizations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUseLocalDeviceAuthorizations, authorization_account_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientUseLocalDeviceAuthorizations, device_tokens_),
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetAuthorizedDevices, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetAuthorizedDevices, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, auth_device_token_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, device_name_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, last_access_time_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, borrower_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, is_pending_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, app_played_),
  1,
  0,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetAuthorizedDevicesResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetAuthorizedDevicesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetAuthorizedDevicesResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientGetAuthorizedDevicesResponse, authorized_device_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary, owner_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary, locked_by_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryLockStatus, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryLockStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryLockStatus, locked_library_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryLockStatus, own_library_locked_by_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp, app_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp, owner_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryStopPlaying, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryStopPlaying, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryStopPlaying, seconds_left_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientSharedLibraryStopPlaying, stop_apps_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCall, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCall, sysid_routing_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCall, call_handle_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCall, module_crc_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCall, module_hash_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCall, function_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCall, cub_output_max_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCall, flags_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCall, callparameter_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCall, ping_only_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCall, max_outstanding_calls_),
  0,
  3,
  4,
  1,
  5,
  6,
  7,
  2,
  8,
  9,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceModule, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceModule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceModule, module_crc_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceModule, module_hash_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceModule, module_content_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, sysid_routing_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, call_handle_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, module_crc_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, module_hash_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, ecallresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, result_content_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, os_version_info_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, system_info_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, load_address_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, exception_record_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, portable_os_version_info_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, portable_system_info_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, was_converted_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, internal_result_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, current_count_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, last_call_handle_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, last_call_module_crc_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, last_call_sysid_routing_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, last_ecallresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, last_callissue_delta_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientServiceCallResponse, last_callcomplete_delta_),
  0,
  9,
  10,
  1,
  12,
  2,
  3,
  4,
  11,
  5,
  6,
  7,
  13,
  14,
  15,
  16,
  17,
  8,
  18,
  19,
  20,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgAMUnlockStreaming, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgAMUnlockStreaming, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgAMUnlockStreamingResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgAMUnlockStreamingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgAMUnlockStreamingResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgAMUnlockStreamingResponse, encryption_key_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgAMUnlockHEVC, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgAMUnlockHEVC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgAMUnlockHEVCResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgAMUnlockHEVCResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgAMUnlockHEVCResponse, eresult_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientPlayingSessionState, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientPlayingSessionState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientPlayingSessionState, playing_blocked_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientPlayingSessionState, playing_app_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientKickPlayingSession, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientKickPlayingSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientKickPlayingSession, only_stop_game_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientVoiceCallPreAuthorize, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientVoiceCallPreAuthorize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientVoiceCallPreAuthorize, caller_steamid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientVoiceCallPreAuthorize, receiver_steamid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientVoiceCallPreAuthorize, caller_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientVoiceCallPreAuthorize, hangup_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientVoiceCallPreAuthorizeResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientVoiceCallPreAuthorizeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientVoiceCallPreAuthorizeResponse, caller_steamid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientVoiceCallPreAuthorizeResponse, receiver_steamid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientVoiceCallPreAuthorizeResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CMsgClientVoiceCallPreAuthorizeResponse, caller_id_),
  0,
  1,
  3,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::proto::steam::CMsgClientUCMAddScreenshot_Tag)},
  { 9, 28, sizeof(::proto::steam::CMsgClientUCMAddScreenshot)},
  { 42, 49, sizeof(::proto::steam::CMsgClientUCMAddScreenshotResponse)},
  { 51, 57, sizeof(::proto::steam::CMsgClientUCMDeleteScreenshot)},
  { 58, 64, sizeof(::proto::steam::CMsgClientUCMDeleteScreenshotResponse)},
  { 65, 85, sizeof(::proto::steam::CMsgClientUCMPublishFile)},
  { 100, 108, sizeof(::proto::steam::CMsgClientUCMPublishFileResponse)},
  { 111, 118, sizeof(::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag)},
  { 120, 130, sizeof(::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview)},
  { 135, 167, sizeof(::proto::steam::CMsgClientUCMUpdatePublishedFile)},
  { 194, 201, sizeof(::proto::steam::CMsgClientUCMUpdatePublishedFileResponse)},
  { 203, 210, sizeof(::proto::steam::CMsgClientUCMDeletePublishedFile)},
  { 212, 218, sizeof(::proto::steam::CMsgClientUCMDeletePublishedFileResponse)},
  { 219, 227, sizeof(::proto::steam::CMsgClientUCMEnumerateUserPublishedFiles)},
  { 230, 236, sizeof(::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId)},
  { 237, 245, sizeof(::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse)},
  { 248, 258, sizeof(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFiles)},
  { 263, 270, sizeof(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId)},
  { 272, 280, sizeof(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse)},
  { 283, 291, sizeof(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)},
  { 294, 306, sizeof(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId)},
  { 313, 321, sizeof(::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)},
  { 324, 336, sizeof(::proto::steam::CMsgClientUCMPublishedFileSubscribed)},
  { 343, 350, sizeof(::proto::steam::CMsgClientUCMPublishedFileUnsubscribed)},
  { 352, 359, sizeof(::proto::steam::CMsgClientUCMPublishedFileDeleted)},
  { 361, 372, sizeof(::proto::steam::CMsgClientUCMPublishedFileUpdated)},
  { 378, 386, sizeof(::proto::steam::CMsgClientWorkshopItemChangesRequest)},
  { 389, 397, sizeof(::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo)},
  { 400, 408, sizeof(::proto::steam::CMsgClientWorkshopItemChangesResponse)},
  { 411, 418, sizeof(::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem)},
  { 420, 428, sizeof(::proto::steam::CMsgClientWorkshopItemInfoRequest)},
  { 431, 440, sizeof(::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo)},
  { 444, 453, sizeof(::proto::steam::CMsgClientWorkshopItemInfoResponse)},
  { 457, 467, sizeof(::proto::steam::CMsgClientUCMGetPublishedFilesForUser)},
  { 472, 478, sizeof(::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId)},
  { 479, 487, sizeof(::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse)},
  { 490, 498, sizeof(::proto::steam::CMsgClientUCMSetUserPublishedFileAction)},
  { 501, 507, sizeof(::proto::steam::CMsgClientUCMSetUserPublishedFileActionResponse)},
  { 508, 516, sizeof(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserAction)},
  { 519, 526, sizeof(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId)},
  { 528, 536, sizeof(::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)},
  { 539, 544, sizeof(::proto::steam::CMsgClientScreenshotsChanged)},
  { 544, 554, sizeof(::proto::steam::CMsgClientUpdateUserGameInfo)},
  { 559, 566, sizeof(::proto::steam::CMsgClientRichPresenceUpload)},
  { 568, 574, sizeof(::proto::steam::CMsgClientRichPresenceRequest)},
  { 575, 582, sizeof(::proto::steam::CMsgClientRichPresenceInfo_RichPresence)},
  { 584, 590, sizeof(::proto::steam::CMsgClientRichPresenceInfo)},
  { 591, 597, sizeof(::proto::steam::CMsgClientCheckFileSignature)},
  { 598, 613, sizeof(::proto::steam::CMsgClientCheckFileSignatureResponse)},
  { 623, 631, sizeof(::proto::steam::CMsgClientReadMachineAuth)},
  { 634, 648, sizeof(::proto::steam::CMsgClientReadMachineAuthResponse)},
  { 657, 670, sizeof(::proto::steam::CMsgClientUpdateMachineAuth)},
  { 678, 693, sizeof(::proto::steam::CMsgClientUpdateMachineAuthResponse)},
  { 703, 719, sizeof(::proto::steam::CMsgClientRequestMachineAuth)},
  { 730, 736, sizeof(::proto::steam::CMsgClientRequestMachineAuthResponse)},
  { 737, 743, sizeof(::proto::steam::CMsgClientRegisterKey)},
  { 744, 752, sizeof(::proto::steam::CMsgClientPurchaseResponse)},
  { 755, 766, sizeof(::proto::steam::CMsgClientActivateOEMLicense)},
  { 772, 778, sizeof(::proto::steam::CMsgClientRegisterOEMMachine)},
  { 779, 785, sizeof(::proto::steam::CMsgClientRegisterOEMMachineResponse)},
  { 786, 793, sizeof(::proto::steam::CMsgClientPurchaseWithMachineID)},
  { 795, 803, sizeof(::proto::steam::CMsgTrading_InitiateTradeRequest)},
  { 806, 820, sizeof(::proto::steam::CMsgTrading_InitiateTradeResponse)},
  { 829, 835, sizeof(::proto::steam::CMsgTrading_CancelTradeRequest)},
  { 836, 842, sizeof(::proto::steam::CMsgTrading_StartSession)},
  { 843, 851, sizeof(::proto::steam::CMsgClientGetCDNAuthToken)},
  { 854, 861, sizeof(::proto::steam::CMsgClientGetDepotDecryptionKey)},
  { 863, 871, sizeof(::proto::steam::CMsgClientGetDepotDecryptionKeyResponse)},
  { 874, 881, sizeof(::proto::steam::CMsgClientCheckAppBetaPassword)},
  { 883, 890, sizeof(::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword)},
  { 892, 899, sizeof(::proto::steam::CMsgClientCheckAppBetaPasswordResponse)},
  { 901, 927, sizeof(::proto::steam::CMsgClientUpdateAppJobReport)},
  { 948, 960, sizeof(::proto::steam::CMsgClientDPContentStatsReport)},
  { 967, 975, sizeof(::proto::steam::CMsgClientGetCDNAuthTokenResponse)},
  { 978, 988, sizeof(::proto::steam::CMsgDownloadRateStatistics_StatsInfo)},
  { 993, 1000, sizeof(::proto::steam::CMsgDownloadRateStatistics)},
  { 1002, 1009, sizeof(::proto::steam::CMsgClientRequestAccountData)},
  { 1011, 1023, sizeof(::proto::steam::CMsgClientRequestAccountDataResponse)},
  { 1030, 1040, sizeof(::proto::steam::CMsgClientUGSGetGlobalStats)},
  { 1045, 1052, sizeof(::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat)},
  { 1054, 1061, sizeof(::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day)},
  { 1063, 1072, sizeof(::proto::steam::CMsgClientUGSGetGlobalStatsResponse)},
  { 1076, 1082, sizeof(::proto::steam::CMsgGameServerData_Player)},
  { 1083, 1110, sizeof(::proto::steam::CMsgGameServerData)},
  { 1132, 1140, sizeof(::proto::steam::CMsgGameServerRemove)},
  { 1143, 1153, sizeof(::proto::steam::CMsgClientGMSServerQuery)},
  { 1158, 1166, sizeof(::proto::steam::CMsgGMSClientServerQueryResponse_Server)},
  { 1169, 1176, sizeof(::proto::steam::CMsgGMSClientServerQueryResponse)},
  { 1178, 1186, sizeof(::proto::steam::CMsgGameServerOutOfDate)},
  { 1189, 1195, sizeof(::proto::steam::CMsgClientRedeemGuestPass)},
  { 1196, 1204, sizeof(::proto::steam::CMsgClientRedeemGuestPassResponse)},
  { 1207, 1213, sizeof(::proto::steam::CMsgClientGetClanActivityCounts)},
  { 1214, 1220, sizeof(::proto::steam::CMsgClientGetClanActivityCountsResponse)},
  { 1221, 1231, sizeof(::proto::steam::CMsgClientOGSReportString)},
  { 1236, 1244, sizeof(::proto::steam::CMsgClientOGSReportBug)},
  { 1247, 1253, sizeof(::proto::steam::CMsgGSAssociateWithClan)},
  { 1254, 1261, sizeof(::proto::steam::CMsgGSAssociateWithClanResponse)},
  { 1263, 1269, sizeof(::proto::steam::CMsgGSComputeNewPlayerCompatibility)},
  { 1270, 1281, sizeof(::proto::steam::CMsgGSComputeNewPlayerCompatibilityResponse)},
  { 1287, 1292, sizeof(::proto::steam::CMsgClientSentLogs)},
  { 1292, 1303, sizeof(::proto::steam::CMsgGCClient)},
  { 1309, 1315, sizeof(::proto::steam::CMsgClientRequestFreeLicense)},
  { 1316, 1324, sizeof(::proto::steam::CMsgClientRequestFreeLicenseResponse)},
  { 1327, 1340, sizeof(::proto::steam::CMsgDRMDownloadRequestWithCrashData)},
  { 1348, 1361, sizeof(::proto::steam::CMsgDRMDownloadResponse)},
  { 1369, 1382, sizeof(::proto::steam::CMsgDRMFinalResult)},
  { 1390, 1396, sizeof(::proto::steam::CMsgClientDPCheckSpecialSurvey)},
  { 1397, 1408, sizeof(::proto::steam::CMsgClientDPCheckSpecialSurveyResponse)},
  { 1414, 1421, sizeof(::proto::steam::CMsgClientDPSendSpecialSurveyResponse)},
  { 1423, 1430, sizeof(::proto::steam::CMsgClientDPSendSpecialSurveyResponseReply)},
  { 1432, 1439, sizeof(::proto::steam::CMsgClientRequestForgottenPasswordEmail)},
  { 1441, 1448, sizeof(::proto::steam::CMsgClientRequestForgottenPasswordEmailResponse)},
  { 1450, 1456, sizeof(::proto::steam::CMsgClientItemAnnouncements)},
  { 1457, 1462, sizeof(::proto::steam::CMsgClientRequestItemAnnouncements)},
  { 1462, 1469, sizeof(::proto::steam::CMsgClientUserNotifications_Notification)},
  { 1471, 1477, sizeof(::proto::steam::CMsgClientUserNotifications)},
  { 1478, 1486, sizeof(::proto::steam::CMsgClientCommentNotifications)},
  { 1489, 1494, sizeof(::proto::steam::CMsgClientRequestCommentNotifications)},
  { 1494, 1501, sizeof(::proto::steam::CMsgClientOfflineMessageNotification)},
  { 1503, 1508, sizeof(::proto::steam::CMsgClientRequestOfflineMessageCount)},
  { 1508, 1514, sizeof(::proto::steam::CMsgClientChatGetFriendMessageHistory)},
  { 1515, 1524, sizeof(::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage)},
  { 1528, 1536, sizeof(::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse)},
  { 1539, 1544, sizeof(::proto::steam::CMsgClientChatGetFriendMessageHistoryForOfflineMessages)},
  { 1544, 1550, sizeof(::proto::steam::CMsgClientFSGetFriendsSteamLevels)},
  { 1551, 1558, sizeof(::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend)},
  { 1560, 1566, sizeof(::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse)},
  { 1567, 1578, sizeof(::proto::steam::CMsgClientEmailAddrInfo)},
  { 1584, 1597, sizeof(::proto::steam::CMsgCREEnumeratePublishedFiles)},
  { 1605, 1615, sizeof(::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId)},
  { 1620, 1628, sizeof(::proto::steam::CMsgCREEnumeratePublishedFilesResponse)},
  { 1631, 1637, sizeof(::proto::steam::CMsgCREItemVoteSummary_PublishedFileId)},
  { 1638, 1644, sizeof(::proto::steam::CMsgCREItemVoteSummary)},
  { 1645, 1655, sizeof(::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary)},
  { 1660, 1667, sizeof(::proto::steam::CMsgCREItemVoteSummaryResponse)},
  { 1669, 1676, sizeof(::proto::steam::CMsgCREUpdateUserPublishedItemVote)},
  { 1678, 1684, sizeof(::proto::steam::CMsgCREUpdateUserPublishedItemVoteResponse)},
  { 1685, 1691, sizeof(::proto::steam::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId)},
  { 1692, 1698, sizeof(::proto::steam::CMsgCREGetUserPublishedItemVoteDetails)},
  { 1699, 1706, sizeof(::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail)},
  { 1708, 1715, sizeof(::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse)},
  { 1717, 1725, sizeof(::proto::steam::CMsgGameServerPingSample_Sample)},
  { 1728, 1736, sizeof(::proto::steam::CMsgGameServerPingSample)},
  { 1739, 1745, sizeof(::proto::steam::CMsgFSGetFollowerCount)},
  { 1746, 1753, sizeof(::proto::steam::CMsgFSGetFollowerCountResponse)},
  { 1755, 1761, sizeof(::proto::steam::CMsgFSGetIsFollowing)},
  { 1762, 1769, sizeof(::proto::steam::CMsgFSGetIsFollowingResponse)},
  { 1771, 1777, sizeof(::proto::steam::CMsgFSEnumerateFollowingList)},
  { 1778, 1786, sizeof(::proto::steam::CMsgFSEnumerateFollowingListResponse)},
  { 1789, 1795, sizeof(::proto::steam::CMsgDPGetNumberOfCurrentPlayers)},
  { 1796, 1803, sizeof(::proto::steam::CMsgDPGetNumberOfCurrentPlayersResponse)},
  { 1805, 1813, sizeof(::proto::steam::CMsgClientFriendUserStatusPublished)},
  { 1816, 1824, sizeof(::proto::steam::CMsgClientServiceMethod)},
  { 1827, 1834, sizeof(::proto::steam::CMsgClientServiceMethodResponse)},
  { 1836, 1843, sizeof(::proto::steam::CMsgClientUIMode)},
  { 1845, 1851, sizeof(::proto::steam::CMsgClientVanityURLChangedNotification)},
  { 1852, 1860, sizeof(::proto::steam::CMsgClientAuthorizeLocalDeviceRequest)},
  { 1863, 1871, sizeof(::proto::steam::CMsgClientAuthorizeLocalDevice)},
  { 1874, 1882, sizeof(::proto::steam::CMsgClientAuthorizeLocalDeviceNotification)},
  { 1885, 1892, sizeof(::proto::steam::CMsgClientDeauthorizeDeviceRequest)},
  { 1894, 1901, sizeof(::proto::steam::CMsgClientDeauthorizeDevice)},
  { 1903, 1910, sizeof(::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken)},
  { 1912, 1919, sizeof(::proto::steam::CMsgClientUseLocalDeviceAuthorizations)},
  { 1921, 1926, sizeof(::proto::steam::CMsgClientGetAuthorizedDevices)},
  { 1926, 1937, sizeof(::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice)},
  { 1943, 1950, sizeof(::proto::steam::CMsgClientGetAuthorizedDevicesResponse)},
  { 1952, 1959, sizeof(::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary)},
  { 1961, 1968, sizeof(::proto::steam::CMsgClientSharedLibraryLockStatus)},
  { 1970, 1977, sizeof(::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp)},
  { 1979, 1986, sizeof(::proto::steam::CMsgClientSharedLibraryStopPlaying)},
  { 1988, 2003, sizeof(::proto::steam::CMsgClientServiceCall)},
  { 2013, 2021, sizeof(::proto::steam::CMsgClientServiceModule)},
  { 2024, 2050, sizeof(::proto::steam::CMsgClientServiceCallResponse)},
  { 2071, 2076, sizeof(::proto::steam::CMsgAMUnlockStreaming)},
  { 2076, 2083, sizeof(::proto::steam::CMsgAMUnlockStreamingResponse)},
  { 2085, 2090, sizeof(::proto::steam::CMsgAMUnlockHEVC)},
  { 2090, 2096, sizeof(::proto::steam::CMsgAMUnlockHEVCResponse)},
  { 2097, 2104, sizeof(::proto::steam::CMsgClientPlayingSessionState)},
  { 2106, 2112, sizeof(::proto::steam::CMsgClientKickPlayingSession)},
  { 2113, 2122, sizeof(::proto::steam::CMsgClientVoiceCallPreAuthorize)},
  { 2126, 2135, sizeof(::proto::steam::CMsgClientVoiceCallPreAuthorizeResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMAddScreenshot_Tag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMAddScreenshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMAddScreenshotResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMDeleteScreenshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMDeleteScreenshotResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMPublishFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMPublishFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMUpdatePublishedFile_KeyValueTag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMUpdatePublishedFile_AdditionalPreview_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMUpdatePublishedFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMUpdatePublishedFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMDeletePublishedFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMDeletePublishedFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMEnumerateUserPublishedFiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMEnumerateUserPublishedFilesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMEnumerateUserSubscribedFiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMEnumerateUserSubscribedFilesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMPublishedFileSubscribed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMPublishedFileUnsubscribed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMPublishedFileDeleted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMPublishedFileUpdated_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientWorkshopItemChangesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientWorkshopItemChangesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientWorkshopItemInfoRequest_WorkshopItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientWorkshopItemInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientWorkshopItemInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMGetPublishedFilesForUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMGetPublishedFilesForUserResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMSetUserPublishedFileAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMSetUserPublishedFileActionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMEnumeratePublishedFilesByUserAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientScreenshotsChanged_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUpdateUserGameInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRichPresenceUpload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRichPresenceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRichPresenceInfo_RichPresence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRichPresenceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientCheckFileSignature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientCheckFileSignatureResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientReadMachineAuth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientReadMachineAuthResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUpdateMachineAuth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUpdateMachineAuthResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRequestMachineAuth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRequestMachineAuthResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRegisterKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientPurchaseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientActivateOEMLicense_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRegisterOEMMachine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRegisterOEMMachineResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientPurchaseWithMachineID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgTrading_InitiateTradeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgTrading_InitiateTradeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgTrading_CancelTradeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgTrading_StartSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientGetCDNAuthToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientGetDepotDecryptionKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientGetDepotDecryptionKeyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientCheckAppBetaPassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientCheckAppBetaPasswordResponse_BetaPassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientCheckAppBetaPasswordResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUpdateAppJobReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientDPContentStatsReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientGetCDNAuthTokenResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgDownloadRateStatistics_StatsInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgDownloadRateStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRequestAccountData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRequestAccountDataResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUGSGetGlobalStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUGSGetGlobalStatsResponse_Day_Stat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUGSGetGlobalStatsResponse_Day_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUGSGetGlobalStatsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgGameServerData_Player_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgGameServerData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgGameServerRemove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientGMSServerQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgGMSClientServerQueryResponse_Server_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgGMSClientServerQueryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgGameServerOutOfDate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRedeemGuestPass_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRedeemGuestPassResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientGetClanActivityCounts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientGetClanActivityCountsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientOGSReportString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientOGSReportBug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgGSAssociateWithClan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgGSAssociateWithClanResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgGSComputeNewPlayerCompatibility_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgGSComputeNewPlayerCompatibilityResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientSentLogs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgGCClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRequestFreeLicense_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRequestFreeLicenseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgDRMDownloadRequestWithCrashData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgDRMDownloadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgDRMFinalResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientDPCheckSpecialSurvey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientDPCheckSpecialSurveyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientDPSendSpecialSurveyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientDPSendSpecialSurveyResponseReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRequestForgottenPasswordEmail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRequestForgottenPasswordEmailResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientItemAnnouncements_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRequestItemAnnouncements_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUserNotifications_Notification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUserNotifications_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientCommentNotifications_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRequestCommentNotifications_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientOfflineMessageNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientRequestOfflineMessageCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientChatGetFriendMessageHistory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientChatGetFriendMessageHistoryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientChatGetFriendMessageHistoryForOfflineMessages_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientFSGetFriendsSteamLevels_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientFSGetFriendsSteamLevelsResponse_Friend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientFSGetFriendsSteamLevelsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientEmailAddrInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgCREEnumeratePublishedFiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgCREEnumeratePublishedFilesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgCREItemVoteSummary_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgCREItemVoteSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgCREItemVoteSummaryResponse_ItemVoteSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgCREItemVoteSummaryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgCREUpdateUserPublishedItemVote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgCREUpdateUserPublishedItemVoteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgCREGetUserPublishedItemVoteDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgCREGetUserPublishedItemVoteDetailsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgGameServerPingSample_Sample_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgGameServerPingSample_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgFSGetFollowerCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgFSGetFollowerCountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgFSGetIsFollowing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgFSGetIsFollowingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgFSEnumerateFollowingList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgFSEnumerateFollowingListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgDPGetNumberOfCurrentPlayers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgDPGetNumberOfCurrentPlayersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientFriendUserStatusPublished_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientServiceMethod_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientServiceMethodResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUIMode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientVanityURLChangedNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientAuthorizeLocalDeviceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientAuthorizeLocalDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientAuthorizeLocalDeviceNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientDeauthorizeDeviceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientDeauthorizeDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUseLocalDeviceAuthorizations_DeviceToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientUseLocalDeviceAuthorizations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientGetAuthorizedDevices_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientGetAuthorizedDevicesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientSharedLibraryLockStatus_LockedLibrary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientSharedLibraryLockStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientSharedLibraryStopPlaying_StopApp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientSharedLibraryStopPlaying_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientServiceCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientServiceModule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientServiceCallResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgAMUnlockStreaming_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgAMUnlockStreamingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgAMUnlockHEVC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgAMUnlockHEVCResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientPlayingSessionState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientKickPlayingSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientVoiceCallPreAuthorize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CMsgClientVoiceCallPreAuthorizeResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto = {
  {}, AddDescriptors_steammessages_5fclientserver_5f2_2eproto, "steammessages_clientserver_2.proto", schemas,
  file_default_instances, TableStruct_steammessages_5fclientserver_5f2_2eproto::offsets,
  file_level_metadata_steammessages_5fclientserver_5f2_2eproto, 181, file_level_enum_descriptors_steammessages_5fclientserver_5f2_2eproto, file_level_service_descriptors_steammessages_5fclientserver_5f2_2eproto,
};

const char descriptor_table_protodef_steammessages_5fclientserver_5f2_2eproto[] =
  "\n\"steammessages_clientserver_2.proto\022\013pr"
  "oto.steam\032\030steammessages_base.proto\"\215\003\n\032"
  "CMsgClientUCMAddScreenshot\022\r\n\005appid\030\001 \001("
  "\r\022\020\n\010filename\030\002 \001(\t\022\021\n\tthumbname\030\003 \001(\t\022\023"
  "\n\013vr_filename\030\016 \001(\t\022\027\n\017rtime32_created\030\004"
  " \001(\007\022\r\n\005width\030\005 \001(\r\022\016\n\006height\030\006 \001(\r\022\023\n\013p"
  "ermissions\030\007 \001(\r\022\017\n\007caption\030\010 \001(\t\022\025\n\rsho"
  "rtcut_name\030\t \001(\t\0228\n\003tag\030\n \003(\0132+.proto.st"
  "eam.CMsgClientUCMAddScreenshot.Tag\022\026\n\016ta"
  "gged_steamid\030\013 \003(\006\022\023\n\013spoiler_tag\030\014 \001(\010\022"
  "\036\n\026tagged_publishedfileid\030\r \003(\004\032*\n\003Tag\022\020"
  "\n\010tag_name\030\001 \001(\t\022\021\n\ttag_value\030\002 \001(\t\"d\n\"C"
  "MsgClientUCMAddScreenshotResponse\022\022\n\007ere"
  "sult\030\001 \001(\005:\0012\022*\n\014screenshotid\030\002 \001(\006:\024184"
  "46744073709551615\"K\n\035CMsgClientUCMDelete"
  "Screenshot\022*\n\014screenshotid\030\001 \001(\006:\024184467"
  "44073709551615\";\n%CMsgClientUCMDeleteScr"
  "eenshotResponse\022\022\n\007eresult\030\001 \001(\005:\0012\"\321\002\n\030"
  "CMsgClientUCMPublishFile\022\016\n\006app_id\030\001 \001(\r"
  "\022\021\n\tfile_name\030\002 \001(\t\022\031\n\021preview_file_name"
  "\030\003 \001(\t\022\027\n\017consumer_app_id\030\004 \001(\r\022\r\n\005title"
  "\030\005 \001(\t\022\023\n\013description\030\006 \001(\t\022\014\n\004tags\030\010 \003("
  "\t\022\025\n\rworkshop_file\030\t \001(\010\022\022\n\nvisibility\030\n"
  " \001(\005\022\021\n\tfile_type\030\013 \001(\r\022\013\n\003url\030\014 \001(\t\022\026\n\016"
  "video_provider\030\r \001(\r\022\032\n\022video_account_na"
  "me\030\016 \001(\t\022\030\n\020video_identifier\030\017 \001(\t\022\023\n\013in"
  "_progress\030\020 \001(\010\"\241\001\n CMsgClientUCMPublish"
  "FileResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022/\n\021publ"
  "ished_file_id\030\002 \001(\006:\0241844674407370955161"
  "5\0228\n)needs_workshop_legal_agreement_acce"
  "ptance\030\003 \001(\010:\005false\"\264\007\n CMsgClientUCMUpd"
  "atePublishedFile\022\016\n\006app_id\030\001 \001(\r\022\031\n\021publ"
  "ished_file_id\030\002 \001(\006\022\021\n\tfile_name\030\003 \001(\t\022\031"
  "\n\021preview_file_name\030\004 \001(\t\022\r\n\005title\030\005 \001(\t"
  "\022\023\n\013description\030\006 \001(\t\022\014\n\004tags\030\007 \003(\t\022\022\n\nv"
  "isibility\030\010 \001(\005\022\023\n\013update_file\030\t \001(\010\022\033\n\023"
  "update_preview_file\030\n \001(\010\022\024\n\014update_titl"
  "e\030\013 \001(\010\022\032\n\022update_description\030\014 \001(\010\022\023\n\013u"
  "pdate_tags\030\r \001(\010\022\031\n\021update_visibility\030\016 "
  "\001(\010\022\032\n\022change_description\030\017 \001(\t\022\022\n\nupdat"
  "e_url\030\020 \001(\010\022\013\n\003url\030\021 \001(\t\022\037\n\027update_conte"
  "nt_manifest\030\022 \001(\010\022\030\n\020content_manifest\030\023 "
  "\001(\006\022\020\n\010metadata\030\024 \001(\t\022\027\n\017update_metadata"
  "\030\025 \001(\010\022\023\n\010language\030\026 \001(\005:\0010\022\026\n\016removed_k"
  "vtags\030\027 \003(\t\022I\n\006kvtags\030\030 \003(\01329.proto.stea"
  "m.CMsgClientUCMUpdatePublishedFile.KeyVa"
  "lueTag\022Q\n\010previews\030\031 \003(\0132\?.proto.steam.C"
  "MsgClientUCMUpdatePublishedFile.Addition"
  "alPreview\022\032\n\022previews_to_remove\030\032 \003(\005\022\031\n"
  "\021clear_in_progress\030\033 \001(\010\032)\n\013KeyValueTag\022"
  "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\032\214\001\n\021Addition"
  "alPreview\022\032\n\022original_file_name\030\001 \001(\t\022\032\n"
  "\022internal_file_name\030\002 \001(\t\022\017\n\007videoid\030\003 \001"
  "(\t\022\024\n\014preview_type\030\004 \001(\r\022\030\n\014update_index"
  "\030\005 \001(\005:\002-1\"x\n(CMsgClientUCMUpdatePublish"
  "edFileResponse\022\022\n\007eresult\030\001 \001(\005:\0012\0228\n)ne"
  "eds_workshop_legal_agreement_acceptance\030"
  "\002 \001(\010:\005false\"M\n CMsgClientUCMDeletePubli"
  "shedFile\022\031\n\021published_file_id\030\001 \001(\006\022\016\n\006a"
  "pp_id\030\002 \001(\r\">\n(CMsgClientUCMDeletePublis"
  "hedFileResponse\022\022\n\007eresult\030\001 \001(\005:\0012\"c\n(C"
  "MsgClientUCMEnumerateUserPublishedFiles\022"
  "\016\n\006app_id\030\001 \001(\r\022\023\n\013start_index\030\002 \001(\r\022\022\n\n"
  "sort_order\030\003 \001(\r\"\363\001\n0CMsgClientUCMEnumer"
  "ateUserPublishedFilesResponse\022\022\n\007eresult"
  "\030\001 \001(\005:\0012\022f\n\017published_files\030\002 \003(\0132M.pro"
  "to.steam.CMsgClientUCMEnumerateUserPubli"
  "shedFilesResponse.PublishedFileId\022\025\n\rtot"
  "al_results\030\003 \001(\r\032,\n\017PublishedFileId\022\031\n\021p"
  "ublished_file_id\030\001 \001(\006\"\230\001\n)CMsgClientUCM"
  "EnumerateUserSubscribedFiles\022\016\n\006app_id\030\001"
  " \001(\r\022\023\n\013start_index\030\002 \001(\r\022\024\n\tlist_type\030\003"
  " \001(\r:\0011\022\035\n\022matching_file_type\030\004 \001(\r:\0010\022\021"
  "\n\005count\030\005 \001(\r:\00250\"\225\002\n1CMsgClientUCMEnume"
  "rateUserSubscribedFilesResponse\022\022\n\007eresu"
  "lt\030\001 \001(\005:\0012\022h\n\020subscribed_files\030\002 \003(\0132N."
  "proto.steam.CMsgClientUCMEnumerateUserSu"
  "bscribedFilesResponse.PublishedFileId\022\025\n"
  "\rtotal_results\030\003 \001(\r\032K\n\017PublishedFileId\022"
  "\031\n\021published_file_id\030\001 \001(\006\022\035\n\022rtime32_su"
  "bscribed\030\002 \001(\007:\0010\"o\n4CMsgClientUCMEnumer"
  "ateUserSubscribedFilesWithUpdates\022\016\n\006app"
  "_id\030\001 \001(\r\022\023\n\013start_index\030\002 \001(\r\022\022\n\nstart_"
  "time\030\003 \001(\007\"\235\003\n<CMsgClientUCMEnumerateUse"
  "rSubscribedFilesWithUpdatesResponse\022\022\n\007e"
  "result\030\001 \001(\005:\0012\022s\n\020subscribed_files\030\002 \003("
  "\0132Y.proto.steam.CMsgClientUCMEnumerateUs"
  "erSubscribedFilesWithUpdatesResponse.Pub"
  "lishedFileId\022\025\n\rtotal_results\030\003 \001(\r\032\274\001\n\017"
  "PublishedFileId\022\031\n\021published_file_id\030\001 \001"
  "(\006\022\035\n\022rtime32_subscribed\030\002 \001(\007:\0010\022\r\n\005app"
  "id\030\003 \001(\r\022\025\n\rfile_hcontent\030\004 \001(\006\022\021\n\tfile_"
  "size\030\005 \001(\r\022\034\n\024rtime32_last_updated\030\006 \001(\007"
  "\022\030\n\020is_depot_content\030\007 \001(\010\"\306\001\n$CMsgClien"
  "tUCMPublishedFileSubscribed\022\031\n\021published"
  "_file_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\022\025\n\rfile_h"
  "content\030\003 \001(\006\022\021\n\tfile_size\030\004 \001(\r\022\030\n\020rtim"
  "e_subscribed\030\005 \001(\r\022\030\n\020is_depot_content\030\006"
  " \001(\010\022\025\n\rrtime_updated\030\007 \001(\r\"S\n&CMsgClien"
  "tUCMPublishedFileUnsubscribed\022\031\n\021publish"
  "ed_file_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\"N\n!CMsg"
  "ClientUCMPublishedFileDeleted\022\031\n\021publish"
  "ed_file_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\"\243\001\n!CMs"
  "gClientUCMPublishedFileUpdated\022\031\n\021publis"
  "hed_file_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\022\024\n\014tim"
  "e_updated\030\003 \001(\r\022\020\n\010hcontent\030\004 \001(\006\022\021\n\tfil"
  "e_size\030\005 \001(\007\022\030\n\020is_depot_content\030\006 \001(\010\"k"
  "\n$CMsgClientWorkshopItemChangesRequest\022\016"
  "\n\006app_id\030\001 \001(\r\022\031\n\021last_time_updated\030\002 \001("
  "\r\022\030\n\020num_items_needed\030\003 \001(\r\"\207\002\n%CMsgClie"
  "ntWorkshopItemChangesResponse\022\022\n\007eresult"
  "\030\001 \001(\005:\0012\022\023\n\013update_time\030\002 \001(\r\022[\n\016worksh"
  "op_items\030\005 \003(\0132C.proto.steam.CMsgClientW"
  "orkshopItemChangesResponse.WorkshopItemI"
  "nfo\032X\n\020WorkshopItemInfo\022\031\n\021published_fil"
  "e_id\030\001 \001(\006\022\024\n\014time_updated\030\002 \001(\r\022\023\n\013mani"
  "fest_id\030\003 \001(\006\"\344\001\n!CMsgClientWorkshopItem"
  "InfoRequest\022\016\n\006app_id\030\001 \001(\r\022\031\n\021last_time"
  "_updated\030\002 \001(\r\022S\n\016workshop_items\030\003 \003(\0132;"
  ".proto.steam.CMsgClientWorkshopItemInfoR"
  "equest.WorkshopItem\032\?\n\014WorkshopItem\022\031\n\021p"
  "ublished_file_id\030\001 \001(\006\022\024\n\014time_updated\030\002"
  " \001(\r\"\253\002\n\"CMsgClientWorkshopItemInfoRespo"
  "nse\022\022\n\007eresult\030\001 \001(\005:\0012\022\023\n\013update_time\030\002"
  " \001(\r\022X\n\016workshop_items\030\003 \003(\0132@.proto.ste"
  "am.CMsgClientWorkshopItemInfoResponse.Wo"
  "rkshopItemInfo\022\025\n\rprivate_items\030\004 \003(\006\032k\n"
  "\020WorkshopItemInfo\022\031\n\021published_file_id\030\001"
  " \001(\006\022\024\n\014time_updated\030\002 \001(\r\022\023\n\013manifest_i"
  "d\030\003 \001(\006\022\021\n\tis_legacy\030\004 \001(\010\"\224\001\n%CMsgClien"
  "tUCMGetPublishedFilesForUser\022\016\n\006app_id\030\001"
  " \001(\r\022\030\n\020creator_steam_id\030\002 \001(\006\022\025\n\rrequir"
  "ed_tags\030\003 \003(\t\022\025\n\rexcluded_tags\030\004 \003(\t\022\023\n\013"
  "start_index\030\005 \001(\r\"\355\001\n-CMsgClientUCMGetPu"
  "blishedFilesForUserResponse\022\022\n\007eresult\030\001"
  " \001(\005:\0012\022c\n\017published_files\030\002 \003(\0132J.proto"
  ".steam.CMsgClientUCMGetPublishedFilesFor"
  "UserResponse.PublishedFileId\022\025\n\rtotal_re"
  "sults\030\003 \001(\r\032,\n\017PublishedFileId\022\031\n\021publis"
  "hed_file_id\030\001 \001(\006\"d\n\'CMsgClientUCMSetUse"
  "rPublishedFileAction\022\031\n\021published_file_i"
  "d\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\022\016\n\006action\030\003 \001(\005\""
  "E\n/CMsgClientUCMSetUserPublishedFileActi"
  "onResponse\022\022\n\007eresult\030\001 \001(\005:\0012\"g\n0CMsgCl"
  "ientUCMEnumeratePublishedFilesByUserActi"
  "on\022\016\n\006app_id\030\001 \001(\r\022\023\n\013start_index\030\002 \001(\r\022"
  "\016\n\006action\030\003 \001(\005\"\240\002\n8CMsgClientUCMEnumera"
  "tePublishedFilesByUserActionResponse\022\022\n\007"
  "eresult\030\001 \001(\005:\0012\022n\n\017published_files\030\002 \003("
  "\0132U.proto.steam.CMsgClientUCMEnumeratePu"
  "blishedFilesByUserActionResponse.Publish"
  "edFileId\022\025\n\rtotal_results\030\003 \001(\r\032I\n\017Publi"
  "shedFileId\022\031\n\021published_file_id\030\001 \001(\006\022\033\n"
  "\020rtime_time_stamp\030\002 \001(\007:\0010\"\036\n\034CMsgClient"
  "ScreenshotsChanged\"w\n\034CMsgClientUpdateUs"
  "erGameInfo\022\024\n\014steamid_idgs\030\001 \001(\006\022\016\n\006game"
  "id\030\002 \001(\006\022\017\n\007game_ip\030\003 \001(\r\022\021\n\tgame_port\030\004"
  " \001(\r\022\r\n\005token\030\005 \001(\014\"S\n\034CMsgClientRichPre"
  "senceUpload\022\030\n\020rich_presence_kv\030\001 \001(\014\022\031\n"
  "\021steamid_broadcast\030\002 \003(\006\"8\n\035CMsgClientRi"
  "chPresenceRequest\022\027\n\017steamid_request\030\001 \003"
  "(\006\"\251\001\n\032CMsgClientRichPresenceInfo\022K\n\rric"
  "h_presence\030\001 \003(\01324.proto.steam.CMsgClien"
  "tRichPresenceInfo.RichPresence\032>\n\014RichPr"
  "esence\022\024\n\014steamid_user\030\001 \001(\006\022\030\n\020rich_pre"
  "sence_kv\030\002 \001(\014\".\n\034CMsgClientCheckFileSig"
  "nature\022\016\n\006app_id\030\001 \001(\r\"\367\001\n$CMsgClientChe"
  "ckFileSignatureResponse\022\016\n\006app_id\030\001 \001(\r\022"
  "\013\n\003pid\030\002 \001(\r\022\017\n\007eresult\030\003 \001(\r\022\020\n\010filenam"
  "e\030\004 \001(\t\022\030\n\020esignatureresult\030\005 \001(\r\022\020\n\010sha"
  "_file\030\006 \001(\014\022\027\n\017signatureheader\030\007 \001(\014\022\020\n\010"
  "filesize\030\010 \001(\r\022\024\n\014getlasterror\030\t \001(\r\022\"\n\032"
  "evalvesignaturecheckdetail\030\n \001(\r\"P\n\031CMsg"
  "ClientReadMachineAuth\022\020\n\010filename\030\001 \001(\t\022"
  "\016\n\006offset\030\002 \001(\r\022\021\n\tcubtoread\030\003 \001(\r\"\316\001\n!C"
  "MsgClientReadMachineAuthResponse\022\020\n\010file"
  "name\030\001 \001(\t\022\017\n\007eresult\030\002 \001(\r\022\020\n\010filesize\030"
  "\003 \001(\r\022\020\n\010sha_file\030\004 \001(\014\022\024\n\014getlasterror\030"
  "\005 \001(\r\022\016\n\006offset\030\006 \001(\r\022\017\n\007cubread\030\007 \001(\r\022\022"
  "\n\nbytes_read\030\010 \001(\014\022\027\n\017filename_sentry\030\t "
  "\001(\t\"\275\001\n\033CMsgClientUpdateMachineAuth\022\020\n\010f"
  "ilename\030\001 \001(\t\022\016\n\006offset\030\002 \001(\r\022\022\n\ncubtowr"
  "ite\030\003 \001(\r\022\r\n\005bytes\030\004 \001(\014\022\020\n\010otp_type\030\005 \001"
  "(\r\022\026\n\016otp_identifier\030\006 \001(\t\022\030\n\020otp_shared"
  "secret\030\007 \001(\014\022\025\n\rotp_timedrift\030\010 \001(\r\"\341\001\n#"
  "CMsgClientUpdateMachineAuthResponse\022\020\n\010f"
  "ilename\030\001 \001(\t\022\017\n\007eresult\030\002 \001(\r\022\020\n\010filesi"
  "ze\030\003 \001(\r\022\020\n\010sha_file\030\004 \001(\014\022\024\n\014getlasterr"
  "or\030\005 \001(\r\022\016\n\006offset\030\006 \001(\r\022\020\n\010cubwrote\030\007 \001"
  "(\r\022\020\n\010otp_type\030\010 \001(\005\022\021\n\totp_value\030\t \001(\r\022"
  "\026\n\016otp_identifier\030\n \001(\t\"\241\002\n\034CMsgClientRe"
  "questMachineAuth\022\020\n\010filename\030\001 \001(\t\022\032\n\022er"
  "esult_sentryfile\030\002 \001(\r\022\020\n\010filesize\030\003 \001(\r"
  "\022\026\n\016sha_sentryfile\030\004 \001(\014\022\033\n\023lock_account"
  "_action\030\006 \001(\005\022\020\n\010otp_type\030\007 \001(\r\022\026\n\016otp_i"
  "dentifier\030\010 \001(\t\022\030\n\020otp_sharedsecret\030\t \001("
  "\014\022\021\n\totp_value\030\n \001(\r\022\024\n\014machine_name\030\013 \001"
  "(\t\022\037\n\027machine_name_userchosen\030\014 \001(\t\"7\n$C"
  "MsgClientRequestMachineAuthResponse\022\017\n\007e"
  "result\030\001 \001(\r\"$\n\025CMsgClientRegisterKey\022\013\n"
  "\003key\030\001 \001(\t\"p\n\032CMsgClientPurchaseResponse"
  "\022\022\n\007eresult\030\001 \001(\005:\0012\022\037\n\027purchase_result_"
  "details\030\002 \001(\005\022\035\n\025purchase_receipt_info\030\003"
  " \001(\014\"\305\001\n\034CMsgClientActivateOEMLicense\022\031\n"
  "\021bios_manufacturer\030\001 \001(\t\022\031\n\021bios_serialn"
  "umber\030\002 \001(\t\022\024\n\014license_file\030\003 \001(\014\022\036\n\026mai"
  "nboard_manufacturer\030\004 \001(\t\022\031\n\021mainboard_p"
  "roduct\030\005 \001(\t\022\036\n\026mainboard_serialnumber\030\006"
  " \001(\t\"9\n\034CMsgClientRegisterOEMMachine\022\031\n\021"
  "oem_register_file\030\001 \001(\014\"7\n$CMsgClientReg"
  "isterOEMMachineResponse\022\017\n\007eresult\030\001 \001(\r"
  "\"K\n\037CMsgClientPurchaseWithMachineID\022\022\n\np"
  "ackage_id\030\001 \001(\r\022\024\n\014machine_info\030\002 \001(\014\"g\n"
  " CMsgTrading_InitiateTradeRequest\022\030\n\020tra"
  "de_request_id\030\001 \001(\r\022\025\n\rother_steamid\030\002 \001"
  "(\004\022\022\n\nother_name\030\003 \001(\t\"\322\002\n!CMsgTrading_I"
  "nitiateTradeResponse\022\020\n\010response\030\001 \001(\r\022\030"
  "\n\020trade_request_id\030\002 \001(\r\022\025\n\rother_steami"
  "d\030\003 \001(\004\022 \n\030steamguard_required_days\030\004 \001("
  "\r\022 \n\030new_device_cooldown_days\030\005 \001(\r\022-\n%d"
  "efault_password_reset_probation_days\030\006 \001"
  "(\r\022%\n\035password_reset_probation_days\030\007 \001("
  "\r\022+\n#default_email_change_probation_days"
  "\030\010 \001(\r\022#\n\033email_change_probation_days\030\t "
  "\001(\r\"7\n\036CMsgTrading_CancelTradeRequest\022\025\n"
  "\rother_steamid\030\001 \001(\004\"1\n\030CMsgTrading_Star"
  "tSession\022\025\n\rother_steamid\030\001 \001(\004\"P\n\031CMsgC"
  "lientGetCDNAuthToken\022\020\n\010depot_id\030\001 \001(\r\022\021"
  "\n\thost_name\030\002 \001(\t\022\016\n\006app_id\030\003 \001(\r\"C\n\037CMs"
  "gClientGetDepotDecryptionKey\022\020\n\010depot_id"
  "\030\001 \001(\r\022\016\n\006app_id\030\002 \001(\r\"m\n\'CMsgClientGetD"
  "epotDecryptionKeyResponse\022\022\n\007eresult\030\001 \001"
  "(\005:\0012\022\020\n\010depot_id\030\002 \001(\r\022\034\n\024depot_encrypt"
  "ion_key\030\003 \001(\014\"F\n\036CMsgClientCheckAppBetaP"
  "assword\022\016\n\006app_id\030\001 \001(\r\022\024\n\014betapassword\030"
  "\002 \001(\t\"\315\001\n&CMsgClientCheckAppBetaPassword"
  "Response\022\022\n\007eresult\030\001 \001(\005:\0012\022W\n\rbetapass"
  "words\030\004 \003(\0132@.proto.steam.CMsgClientChec"
  "kAppBetaPasswordResponse.BetaPassword\0326\n"
  "\014BetaPassword\022\020\n\010betaname\030\001 \001(\t\022\024\n\014betap"
  "assword\030\002 \001(\t\"\255\004\n\034CMsgClientUpdateAppJob"
  "Report\022\016\n\006app_id\030\001 \001(\r\022\021\n\tdepot_ids\030\002 \003("
  "\r\022\021\n\tapp_state\030\003 \001(\r\022\025\n\rjob_app_error\030\004 "
  "\001(\r\022\025\n\rerror_details\030\005 \001(\t\022\024\n\014job_durati"
  "on\030\006 \001(\r\022\037\n\027files_validation_failed\030\007 \001("
  "\r\022\034\n\024job_bytes_downloaded\030\010 \001(\004\022\030\n\020job_b"
  "ytes_staged\030\t \001(\004\022\026\n\016bytes_comitted\030\n \001("
  "\004\022\027\n\017start_app_state\030\013 \001(\r\022\030\n\020stats_mach"
  "ine_id\030\014 \001(\006\022\023\n\013branch_name\030\r \001(\t\022\036\n\026tot"
  "al_bytes_downloaded\030\016 \001(\004\022\032\n\022total_bytes"
  "_staged\030\017 \001(\004\022\034\n\024total_bytes_restored\030\020 "
  "\001(\004\022\023\n\013is_borrowed\030\021 \001(\010\022\027\n\017is_free_week"
  "end\030\022 \001(\010\022\032\n\022total_bytes_legacy\030\023 \001(\004\022\033\n"
  "\023total_bytes_patched\030\024 \001(\004\022\031\n\021total_byte"
  "s_saved\030\025 \001(\004\"\313\001\n\036CMsgClientDPContentSta"
  "tsReport\022\030\n\020stats_machine_id\030\001 \001(\006\022\024\n\014co"
  "untry_code\030\002 \001(\t\022\017\n\007os_type\030\003 \001(\005\022\020\n\010lan"
  "guage\030\004 \001(\005\022\033\n\023num_install_folders\030\005 \001(\r"
  "\022\033\n\023num_installed_games\030\006 \001(\r\022\034\n\024size_in"
  "stalled_games\030\007 \001(\004\"_\n!CMsgClientGetCDNA"
  "uthTokenResponse\022\022\n\007eresult\030\001 \001(\r:\0012\022\r\n\005"
  "token\030\002 \001(\t\022\027\n\017expiration_time\030\003 \001(\r\"\327\001\n"
  "\032CMsgDownloadRateStatistics\022\017\n\007cell_id\030\001"
  " \001(\r\022@\n\005stats\030\002 \003(\01321.proto.steam.CMsgDo"
  "wnloadRateStatistics.StatsInfo\032f\n\tStatsI"
  "nfo\022\023\n\013source_type\030\001 \001(\r\022\021\n\tsource_id\030\002 "
  "\001(\r\022\017\n\007seconds\030\003 \001(\r\022\r\n\005bytes\030\004 \001(\004\022\021\n\th"
  "ost_name\030\005 \001(\t\"H\n\034CMsgClientRequestAccou"
  "ntData\022\030\n\020account_or_email\030\001 \001(\t\022\016\n\006acti"
  "on\030\002 \001(\r\"\327\001\n$CMsgClientRequestAccountDat"
  "aResponse\022\016\n\006action\030\001 \001(\r\022\017\n\007eresult\030\002 \001"
  "(\r\022\024\n\014account_name\030\003 \001(\t\022\022\n\nct_matches\030\004"
  " \001(\r\022 \n\030account_name_suggestion1\030\005 \001(\t\022 "
  "\n\030account_name_suggestion2\030\006 \001(\t\022 \n\030acco"
  "unt_name_suggestion3\030\007 \001(\t\"\231\001\n\033CMsgClien"
  "tUGSGetGlobalStats\022\016\n\006gameid\030\001 \001(\004\022\036\n\026hi"
  "story_days_requested\030\002 \001(\r\022\033\n\023time_last_"
  "requested\030\003 \001(\007\022\030\n\020first_day_cached\030\004 \001("
  "\r\022\023\n\013days_cached\030\005 \001(\r\"\256\002\n#CMsgClientUGS"
  "GetGlobalStatsResponse\022\022\n\007eresult\030\001 \001(\005:"
  "\0012\022\021\n\ttimestamp\030\002 \001(\007\022\023\n\013day_current\030\003 \001"
  "(\005\022B\n\004days\030\004 \003(\01324.proto.steam.CMsgClien"
  "tUGSGetGlobalStatsResponse.Day\032\206\001\n\003Day\022\016"
  "\n\006day_id\030\001 \001(\r\022H\n\005stats\030\002 \003(\01329.proto.st"
  "eam.CMsgClientUGSGetGlobalStatsResponse."
  "Day.Stat\032%\n\004Stat\022\017\n\007stat_id\030\001 \001(\005\022\014\n\004dat"
  "a\030\002 \001(\003\"\340\003\n\022CMsgGameServerData\022\023\n\013steam_"
  "id_gs\030\001 \001(\006\022\n\n\002ip\030\002 \001(\r\022\022\n\nquery_port\030\003 "
  "\001(\r\022\021\n\tgame_port\030\004 \001(\r\022\025\n\rsourcetv_port\030"
  "\005 \001(\r\022\014\n\004name\030\026 \001(\t\022\016\n\006app_id\030\006 \001(\r\022\017\n\007g"
  "amedir\030\007 \001(\t\022\017\n\007version\030\010 \001(\t\022\017\n\007product"
  "\030\t \001(\t\022\016\n\006region\030\n \001(\t\0227\n\007players\030\013 \003(\0132"
  "&.proto.steam.CMsgGameServerData.Player\022"
  "\023\n\013max_players\030\014 \001(\r\022\021\n\tbot_count\030\r \001(\r\022"
  "\020\n\010password\030\016 \001(\010\022\016\n\006secure\030\017 \001(\010\022\021\n\tded"
  "icated\030\020 \001(\010\022\n\n\002os\030\021 \001(\t\022\021\n\tgame_data\030\022 "
  "\001(\t\022\031\n\021game_data_version\030\023 \001(\r\022\021\n\tgame_t"
  "ype\030\024 \001(\t\022\013\n\003map\030\025 \001(\t\032\032\n\006Player\022\020\n\010stea"
  "m_id\030\001 \001(\006\"H\n\024CMsgGameServerRemove\022\020\n\010st"
  "eam_id\030\001 \001(\006\022\n\n\002ip\030\002 \001(\r\022\022\n\nquery_port\030\003"
  " \001(\r\"\202\001\n\030CMsgClientGMSServerQuery\022\016\n\006app"
  "_id\030\001 \001(\r\022\027\n\017geo_location_ip\030\002 \001(\r\022\023\n\013re"
  "gion_code\030\003 \001(\r\022\023\n\013filter_text\030\004 \001(\t\022\023\n\013"
  "max_servers\030\005 \001(\r\"\300\001\n CMsgGMSClientServe"
  "rQueryResponse\022E\n\007servers\030\001 \003(\01324.proto."
  "steam.CMsgGMSClientServerQueryResponse.S"
  "erver\022\r\n\005error\030\002 \001(\t\032F\n\006Server\022\021\n\tserver"
  "_ip\030\001 \001(\r\022\023\n\013server_port\030\002 \001(\r\022\024\n\014auth_p"
  "layers\030\003 \001(\r\"O\n\027CMsgGameServerOutOfDate\022"
  "\023\n\013steam_id_gs\030\001 \001(\006\022\016\n\006reject\030\002 \001(\010\022\017\n\007"
  "message\030\003 \001(\t\"2\n\031CMsgClientRedeemGuestPa"
  "ss\022\025\n\rguest_pass_id\030\001 \001(\006\"c\n!CMsgClientR"
  "edeemGuestPassResponse\022\022\n\007eresult\030\001 \001(\r:"
  "\0012\022\022\n\npackage_id\030\002 \001(\r\022\026\n\016must_own_appid"
  "\030\003 \001(\r\"8\n\037CMsgClientGetClanActivityCount"
  "s\022\025\n\rsteamid_clans\030\001 \003(\004\"=\n\'CMsgClientGe"
  "tClanActivityCountsResponse\022\022\n\007eresult\030\001"
  " \001(\r:\0012\"y\n\031CMsgClientOGSReportString\022\023\n\013"
  "accumulated\030\001 \001(\010\022\021\n\tsessionid\030\002 \001(\004\022\020\n\010"
  "severity\030\003 \001(\005\022\021\n\tformatter\030\004 \001(\t\022\017\n\007var"
  "args\030\005 \001(\014\"P\n\026CMsgClientOGSReportBug\022\021\n\t"
  "sessionid\030\001 \001(\004\022\017\n\007bugtext\030\002 \001(\t\022\022\n\nscre"
  "enshot\030\003 \001(\014\"0\n\027CMsgGSAssociateWithClan\022"
  "\025\n\rsteam_id_clan\030\001 \001(\006\"L\n\037CMsgGSAssociat"
  "eWithClanResponse\022\025\n\rsteam_id_clan\030\001 \001(\006"
  "\022\022\n\007eresult\030\002 \001(\r:\0012\"A\n#CMsgGSComputeNew"
  "PlayerCompatibility\022\032\n\022steam_id_candidat"
  "e\030\001 \001(\006\"\317\001\n+CMsgGSComputeNewPlayerCompat"
  "ibilityResponse\022\032\n\022steam_id_candidate\030\001 "
  "\001(\006\022\022\n\007eresult\030\002 \001(\r:\0012\022\026\n\016is_clan_membe"
  "r\030\003 \001(\010\022\030\n\020ct_dont_like_you\030\004 \001(\005\022\030\n\020ct_"
  "you_dont_like\030\005 \001(\005\022$\n\034ct_clanmembers_do"
  "nt_like_you\030\006 \001(\005\"\024\n\022CMsgClientSentLogs\""
  "l\n\014CMsgGCClient\022\r\n\005appid\030\001 \001(\r\022\017\n\007msgtyp"
  "e\030\002 \001(\r\022\017\n\007payload\030\003 \001(\014\022\017\n\007steamid\030\004 \001("
  "\006\022\016\n\006gcname\030\005 \001(\t\022\n\n\002ip\030\006 \001(\r\".\n\034CMsgCli"
  "entRequestFreeLicense\022\016\n\006appids\030\002 \003(\r\"n\n"
  "$CMsgClientRequestFreeLicenseResponse\022\022\n"
  "\007eresult\030\001 \001(\r:\0012\022\032\n\022granted_packageids\030"
  "\002 \003(\r\022\026\n\016granted_appids\030\003 \003(\r\"\323\001\n#CMsgDR"
  "MDownloadRequestWithCrashData\022\026\n\016downloa"
  "d_flags\030\001 \001(\r\022\034\n\024download_types_known\030\002 "
  "\001(\r\022\020\n\010guid_drm\030\003 \001(\014\022\022\n\nguid_split\030\004 \001("
  "\014\022\022\n\nguid_merge\030\005 \001(\014\022\023\n\013module_name\030\006 \001"
  "(\t\022\023\n\013module_path\030\007 \001(\t\022\022\n\ncrash_data\030\010 "
  "\001(\014\"\333\001\n\027CMsgDRMDownloadResponse\022\022\n\007eresu"
  "lt\030\001 \001(\r:\0012\022\016\n\006app_id\030\002 \001(\r\022\032\n\022blob_down"
  "load_type\030\003 \001(\r\022\022\n\nmerge_guid\030\004 \001(\014\022\034\n\024d"
  "ownload_file_dfs_ip\030\005 \001(\r\022\036\n\026download_fi"
  "le_dfs_port\030\006 \001(\r\022\031\n\021download_file_url\030\007"
  " \001(\t\022\023\n\013module_path\030\010 \001(\t\"\327\001\n\022CMsgDRMFin"
  "alResult\022\022\n\007eResult\030\001 \001(\r:\0012\022\016\n\006app_id\030\002"
  " \001(\r\022\032\n\022blob_download_type\030\003 \001(\r\022\024\n\014erro"
  "r_detail\030\004 \001(\r\022\022\n\nmerge_guid\030\005 \001(\014\022\034\n\024do"
  "wnload_file_dfs_ip\030\006 \001(\r\022\036\n\026download_fil"
  "e_dfs_port\030\007 \001(\r\022\031\n\021download_file_url\030\010 "
  "\001(\t\"3\n\036CMsgClientDPCheckSpecialSurvey\022\021\n"
  "\tsurvey_id\030\001 \001(\r\"\226\001\n&CMsgClientDPCheckSp"
  "ecialSurveyResponse\022\022\n\007eResult\030\001 \001(\r:\0012\022"
  "\r\n\005state\030\002 \001(\r\022\014\n\004name\030\003 \001(\t\022\022\n\ncustom_u"
  "rl\030\004 \001(\t\022\030\n\020include_software\030\005 \001(\010\022\r\n\005to"
  "ken\030\006 \001(\014\"H\n%CMsgClientDPSendSpecialSurv"
  "eyResponse\022\021\n\tsurvey_id\030\001 \001(\r\022\014\n\004data\030\002 "
  "\001(\014\"O\n*CMsgClientDPSendSpecialSurveyResp"
  "onseReply\022\022\n\007eResult\030\001 \001(\r:\0012\022\r\n\005token\030\002"
  " \001(\014\"W\n\'CMsgClientRequestForgottenPasswo"
  "rdEmail\022\024\n\014account_name\030\001 \001(\t\022\026\n\016passwor"
  "d_tried\030\002 \001(\t\"_\n/CMsgClientRequestForgot"
  "tenPasswordEmailResponse\022\017\n\007eResult\030\001 \001("
  "\r\022\033\n\023use_secret_question\030\002 \001(\010\"6\n\033CMsgCl"
  "ientItemAnnouncements\022\027\n\017count_new_items"
  "\030\001 \001(\r\"$\n\"CMsgClientRequestItemAnnouncem"
  "ents\"\252\001\n\033CMsgClientUserNotifications\022L\n\r"
  "notifications\030\001 \003(\01325.proto.steam.CMsgCl"
  "ientUserNotifications.Notification\032=\n\014No"
  "tification\022\036\n\026user_notification_type\030\001 \001"
  "(\r\022\r\n\005count\030\002 \001(\r\"\210\001\n\036CMsgClientCommentN"
  "otifications\022\032\n\022count_new_comments\030\001 \001(\r"
  "\022 \n\030count_new_comments_owner\030\002 \001(\r\022(\n co"
  "unt_new_comments_subscriptions\030\003 \001(\r\"\'\n%"
  "CMsgClientRequestCommentNotifications\"g\n"
  "$CMsgClientOfflineMessageNotification\022\030\n"
  "\020offline_messages\030\001 \001(\r\022%\n\035friends_with_"
  "offline_messages\030\002 \003(\r\"&\n$CMsgClientRequ"
  "estOfflineMessageCount\"8\n%CMsgClientChat"
  "GetFriendMessageHistory\022\017\n\007steamid\030\001 \001(\006"
  "\"\205\002\n-CMsgClientChatGetFriendMessageHisto"
  "ryResponse\022\017\n\007steamid\030\001 \001(\006\022\017\n\007success\030\002"
  " \001(\r\022Z\n\010messages\030\003 \003(\0132H.proto.steam.CMs"
  "gClientChatGetFriendMessageHistoryRespon"
  "se.FriendMessage\032V\n\rFriendMessage\022\021\n\tacc"
  "ountid\030\001 \001(\r\022\021\n\ttimestamp\030\002 \001(\r\022\017\n\007messa"
  "ge\030\003 \001(\t\022\016\n\006unread\030\004 \001(\010\"9\n7CMsgClientCh"
  "atGetFriendMessageHistoryForOfflineMessa"
  "ges\"7\n!CMsgClientFSGetFriendsSteamLevels"
  "\022\022\n\naccountids\030\001 \003(\r\"\247\001\n)CMsgClientFSGet"
  "FriendsSteamLevelsResponse\022N\n\007friends\030\001 "
  "\003(\0132=.proto.steam.CMsgClientFSGetFriends"
  "SteamLevelsResponse.Friend\032*\n\006Friend\022\021\n\t"
  "accountid\030\001 \001(\r\022\r\n\005level\030\002 \001(\r\"\353\001\n\027CMsgC"
  "lientEmailAddrInfo\022\025\n\remail_address\030\001 \001("
  "\t\022\032\n\022email_is_validated\030\002 \001(\010\022 \n\030email_v"
  "alidation_changed\030\003 \001(\010\022\'\n\037credential_ch"
  "ange_requires_code\030\004 \001(\010\0221\n)password_or_"
  "secretqa_change_requires_code\030\005 \001(\010\022\037\n\027r"
  "emind_user_about_email\030\006 \001(\010\"\267\001\n\036CMsgCRE"
  "EnumeratePublishedFiles\022\016\n\006app_id\030\001 \001(\r\022"
  "\022\n\nquery_type\030\002 \001(\005\022\023\n\013start_index\030\003 \001(\r"
  "\022\014\n\004days\030\004 \001(\r\022\r\n\005count\030\005 \001(\r\022\014\n\004tags\030\006 "
  "\003(\t\022\021\n\tuser_tags\030\007 \003(\t\022\036\n\022matching_file_"
  "type\030\010 \001(\r:\00213\"\251\002\n&CMsgCREEnumeratePubli"
  "shedFilesResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\\\n"
  "\017published_files\030\002 \003(\0132C.proto.steam.CMs"
  "gCREEnumeratePublishedFilesResponse.Publ"
  "ishedFileId\022\025\n\rtotal_results\030\003 \001(\r\032v\n\017Pu"
  "blishedFileId\022\031\n\021published_file_id\030\001 \001(\006"
  "\022\021\n\tvotes_for\030\002 \001(\005\022\025\n\rvotes_against\030\003 \001"
  "(\005\022\017\n\007reports\030\004 \001(\005\022\r\n\005score\030\005 \001(\002\"\227\001\n\026C"
  "MsgCREItemVoteSummary\022O\n\022published_file_"
  "ids\030\001 \003(\01323.proto.steam.CMsgCREItemVoteS"
  "ummary.PublishedFileId\032,\n\017PublishedFileI"
  "d\022\031\n\021published_file_id\030\001 \001(\006\"\206\002\n\036CMsgCRE"
  "ItemVoteSummaryResponse\022\022\n\007eresult\030\001 \001(\005"
  ":\0012\022X\n\023item_vote_summaries\030\002 \003(\0132;.proto"
  ".steam.CMsgCREItemVoteSummaryResponse.It"
  "emVoteSummary\032v\n\017ItemVoteSummary\022\031\n\021publ"
  "ished_file_id\030\001 \001(\006\022\021\n\tvotes_for\030\002 \001(\005\022\025"
  "\n\rvotes_against\030\003 \001(\005\022\017\n\007reports\030\004 \001(\005\022\r"
  "\n\005score\030\005 \001(\002\"P\n\"CMsgCREUpdateUserPublis"
  "hedItemVote\022\031\n\021published_file_id\030\001 \001(\006\022\017"
  "\n\007vote_up\030\002 \001(\010\"@\n*CMsgCREUpdateUserPubl"
  "ishedItemVoteResponse\022\022\n\007eresult\030\001 \001(\005:\001"
  "2\"\267\001\n&CMsgCREGetUserPublishedItemVoteDet"
  "ails\022_\n\022published_file_ids\030\001 \003(\0132C.proto"
  ".steam.CMsgCREGetUserPublishedItemVoteDe"
  "tails.PublishedFileId\032,\n\017PublishedFileId"
  "\022\031\n\021published_file_id\030\001 \001(\006\"\366\001\n.CMsgCREG"
  "etUserPublishedItemVoteDetailsResponse\022\022"
  "\n\007eresult\030\001 \001(\005:\0012\022n\n\026user_item_vote_det"
  "ails\030\002 \003(\0132N.proto.steam.CMsgCREGetUserP"
  "ublishedItemVoteDetailsResponse.UserItem"
  "VoteDetail\032@\n\022UserItemVoteDetail\022\031\n\021publ"
  "ished_file_id\030\001 \001(\006\022\017\n\004vote\030\002 \001(\005:\0010\"\305\001\n"
  "\030CMsgGameServerPingSample\022\r\n\005my_ip\030\001 \001(\007"
  "\022\021\n\tgs_app_id\030\002 \001(\005\022@\n\ngs_samples\030\003 \003(\0132"
  ",.proto.steam.CMsgGameServerPingSample.S"
  "ample\032E\n\006Sample\022\n\n\002ip\030\001 \001(\007\022\023\n\013avg_ping_"
  "ms\030\002 \001(\r\022\032\n\022stddev_ping_ms_x10\030\003 \001(\r\"*\n\026"
  "CMsgFSGetFollowerCount\022\020\n\010steam_id\030\001 \001(\006"
  "\"F\n\036CMsgFSGetFollowerCountResponse\022\022\n\007er"
  "esult\030\001 \001(\005:\0012\022\020\n\005count\030\002 \001(\005:\0010\"(\n\024CMsg"
  "FSGetIsFollowing\022\020\n\010steam_id\030\001 \001(\006\"O\n\034CM"
  "sgFSGetIsFollowingResponse\022\022\n\007eresult\030\001 "
  "\001(\005:\0012\022\033\n\014is_following\030\002 \001(\010:\005false\"3\n\034C"
  "MsgFSEnumerateFollowingList\022\023\n\013start_ind"
  "ex\030\001 \001(\r\"d\n$CMsgFSEnumerateFollowingList"
  "Response\022\022\n\007eresult\030\001 \001(\005:\0012\022\025\n\rtotal_re"
  "sults\030\002 \001(\005\022\021\n\tsteam_ids\030\003 \003(\006\"0\n\037CMsgDP"
  "GetNumberOfCurrentPlayers\022\r\n\005appid\030\001 \001(\r"
  "\"S\n\'CMsgDPGetNumberOfCurrentPlayersRespo"
  "nse\022\022\n\007eresult\030\001 \001(\005:\0012\022\024\n\014player_count\030"
  "\002 \001(\005\"a\n#CMsgClientFriendUserStatusPubli"
  "shed\022\026\n\016friend_steamid\030\001 \001(\006\022\r\n\005appid\030\002 "
  "\001(\r\022\023\n\013status_text\030\003 \001(\t\"b\n\027CMsgClientSe"
  "rviceMethod\022\023\n\013method_name\030\001 \001(\t\022\031\n\021seri"
  "alized_method\030\002 \001(\014\022\027\n\017is_notification\030\003"
  " \001(\010\"Z\n\037CMsgClientServiceMethodResponse\022"
  "\023\n\013method_name\030\001 \001(\t\022\"\n\032serialized_metho"
  "d_response\030\002 \001(\014\"5\n\020CMsgClientUIMode\022\016\n\006"
  "uimode\030\001 \001(\r\022\021\n\tchat_mode\030\002 \001(\r\"<\n&CMsgC"
  "lientVanityURLChangedNotification\022\022\n\nvan"
  "ity_url\030\001 \001(\t\"y\n%CMsgClientAuthorizeLoca"
  "lDeviceRequest\022\032\n\022device_description\030\001 \001"
  "(\t\022\030\n\020owner_account_id\030\002 \001(\r\022\032\n\022local_de"
  "vice_token\030\003 \001(\004\"k\n\036CMsgClientAuthorizeL"
  "ocalDevice\022\022\n\007eresult\030\001 \001(\005:\0012\022\030\n\020owner_"
  "account_id\030\002 \001(\r\022\033\n\023authed_device_token\030"
  "\003 \001(\004\"v\n*CMsgClientAuthorizeLocalDeviceN"
  "otification\022\022\n\007eresult\030\001 \001(\005:\0012\022\030\n\020owner"
  "_account_id\030\002 \001(\r\022\032\n\022local_device_token\030"
  "\003 \001(\004\"n\n\"CMsgClientDeauthorizeDeviceRequ"
  "est\022\"\n\032deauthorization_account_id\030\001 \001(\r\022"
  "$\n\034deauthorization_device_token\030\002 \001(\004\"U\n"
  "\033CMsgClientDeauthorizeDevice\022\022\n\007eresult\030"
  "\001 \001(\005:\0012\022\"\n\032deauthorization_account_id\030\002"
  " \001(\r\"\335\001\n&CMsgClientUseLocalDeviceAuthori"
  "zations\022 \n\030authorization_account_id\030\001 \003("
  "\r\022V\n\rdevice_tokens\030\002 \003(\0132\?.proto.steam.C"
  "MsgClientUseLocalDeviceAuthorizations.De"
  "viceToken\0329\n\013DeviceToken\022\030\n\020owner_accoun"
  "t_id\030\001 \001(\r\022\020\n\010token_id\030\002 \001(\004\" \n\036CMsgClie"
  "ntGetAuthorizedDevices\"\271\002\n&CMsgClientGet"
  "AuthorizedDevicesResponse\022\022\n\007eresult\030\001 \001"
  "(\005:\0012\022_\n\021authorized_device\030\002 \003(\0132D.proto"
  ".steam.CMsgClientGetAuthorizedDevicesRes"
  "ponse.AuthorizedDevice\032\231\001\n\020AuthorizedDev"
  "ice\022\031\n\021auth_device_token\030\001 \001(\004\022\023\n\013device"
  "_name\030\002 \001(\t\022\030\n\020last_access_time\030\003 \001(\r\022\023\n"
  "\013borrower_id\030\004 \001(\r\022\022\n\nis_pending\030\005 \001(\010\022\022"
  "\n\napp_played\030\006 \001(\r\"\316\001\n!CMsgClientSharedL"
  "ibraryLockStatus\022T\n\016locked_library\030\001 \003(\013"
  "2<.proto.steam.CMsgClientSharedLibraryLo"
  "ckStatus.LockedLibrary\022\035\n\025own_library_lo"
  "cked_by\030\002 \001(\r\0324\n\rLockedLibrary\022\020\n\010owner_"
  "id\030\001 \001(\r\022\021\n\tlocked_by\030\002 \001(\r\"\263\001\n\"CMsgClie"
  "ntSharedLibraryStopPlaying\022\024\n\014seconds_le"
  "ft\030\001 \001(\005\022J\n\tstop_apps\030\002 \003(\01327.proto.stea"
  "m.CMsgClientSharedLibraryStopPlaying.Sto"
  "pApp\032+\n\007StopApp\022\016\n\006app_id\030\001 \001(\r\022\020\n\010owner"
  "_id\030\002 \001(\r\"\361\001\n\025CMsgClientServiceCall\022\025\n\rs"
  "ysid_routing\030\001 \001(\014\022\023\n\013call_handle\030\002 \001(\r\022"
  "\022\n\nmodule_crc\030\003 \001(\r\022\023\n\013module_hash\030\004 \001(\014"
  "\022\023\n\013function_id\030\005 \001(\r\022\026\n\016cub_output_max\030"
  "\006 \001(\r\022\r\n\005flags\030\007 \001(\r\022\025\n\rcallparameter\030\010 "
  "\001(\014\022\021\n\tping_only\030\t \001(\010\022\035\n\025max_outstandin"
  "g_calls\030\n \001(\r\"Z\n\027CMsgClientServiceModule"
  "\022\022\n\nmodule_crc\030\001 \001(\r\022\023\n\013module_hash\030\002 \001("
  "\014\022\026\n\016module_content\030\003 \001(\014\"\270\004\n\035CMsgClient"
  "ServiceCallResponse\022\025\n\rsysid_routing\030\001 \001"
  "(\014\022\023\n\013call_handle\030\002 \001(\r\022\022\n\nmodule_crc\030\003 "
  "\001(\r\022\023\n\013module_hash\030\004 \001(\014\022\023\n\013ecallresult\030"
  "\005 \001(\r\022\026\n\016result_content\030\006 \001(\014\022\027\n\017os_vers"
  "ion_info\030\007 \001(\014\022\023\n\013system_info\030\010 \001(\014\022\024\n\014l"
  "oad_address\030\t \001(\006\022\030\n\020exception_record\030\n "
  "\001(\014\022 \n\030portable_os_version_info\030\013 \001(\014\022\034\n"
  "\024portable_system_info\030\014 \001(\014\022\025\n\rwas_conve"
  "rted\030\r \001(\010\022\027\n\017internal_result\030\016 \001(\r\022\025\n\rc"
  "urrent_count\030\017 \001(\r\022\030\n\020last_call_handle\030\020"
  " \001(\r\022\034\n\024last_call_module_crc\030\021 \001(\r\022\037\n\027la"
  "st_call_sysid_routing\030\022 \001(\014\022\030\n\020last_ecal"
  "lresult\030\023 \001(\r\022\034\n\024last_callissue_delta\030\024 "
  "\001(\r\022\037\n\027last_callcomplete_delta\030\025 \001(\r\"\027\n\025"
  "CMsgAMUnlockStreaming\"K\n\035CMsgAMUnlockStr"
  "eamingResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\026\n\016en"
  "cryption_key\030\002 \001(\014\"\022\n\020CMsgAMUnlockHEVC\"."
  "\n\030CMsgAMUnlockHEVCResponse\022\022\n\007eresult\030\001 "
  "\001(\005:\0012\"M\n\035CMsgClientPlayingSessionState\022"
  "\027\n\017playing_blocked\030\002 \001(\010\022\023\n\013playing_app\030"
  "\003 \001(\r\"6\n\034CMsgClientKickPlayingSession\022\026\n"
  "\016only_stop_game\030\001 \001(\010\"v\n\037CMsgClientVoice"
  "CallPreAuthorize\022\026\n\016caller_steamid\030\001 \001(\006"
  "\022\030\n\020receiver_steamid\030\002 \001(\006\022\021\n\tcaller_id\030"
  "\003 \001(\005\022\016\n\006hangup\030\004 \001(\010\"\202\001\n\'CMsgClientVoic"
  "eCallPreAuthorizeResponse\022\026\n\016caller_stea"
  "mid\030\001 \001(\006\022\030\n\020receiver_steamid\030\002 \001(\006\022\022\n\007e"
  "result\030\003 \001(\005:\0012\022\021\n\tcaller_id\030\004 \001(\005B\005H\001\200\001"
  "\000"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_steammessages_5fclientserver_5f2_2eproto = {
  false, InitDefaults_steammessages_5fclientserver_5f2_2eproto, 
  descriptor_table_protodef_steammessages_5fclientserver_5f2_2eproto,
  "steammessages_clientserver_2.proto", &assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto, 21841,
};

void AddDescriptors_steammessages_5fclientserver_5f2_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_steammessages_5fbase_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_steammessages_5fclientserver_5f2_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_steammessages_5fclientserver_5f2_2eproto = []() { AddDescriptors_steammessages_5fclientserver_5f2_2eproto(); return true; }();
namespace proto {
namespace steam {

// ===================================================================

void CMsgClientUCMAddScreenshot_Tag::InitAsDefaultInstance() {
}
class CMsgClientUCMAddScreenshot_Tag::HasBitSetters {
 public:
  static void set_has_tag_name(CMsgClientUCMAddScreenshot_Tag* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_tag_value(CMsgClientUCMAddScreenshot_Tag* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMAddScreenshot_Tag::kTagNameFieldNumber;
const int CMsgClientUCMAddScreenshot_Tag::kTagValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMAddScreenshot_Tag::CMsgClientUCMAddScreenshot_Tag()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMAddScreenshot.Tag)
}
CMsgClientUCMAddScreenshot_Tag::CMsgClientUCMAddScreenshot_Tag(const CMsgClientUCMAddScreenshot_Tag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag_name()) {
    tag_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_name_);
  }
  tag_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag_value()) {
    tag_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_value_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMAddScreenshot.Tag)
}

void CMsgClientUCMAddScreenshot_Tag::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUCMAddScreenshot_Tag_steammessages_5fclientserver_5f2_2eproto.base);
  tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientUCMAddScreenshot_Tag::~CMsgClientUCMAddScreenshot_Tag() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  SharedDtor();
}

void CMsgClientUCMAddScreenshot_Tag::SharedDtor() {
  tag_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMAddScreenshot_Tag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMAddScreenshot_Tag& CMsgClientUCMAddScreenshot_Tag::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMAddScreenshot_Tag_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMAddScreenshot_Tag::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      tag_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      tag_value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMAddScreenshot_Tag::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMAddScreenshot_Tag*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string tag_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_name");
        object = msg->mutable_tag_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string tag_value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_value");
        object = msg->mutable_tag_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMAddScreenshot_Tag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string tag_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag_name().data(), static_cast<int>(this->tag_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tag_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag_value().data(), static_cast<int>(this->tag_value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMAddScreenshot_Tag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string tag_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag_name().data(), static_cast<int>(this->tag_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tag_name(), output);
  }

  // optional string tag_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag_value().data(), static_cast<int>(this->tag_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tag_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMAddScreenshot.Tag)
}

::google::protobuf::uint8* CMsgClientUCMAddScreenshot_Tag::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string tag_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag_name().data(), static_cast<int>(this->tag_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tag_name(), target);
  }

  // optional string tag_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag_value().data(), static_cast<int>(this->tag_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tag_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  return target;
}

size_t CMsgClientUCMAddScreenshot_Tag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string tag_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag_name());
    }

    // optional string tag_value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMAddScreenshot_Tag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMAddScreenshot_Tag* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMAddScreenshot_Tag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMAddScreenshot.Tag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMAddScreenshot.Tag)
    MergeFrom(*source);
  }
}

void CMsgClientUCMAddScreenshot_Tag::MergeFrom(const CMsgClientUCMAddScreenshot_Tag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      tag_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      tag_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_value_);
    }
  }
}

void CMsgClientUCMAddScreenshot_Tag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMAddScreenshot_Tag::CopyFrom(const CMsgClientUCMAddScreenshot_Tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMAddScreenshot_Tag::IsInitialized() const {
  return true;
}

void CMsgClientUCMAddScreenshot_Tag::Swap(CMsgClientUCMAddScreenshot_Tag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMAddScreenshot_Tag::InternalSwap(CMsgClientUCMAddScreenshot_Tag* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  tag_name_.Swap(&other->tag_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tag_value_.Swap(&other->tag_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CMsgClientUCMAddScreenshot_Tag::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMAddScreenshot::InitAsDefaultInstance() {
}
class CMsgClientUCMAddScreenshot::HasBitSetters {
 public:
  static void set_has_appid(CMsgClientUCMAddScreenshot* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_filename(CMsgClientUCMAddScreenshot* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_thumbname(CMsgClientUCMAddScreenshot* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_vr_filename(CMsgClientUCMAddScreenshot* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_rtime32_created(CMsgClientUCMAddScreenshot* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_width(CMsgClientUCMAddScreenshot* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_height(CMsgClientUCMAddScreenshot* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_permissions(CMsgClientUCMAddScreenshot* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
  static void set_has_caption(CMsgClientUCMAddScreenshot* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_shortcut_name(CMsgClientUCMAddScreenshot* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_spoiler_tag(CMsgClientUCMAddScreenshot* msg) {
    msg->_has_bits_[0] |= 0x00000400u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMAddScreenshot::kAppidFieldNumber;
const int CMsgClientUCMAddScreenshot::kFilenameFieldNumber;
const int CMsgClientUCMAddScreenshot::kThumbnameFieldNumber;
const int CMsgClientUCMAddScreenshot::kVrFilenameFieldNumber;
const int CMsgClientUCMAddScreenshot::kRtime32CreatedFieldNumber;
const int CMsgClientUCMAddScreenshot::kWidthFieldNumber;
const int CMsgClientUCMAddScreenshot::kHeightFieldNumber;
const int CMsgClientUCMAddScreenshot::kPermissionsFieldNumber;
const int CMsgClientUCMAddScreenshot::kCaptionFieldNumber;
const int CMsgClientUCMAddScreenshot::kShortcutNameFieldNumber;
const int CMsgClientUCMAddScreenshot::kTagFieldNumber;
const int CMsgClientUCMAddScreenshot::kTaggedSteamidFieldNumber;
const int CMsgClientUCMAddScreenshot::kSpoilerTagFieldNumber;
const int CMsgClientUCMAddScreenshot::kTaggedPublishedfileidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMAddScreenshot::CMsgClientUCMAddScreenshot()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMAddScreenshot)
}
CMsgClientUCMAddScreenshot::CMsgClientUCMAddScreenshot(const CMsgClientUCMAddScreenshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      tag_(from.tag_),
      tagged_steamid_(from.tagged_steamid_),
      tagged_publishedfileid_(from.tagged_publishedfileid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  thumbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_thumbname()) {
    thumbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbname_);
  }
  caption_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_caption()) {
    caption_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.caption_);
  }
  shortcut_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_shortcut_name()) {
    shortcut_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shortcut_name_);
  }
  vr_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vr_filename()) {
    vr_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vr_filename_);
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&spoiler_tag_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(spoiler_tag_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMAddScreenshot)
}

void CMsgClientUCMAddScreenshot::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUCMAddScreenshot_steammessages_5fclientserver_5f2_2eproto.base);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  caption_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shortcut_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vr_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&spoiler_tag_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(spoiler_tag_));
}

CMsgClientUCMAddScreenshot::~CMsgClientUCMAddScreenshot() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMAddScreenshot)
  SharedDtor();
}

void CMsgClientUCMAddScreenshot::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  caption_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shortcut_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vr_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMAddScreenshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMAddScreenshot& CMsgClientUCMAddScreenshot::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMAddScreenshot_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMAddScreenshot::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMAddScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tag_.Clear();
  tagged_steamid_.Clear();
  tagged_publishedfileid_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      thumbname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      caption_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      shortcut_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      vr_filename_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&width_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(width_));
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&spoiler_tag_) -
        reinterpret_cast<char*>(&height_)) + sizeof(spoiler_tag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMAddScreenshot::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMAddScreenshot*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_appid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string filename = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMAddScreenshot.filename");
        object = msg->mutable_filename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string thumbname = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMAddScreenshot.thumbname");
        object = msg->mutable_thumbname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional fixed32 rtime32_created = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 37) goto handle_unusual;
        msg->set_rtime32_created(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      // optional uint32 width = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_width(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 height = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_height(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 permissions = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_permissions(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string caption = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMAddScreenshot.caption");
        object = msg->mutable_caption();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string shortcut_name = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMAddScreenshot.shortcut_name");
        object = msg->mutable_shortcut_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .proto.steam.CMsgClientUCMAddScreenshot.Tag tag = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientUCMAddScreenshot_Tag::_InternalParse;
          object = msg->add_tag();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 82 && (ptr += 1));
        break;
      }
      // repeated fixed64 tagged_steamid = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) == 89) {
          do {
            msg->add_tagged_steamid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
            ptr += sizeof(::google::protobuf::uint64);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 89 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedFixed64Parser;
        object = msg->mutable_tagged_steamid();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional bool spoiler_tag = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_spoiler_tag(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint64 tagged_publishedfileid = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) == 104) {
          do {
            msg->add_tagged_publishedfileid(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 104 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
        object = msg->mutable_tagged_publishedfileid();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional string vr_filename = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMAddScreenshot.vr_filename");
        object = msg->mutable_vr_filename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMAddScreenshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMAddScreenshot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_appid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMAddScreenshot.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string thumbname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->thumbname().data(), static_cast<int>(this->thumbname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMAddScreenshot.thumbname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime32_created = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (37 & 0xFF)) {
          HasBitSetters::set_has_rtime32_created(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime32_created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_width(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_height(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 permissions = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_permissions(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &permissions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string caption = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_caption()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->caption().data(), static_cast<int>(this->caption().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMAddScreenshot.caption");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string shortcut_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shortcut_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->shortcut_name().data(), static_cast<int>(this->shortcut_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMAddScreenshot.shortcut_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMAddScreenshot.Tag tag = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 tagged_steamid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (89 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 89u, input, this->mutable_tagged_steamid())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_tagged_steamid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool spoiler_tag = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {
          HasBitSetters::set_has_spoiler_tag(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &spoiler_tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 tagged_publishedfileid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 104u, input, this->mutable_tagged_publishedfileid())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_tagged_publishedfileid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string vr_filename = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vr_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vr_filename().data(), static_cast<int>(this->vr_filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMAddScreenshot.vr_filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMAddScreenshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMAddScreenshot)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMAddScreenshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMAddScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional string filename = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filename(), output);
  }

  // optional string thumbname = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->thumbname().data(), static_cast<int>(this->thumbname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.thumbname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->thumbname(), output);
  }

  // optional fixed32 rtime32_created = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->rtime32_created(), output);
  }

  // optional uint32 width = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->width(), output);
  }

  // optional uint32 height = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->height(), output);
  }

  // optional uint32 permissions = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->permissions(), output);
  }

  // optional string caption = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->caption().data(), static_cast<int>(this->caption().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.caption");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->caption(), output);
  }

  // optional string shortcut_name = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shortcut_name().data(), static_cast<int>(this->shortcut_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.shortcut_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->shortcut_name(), output);
  }

  // repeated .proto.steam.CMsgClientUCMAddScreenshot.Tag tag = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tag_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->tag(static_cast<int>(i)),
      output);
  }

  // repeated fixed64 tagged_steamid = 11;
  for (int i = 0, n = this->tagged_steamid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      11, this->tagged_steamid(i), output);
  }

  // optional bool spoiler_tag = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->spoiler_tag(), output);
  }

  // repeated uint64 tagged_publishedfileid = 13;
  for (int i = 0, n = this->tagged_publishedfileid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      13, this->tagged_publishedfileid(i), output);
  }

  // optional string vr_filename = 14;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vr_filename().data(), static_cast<int>(this->vr_filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.vr_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->vr_filename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMAddScreenshot)
}

::google::protobuf::uint8* CMsgClientUCMAddScreenshot::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMAddScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional string filename = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filename(), target);
  }

  // optional string thumbname = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->thumbname().data(), static_cast<int>(this->thumbname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.thumbname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->thumbname(), target);
  }

  // optional fixed32 rtime32_created = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->rtime32_created(), target);
  }

  // optional uint32 width = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->width(), target);
  }

  // optional uint32 height = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->height(), target);
  }

  // optional uint32 permissions = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->permissions(), target);
  }

  // optional string caption = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->caption().data(), static_cast<int>(this->caption().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.caption");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->caption(), target);
  }

  // optional string shortcut_name = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shortcut_name().data(), static_cast<int>(this->shortcut_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.shortcut_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->shortcut_name(), target);
  }

  // repeated .proto.steam.CMsgClientUCMAddScreenshot.Tag tag = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tag_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->tag(static_cast<int>(i)), target);
  }

  // repeated fixed64 tagged_steamid = 11;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(11, this->tagged_steamid_, target);

  // optional bool spoiler_tag = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->spoiler_tag(), target);
  }

  // repeated uint64 tagged_publishedfileid = 13;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(13, this->tagged_publishedfileid_, target);

  // optional string vr_filename = 14;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vr_filename().data(), static_cast<int>(this->vr_filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.vr_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->vr_filename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMAddScreenshot)
  return target;
}

size_t CMsgClientUCMAddScreenshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMAddScreenshot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientUCMAddScreenshot.Tag tag = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->tag_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tag(static_cast<int>(i)));
    }
  }

  // repeated fixed64 tagged_steamid = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->tagged_steamid_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->tagged_steamid_size());
    total_size += data_size;
  }

  // repeated uint64 tagged_publishedfileid = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->tagged_publishedfileid_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->tagged_publishedfileid_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string filename = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional string thumbname = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->thumbname());
    }

    // optional string caption = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->caption());
    }

    // optional string shortcut_name = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shortcut_name());
    }

    // optional string vr_filename = 14;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vr_filename());
    }

    // optional uint32 appid = 1;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional fixed32 rtime32_created = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 4;
    }

    // optional uint32 width = 5;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width());
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional uint32 height = 6;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

    // optional uint32 permissions = 7;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->permissions());
    }

    // optional bool spoiler_tag = 12;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMAddScreenshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMAddScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMAddScreenshot* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMAddScreenshot>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMAddScreenshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMAddScreenshot)
    MergeFrom(*source);
  }
}

void CMsgClientUCMAddScreenshot::MergeFrom(const CMsgClientUCMAddScreenshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMAddScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tag_.MergeFrom(from.tag_);
  tagged_steamid_.MergeFrom(from.tagged_steamid_);
  tagged_publishedfileid_.MergeFrom(from.tagged_publishedfileid_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      thumbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbname_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      caption_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.caption_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      shortcut_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shortcut_name_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      vr_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vr_filename_);
    }
    if (cached_has_bits & 0x00000020u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000040u) {
      rtime32_created_ = from.rtime32_created_;
    }
    if (cached_has_bits & 0x00000080u) {
      width_ = from.width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000200u) {
      permissions_ = from.permissions_;
    }
    if (cached_has_bits & 0x00000400u) {
      spoiler_tag_ = from.spoiler_tag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMAddScreenshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMAddScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMAddScreenshot::CopyFrom(const CMsgClientUCMAddScreenshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMAddScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMAddScreenshot::IsInitialized() const {
  return true;
}

void CMsgClientUCMAddScreenshot::Swap(CMsgClientUCMAddScreenshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMAddScreenshot::InternalSwap(CMsgClientUCMAddScreenshot* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&tag_)->InternalSwap(CastToBase(&other->tag_));
  tagged_steamid_.InternalSwap(&other->tagged_steamid_);
  tagged_publishedfileid_.InternalSwap(&other->tagged_publishedfileid_);
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  thumbname_.Swap(&other->thumbname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  caption_.Swap(&other->caption_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  shortcut_name_.Swap(&other->shortcut_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vr_filename_.Swap(&other->vr_filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(rtime32_created_, other->rtime32_created_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(permissions_, other->permissions_);
  swap(spoiler_tag_, other->spoiler_tag_);
}

::google::protobuf::Metadata CMsgClientUCMAddScreenshot::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMAddScreenshotResponse::InitAsDefaultInstance() {
}
class CMsgClientUCMAddScreenshotResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientUCMAddScreenshotResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_screenshotid(CMsgClientUCMAddScreenshotResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMAddScreenshotResponse::kEresultFieldNumber;
const int CMsgClientUCMAddScreenshotResponse::kScreenshotidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMAddScreenshotResponse::CMsgClientUCMAddScreenshotResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMAddScreenshotResponse)
}
CMsgClientUCMAddScreenshotResponse::CMsgClientUCMAddScreenshotResponse(const CMsgClientUCMAddScreenshotResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&eresult_, &from.eresult_,
    static_cast<size_t>(reinterpret_cast<char*>(&screenshotid_) -
    reinterpret_cast<char*>(&eresult_)) + sizeof(screenshotid_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMAddScreenshotResponse)
}

void CMsgClientUCMAddScreenshotResponse::SharedCtor() {
  eresult_ = 2;
  screenshotid_ = PROTOBUF_ULONGLONG(18446744073709551615);
}

CMsgClientUCMAddScreenshotResponse::~CMsgClientUCMAddScreenshotResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMAddScreenshotResponse)
  SharedDtor();
}

void CMsgClientUCMAddScreenshotResponse::SharedDtor() {
}

void CMsgClientUCMAddScreenshotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMAddScreenshotResponse& CMsgClientUCMAddScreenshotResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMAddScreenshotResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMAddScreenshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    eresult_ = 2;
    screenshotid_ = PROTOBUF_ULONGLONG(18446744073709551615);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMAddScreenshotResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMAddScreenshotResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_screenshotid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMAddScreenshotResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {
          HasBitSetters::set_has_screenshotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &screenshotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMAddScreenshotResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMAddScreenshotResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMAddScreenshotResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->screenshotid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMAddScreenshotResponse)
}

::google::protobuf::uint8* CMsgClientUCMAddScreenshotResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->screenshotid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMAddScreenshotResponse)
  return target;
}

size_t CMsgClientUCMAddScreenshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

    // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMAddScreenshotResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMAddScreenshotResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMAddScreenshotResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMAddScreenshotResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMAddScreenshotResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMAddScreenshotResponse::MergeFrom(const CMsgClientUCMAddScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000002u) {
      screenshotid_ = from.screenshotid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMAddScreenshotResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMAddScreenshotResponse::CopyFrom(const CMsgClientUCMAddScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMAddScreenshotResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMAddScreenshotResponse::Swap(CMsgClientUCMAddScreenshotResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMAddScreenshotResponse::InternalSwap(CMsgClientUCMAddScreenshotResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(eresult_, other->eresult_);
  swap(screenshotid_, other->screenshotid_);
}

::google::protobuf::Metadata CMsgClientUCMAddScreenshotResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMDeleteScreenshot::InitAsDefaultInstance() {
}
class CMsgClientUCMDeleteScreenshot::HasBitSetters {
 public:
  static void set_has_screenshotid(CMsgClientUCMDeleteScreenshot* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMDeleteScreenshot::kScreenshotidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMDeleteScreenshot::CMsgClientUCMDeleteScreenshot()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMDeleteScreenshot)
}
CMsgClientUCMDeleteScreenshot::CMsgClientUCMDeleteScreenshot(const CMsgClientUCMDeleteScreenshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  screenshotid_ = from.screenshotid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMDeleteScreenshot)
}

void CMsgClientUCMDeleteScreenshot::SharedCtor() {
  screenshotid_ = PROTOBUF_ULONGLONG(18446744073709551615);
}

CMsgClientUCMDeleteScreenshot::~CMsgClientUCMDeleteScreenshot() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMDeleteScreenshot)
  SharedDtor();
}

void CMsgClientUCMDeleteScreenshot::SharedDtor() {
}

void CMsgClientUCMDeleteScreenshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMDeleteScreenshot& CMsgClientUCMDeleteScreenshot::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMDeleteScreenshot_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMDeleteScreenshot::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  screenshotid_ = PROTOBUF_ULONGLONG(18446744073709551615);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMDeleteScreenshot::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMDeleteScreenshot*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_screenshotid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMDeleteScreenshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_screenshotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &screenshotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMDeleteScreenshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMDeleteScreenshot)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMDeleteScreenshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->screenshotid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMDeleteScreenshot)
}

::google::protobuf::uint8* CMsgClientUCMDeleteScreenshot::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->screenshotid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMDeleteScreenshot)
  return target;
}

size_t CMsgClientUCMDeleteScreenshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMDeleteScreenshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeleteScreenshot* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMDeleteScreenshot>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMDeleteScreenshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMDeleteScreenshot)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeleteScreenshot::MergeFrom(const CMsgClientUCMDeleteScreenshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_screenshotid()) {
    set_screenshotid(from.screenshotid());
  }
}

void CMsgClientUCMDeleteScreenshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeleteScreenshot::CopyFrom(const CMsgClientUCMDeleteScreenshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeleteScreenshot::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeleteScreenshot::Swap(CMsgClientUCMDeleteScreenshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMDeleteScreenshot::InternalSwap(CMsgClientUCMDeleteScreenshot* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(screenshotid_, other->screenshotid_);
}

::google::protobuf::Metadata CMsgClientUCMDeleteScreenshot::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMDeleteScreenshotResponse::InitAsDefaultInstance() {
}
class CMsgClientUCMDeleteScreenshotResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientUCMDeleteScreenshotResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMDeleteScreenshotResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMDeleteScreenshotResponse::CMsgClientUCMDeleteScreenshotResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
}
CMsgClientUCMDeleteScreenshotResponse::CMsgClientUCMDeleteScreenshotResponse(const CMsgClientUCMDeleteScreenshotResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
}

void CMsgClientUCMDeleteScreenshotResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgClientUCMDeleteScreenshotResponse::~CMsgClientUCMDeleteScreenshotResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  SharedDtor();
}

void CMsgClientUCMDeleteScreenshotResponse::SharedDtor() {
}

void CMsgClientUCMDeleteScreenshotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMDeleteScreenshotResponse& CMsgClientUCMDeleteScreenshotResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMDeleteScreenshotResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMDeleteScreenshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMDeleteScreenshotResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMDeleteScreenshotResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMDeleteScreenshotResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMDeleteScreenshotResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
}

::google::protobuf::uint8* CMsgClientUCMDeleteScreenshotResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  return target;
}

size_t CMsgClientUCMDeleteScreenshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 eresult = 1 [default = 2];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMDeleteScreenshotResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeleteScreenshotResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMDeleteScreenshotResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeleteScreenshotResponse::MergeFrom(const CMsgClientUCMDeleteScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientUCMDeleteScreenshotResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeleteScreenshotResponse::CopyFrom(const CMsgClientUCMDeleteScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeleteScreenshotResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeleteScreenshotResponse::Swap(CMsgClientUCMDeleteScreenshotResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMDeleteScreenshotResponse::InternalSwap(CMsgClientUCMDeleteScreenshotResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientUCMDeleteScreenshotResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMPublishFile::InitAsDefaultInstance() {
}
class CMsgClientUCMPublishFile::HasBitSetters {
 public:
  static void set_has_app_id(CMsgClientUCMPublishFile* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_file_name(CMsgClientUCMPublishFile* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_preview_file_name(CMsgClientUCMPublishFile* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_consumer_app_id(CMsgClientUCMPublishFile* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_title(CMsgClientUCMPublishFile* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_description(CMsgClientUCMPublishFile* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_workshop_file(CMsgClientUCMPublishFile* msg) {
    msg->_has_bits_[0] |= 0x00000800u;
  }
  static void set_has_visibility(CMsgClientUCMPublishFile* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
  static void set_has_file_type(CMsgClientUCMPublishFile* msg) {
    msg->_has_bits_[0] |= 0x00000400u;
  }
  static void set_has_url(CMsgClientUCMPublishFile* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_video_provider(CMsgClientUCMPublishFile* msg) {
    msg->_has_bits_[0] |= 0x00002000u;
  }
  static void set_has_video_account_name(CMsgClientUCMPublishFile* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_video_identifier(CMsgClientUCMPublishFile* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_in_progress(CMsgClientUCMPublishFile* msg) {
    msg->_has_bits_[0] |= 0x00001000u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishFile::kAppIdFieldNumber;
const int CMsgClientUCMPublishFile::kFileNameFieldNumber;
const int CMsgClientUCMPublishFile::kPreviewFileNameFieldNumber;
const int CMsgClientUCMPublishFile::kConsumerAppIdFieldNumber;
const int CMsgClientUCMPublishFile::kTitleFieldNumber;
const int CMsgClientUCMPublishFile::kDescriptionFieldNumber;
const int CMsgClientUCMPublishFile::kTagsFieldNumber;
const int CMsgClientUCMPublishFile::kWorkshopFileFieldNumber;
const int CMsgClientUCMPublishFile::kVisibilityFieldNumber;
const int CMsgClientUCMPublishFile::kFileTypeFieldNumber;
const int CMsgClientUCMPublishFile::kUrlFieldNumber;
const int CMsgClientUCMPublishFile::kVideoProviderFieldNumber;
const int CMsgClientUCMPublishFile::kVideoAccountNameFieldNumber;
const int CMsgClientUCMPublishFile::kVideoIdentifierFieldNumber;
const int CMsgClientUCMPublishFile::kInProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishFile::CMsgClientUCMPublishFile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMPublishFile)
}
CMsgClientUCMPublishFile::CMsgClientUCMPublishFile(const CMsgClientUCMPublishFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  preview_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_preview_file_name()) {
    preview_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_file_name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  video_account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_video_account_name()) {
    video_account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_account_name_);
  }
  video_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_video_identifier()) {
    video_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_identifier_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&video_provider_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(video_provider_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMPublishFile)
}

void CMsgClientUCMPublishFile::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUCMPublishFile_steammessages_5fclientserver_5f2_2eproto.base);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&video_provider_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(video_provider_));
}

CMsgClientUCMPublishFile::~CMsgClientUCMPublishFile() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMPublishFile)
  SharedDtor();
}

void CMsgClientUCMPublishFile::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMPublishFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMPublishFile& CMsgClientUCMPublishFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMPublishFile_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMPublishFile::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMPublishFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      preview_file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      title_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      video_account_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      video_identifier_.ClearNonDefaultToEmptyNoArena();
    }
  }
  app_id_ = 0u;
  if (cached_has_bits & 0x00003f00u) {
    ::memset(&consumer_app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&video_provider_) -
        reinterpret_cast<char*>(&consumer_app_id_)) + sizeof(video_provider_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMPublishFile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMPublishFile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string file_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMPublishFile.file_name");
        object = msg->mutable_file_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string preview_file_name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMPublishFile.preview_file_name");
        object = msg->mutable_preview_file_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 consumer_app_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_consumer_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string title = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMPublishFile.title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string description = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMPublishFile.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string tags = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMPublishFile.tags");
          object = msg->add_tags();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 66 && (ptr += 1));
        break;
      }
      // optional bool workshop_file = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_workshop_file(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 visibility = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_visibility(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 file_type = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_file_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string url = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMPublishFile.url");
        object = msg->mutable_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 video_provider = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_video_provider(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string video_account_name = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMPublishFile.video_account_name");
        object = msg->mutable_video_account_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string video_identifier = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMPublishFile.video_identifier");
        object = msg->mutable_video_identifier();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool in_progress = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 128) goto handle_unusual;
        msg->set_in_progress(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMPublishFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMPublishFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string preview_file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preview_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->preview_file_name().data(), static_cast<int>(this->preview_file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.preview_file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 consumer_app_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_consumer_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consumer_app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool workshop_file = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_workshop_file(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &workshop_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 visibility = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          HasBitSetters::set_has_visibility(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_type = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {
          HasBitSetters::set_has_file_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 video_provider = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {
          HasBitSetters::set_has_video_provider(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &video_provider_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string video_account_name = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_video_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->video_account_name().data(), static_cast<int>(this->video_account_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.video_account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string video_identifier = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_video_identifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->video_identifier().data(), static_cast<int>(this->video_identifier().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.video_identifier");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool in_progress = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (128 & 0xFF)) {
          HasBitSetters::set_has_in_progress(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &in_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMPublishFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMPublishFile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMPublishFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMPublishFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_name(), output);
  }

  // optional string preview_file_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_file_name().data(), static_cast<int>(this->preview_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.preview_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->preview_file_name(), output);
  }

  // optional uint32 consumer_app_id = 4;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->consumer_app_id(), output);
  }

  // optional string title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->title(), output);
  }

  // optional string description = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->description(), output);
  }

  // repeated string tags = 8;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->tags(i), output);
  }

  // optional bool workshop_file = 9;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->workshop_file(), output);
  }

  // optional int32 visibility = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->visibility(), output);
  }

  // optional uint32 file_type = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->file_type(), output);
  }

  // optional string url = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->url(), output);
  }

  // optional uint32 video_provider = 13;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->video_provider(), output);
  }

  // optional string video_account_name = 14;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->video_account_name().data(), static_cast<int>(this->video_account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.video_account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->video_account_name(), output);
  }

  // optional string video_identifier = 15;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->video_identifier().data(), static_cast<int>(this->video_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.video_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->video_identifier(), output);
  }

  // optional bool in_progress = 16;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->in_progress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMPublishFile)
}

::google::protobuf::uint8* CMsgClientUCMPublishFile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMPublishFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_name(), target);
  }

  // optional string preview_file_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_file_name().data(), static_cast<int>(this->preview_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.preview_file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->preview_file_name(), target);
  }

  // optional uint32 consumer_app_id = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->consumer_app_id(), target);
  }

  // optional string title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // optional string description = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  // repeated string tags = 8;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->tags(i), target);
  }

  // optional bool workshop_file = 9;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->workshop_file(), target);
  }

  // optional int32 visibility = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->visibility(), target);
  }

  // optional uint32 file_type = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->file_type(), target);
  }

  // optional string url = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->url(), target);
  }

  // optional uint32 video_provider = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->video_provider(), target);
  }

  // optional string video_account_name = 14;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->video_account_name().data(), static_cast<int>(this->video_account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.video_account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->video_account_name(), target);
  }

  // optional string video_identifier = 15;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->video_identifier().data(), static_cast<int>(this->video_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.video_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->video_identifier(), target);
  }

  // optional bool in_progress = 16;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->in_progress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMPublishFile)
  return target;
}

size_t CMsgClientUCMPublishFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMPublishFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string file_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional string preview_file_name = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preview_file_name());
    }

    // optional string title = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string description = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string url = 12;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string video_account_name = 14;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->video_account_name());
    }

    // optional string video_identifier = 15;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->video_identifier());
    }

    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional uint32 consumer_app_id = 4;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->consumer_app_id());
    }

    // optional int32 visibility = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->visibility());
    }

    // optional uint32 file_type = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_type());
    }

    // optional bool workshop_file = 9;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional bool in_progress = 16;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional uint32 video_provider = 13;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->video_provider());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMPublishFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMPublishFile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishFile* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMPublishFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMPublishFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMPublishFile)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishFile::MergeFrom(const CMsgClientUCMPublishFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMPublishFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      preview_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_file_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      video_account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_account_name_);
    }
    if (cached_has_bits & 0x00000040u) {
      _has_bits_[0] |= 0x00000040u;
      video_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_identifier_);
    }
    if (cached_has_bits & 0x00000080u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      consumer_app_id_ = from.consumer_app_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      visibility_ = from.visibility_;
    }
    if (cached_has_bits & 0x00000400u) {
      file_type_ = from.file_type_;
    }
    if (cached_has_bits & 0x00000800u) {
      workshop_file_ = from.workshop_file_;
    }
    if (cached_has_bits & 0x00001000u) {
      in_progress_ = from.in_progress_;
    }
    if (cached_has_bits & 0x00002000u) {
      video_provider_ = from.video_provider_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMPublishFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishFile::CopyFrom(const CMsgClientUCMPublishFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMPublishFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishFile::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishFile::Swap(CMsgClientUCMPublishFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishFile::InternalSwap(CMsgClientUCMPublishFile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  tags_.InternalSwap(CastToBase(&other->tags_));
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  preview_file_name_.Swap(&other->preview_file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  video_account_name_.Swap(&other->video_account_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  video_identifier_.Swap(&other->video_identifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(consumer_app_id_, other->consumer_app_id_);
  swap(visibility_, other->visibility_);
  swap(file_type_, other->file_type_);
  swap(workshop_file_, other->workshop_file_);
  swap(in_progress_, other->in_progress_);
  swap(video_provider_, other->video_provider_);
}

::google::protobuf::Metadata CMsgClientUCMPublishFile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMPublishFileResponse::InitAsDefaultInstance() {
}
class CMsgClientUCMPublishFileResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientUCMPublishFileResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_published_file_id(CMsgClientUCMPublishFileResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_needs_workshop_legal_agreement_acceptance(CMsgClientUCMPublishFileResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishFileResponse::kEresultFieldNumber;
const int CMsgClientUCMPublishFileResponse::kPublishedFileIdFieldNumber;
const int CMsgClientUCMPublishFileResponse::kNeedsWorkshopLegalAgreementAcceptanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishFileResponse::CMsgClientUCMPublishFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMPublishFileResponse)
}
CMsgClientUCMPublishFileResponse::CMsgClientUCMPublishFileResponse(const CMsgClientUCMPublishFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&needs_workshop_legal_agreement_acceptance_, &from.needs_workshop_legal_agreement_acceptance_,
    static_cast<size_t>(reinterpret_cast<char*>(&published_file_id_) -
    reinterpret_cast<char*>(&needs_workshop_legal_agreement_acceptance_)) + sizeof(published_file_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMPublishFileResponse)
}

void CMsgClientUCMPublishFileResponse::SharedCtor() {
  needs_workshop_legal_agreement_acceptance_ = false;
  eresult_ = 2;
  published_file_id_ = PROTOBUF_ULONGLONG(18446744073709551615);
}

CMsgClientUCMPublishFileResponse::~CMsgClientUCMPublishFileResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMPublishFileResponse)
  SharedDtor();
}

void CMsgClientUCMPublishFileResponse::SharedDtor() {
}

void CMsgClientUCMPublishFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMPublishFileResponse& CMsgClientUCMPublishFileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMPublishFileResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMPublishFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMPublishFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    needs_workshop_legal_agreement_acceptance_ = false;
    eresult_ = 2;
    published_file_id_ = PROTOBUF_ULONGLONG(18446744073709551615);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMPublishFileResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMPublishFileResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_needs_workshop_legal_agreement_acceptance(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMPublishFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMPublishFileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_needs_workshop_legal_agreement_acceptance(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needs_workshop_legal_agreement_acceptance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMPublishFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMPublishFileResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMPublishFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMPublishFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->published_file_id(), output);
  }

  // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->needs_workshop_legal_agreement_acceptance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMPublishFileResponse)
}

::google::protobuf::uint8* CMsgClientUCMPublishFileResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMPublishFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->published_file_id(), target);
  }

  // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->needs_workshop_legal_agreement_acceptance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMPublishFileResponse)
  return target;
}

size_t CMsgClientUCMPublishFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMPublishFileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

    // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMPublishFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMPublishFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishFileResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMPublishFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMPublishFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMPublishFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishFileResponse::MergeFrom(const CMsgClientUCMPublishFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMPublishFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      needs_workshop_legal_agreement_acceptance_ = from.needs_workshop_legal_agreement_acceptance_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000004u) {
      published_file_id_ = from.published_file_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMPublishFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishFileResponse::CopyFrom(const CMsgClientUCMPublishFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMPublishFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishFileResponse::Swap(CMsgClientUCMPublishFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishFileResponse::InternalSwap(CMsgClientUCMPublishFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(needs_workshop_legal_agreement_acceptance_, other->needs_workshop_legal_agreement_acceptance_);
  swap(eresult_, other->eresult_);
  swap(published_file_id_, other->published_file_id_);
}

::google::protobuf::Metadata CMsgClientUCMPublishFileResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::InitAsDefaultInstance() {
}
class CMsgClientUCMUpdatePublishedFile_KeyValueTag::HasBitSetters {
 public:
  static void set_has_key(CMsgClientUCMUpdatePublishedFile_KeyValueTag* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_value(CMsgClientUCMUpdatePublishedFile_KeyValueTag* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMUpdatePublishedFile_KeyValueTag::kKeyFieldNumber;
const int CMsgClientUCMUpdatePublishedFile_KeyValueTag::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMUpdatePublishedFile_KeyValueTag::CMsgClientUCMUpdatePublishedFile_KeyValueTag()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
}
CMsgClientUCMUpdatePublishedFile_KeyValueTag::CMsgClientUCMUpdatePublishedFile_KeyValueTag(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUCMUpdatePublishedFile_KeyValueTag_steammessages_5fclientserver_5f2_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientUCMUpdatePublishedFile_KeyValueTag::~CMsgClientUCMUpdatePublishedFile_KeyValueTag() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  SharedDtor();
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMUpdatePublishedFile_KeyValueTag& CMsgClientUCMUpdatePublishedFile_KeyValueTag::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMUpdatePublishedFile_KeyValueTag_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMUpdatePublishedFile_KeyValueTag::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMUpdatePublishedFile_KeyValueTag::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMUpdatePublishedFile_KeyValueTag*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.value");
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMUpdatePublishedFile_KeyValueTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
}

::google::protobuf::uint8* CMsgClientUCMUpdatePublishedFile_KeyValueTag::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFile_KeyValueTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFile_KeyValueTag* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMUpdatePublishedFile_KeyValueTag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::MergeFrom(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::CopyFrom(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFile_KeyValueTag::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::Swap(CMsgClientUCMUpdatePublishedFile_KeyValueTag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::InternalSwap(CMsgClientUCMUpdatePublishedFile_KeyValueTag* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CMsgClientUCMUpdatePublishedFile_KeyValueTag::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::InitAsDefaultInstance() {
}
class CMsgClientUCMUpdatePublishedFile_AdditionalPreview::HasBitSetters {
 public:
  static void set_has_original_file_name(CMsgClientUCMUpdatePublishedFile_AdditionalPreview* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_internal_file_name(CMsgClientUCMUpdatePublishedFile_AdditionalPreview* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_videoid(CMsgClientUCMUpdatePublishedFile_AdditionalPreview* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_preview_type(CMsgClientUCMUpdatePublishedFile_AdditionalPreview* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_update_index(CMsgClientUCMUpdatePublishedFile_AdditionalPreview* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMUpdatePublishedFile_AdditionalPreview::kOriginalFileNameFieldNumber;
const int CMsgClientUCMUpdatePublishedFile_AdditionalPreview::kInternalFileNameFieldNumber;
const int CMsgClientUCMUpdatePublishedFile_AdditionalPreview::kVideoidFieldNumber;
const int CMsgClientUCMUpdatePublishedFile_AdditionalPreview::kPreviewTypeFieldNumber;
const int CMsgClientUCMUpdatePublishedFile_AdditionalPreview::kUpdateIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CMsgClientUCMUpdatePublishedFile_AdditionalPreview()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
}
CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CMsgClientUCMUpdatePublishedFile_AdditionalPreview(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  original_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_original_file_name()) {
    original_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_file_name_);
  }
  internal_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_internal_file_name()) {
    internal_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_file_name_);
  }
  videoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_videoid()) {
    videoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.videoid_);
  }
  ::memcpy(&preview_type_, &from.preview_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&update_index_) -
    reinterpret_cast<char*>(&preview_type_)) + sizeof(update_index_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUCMUpdatePublishedFile_AdditionalPreview_steammessages_5fclientserver_5f2_2eproto.base);
  original_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  videoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_type_ = 0u;
  update_index_ = -1;
}

CMsgClientUCMUpdatePublishedFile_AdditionalPreview::~CMsgClientUCMUpdatePublishedFile_AdditionalPreview() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  SharedDtor();
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::SharedDtor() {
  original_file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  videoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& CMsgClientUCMUpdatePublishedFile_AdditionalPreview::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMUpdatePublishedFile_AdditionalPreview_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      original_file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      internal_file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      videoid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    preview_type_ = 0u;
    update_index_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMUpdatePublishedFile_AdditionalPreview*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string original_file_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name");
        object = msg->mutable_original_file_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string internal_file_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name");
        object = msg->mutable_internal_file_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string videoid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid");
        object = msg->mutable_videoid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 preview_type = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_preview_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 update_index = 5 [default = -1];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_update_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string original_file_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_original_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->original_file_name().data(), static_cast<int>(this->original_file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string internal_file_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_internal_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->internal_file_name().data(), static_cast<int>(this->internal_file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string videoid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_videoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->videoid().data(), static_cast<int>(this->videoid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 preview_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_preview_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &preview_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 update_index = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_update_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &update_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string original_file_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->original_file_name().data(), static_cast<int>(this->original_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->original_file_name(), output);
  }

  // optional string internal_file_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->internal_file_name().data(), static_cast<int>(this->internal_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->internal_file_name(), output);
  }

  // optional string videoid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->videoid().data(), static_cast<int>(this->videoid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->videoid(), output);
  }

  // optional uint32 preview_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->preview_type(), output);
  }

  // optional int32 update_index = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->update_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
}

::google::protobuf::uint8* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string original_file_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->original_file_name().data(), static_cast<int>(this->original_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->original_file_name(), target);
  }

  // optional string internal_file_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->internal_file_name().data(), static_cast<int>(this->internal_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->internal_file_name(), target);
  }

  // optional string videoid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->videoid().data(), static_cast<int>(this->videoid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->videoid(), target);
  }

  // optional uint32 preview_type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->preview_type(), target);
  }

  // optional int32 update_index = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->update_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFile_AdditionalPreview::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string original_file_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->original_file_name());
    }

    // optional string internal_file_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->internal_file_name());
    }

    // optional string videoid = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->videoid());
    }

    // optional uint32 preview_type = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->preview_type());
    }

    // optional int32 update_index = 5 [default = -1];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->update_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFile_AdditionalPreview* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMUpdatePublishedFile_AdditionalPreview>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::MergeFrom(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      original_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      internal_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_file_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      videoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.videoid_);
    }
    if (cached_has_bits & 0x00000008u) {
      preview_type_ = from.preview_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      update_index_ = from.update_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CopyFrom(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::Swap(CMsgClientUCMUpdatePublishedFile_AdditionalPreview* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::InternalSwap(CMsgClientUCMUpdatePublishedFile_AdditionalPreview* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  original_file_name_.Swap(&other->original_file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  internal_file_name_.Swap(&other->internal_file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  videoid_.Swap(&other->videoid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(preview_type_, other->preview_type_);
  swap(update_index_, other->update_index_);
}

::google::protobuf::Metadata CMsgClientUCMUpdatePublishedFile_AdditionalPreview::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMUpdatePublishedFile::InitAsDefaultInstance() {
}
class CMsgClientUCMUpdatePublishedFile::HasBitSetters {
 public:
  static void set_has_app_id(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_published_file_id(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_file_name(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_preview_file_name(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_title(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_description(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_visibility(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
  static void set_has_update_file(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00000400u;
  }
  static void set_has_update_preview_file(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00000800u;
  }
  static void set_has_update_title(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00001000u;
  }
  static void set_has_update_description(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00002000u;
  }
  static void set_has_update_tags(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00004000u;
  }
  static void set_has_update_visibility(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00008000u;
  }
  static void set_has_change_description(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_update_url(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00010000u;
  }
  static void set_has_url(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_update_content_manifest(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00020000u;
  }
  static void set_has_content_manifest(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00040000u;
  }
  static void set_has_metadata(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_update_metadata(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00100000u;
  }
  static void set_has_language(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00080000u;
  }
  static void set_has_clear_in_progress(CMsgClientUCMUpdatePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00200000u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMUpdatePublishedFile::kAppIdFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kPublishedFileIdFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kFileNameFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kPreviewFileNameFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kTitleFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kDescriptionFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kTagsFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kVisibilityFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateFileFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdatePreviewFileFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateTitleFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateDescriptionFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateTagsFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateVisibilityFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kChangeDescriptionFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateUrlFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUrlFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateContentManifestFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kContentManifestFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kMetadataFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateMetadataFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kLanguageFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kRemovedKvtagsFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kKvtagsFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kPreviewsFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kPreviewsToRemoveFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kClearInProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMUpdatePublishedFile::CMsgClientUCMUpdatePublishedFile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMUpdatePublishedFile)
}
CMsgClientUCMUpdatePublishedFile::CMsgClientUCMUpdatePublishedFile(const CMsgClientUCMUpdatePublishedFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      tags_(from.tags_),
      removed_kvtags_(from.removed_kvtags_),
      kvtags_(from.kvtags_),
      previews_(from.previews_),
      previews_to_remove_(from.previews_to_remove_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  preview_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_preview_file_name()) {
    preview_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_file_name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  change_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_change_description()) {
    change_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.change_description_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_metadata()) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&clear_in_progress_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(clear_in_progress_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMUpdatePublishedFile)
}

void CMsgClientUCMUpdatePublishedFile::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUCMUpdatePublishedFile_steammessages_5fclientserver_5f2_2eproto.base);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  change_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clear_in_progress_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(clear_in_progress_));
}

CMsgClientUCMUpdatePublishedFile::~CMsgClientUCMUpdatePublishedFile() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMUpdatePublishedFile)
  SharedDtor();
}

void CMsgClientUCMUpdatePublishedFile::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  change_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMUpdatePublishedFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMUpdatePublishedFile& CMsgClientUCMUpdatePublishedFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMUpdatePublishedFile_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMUpdatePublishedFile::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  removed_kvtags_.Clear();
  kvtags_.Clear();
  previews_.Clear();
  previews_to_remove_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      preview_file_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      title_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      change_description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      metadata_.ClearNonDefaultToEmptyNoArena();
    }
  }
  published_file_id_ = PROTOBUF_ULONGLONG(0);
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&update_visibility_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(update_visibility_));
  }
  if (cached_has_bits & 0x003f0000u) {
    ::memset(&update_url_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&clear_in_progress_) -
        reinterpret_cast<char*>(&update_url_)) + sizeof(clear_in_progress_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMUpdatePublishedFile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMUpdatePublishedFile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 published_file_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional string file_name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMUpdatePublishedFile.file_name");
        object = msg->mutable_file_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string preview_file_name = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMUpdatePublishedFile.preview_file_name");
        object = msg->mutable_preview_file_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string title = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMUpdatePublishedFile.title");
        object = msg->mutable_title();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string description = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMUpdatePublishedFile.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string tags = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMUpdatePublishedFile.tags");
          object = msg->add_tags();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 58 && (ptr += 1));
        break;
      }
      // optional int32 visibility = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_visibility(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool update_file = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_update_file(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool update_preview_file = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_update_preview_file(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool update_title = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_update_title(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool update_description = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_update_description(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool update_tags = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_update_tags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool update_visibility = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 112) goto handle_unusual;
        msg->set_update_visibility(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string change_description = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMUpdatePublishedFile.change_description");
        object = msg->mutable_change_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool update_url = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 128) goto handle_unusual;
        msg->set_update_url(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string url = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMUpdatePublishedFile.url");
        object = msg->mutable_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool update_content_manifest = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 144) goto handle_unusual;
        msg->set_update_content_manifest(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 content_manifest = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 153) goto handle_unusual;
        msg->set_content_manifest(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional string metadata = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMUpdatePublishedFile.metadata");
        object = msg->mutable_metadata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool update_metadata = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 168) goto handle_unusual;
        msg->set_update_metadata(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 language = 22 [default = 0];
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 176) goto handle_unusual;
        msg->set_language(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated string removed_kvtags = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 186) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags");
          object = msg->add_removed_kvtags();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 442 && (ptr += 2));
        break;
      }
      // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
      case 24: {
        if (static_cast<::google::protobuf::uint8>(tag) != 194) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag::_InternalParse;
          object = msg->add_kvtags();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 450 && (ptr += 2));
        break;
      }
      // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
      case 25: {
        if (static_cast<::google::protobuf::uint8>(tag) != 202) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_InternalParse;
          object = msg->add_previews();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 458 && (ptr += 2));
        break;
      }
      // repeated int32 previews_to_remove = 26;
      case 26: {
        if (static_cast<::google::protobuf::uint8>(tag) == 208) {
          do {
            msg->add_previews_to_remove(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 464 && (ptr += 2));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 210) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedInt32Parser;
        object = msg->mutable_previews_to_remove();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional bool clear_in_progress = 27;
      case 27: {
        if (static_cast<::google::protobuf::uint8>(tag) != 216) goto handle_unusual;
        msg->set_clear_in_progress(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMUpdatePublishedFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 published_file_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string preview_file_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preview_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->preview_file_name().data(), static_cast<int>(this->preview_file_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.preview_file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 visibility = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_visibility(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_file = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_update_file(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_preview_file = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          HasBitSetters::set_has_update_preview_file(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_preview_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_title = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {
          HasBitSetters::set_has_update_title(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_title_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_description = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {
          HasBitSetters::set_has_update_description(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_description_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_tags = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {
          HasBitSetters::set_has_update_tags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_tags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_visibility = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (112 & 0xFF)) {
          HasBitSetters::set_has_update_visibility(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string change_description = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_change_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->change_description().data(), static_cast<int>(this->change_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.change_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_url = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (128 & 0xFF)) {
          HasBitSetters::set_has_update_url(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_url_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_content_manifest = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (144 & 0xFF)) {
          HasBitSetters::set_has_update_content_manifest(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_content_manifest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 content_manifest = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (153 & 0xFF)) {
          HasBitSetters::set_has_content_manifest(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &content_manifest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string metadata = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (162 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metadata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->metadata().data(), static_cast<int>(this->metadata().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.metadata");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_metadata = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (168 & 0xFF)) {
          HasBitSetters::set_has_update_metadata(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_metadata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 language = 22 [default = 0];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (176 & 0xFF)) {
          HasBitSetters::set_has_language(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string removed_kvtags = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (186 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_removed_kvtags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->removed_kvtags(this->removed_kvtags_size() - 1).data(),
            static_cast<int>(this->removed_kvtags(this->removed_kvtags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (194 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_kvtags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (202 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_previews()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 previews_to_remove = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (208 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 208u, input, this->mutable_previews_to_remove())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (210 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_previews_to_remove())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool clear_in_progress = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (216 & 0xFF)) {
          HasBitSetters::set_has_clear_in_progress(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clear_in_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMUpdatePublishedFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMUpdatePublishedFile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMUpdatePublishedFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 published_file_id = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->published_file_id(), output);
  }

  // optional string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name(), output);
  }

  // optional string preview_file_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_file_name().data(), static_cast<int>(this->preview_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.preview_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->preview_file_name(), output);
  }

  // optional string title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->title(), output);
  }

  // optional string description = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->description(), output);
  }

  // repeated string tags = 7;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->tags(i), output);
  }

  // optional int32 visibility = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->visibility(), output);
  }

  // optional bool update_file = 9;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->update_file(), output);
  }

  // optional bool update_preview_file = 10;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->update_preview_file(), output);
  }

  // optional bool update_title = 11;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->update_title(), output);
  }

  // optional bool update_description = 12;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->update_description(), output);
  }

  // optional bool update_tags = 13;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->update_tags(), output);
  }

  // optional bool update_visibility = 14;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->update_visibility(), output);
  }

  // optional string change_description = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->change_description().data(), static_cast<int>(this->change_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.change_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->change_description(), output);
  }

  // optional bool update_url = 16;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->update_url(), output);
  }

  // optional string url = 17;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->url(), output);
  }

  // optional bool update_content_manifest = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->update_content_manifest(), output);
  }

  // optional fixed64 content_manifest = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(19, this->content_manifest(), output);
  }

  // optional string metadata = 20;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->metadata().data(), static_cast<int>(this->metadata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.metadata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->metadata(), output);
  }

  // optional bool update_metadata = 21;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->update_metadata(), output);
  }

  // optional int32 language = 22 [default = 0];
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->language(), output);
  }

  // repeated string removed_kvtags = 23;
  for (int i = 0, n = this->removed_kvtags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->removed_kvtags(i).data(), static_cast<int>(this->removed_kvtags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->removed_kvtags(i), output);
  }

  // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kvtags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24,
      this->kvtags(static_cast<int>(i)),
      output);
  }

  // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->previews_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25,
      this->previews(static_cast<int>(i)),
      output);
  }

  // repeated int32 previews_to_remove = 26;
  for (int i = 0, n = this->previews_to_remove_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      26, this->previews_to_remove(i), output);
  }

  // optional bool clear_in_progress = 27;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->clear_in_progress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMUpdatePublishedFile)
}

::google::protobuf::uint8* CMsgClientUCMUpdatePublishedFile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 published_file_id = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->published_file_id(), target);
  }

  // optional string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name(), target);
  }

  // optional string preview_file_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_file_name().data(), static_cast<int>(this->preview_file_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.preview_file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->preview_file_name(), target);
  }

  // optional string title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // optional string description = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  // repeated string tags = 7;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->tags(i), target);
  }

  // optional int32 visibility = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->visibility(), target);
  }

  // optional bool update_file = 9;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->update_file(), target);
  }

  // optional bool update_preview_file = 10;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->update_preview_file(), target);
  }

  // optional bool update_title = 11;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->update_title(), target);
  }

  // optional bool update_description = 12;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->update_description(), target);
  }

  // optional bool update_tags = 13;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->update_tags(), target);
  }

  // optional bool update_visibility = 14;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->update_visibility(), target);
  }

  // optional string change_description = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->change_description().data(), static_cast<int>(this->change_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.change_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->change_description(), target);
  }

  // optional bool update_url = 16;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->update_url(), target);
  }

  // optional string url = 17;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->url(), target);
  }

  // optional bool update_content_manifest = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->update_content_manifest(), target);
  }

  // optional fixed64 content_manifest = 19;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(19, this->content_manifest(), target);
  }

  // optional string metadata = 20;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->metadata().data(), static_cast<int>(this->metadata().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.metadata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->metadata(), target);
  }

  // optional bool update_metadata = 21;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->update_metadata(), target);
  }

  // optional int32 language = 22 [default = 0];
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->language(), target);
  }

  // repeated string removed_kvtags = 23;
  for (int i = 0, n = this->removed_kvtags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->removed_kvtags(i).data(), static_cast<int>(this->removed_kvtags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(23, this->removed_kvtags(i), target);
  }

  // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kvtags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->kvtags(static_cast<int>(i)), target);
  }

  // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->previews_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->previews(static_cast<int>(i)), target);
  }

  // repeated int32 previews_to_remove = 26;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(26, this->previews_to_remove_, target);

  // optional bool clear_in_progress = 27;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->clear_in_progress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMUpdatePublishedFile)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // repeated string removed_kvtags = 23;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->removed_kvtags_size());
  for (int i = 0, n = this->removed_kvtags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->removed_kvtags(i));
  }

  // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->kvtags_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->kvtags(static_cast<int>(i)));
    }
  }

  // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->previews_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->previews(static_cast<int>(i)));
    }
  }

  // repeated int32 previews_to_remove = 26;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->previews_to_remove_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->previews_to_remove_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string file_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional string preview_file_name = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preview_file_name());
    }

    // optional string title = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string description = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string change_description = 15;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->change_description());
    }

    // optional string url = 17;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string metadata = 20;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->metadata());
    }

    // optional fixed64 published_file_id = 2;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 8;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 visibility = 8;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->visibility());
    }

    // optional bool update_file = 9;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional bool update_preview_file = 10;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional bool update_title = 11;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional bool update_description = 12;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

    // optional bool update_tags = 13;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 + 1;
    }

    // optional bool update_visibility = 14;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x003f0000u) {
    // optional bool update_url = 16;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool update_content_manifest = 18;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional fixed64 content_manifest = 19;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 8;
    }

    // optional int32 language = 22 [default = 0];
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

    // optional bool update_metadata = 21;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool clear_in_progress = 27;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMUpdatePublishedFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFile* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMUpdatePublishedFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMUpdatePublishedFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMUpdatePublishedFile)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFile::MergeFrom(const CMsgClientUCMUpdatePublishedFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  removed_kvtags_.MergeFrom(from.removed_kvtags_);
  kvtags_.MergeFrom(from.kvtags_);
  previews_.MergeFrom(from.previews_);
  previews_to_remove_.MergeFrom(from.previews_to_remove_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      preview_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_file_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      change_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.change_description_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000040u) {
      _has_bits_[0] |= 0x00000040u;
      metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
    }
    if (cached_has_bits & 0x00000080u) {
      published_file_id_ = from.published_file_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      visibility_ = from.visibility_;
    }
    if (cached_has_bits & 0x00000400u) {
      update_file_ = from.update_file_;
    }
    if (cached_has_bits & 0x00000800u) {
      update_preview_file_ = from.update_preview_file_;
    }
    if (cached_has_bits & 0x00001000u) {
      update_title_ = from.update_title_;
    }
    if (cached_has_bits & 0x00002000u) {
      update_description_ = from.update_description_;
    }
    if (cached_has_bits & 0x00004000u) {
      update_tags_ = from.update_tags_;
    }
    if (cached_has_bits & 0x00008000u) {
      update_visibility_ = from.update_visibility_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x003f0000u) {
    if (cached_has_bits & 0x00010000u) {
      update_url_ = from.update_url_;
    }
    if (cached_has_bits & 0x00020000u) {
      update_content_manifest_ = from.update_content_manifest_;
    }
    if (cached_has_bits & 0x00040000u) {
      content_manifest_ = from.content_manifest_;
    }
    if (cached_has_bits & 0x00080000u) {
      language_ = from.language_;
    }
    if (cached_has_bits & 0x00100000u) {
      update_metadata_ = from.update_metadata_;
    }
    if (cached_has_bits & 0x00200000u) {
      clear_in_progress_ = from.clear_in_progress_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMUpdatePublishedFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFile::CopyFrom(const CMsgClientUCMUpdatePublishedFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFile::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFile::Swap(CMsgClientUCMUpdatePublishedFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMUpdatePublishedFile::InternalSwap(CMsgClientUCMUpdatePublishedFile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  tags_.InternalSwap(CastToBase(&other->tags_));
  removed_kvtags_.InternalSwap(CastToBase(&other->removed_kvtags_));
  CastToBase(&kvtags_)->InternalSwap(CastToBase(&other->kvtags_));
  CastToBase(&previews_)->InternalSwap(CastToBase(&other->previews_));
  previews_to_remove_.InternalSwap(&other->previews_to_remove_);
  file_name_.Swap(&other->file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  preview_file_name_.Swap(&other->preview_file_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  change_description_.Swap(&other->change_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  metadata_.Swap(&other->metadata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(published_file_id_, other->published_file_id_);
  swap(app_id_, other->app_id_);
  swap(visibility_, other->visibility_);
  swap(update_file_, other->update_file_);
  swap(update_preview_file_, other->update_preview_file_);
  swap(update_title_, other->update_title_);
  swap(update_description_, other->update_description_);
  swap(update_tags_, other->update_tags_);
  swap(update_visibility_, other->update_visibility_);
  swap(update_url_, other->update_url_);
  swap(update_content_manifest_, other->update_content_manifest_);
  swap(content_manifest_, other->content_manifest_);
  swap(language_, other->language_);
  swap(update_metadata_, other->update_metadata_);
  swap(clear_in_progress_, other->clear_in_progress_);
}

::google::protobuf::Metadata CMsgClientUCMUpdatePublishedFile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMUpdatePublishedFileResponse::InitAsDefaultInstance() {
}
class CMsgClientUCMUpdatePublishedFileResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientUCMUpdatePublishedFileResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_needs_workshop_legal_agreement_acceptance(CMsgClientUCMUpdatePublishedFileResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMUpdatePublishedFileResponse::kEresultFieldNumber;
const int CMsgClientUCMUpdatePublishedFileResponse::kNeedsWorkshopLegalAgreementAcceptanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMUpdatePublishedFileResponse::CMsgClientUCMUpdatePublishedFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
}
CMsgClientUCMUpdatePublishedFileResponse::CMsgClientUCMUpdatePublishedFileResponse(const CMsgClientUCMUpdatePublishedFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&needs_workshop_legal_agreement_acceptance_, &from.needs_workshop_legal_agreement_acceptance_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&needs_workshop_legal_agreement_acceptance_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
}

void CMsgClientUCMUpdatePublishedFileResponse::SharedCtor() {
  needs_workshop_legal_agreement_acceptance_ = false;
  eresult_ = 2;
}

CMsgClientUCMUpdatePublishedFileResponse::~CMsgClientUCMUpdatePublishedFileResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  SharedDtor();
}

void CMsgClientUCMUpdatePublishedFileResponse::SharedDtor() {
}

void CMsgClientUCMUpdatePublishedFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMUpdatePublishedFileResponse& CMsgClientUCMUpdatePublishedFileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMUpdatePublishedFileResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMUpdatePublishedFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    needs_workshop_legal_agreement_acceptance_ = false;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMUpdatePublishedFileResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMUpdatePublishedFileResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_needs_workshop_legal_agreement_acceptance(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMUpdatePublishedFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_needs_workshop_legal_agreement_acceptance(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needs_workshop_legal_agreement_acceptance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMUpdatePublishedFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->needs_workshop_legal_agreement_acceptance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
}

::google::protobuf::uint8* CMsgClientUCMUpdatePublishedFileResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->needs_workshop_legal_agreement_acceptance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMUpdatePublishedFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFileResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMUpdatePublishedFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFileResponse::MergeFrom(const CMsgClientUCMUpdatePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      needs_workshop_legal_agreement_acceptance_ = from.needs_workshop_legal_agreement_acceptance_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMUpdatePublishedFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFileResponse::CopyFrom(const CMsgClientUCMUpdatePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFileResponse::Swap(CMsgClientUCMUpdatePublishedFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMUpdatePublishedFileResponse::InternalSwap(CMsgClientUCMUpdatePublishedFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(needs_workshop_legal_agreement_acceptance_, other->needs_workshop_legal_agreement_acceptance_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientUCMUpdatePublishedFileResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMDeletePublishedFile::InitAsDefaultInstance() {
}
class CMsgClientUCMDeletePublishedFile::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgClientUCMDeletePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_app_id(CMsgClientUCMDeletePublishedFile* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMDeletePublishedFile::kPublishedFileIdFieldNumber;
const int CMsgClientUCMDeletePublishedFile::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMDeletePublishedFile::CMsgClientUCMDeletePublishedFile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMDeletePublishedFile)
}
CMsgClientUCMDeletePublishedFile::CMsgClientUCMDeletePublishedFile(const CMsgClientUCMDeletePublishedFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMDeletePublishedFile)
}

void CMsgClientUCMDeletePublishedFile::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
}

CMsgClientUCMDeletePublishedFile::~CMsgClientUCMDeletePublishedFile() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMDeletePublishedFile)
  SharedDtor();
}

void CMsgClientUCMDeletePublishedFile::SharedDtor() {
}

void CMsgClientUCMDeletePublishedFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMDeletePublishedFile& CMsgClientUCMDeletePublishedFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMDeletePublishedFile_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMDeletePublishedFile::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMDeletePublishedFile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMDeletePublishedFile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMDeletePublishedFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMDeletePublishedFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMDeletePublishedFile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMDeletePublishedFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMDeletePublishedFile)
}

::google::protobuf::uint8* CMsgClientUCMDeletePublishedFile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMDeletePublishedFile)
  return target;
}

size_t CMsgClientUCMDeletePublishedFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMDeletePublishedFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeletePublishedFile* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMDeletePublishedFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMDeletePublishedFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMDeletePublishedFile)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeletePublishedFile::MergeFrom(const CMsgClientUCMDeletePublishedFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMDeletePublishedFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeletePublishedFile::CopyFrom(const CMsgClientUCMDeletePublishedFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeletePublishedFile::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeletePublishedFile::Swap(CMsgClientUCMDeletePublishedFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMDeletePublishedFile::InternalSwap(CMsgClientUCMDeletePublishedFile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(app_id_, other->app_id_);
}

::google::protobuf::Metadata CMsgClientUCMDeletePublishedFile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMDeletePublishedFileResponse::InitAsDefaultInstance() {
}
class CMsgClientUCMDeletePublishedFileResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientUCMDeletePublishedFileResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMDeletePublishedFileResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMDeletePublishedFileResponse::CMsgClientUCMDeletePublishedFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
}
CMsgClientUCMDeletePublishedFileResponse::CMsgClientUCMDeletePublishedFileResponse(const CMsgClientUCMDeletePublishedFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
}

void CMsgClientUCMDeletePublishedFileResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgClientUCMDeletePublishedFileResponse::~CMsgClientUCMDeletePublishedFileResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  SharedDtor();
}

void CMsgClientUCMDeletePublishedFileResponse::SharedDtor() {
}

void CMsgClientUCMDeletePublishedFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMDeletePublishedFileResponse& CMsgClientUCMDeletePublishedFileResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMDeletePublishedFileResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMDeletePublishedFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMDeletePublishedFileResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMDeletePublishedFileResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMDeletePublishedFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMDeletePublishedFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
}

::google::protobuf::uint8* CMsgClientUCMDeletePublishedFileResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  return target;
}

size_t CMsgClientUCMDeletePublishedFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 eresult = 1 [default = 2];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMDeletePublishedFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeletePublishedFileResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMDeletePublishedFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeletePublishedFileResponse::MergeFrom(const CMsgClientUCMDeletePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientUCMDeletePublishedFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeletePublishedFileResponse::CopyFrom(const CMsgClientUCMDeletePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeletePublishedFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeletePublishedFileResponse::Swap(CMsgClientUCMDeletePublishedFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMDeletePublishedFileResponse::InternalSwap(CMsgClientUCMDeletePublishedFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientUCMDeletePublishedFileResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserPublishedFiles::InitAsDefaultInstance() {
}
class CMsgClientUCMEnumerateUserPublishedFiles::HasBitSetters {
 public:
  static void set_has_app_id(CMsgClientUCMEnumerateUserPublishedFiles* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_start_index(CMsgClientUCMEnumerateUserPublishedFiles* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_sort_order(CMsgClientUCMEnumerateUserPublishedFiles* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserPublishedFiles::kAppIdFieldNumber;
const int CMsgClientUCMEnumerateUserPublishedFiles::kStartIndexFieldNumber;
const int CMsgClientUCMEnumerateUserPublishedFiles::kSortOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserPublishedFiles::CMsgClientUCMEnumerateUserPublishedFiles()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
}
CMsgClientUCMEnumerateUserPublishedFiles::CMsgClientUCMEnumerateUserPublishedFiles(const CMsgClientUCMEnumerateUserPublishedFiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&sort_order_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(sort_order_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
}

void CMsgClientUCMEnumerateUserPublishedFiles::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sort_order_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(sort_order_));
}

CMsgClientUCMEnumerateUserPublishedFiles::~CMsgClientUCMEnumerateUserPublishedFiles() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserPublishedFiles::SharedDtor() {
}

void CMsgClientUCMEnumerateUserPublishedFiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMEnumerateUserPublishedFiles& CMsgClientUCMEnumerateUserPublishedFiles::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMEnumerateUserPublishedFiles_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserPublishedFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sort_order_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(sort_order_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMEnumerateUserPublishedFiles::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMEnumerateUserPublishedFiles*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_start_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 sort_order = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_sort_order(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMEnumerateUserPublishedFiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_start_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sort_order = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_sort_order(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sort_order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMEnumerateUserPublishedFiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start_index(), output);
  }

  // optional uint32 sort_order = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sort_order(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserPublishedFiles::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start_index(), target);
  }

  // optional uint32 sort_order = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sort_order(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  return target;
}

size_t CMsgClientUCMEnumerateUserPublishedFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 start_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

    // optional uint32 sort_order = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sort_order());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserPublishedFiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserPublishedFiles* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMEnumerateUserPublishedFiles>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserPublishedFiles::MergeFrom(const CMsgClientUCMEnumerateUserPublishedFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      sort_order_ = from.sort_order_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserPublishedFiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserPublishedFiles::CopyFrom(const CMsgClientUCMEnumerateUserPublishedFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserPublishedFiles::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserPublishedFiles::Swap(CMsgClientUCMEnumerateUserPublishedFiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserPublishedFiles::InternalSwap(CMsgClientUCMEnumerateUserPublishedFiles* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(app_id_, other->app_id_);
  swap(start_index_, other->start_index_);
  swap(sort_order_, other->sort_order_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserPublishedFiles::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::InitAsDefaultInstance() {
}
class CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::kPublishedFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
}
CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId(const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  published_file_id_ = from.published_file_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::SharedCtor() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::~CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::SharedDtor() {
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId& CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 published_file_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::MergeFrom(const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_published_file_id()) {
    set_published_file_id(from.published_file_id());
  }
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::CopyFrom(const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::Swap(CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::InternalSwap(CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserPublishedFilesResponse::InitAsDefaultInstance() {
}
class CMsgClientUCMEnumerateUserPublishedFilesResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientUCMEnumerateUserPublishedFilesResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_total_results(CMsgClientUCMEnumerateUserPublishedFilesResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserPublishedFilesResponse::kEresultFieldNumber;
const int CMsgClientUCMEnumerateUserPublishedFilesResponse::kPublishedFilesFieldNumber;
const int CMsgClientUCMEnumerateUserPublishedFilesResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserPublishedFilesResponse::CMsgClientUCMEnumerateUserPublishedFilesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
}
CMsgClientUCMEnumerateUserPublishedFilesResponse::CMsgClientUCMEnumerateUserPublishedFilesResponse(const CMsgClientUCMEnumerateUserPublishedFilesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      published_files_(from.published_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgClientUCMEnumerateUserPublishedFilesResponse::~CMsgClientUCMEnumerateUserPublishedFilesResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::SharedDtor() {
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMEnumerateUserPublishedFilesResponse& CMsgClientUCMEnumerateUserPublishedFilesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMEnumerateUserPublishedFilesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserPublishedFilesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMEnumerateUserPublishedFilesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMEnumerateUserPublishedFilesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::_InternalParse;
          object = msg->add_published_files();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_total_results(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMEnumerateUserPublishedFilesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_published_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_total_results(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMEnumerateUserPublishedFilesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->published_files(static_cast<int>(i)),
      output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserPublishedFilesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->published_files(static_cast<int>(i)), target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  return target;
}

size_t CMsgClientUCMEnumerateUserPublishedFilesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId published_files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->published_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->published_files(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 total_results = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserPublishedFilesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMEnumerateUserPublishedFilesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::MergeFrom(const CMsgClientUCMEnumerateUserPublishedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_files_.MergeFrom(from.published_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::CopyFrom(const CMsgClientUCMEnumerateUserPublishedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserPublishedFilesResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::Swap(CMsgClientUCMEnumerateUserPublishedFilesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse::InternalSwap(CMsgClientUCMEnumerateUserPublishedFilesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&published_files_)->InternalSwap(CastToBase(&other->published_files_));
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserPublishedFilesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserSubscribedFiles::InitAsDefaultInstance() {
}
class CMsgClientUCMEnumerateUserSubscribedFiles::HasBitSetters {
 public:
  static void set_has_app_id(CMsgClientUCMEnumerateUserSubscribedFiles* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_start_index(CMsgClientUCMEnumerateUserSubscribedFiles* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_list_type(CMsgClientUCMEnumerateUserSubscribedFiles* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_matching_file_type(CMsgClientUCMEnumerateUserSubscribedFiles* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_count(CMsgClientUCMEnumerateUserSubscribedFiles* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFiles::kAppIdFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFiles::kStartIndexFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFiles::kListTypeFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFiles::kMatchingFileTypeFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFiles::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFiles::CMsgClientUCMEnumerateUserSubscribedFiles()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
}
CMsgClientUCMEnumerateUserSubscribedFiles::CMsgClientUCMEnumerateUserSubscribedFiles(const CMsgClientUCMEnumerateUserSubscribedFiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
}

void CMsgClientUCMEnumerateUserSubscribedFiles::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matching_file_type_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(matching_file_type_));
  list_type_ = 1u;
  count_ = 50u;
}

CMsgClientUCMEnumerateUserSubscribedFiles::~CMsgClientUCMEnumerateUserSubscribedFiles() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFiles::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMEnumerateUserSubscribedFiles& CMsgClientUCMEnumerateUserSubscribedFiles::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMEnumerateUserSubscribedFiles_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserSubscribedFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&matching_file_type_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(matching_file_type_));
    list_type_ = 1u;
    count_ = 50u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMEnumerateUserSubscribedFiles::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMEnumerateUserSubscribedFiles*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_start_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 list_type = 3 [default = 1];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_list_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 matching_file_type = 4 [default = 0];
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_matching_file_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 count = 5 [default = 50];
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMEnumerateUserSubscribedFiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_start_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 list_type = 3 [default = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_list_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &list_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 matching_file_type = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_matching_file_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matching_file_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 5 [default = 50];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMEnumerateUserSubscribedFiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start_index(), output);
  }

  // optional uint32 list_type = 3 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->list_type(), output);
  }

  // optional uint32 matching_file_type = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->matching_file_type(), output);
  }

  // optional uint32 count = 5 [default = 50];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFiles::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start_index(), target);
  }

  // optional uint32 list_type = 3 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->list_type(), target);
  }

  // optional uint32 matching_file_type = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->matching_file_type(), target);
  }

  // optional uint32 count = 5 [default = 50];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 start_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

    // optional uint32 matching_file_type = 4 [default = 0];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->matching_file_type());
    }

    // optional uint32 list_type = 3 [default = 1];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->list_type());
    }

    // optional uint32 count = 5 [default = 50];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFiles* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMEnumerateUserSubscribedFiles>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFiles::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      matching_file_type_ = from.matching_file_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      list_type_ = from.list_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFiles::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFiles::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFiles::Swap(CMsgClientUCMEnumerateUserSubscribedFiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFiles::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFiles* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(app_id_, other->app_id_);
  swap(start_index_, other->start_index_);
  swap(matching_file_type_, other->matching_file_type_);
  swap(list_type_, other->list_type_);
  swap(count_, other->count_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFiles::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::InitAsDefaultInstance() {
}
class CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_rtime32_subscribed(CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::kPublishedFileIdFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::kRtime32SubscribedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
}
CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId(const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rtime32_subscribed_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime32_subscribed_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rtime32_subscribed_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime32_subscribed_));
}

CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::~CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId& CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rtime32_subscribed_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime32_subscribed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional fixed32 rtime32_subscribed = 2 [default = 0];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_rtime32_subscribed(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime32_subscribed = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {
          HasBitSetters::set_has_rtime32_subscribed(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime32_subscribed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional fixed32 rtime32_subscribed = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->rtime32_subscribed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional fixed32 rtime32_subscribed = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->rtime32_subscribed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional fixed32 rtime32_subscribed = 2 [default = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      rtime32_subscribed_ = from.rtime32_subscribed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::Swap(CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(rtime32_subscribed_, other->rtime32_subscribed_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::InitAsDefaultInstance() {
}
class CMsgClientUCMEnumerateUserSubscribedFilesResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientUCMEnumerateUserSubscribedFilesResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_total_results(CMsgClientUCMEnumerateUserSubscribedFilesResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFilesResponse::kEresultFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesResponse::kSubscribedFilesFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFilesResponse::CMsgClientUCMEnumerateUserSubscribedFilesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
}
CMsgClientUCMEnumerateUserSubscribedFilesResponse::CMsgClientUCMEnumerateUserSubscribedFilesResponse(const CMsgClientUCMEnumerateUserSubscribedFilesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      subscribed_files_(from.subscribed_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgClientUCMEnumerateUserSubscribedFilesResponse::~CMsgClientUCMEnumerateUserSubscribedFilesResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMEnumerateUserSubscribedFilesResponse& CMsgClientUCMEnumerateUserSubscribedFilesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserSubscribedFilesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscribed_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMEnumerateUserSubscribedFilesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMEnumerateUserSubscribedFilesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId subscribed_files = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::_InternalParse;
          object = msg->add_subscribed_files();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_total_results(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMEnumerateUserSubscribedFilesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId subscribed_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_subscribed_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_total_results(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId subscribed_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscribed_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->subscribed_files(static_cast<int>(i)),
      output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFilesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId subscribed_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscribed_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->subscribed_files(static_cast<int>(i)), target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId subscribed_files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->subscribed_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subscribed_files(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 total_results = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMEnumerateUserSubscribedFilesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscribed_files_.MergeFrom(from.subscribed_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::Swap(CMsgClientUCMEnumerateUserSubscribedFilesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&subscribed_files_)->InternalSwap(CastToBase(&other->subscribed_files_));
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFilesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::InitAsDefaultInstance() {
}
class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::HasBitSetters {
 public:
  static void set_has_app_id(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_start_index(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_start_time(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::kAppIdFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::kStartIndexFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::kStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
}
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&start_time_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(start_time_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_time_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(start_time_));
}

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&start_time_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(start_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_start_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed32 start_time = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_start_time(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_start_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 start_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {
          HasBitSetters::set_has_start_time(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start_index(), output);
  }

  // optional fixed32 start_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->start_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start_index(), target);
  }

  // optional fixed32 start_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->start_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 start_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

    // optional fixed32 start_time = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      start_time_ = from.start_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::Swap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(app_id_, other->app_id_);
  swap(start_index_, other->start_index_);
  swap(start_time_, other->start_time_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::InitAsDefaultInstance() {
}
class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_rtime32_subscribed(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_appid(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_file_hcontent(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_file_size(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_rtime32_last_updated(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_is_depot_content(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kPublishedFileIdFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kRtime32SubscribedFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kAppidFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kFileHcontentFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kFileSizeFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kRtime32LastUpdatedFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kIsDepotContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
}
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_depot_content_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_depot_content_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_depot_content_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_depot_content_));
}

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_depot_content_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_depot_content_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional fixed32 rtime32_subscribed = 2 [default = 0];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_rtime32_subscribed(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      // optional uint32 appid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_appid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 file_hcontent = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 33) goto handle_unusual;
        msg->set_file_hcontent(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 file_size = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_file_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed32 rtime32_last_updated = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 53) goto handle_unusual;
        msg->set_rtime32_last_updated(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      // optional bool is_depot_content = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_is_depot_content(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime32_subscribed = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {
          HasBitSetters::set_has_rtime32_subscribed(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime32_subscribed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_appid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 file_hcontent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {
          HasBitSetters::set_has_file_hcontent(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &file_hcontent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_file_size(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime32_last_updated = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (53 & 0xFF)) {
          HasBitSetters::set_has_rtime32_last_updated(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime32_last_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_depot_content = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_is_depot_content(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_depot_content_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional fixed32 rtime32_subscribed = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->rtime32_subscribed(), output);
  }

  // optional uint32 appid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->appid(), output);
  }

  // optional fixed64 file_hcontent = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->file_hcontent(), output);
  }

  // optional uint32 file_size = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->file_size(), output);
  }

  // optional fixed32 rtime32_last_updated = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(6, this->rtime32_last_updated(), output);
  }

  // optional bool is_depot_content = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_depot_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional fixed32 rtime32_subscribed = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->rtime32_subscribed(), target);
  }

  // optional uint32 appid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->appid(), target);
  }

  // optional fixed64 file_hcontent = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->file_hcontent(), target);
  }

  // optional uint32 file_size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->file_size(), target);
  }

  // optional fixed32 rtime32_last_updated = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(6, this->rtime32_last_updated(), target);
  }

  // optional bool is_depot_content = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_depot_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional fixed32 rtime32_subscribed = 2 [default = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional uint32 appid = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional fixed64 file_hcontent = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional uint32 file_size = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_size());
    }

    // optional fixed32 rtime32_last_updated = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 4;
    }

    // optional bool is_depot_content = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      rtime32_subscribed_ = from.rtime32_subscribed_;
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      file_hcontent_ = from.file_hcontent_;
    }
    if (cached_has_bits & 0x00000010u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000020u) {
      rtime32_last_updated_ = from.rtime32_last_updated_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_depot_content_ = from.is_depot_content_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::Swap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(rtime32_subscribed_, other->rtime32_subscribed_);
  swap(appid_, other->appid_);
  swap(file_hcontent_, other->file_hcontent_);
  swap(file_size_, other->file_size_);
  swap(rtime32_last_updated_, other->rtime32_last_updated_);
  swap(is_depot_content_, other->is_depot_content_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::InitAsDefaultInstance() {
}
class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_total_results(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::kEresultFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::kSubscribedFilesFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
}
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      subscribed_files_(from.subscribed_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscribed_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_InternalParse;
          object = msg->add_subscribed_files();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_total_results(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_subscribed_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_total_results(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscribed_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->subscribed_files(static_cast<int>(i)),
      output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscribed_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->subscribed_files(static_cast<int>(i)), target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->subscribed_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subscribed_files(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 total_results = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscribed_files_.MergeFrom(from.subscribed_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::Swap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&subscribed_files_)->InternalSwap(CastToBase(&other->subscribed_files_));
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMPublishedFileSubscribed::InitAsDefaultInstance() {
}
class CMsgClientUCMPublishedFileSubscribed::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgClientUCMPublishedFileSubscribed* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_app_id(CMsgClientUCMPublishedFileSubscribed* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_file_hcontent(CMsgClientUCMPublishedFileSubscribed* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_file_size(CMsgClientUCMPublishedFileSubscribed* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_rtime_subscribed(CMsgClientUCMPublishedFileSubscribed* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_is_depot_content(CMsgClientUCMPublishedFileSubscribed* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_rtime_updated(CMsgClientUCMPublishedFileSubscribed* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishedFileSubscribed::kPublishedFileIdFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kAppIdFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kFileHcontentFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kFileSizeFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kRtimeSubscribedFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kIsDepotContentFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kRtimeUpdatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishedFileSubscribed::CMsgClientUCMPublishedFileSubscribed()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMPublishedFileSubscribed)
}
CMsgClientUCMPublishedFileSubscribed::CMsgClientUCMPublishedFileSubscribed(const CMsgClientUCMPublishedFileSubscribed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rtime_updated_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime_updated_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMPublishedFileSubscribed)
}

void CMsgClientUCMPublishedFileSubscribed::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rtime_updated_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime_updated_));
}

CMsgClientUCMPublishedFileSubscribed::~CMsgClientUCMPublishedFileSubscribed() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  SharedDtor();
}

void CMsgClientUCMPublishedFileSubscribed::SharedDtor() {
}

void CMsgClientUCMPublishedFileSubscribed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMPublishedFileSubscribed& CMsgClientUCMPublishedFileSubscribed::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMPublishedFileSubscribed_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMPublishedFileSubscribed::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rtime_updated_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime_updated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMPublishedFileSubscribed::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMPublishedFileSubscribed*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 file_hcontent = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_file_hcontent(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 file_size = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_file_size(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 rtime_subscribed = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_rtime_subscribed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool is_depot_content = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_is_depot_content(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 rtime_updated = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_rtime_updated(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMPublishedFileSubscribed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 file_hcontent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {
          HasBitSetters::set_has_file_hcontent(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &file_hcontent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_file_size(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rtime_subscribed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_rtime_subscribed(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rtime_subscribed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_depot_content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_is_depot_content(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_depot_content_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rtime_updated = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_rtime_updated(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rtime_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMPublishedFileSubscribed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional fixed64 file_hcontent = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->file_hcontent(), output);
  }

  // optional uint32 file_size = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->file_size(), output);
  }

  // optional uint32 rtime_subscribed = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->rtime_subscribed(), output);
  }

  // optional bool is_depot_content = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_depot_content(), output);
  }

  // optional uint32 rtime_updated = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->rtime_updated(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMPublishedFileSubscribed)
}

::google::protobuf::uint8* CMsgClientUCMPublishedFileSubscribed::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional fixed64 file_hcontent = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->file_hcontent(), target);
  }

  // optional uint32 file_size = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->file_size(), target);
  }

  // optional uint32 rtime_subscribed = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->rtime_subscribed(), target);
  }

  // optional bool is_depot_content = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_depot_content(), target);
  }

  // optional uint32 rtime_updated = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->rtime_updated(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  return target;
}

size_t CMsgClientUCMPublishedFileSubscribed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional fixed64 file_hcontent = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 file_size = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_size());
    }

    // optional uint32 rtime_subscribed = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rtime_subscribed());
    }

    // optional bool is_depot_content = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional uint32 rtime_updated = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rtime_updated());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMPublishedFileSubscribed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishedFileSubscribed* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMPublishedFileSubscribed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMPublishedFileSubscribed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMPublishedFileSubscribed)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishedFileSubscribed::MergeFrom(const CMsgClientUCMPublishedFileSubscribed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      file_hcontent_ = from.file_hcontent_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      rtime_subscribed_ = from.rtime_subscribed_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_depot_content_ = from.is_depot_content_;
    }
    if (cached_has_bits & 0x00000040u) {
      rtime_updated_ = from.rtime_updated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishedFileSubscribed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishedFileSubscribed::CopyFrom(const CMsgClientUCMPublishedFileSubscribed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishedFileSubscribed::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishedFileSubscribed::Swap(CMsgClientUCMPublishedFileSubscribed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishedFileSubscribed::InternalSwap(CMsgClientUCMPublishedFileSubscribed* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(file_hcontent_, other->file_hcontent_);
  swap(app_id_, other->app_id_);
  swap(file_size_, other->file_size_);
  swap(rtime_subscribed_, other->rtime_subscribed_);
  swap(is_depot_content_, other->is_depot_content_);
  swap(rtime_updated_, other->rtime_updated_);
}

::google::protobuf::Metadata CMsgClientUCMPublishedFileSubscribed::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMPublishedFileUnsubscribed::InitAsDefaultInstance() {
}
class CMsgClientUCMPublishedFileUnsubscribed::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgClientUCMPublishedFileUnsubscribed* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_app_id(CMsgClientUCMPublishedFileUnsubscribed* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishedFileUnsubscribed::kPublishedFileIdFieldNumber;
const int CMsgClientUCMPublishedFileUnsubscribed::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishedFileUnsubscribed::CMsgClientUCMPublishedFileUnsubscribed()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
}
CMsgClientUCMPublishedFileUnsubscribed::CMsgClientUCMPublishedFileUnsubscribed(const CMsgClientUCMPublishedFileUnsubscribed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
}

void CMsgClientUCMPublishedFileUnsubscribed::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
}

CMsgClientUCMPublishedFileUnsubscribed::~CMsgClientUCMPublishedFileUnsubscribed() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  SharedDtor();
}

void CMsgClientUCMPublishedFileUnsubscribed::SharedDtor() {
}

void CMsgClientUCMPublishedFileUnsubscribed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMPublishedFileUnsubscribed& CMsgClientUCMPublishedFileUnsubscribed::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMPublishedFileUnsubscribed_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMPublishedFileUnsubscribed::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMPublishedFileUnsubscribed::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMPublishedFileUnsubscribed*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMPublishedFileUnsubscribed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMPublishedFileUnsubscribed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
}

::google::protobuf::uint8* CMsgClientUCMPublishedFileUnsubscribed::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  return target;
}

size_t CMsgClientUCMPublishedFileUnsubscribed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMPublishedFileUnsubscribed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishedFileUnsubscribed* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMPublishedFileUnsubscribed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishedFileUnsubscribed::MergeFrom(const CMsgClientUCMPublishedFileUnsubscribed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishedFileUnsubscribed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishedFileUnsubscribed::CopyFrom(const CMsgClientUCMPublishedFileUnsubscribed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishedFileUnsubscribed::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishedFileUnsubscribed::Swap(CMsgClientUCMPublishedFileUnsubscribed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishedFileUnsubscribed::InternalSwap(CMsgClientUCMPublishedFileUnsubscribed* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(app_id_, other->app_id_);
}

::google::protobuf::Metadata CMsgClientUCMPublishedFileUnsubscribed::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMPublishedFileDeleted::InitAsDefaultInstance() {
}
class CMsgClientUCMPublishedFileDeleted::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgClientUCMPublishedFileDeleted* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_app_id(CMsgClientUCMPublishedFileDeleted* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishedFileDeleted::kPublishedFileIdFieldNumber;
const int CMsgClientUCMPublishedFileDeleted::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishedFileDeleted::CMsgClientUCMPublishedFileDeleted()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMPublishedFileDeleted)
}
CMsgClientUCMPublishedFileDeleted::CMsgClientUCMPublishedFileDeleted(const CMsgClientUCMPublishedFileDeleted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMPublishedFileDeleted)
}

void CMsgClientUCMPublishedFileDeleted::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
}

CMsgClientUCMPublishedFileDeleted::~CMsgClientUCMPublishedFileDeleted() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMPublishedFileDeleted)
  SharedDtor();
}

void CMsgClientUCMPublishedFileDeleted::SharedDtor() {
}

void CMsgClientUCMPublishedFileDeleted::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMPublishedFileDeleted& CMsgClientUCMPublishedFileDeleted::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMPublishedFileDeleted_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMPublishedFileDeleted::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMPublishedFileDeleted::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMPublishedFileDeleted*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMPublishedFileDeleted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMPublishedFileDeleted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMPublishedFileDeleted)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMPublishedFileDeleted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMPublishedFileDeleted)
}

::google::protobuf::uint8* CMsgClientUCMPublishedFileDeleted::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMPublishedFileDeleted)
  return target;
}

size_t CMsgClientUCMPublishedFileDeleted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMPublishedFileDeleted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishedFileDeleted* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMPublishedFileDeleted>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMPublishedFileDeleted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMPublishedFileDeleted)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishedFileDeleted::MergeFrom(const CMsgClientUCMPublishedFileDeleted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishedFileDeleted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishedFileDeleted::CopyFrom(const CMsgClientUCMPublishedFileDeleted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishedFileDeleted::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishedFileDeleted::Swap(CMsgClientUCMPublishedFileDeleted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishedFileDeleted::InternalSwap(CMsgClientUCMPublishedFileDeleted* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(app_id_, other->app_id_);
}

::google::protobuf::Metadata CMsgClientUCMPublishedFileDeleted::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMPublishedFileUpdated::InitAsDefaultInstance() {
}
class CMsgClientUCMPublishedFileUpdated::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgClientUCMPublishedFileUpdated* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_app_id(CMsgClientUCMPublishedFileUpdated* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_time_updated(CMsgClientUCMPublishedFileUpdated* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_hcontent(CMsgClientUCMPublishedFileUpdated* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_file_size(CMsgClientUCMPublishedFileUpdated* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_is_depot_content(CMsgClientUCMPublishedFileUpdated* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishedFileUpdated::kPublishedFileIdFieldNumber;
const int CMsgClientUCMPublishedFileUpdated::kAppIdFieldNumber;
const int CMsgClientUCMPublishedFileUpdated::kTimeUpdatedFieldNumber;
const int CMsgClientUCMPublishedFileUpdated::kHcontentFieldNumber;
const int CMsgClientUCMPublishedFileUpdated::kFileSizeFieldNumber;
const int CMsgClientUCMPublishedFileUpdated::kIsDepotContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishedFileUpdated::CMsgClientUCMPublishedFileUpdated()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMPublishedFileUpdated)
}
CMsgClientUCMPublishedFileUpdated::CMsgClientUCMPublishedFileUpdated(const CMsgClientUCMPublishedFileUpdated& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_depot_content_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_depot_content_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMPublishedFileUpdated)
}

void CMsgClientUCMPublishedFileUpdated::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_depot_content_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_depot_content_));
}

CMsgClientUCMPublishedFileUpdated::~CMsgClientUCMPublishedFileUpdated() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMPublishedFileUpdated)
  SharedDtor();
}

void CMsgClientUCMPublishedFileUpdated::SharedDtor() {
}

void CMsgClientUCMPublishedFileUpdated::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMPublishedFileUpdated& CMsgClientUCMPublishedFileUpdated::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMPublishedFileUpdated_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMPublishedFileUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_depot_content_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_depot_content_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMPublishedFileUpdated::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMPublishedFileUpdated*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 time_updated = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_time_updated(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 hcontent = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 33) goto handle_unusual;
        msg->set_hcontent(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional fixed32 file_size = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 45) goto handle_unusual;
        msg->set_file_size(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      // optional bool is_depot_content = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_is_depot_content(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMPublishedFileUpdated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_updated = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_time_updated(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 hcontent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {
          HasBitSetters::set_has_hcontent(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &hcontent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 file_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (45 & 0xFF)) {
          HasBitSetters::set_has_file_size(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_depot_content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_is_depot_content(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_depot_content_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMPublishedFileUpdated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMPublishedFileUpdated)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMPublishedFileUpdated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional uint32 time_updated = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->time_updated(), output);
  }

  // optional fixed64 hcontent = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->hcontent(), output);
  }

  // optional fixed32 file_size = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->file_size(), output);
  }

  // optional bool is_depot_content = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_depot_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMPublishedFileUpdated)
}

::google::protobuf::uint8* CMsgClientUCMPublishedFileUpdated::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional uint32 time_updated = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->time_updated(), target);
  }

  // optional fixed64 hcontent = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->hcontent(), target);
  }

  // optional fixed32 file_size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->file_size(), target);
  }

  // optional bool is_depot_content = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_depot_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMPublishedFileUpdated)
  return target;
}

size_t CMsgClientUCMPublishedFileUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 time_updated = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_updated());
    }

    // optional fixed64 hcontent = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional fixed32 file_size = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 4;
    }

    // optional bool is_depot_content = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMPublishedFileUpdated::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishedFileUpdated* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMPublishedFileUpdated>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMPublishedFileUpdated)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMPublishedFileUpdated)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishedFileUpdated::MergeFrom(const CMsgClientUCMPublishedFileUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_updated_ = from.time_updated_;
    }
    if (cached_has_bits & 0x00000008u) {
      hcontent_ = from.hcontent_;
    }
    if (cached_has_bits & 0x00000010u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_depot_content_ = from.is_depot_content_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishedFileUpdated::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishedFileUpdated::CopyFrom(const CMsgClientUCMPublishedFileUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishedFileUpdated::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishedFileUpdated::Swap(CMsgClientUCMPublishedFileUpdated* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishedFileUpdated::InternalSwap(CMsgClientUCMPublishedFileUpdated* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(app_id_, other->app_id_);
  swap(time_updated_, other->time_updated_);
  swap(hcontent_, other->hcontent_);
  swap(file_size_, other->file_size_);
  swap(is_depot_content_, other->is_depot_content_);
}

::google::protobuf::Metadata CMsgClientUCMPublishedFileUpdated::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWorkshopItemChangesRequest::InitAsDefaultInstance() {
}
class CMsgClientWorkshopItemChangesRequest::HasBitSetters {
 public:
  static void set_has_app_id(CMsgClientWorkshopItemChangesRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_last_time_updated(CMsgClientWorkshopItemChangesRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_num_items_needed(CMsgClientWorkshopItemChangesRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemChangesRequest::kAppIdFieldNumber;
const int CMsgClientWorkshopItemChangesRequest::kLastTimeUpdatedFieldNumber;
const int CMsgClientWorkshopItemChangesRequest::kNumItemsNeededFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemChangesRequest::CMsgClientWorkshopItemChangesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientWorkshopItemChangesRequest)
}
CMsgClientWorkshopItemChangesRequest::CMsgClientWorkshopItemChangesRequest(const CMsgClientWorkshopItemChangesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_items_needed_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(num_items_needed_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientWorkshopItemChangesRequest)
}

void CMsgClientWorkshopItemChangesRequest::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_items_needed_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(num_items_needed_));
}

CMsgClientWorkshopItemChangesRequest::~CMsgClientWorkshopItemChangesRequest() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientWorkshopItemChangesRequest)
  SharedDtor();
}

void CMsgClientWorkshopItemChangesRequest::SharedDtor() {
}

void CMsgClientWorkshopItemChangesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientWorkshopItemChangesRequest& CMsgClientWorkshopItemChangesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientWorkshopItemChangesRequest_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientWorkshopItemChangesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_items_needed_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(num_items_needed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientWorkshopItemChangesRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientWorkshopItemChangesRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 last_time_updated = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_last_time_updated(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 num_items_needed = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_num_items_needed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientWorkshopItemChangesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_last_time_updated(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_items_needed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_num_items_needed(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_items_needed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientWorkshopItemChangesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientWorkshopItemChangesRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientWorkshopItemChangesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 last_time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->last_time_updated(), output);
  }

  // optional uint32 num_items_needed = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num_items_needed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientWorkshopItemChangesRequest)
}

::google::protobuf::uint8* CMsgClientWorkshopItemChangesRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 last_time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->last_time_updated(), target);
  }

  // optional uint32 num_items_needed = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num_items_needed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientWorkshopItemChangesRequest)
  return target;
}

size_t CMsgClientWorkshopItemChangesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 last_time_updated = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_time_updated());
    }

    // optional uint32 num_items_needed = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_items_needed());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemChangesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemChangesRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientWorkshopItemChangesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientWorkshopItemChangesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientWorkshopItemChangesRequest)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemChangesRequest::MergeFrom(const CMsgClientWorkshopItemChangesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      last_time_updated_ = from.last_time_updated_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_items_needed_ = from.num_items_needed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemChangesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemChangesRequest::CopyFrom(const CMsgClientWorkshopItemChangesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemChangesRequest::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemChangesRequest::Swap(CMsgClientWorkshopItemChangesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemChangesRequest::InternalSwap(CMsgClientWorkshopItemChangesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(app_id_, other->app_id_);
  swap(last_time_updated_, other->last_time_updated_);
  swap(num_items_needed_, other->num_items_needed_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemChangesRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::InitAsDefaultInstance() {
}
class CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_time_updated(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_manifest_id(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::kPublishedFileIdFieldNumber;
const int CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::kTimeUpdatedFieldNumber;
const int CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::kManifestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
}
CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_updated_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_updated_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
}

CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::~CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  SharedDtor();
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::SharedDtor() {
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_updated_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 time_updated = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_time_updated(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 manifest_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_manifest_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_time_updated(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 manifest_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {
          HasBitSetters::set_has_manifest_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &manifest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_updated(), output);
  }

  // optional fixed64 manifest_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->manifest_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
}

::google::protobuf::uint8* CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_updated(), target);
  }

  // optional fixed64 manifest_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->manifest_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  return target;
}

size_t CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional fixed64 manifest_id = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional uint32 time_updated = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_updated());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::MergeFrom(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      manifest_id_ = from.manifest_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_updated_ = from.time_updated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CopyFrom(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::Swap(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::InternalSwap(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(manifest_id_, other->manifest_id_);
  swap(time_updated_, other->time_updated_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWorkshopItemChangesResponse::InitAsDefaultInstance() {
}
class CMsgClientWorkshopItemChangesResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientWorkshopItemChangesResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_update_time(CMsgClientWorkshopItemChangesResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemChangesResponse::kEresultFieldNumber;
const int CMsgClientWorkshopItemChangesResponse::kUpdateTimeFieldNumber;
const int CMsgClientWorkshopItemChangesResponse::kWorkshopItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemChangesResponse::CMsgClientWorkshopItemChangesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientWorkshopItemChangesResponse)
}
CMsgClientWorkshopItemChangesResponse::CMsgClientWorkshopItemChangesResponse(const CMsgClientWorkshopItemChangesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      workshop_items_(from.workshop_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&update_time_, &from.update_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&update_time_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientWorkshopItemChangesResponse)
}

void CMsgClientWorkshopItemChangesResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientWorkshopItemChangesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  update_time_ = 0u;
  eresult_ = 2;
}

CMsgClientWorkshopItemChangesResponse::~CMsgClientWorkshopItemChangesResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientWorkshopItemChangesResponse)
  SharedDtor();
}

void CMsgClientWorkshopItemChangesResponse::SharedDtor() {
}

void CMsgClientWorkshopItemChangesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientWorkshopItemChangesResponse& CMsgClientWorkshopItemChangesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientWorkshopItemChangesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientWorkshopItemChangesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workshop_items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    update_time_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientWorkshopItemChangesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientWorkshopItemChangesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 update_time = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_update_time(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::_InternalParse;
          object = msg->add_workshop_items();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientWorkshopItemChangesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 update_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_update_time(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_workshop_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientWorkshopItemChangesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientWorkshopItemChangesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientWorkshopItemChangesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 update_time = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->update_time(), output);
  }

  // repeated .proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->workshop_items(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientWorkshopItemChangesResponse)
}

::google::protobuf::uint8* CMsgClientWorkshopItemChangesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 update_time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->update_time(), target);
  }

  // repeated .proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->workshop_items(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientWorkshopItemChangesResponse)
  return target;
}

size_t CMsgClientWorkshopItemChangesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->workshop_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->workshop_items(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 update_time = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->update_time());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemChangesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemChangesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientWorkshopItemChangesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientWorkshopItemChangesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientWorkshopItemChangesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemChangesResponse::MergeFrom(const CMsgClientWorkshopItemChangesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workshop_items_.MergeFrom(from.workshop_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      update_time_ = from.update_time_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemChangesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemChangesResponse::CopyFrom(const CMsgClientWorkshopItemChangesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemChangesResponse::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemChangesResponse::Swap(CMsgClientWorkshopItemChangesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemChangesResponse::InternalSwap(CMsgClientWorkshopItemChangesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&workshop_items_)->InternalSwap(CastToBase(&other->workshop_items_));
  swap(update_time_, other->update_time_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemChangesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::InitAsDefaultInstance() {
}
class CMsgClientWorkshopItemInfoRequest_WorkshopItem::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgClientWorkshopItemInfoRequest_WorkshopItem* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_time_updated(CMsgClientWorkshopItemInfoRequest_WorkshopItem* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemInfoRequest_WorkshopItem::kPublishedFileIdFieldNumber;
const int CMsgClientWorkshopItemInfoRequest_WorkshopItem::kTimeUpdatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemInfoRequest_WorkshopItem::CMsgClientWorkshopItemInfoRequest_WorkshopItem()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
}
CMsgClientWorkshopItemInfoRequest_WorkshopItem::CMsgClientWorkshopItemInfoRequest_WorkshopItem(const CMsgClientWorkshopItemInfoRequest_WorkshopItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_updated_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_updated_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
}

CMsgClientWorkshopItemInfoRequest_WorkshopItem::~CMsgClientWorkshopItemInfoRequest_WorkshopItem() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  SharedDtor();
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::SharedDtor() {
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientWorkshopItemInfoRequest_WorkshopItem& CMsgClientWorkshopItemInfoRequest_WorkshopItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientWorkshopItemInfoRequest_WorkshopItem_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientWorkshopItemInfoRequest_WorkshopItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_updated_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientWorkshopItemInfoRequest_WorkshopItem::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientWorkshopItemInfoRequest_WorkshopItem*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 time_updated = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_time_updated(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientWorkshopItemInfoRequest_WorkshopItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_time_updated(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_updated(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
}

::google::protobuf::uint8* CMsgClientWorkshopItemInfoRequest_WorkshopItem::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_updated(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  return target;
}

size_t CMsgClientWorkshopItemInfoRequest_WorkshopItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint32 time_updated = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_updated());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemInfoRequest_WorkshopItem* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientWorkshopItemInfoRequest_WorkshopItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::MergeFrom(const CMsgClientWorkshopItemInfoRequest_WorkshopItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_updated_ = from.time_updated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::CopyFrom(const CMsgClientWorkshopItemInfoRequest_WorkshopItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemInfoRequest_WorkshopItem::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::Swap(CMsgClientWorkshopItemInfoRequest_WorkshopItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemInfoRequest_WorkshopItem::InternalSwap(CMsgClientWorkshopItemInfoRequest_WorkshopItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(time_updated_, other->time_updated_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemInfoRequest_WorkshopItem::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWorkshopItemInfoRequest::InitAsDefaultInstance() {
}
class CMsgClientWorkshopItemInfoRequest::HasBitSetters {
 public:
  static void set_has_app_id(CMsgClientWorkshopItemInfoRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_last_time_updated(CMsgClientWorkshopItemInfoRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemInfoRequest::kAppIdFieldNumber;
const int CMsgClientWorkshopItemInfoRequest::kLastTimeUpdatedFieldNumber;
const int CMsgClientWorkshopItemInfoRequest::kWorkshopItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemInfoRequest::CMsgClientWorkshopItemInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientWorkshopItemInfoRequest)
}
CMsgClientWorkshopItemInfoRequest::CMsgClientWorkshopItemInfoRequest(const CMsgClientWorkshopItemInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      workshop_items_(from.workshop_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_time_updated_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(last_time_updated_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientWorkshopItemInfoRequest)
}

void CMsgClientWorkshopItemInfoRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientWorkshopItemInfoRequest_steammessages_5fclientserver_5f2_2eproto.base);
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_time_updated_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(last_time_updated_));
}

CMsgClientWorkshopItemInfoRequest::~CMsgClientWorkshopItemInfoRequest() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientWorkshopItemInfoRequest)
  SharedDtor();
}

void CMsgClientWorkshopItemInfoRequest::SharedDtor() {
}

void CMsgClientWorkshopItemInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientWorkshopItemInfoRequest& CMsgClientWorkshopItemInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientWorkshopItemInfoRequest_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientWorkshopItemInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workshop_items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_time_updated_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(last_time_updated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientWorkshopItemInfoRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientWorkshopItemInfoRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 last_time_updated = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_last_time_updated(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem workshop_items = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem::_InternalParse;
          object = msg->add_workshop_items();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientWorkshopItemInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_last_time_updated(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem workshop_items = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_workshop_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientWorkshopItemInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientWorkshopItemInfoRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientWorkshopItemInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 last_time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->last_time_updated(), output);
  }

  // repeated .proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem workshop_items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->workshop_items(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientWorkshopItemInfoRequest)
}

::google::protobuf::uint8* CMsgClientWorkshopItemInfoRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 last_time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->last_time_updated(), target);
  }

  // repeated .proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem workshop_items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->workshop_items(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientWorkshopItemInfoRequest)
  return target;
}

size_t CMsgClientWorkshopItemInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem workshop_items = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->workshop_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->workshop_items(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 last_time_updated = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_time_updated());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemInfoRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientWorkshopItemInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientWorkshopItemInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientWorkshopItemInfoRequest)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemInfoRequest::MergeFrom(const CMsgClientWorkshopItemInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workshop_items_.MergeFrom(from.workshop_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      last_time_updated_ = from.last_time_updated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemInfoRequest::CopyFrom(const CMsgClientWorkshopItemInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemInfoRequest::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemInfoRequest::Swap(CMsgClientWorkshopItemInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemInfoRequest::InternalSwap(CMsgClientWorkshopItemInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&workshop_items_)->InternalSwap(CastToBase(&other->workshop_items_));
  swap(app_id_, other->app_id_);
  swap(last_time_updated_, other->last_time_updated_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemInfoRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::InitAsDefaultInstance() {
}
class CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_time_updated(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_manifest_id(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_is_legacy(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::kPublishedFileIdFieldNumber;
const int CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::kTimeUpdatedFieldNumber;
const int CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::kManifestIdFieldNumber;
const int CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::kIsLegacyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
}
CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo(const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_legacy_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_legacy_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_legacy_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_legacy_));
}

CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::~CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  SharedDtor();
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::SharedDtor() {
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo& CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_legacy_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_legacy_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 time_updated = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_time_updated(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 manifest_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_manifest_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional bool is_legacy = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_is_legacy(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_time_updated(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 manifest_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {
          HasBitSetters::set_has_manifest_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &manifest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_legacy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_is_legacy(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_legacy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_updated(), output);
  }

  // optional fixed64 manifest_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->manifest_id(), output);
  }

  // optional bool is_legacy = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_legacy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
}

::google::protobuf::uint8* CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_updated(), target);
  }

  // optional fixed64 manifest_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->manifest_id(), target);
  }

  // optional bool is_legacy = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_legacy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  return target;
}

size_t CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional fixed64 manifest_id = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional uint32 time_updated = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_updated());
    }

    // optional bool is_legacy = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::MergeFrom(const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      manifest_id_ = from.manifest_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_updated_ = from.time_updated_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_legacy_ = from.is_legacy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::CopyFrom(const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::Swap(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::InternalSwap(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(manifest_id_, other->manifest_id_);
  swap(time_updated_, other->time_updated_);
  swap(is_legacy_, other->is_legacy_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientWorkshopItemInfoResponse::InitAsDefaultInstance() {
}
class CMsgClientWorkshopItemInfoResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientWorkshopItemInfoResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_update_time(CMsgClientWorkshopItemInfoResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemInfoResponse::kEresultFieldNumber;
const int CMsgClientWorkshopItemInfoResponse::kUpdateTimeFieldNumber;
const int CMsgClientWorkshopItemInfoResponse::kWorkshopItemsFieldNumber;
const int CMsgClientWorkshopItemInfoResponse::kPrivateItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemInfoResponse::CMsgClientWorkshopItemInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientWorkshopItemInfoResponse)
}
CMsgClientWorkshopItemInfoResponse::CMsgClientWorkshopItemInfoResponse(const CMsgClientWorkshopItemInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      workshop_items_(from.workshop_items_),
      private_items_(from.private_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&update_time_, &from.update_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&update_time_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientWorkshopItemInfoResponse)
}

void CMsgClientWorkshopItemInfoResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientWorkshopItemInfoResponse_steammessages_5fclientserver_5f2_2eproto.base);
  update_time_ = 0u;
  eresult_ = 2;
}

CMsgClientWorkshopItemInfoResponse::~CMsgClientWorkshopItemInfoResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientWorkshopItemInfoResponse)
  SharedDtor();
}

void CMsgClientWorkshopItemInfoResponse::SharedDtor() {
}

void CMsgClientWorkshopItemInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientWorkshopItemInfoResponse& CMsgClientWorkshopItemInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientWorkshopItemInfoResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientWorkshopItemInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workshop_items_.Clear();
  private_items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    update_time_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientWorkshopItemInfoResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientWorkshopItemInfoResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 update_time = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_update_time(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo workshop_items = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::_InternalParse;
          object = msg->add_workshop_items();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated fixed64 private_items = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) == 33) {
          do {
            msg->add_private_items(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
            ptr += sizeof(::google::protobuf::uint64);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 33 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedFixed64Parser;
        object = msg->mutable_private_items();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientWorkshopItemInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 update_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_update_time(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo workshop_items = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_workshop_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 private_items = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 33u, input, this->mutable_private_items())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_private_items())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientWorkshopItemInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientWorkshopItemInfoResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientWorkshopItemInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 update_time = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->update_time(), output);
  }

  // repeated .proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo workshop_items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->workshop_items(static_cast<int>(i)),
      output);
  }

  // repeated fixed64 private_items = 4;
  for (int i = 0, n = this->private_items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      4, this->private_items(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientWorkshopItemInfoResponse)
}

::google::protobuf::uint8* CMsgClientWorkshopItemInfoResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 update_time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->update_time(), target);
  }

  // repeated .proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo workshop_items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workshop_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->workshop_items(static_cast<int>(i)), target);
  }

  // repeated fixed64 private_items = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(4, this->private_items_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientWorkshopItemInfoResponse)
  return target;
}

size_t CMsgClientWorkshopItemInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo workshop_items = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->workshop_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->workshop_items(static_cast<int>(i)));
    }
  }

  // repeated fixed64 private_items = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->private_items_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->private_items_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 update_time = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->update_time());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemInfoResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientWorkshopItemInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientWorkshopItemInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientWorkshopItemInfoResponse)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemInfoResponse::MergeFrom(const CMsgClientWorkshopItemInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workshop_items_.MergeFrom(from.workshop_items_);
  private_items_.MergeFrom(from.private_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      update_time_ = from.update_time_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemInfoResponse::CopyFrom(const CMsgClientWorkshopItemInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemInfoResponse::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemInfoResponse::Swap(CMsgClientWorkshopItemInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemInfoResponse::InternalSwap(CMsgClientWorkshopItemInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&workshop_items_)->InternalSwap(CastToBase(&other->workshop_items_));
  private_items_.InternalSwap(&other->private_items_);
  swap(update_time_, other->update_time_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemInfoResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMGetPublishedFilesForUser::InitAsDefaultInstance() {
}
class CMsgClientUCMGetPublishedFilesForUser::HasBitSetters {
 public:
  static void set_has_app_id(CMsgClientUCMGetPublishedFilesForUser* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_creator_steam_id(CMsgClientUCMGetPublishedFilesForUser* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_start_index(CMsgClientUCMGetPublishedFilesForUser* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMGetPublishedFilesForUser::kAppIdFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUser::kCreatorSteamIdFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUser::kRequiredTagsFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUser::kExcludedTagsFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUser::kStartIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMGetPublishedFilesForUser::CMsgClientUCMGetPublishedFilesForUser()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
}
CMsgClientUCMGetPublishedFilesForUser::CMsgClientUCMGetPublishedFilesForUser(const CMsgClientUCMGetPublishedFilesForUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      required_tags_(from.required_tags_),
      excluded_tags_(from.excluded_tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&creator_steam_id_, &from.creator_steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&start_index_) -
    reinterpret_cast<char*>(&creator_steam_id_)) + sizeof(start_index_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
}

void CMsgClientUCMGetPublishedFilesForUser::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUCMGetPublishedFilesForUser_steammessages_5fclientserver_5f2_2eproto.base);
  ::memset(&creator_steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_index_) -
      reinterpret_cast<char*>(&creator_steam_id_)) + sizeof(start_index_));
}

CMsgClientUCMGetPublishedFilesForUser::~CMsgClientUCMGetPublishedFilesForUser() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  SharedDtor();
}

void CMsgClientUCMGetPublishedFilesForUser::SharedDtor() {
}

void CMsgClientUCMGetPublishedFilesForUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMGetPublishedFilesForUser& CMsgClientUCMGetPublishedFilesForUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMGetPublishedFilesForUser_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMGetPublishedFilesForUser::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  required_tags_.Clear();
  excluded_tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&creator_steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&start_index_) -
        reinterpret_cast<char*>(&creator_steam_id_)) + sizeof(start_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMGetPublishedFilesForUser::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMGetPublishedFilesForUser*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 creator_steam_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_creator_steam_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // repeated string required_tags = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags");
          object = msg->add_required_tags();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated string excluded_tags = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags");
          object = msg->add_excluded_tags();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // optional uint32 start_index = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_start_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMGetPublishedFilesForUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 creator_steam_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {
          HasBitSetters::set_has_creator_steam_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &creator_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string required_tags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_required_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->required_tags(this->required_tags_size() - 1).data(),
            static_cast<int>(this->required_tags(this->required_tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string excluded_tags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_excluded_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->excluded_tags(this->excluded_tags_size() - 1).data(),
            static_cast<int>(this->excluded_tags(this->excluded_tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_start_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMGetPublishedFilesForUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 creator_steam_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->creator_steam_id(), output);
  }

  // repeated string required_tags = 3;
  for (int i = 0, n = this->required_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_tags(i).data(), static_cast<int>(this->required_tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->required_tags(i), output);
  }

  // repeated string excluded_tags = 4;
  for (int i = 0, n = this->excluded_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->excluded_tags(i).data(), static_cast<int>(this->excluded_tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->excluded_tags(i), output);
  }

  // optional uint32 start_index = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->start_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
}

::google::protobuf::uint8* CMsgClientUCMGetPublishedFilesForUser::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 creator_steam_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->creator_steam_id(), target);
  }

  // repeated string required_tags = 3;
  for (int i = 0, n = this->required_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_tags(i).data(), static_cast<int>(this->required_tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->required_tags(i), target);
  }

  // repeated string excluded_tags = 4;
  for (int i = 0, n = this->excluded_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->excluded_tags(i).data(), static_cast<int>(this->excluded_tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->excluded_tags(i), target);
  }

  // optional uint32 start_index = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->start_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  return target;
}

size_t CMsgClientUCMGetPublishedFilesForUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string required_tags = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->required_tags_size());
  for (int i = 0, n = this->required_tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->required_tags(i));
  }

  // repeated string excluded_tags = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->excluded_tags_size());
  for (int i = 0, n = this->excluded_tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->excluded_tags(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional fixed64 creator_steam_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 start_index = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMGetPublishedFilesForUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMGetPublishedFilesForUser* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMGetPublishedFilesForUser>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
    MergeFrom(*source);
  }
}

void CMsgClientUCMGetPublishedFilesForUser::MergeFrom(const CMsgClientUCMGetPublishedFilesForUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  required_tags_.MergeFrom(from.required_tags_);
  excluded_tags_.MergeFrom(from.excluded_tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      creator_steam_id_ = from.creator_steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      start_index_ = from.start_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMGetPublishedFilesForUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMGetPublishedFilesForUser::CopyFrom(const CMsgClientUCMGetPublishedFilesForUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMGetPublishedFilesForUser::IsInitialized() const {
  return true;
}

void CMsgClientUCMGetPublishedFilesForUser::Swap(CMsgClientUCMGetPublishedFilesForUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMGetPublishedFilesForUser::InternalSwap(CMsgClientUCMGetPublishedFilesForUser* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  required_tags_.InternalSwap(CastToBase(&other->required_tags_));
  excluded_tags_.InternalSwap(CastToBase(&other->excluded_tags_));
  swap(creator_steam_id_, other->creator_steam_id_);
  swap(app_id_, other->app_id_);
  swap(start_index_, other->start_index_);
}

::google::protobuf::Metadata CMsgClientUCMGetPublishedFilesForUser::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::InitAsDefaultInstance() {
}
class CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::kPublishedFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
}
CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId(const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  published_file_id_ = from.published_file_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::SharedCtor() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::~CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  SharedDtor();
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::SharedDtor() {
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId& CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 published_file_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::MergeFrom(const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_published_file_id()) {
    set_published_file_id(from.published_file_id());
  }
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::CopyFrom(const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::Swap(CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::InternalSwap(CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
}

::google::protobuf::Metadata CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMGetPublishedFilesForUserResponse::InitAsDefaultInstance() {
}
class CMsgClientUCMGetPublishedFilesForUserResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientUCMGetPublishedFilesForUserResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_total_results(CMsgClientUCMGetPublishedFilesForUserResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMGetPublishedFilesForUserResponse::kEresultFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUserResponse::kPublishedFilesFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUserResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMGetPublishedFilesForUserResponse::CMsgClientUCMGetPublishedFilesForUserResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
}
CMsgClientUCMGetPublishedFilesForUserResponse::CMsgClientUCMGetPublishedFilesForUserResponse(const CMsgClientUCMGetPublishedFilesForUserResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      published_files_(from.published_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
}

void CMsgClientUCMGetPublishedFilesForUserResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUCMGetPublishedFilesForUserResponse_steammessages_5fclientserver_5f2_2eproto.base);
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgClientUCMGetPublishedFilesForUserResponse::~CMsgClientUCMGetPublishedFilesForUserResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  SharedDtor();
}

void CMsgClientUCMGetPublishedFilesForUserResponse::SharedDtor() {
}

void CMsgClientUCMGetPublishedFilesForUserResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMGetPublishedFilesForUserResponse& CMsgClientUCMGetPublishedFilesForUserResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMGetPublishedFilesForUserResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMGetPublishedFilesForUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMGetPublishedFilesForUserResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMGetPublishedFilesForUserResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::_InternalParse;
          object = msg->add_published_files();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_total_results(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMGetPublishedFilesForUserResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_published_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_total_results(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMGetPublishedFilesForUserResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->published_files(static_cast<int>(i)),
      output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
}

::google::protobuf::uint8* CMsgClientUCMGetPublishedFilesForUserResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->published_files(static_cast<int>(i)), target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  return target;
}

size_t CMsgClientUCMGetPublishedFilesForUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId published_files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->published_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->published_files(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 total_results = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMGetPublishedFilesForUserResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMGetPublishedFilesForUserResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMGetPublishedFilesForUserResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMGetPublishedFilesForUserResponse::MergeFrom(const CMsgClientUCMGetPublishedFilesForUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_files_.MergeFrom(from.published_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMGetPublishedFilesForUserResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMGetPublishedFilesForUserResponse::CopyFrom(const CMsgClientUCMGetPublishedFilesForUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMGetPublishedFilesForUserResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMGetPublishedFilesForUserResponse::Swap(CMsgClientUCMGetPublishedFilesForUserResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMGetPublishedFilesForUserResponse::InternalSwap(CMsgClientUCMGetPublishedFilesForUserResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&published_files_)->InternalSwap(CastToBase(&other->published_files_));
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientUCMGetPublishedFilesForUserResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMSetUserPublishedFileAction::InitAsDefaultInstance() {
}
class CMsgClientUCMSetUserPublishedFileAction::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgClientUCMSetUserPublishedFileAction* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_app_id(CMsgClientUCMSetUserPublishedFileAction* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_action(CMsgClientUCMSetUserPublishedFileAction* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMSetUserPublishedFileAction::kPublishedFileIdFieldNumber;
const int CMsgClientUCMSetUserPublishedFileAction::kAppIdFieldNumber;
const int CMsgClientUCMSetUserPublishedFileAction::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMSetUserPublishedFileAction::CMsgClientUCMSetUserPublishedFileAction()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
}
CMsgClientUCMSetUserPublishedFileAction::CMsgClientUCMSetUserPublishedFileAction(const CMsgClientUCMSetUserPublishedFileAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
}

void CMsgClientUCMSetUserPublishedFileAction::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(action_));
}

CMsgClientUCMSetUserPublishedFileAction::~CMsgClientUCMSetUserPublishedFileAction() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  SharedDtor();
}

void CMsgClientUCMSetUserPublishedFileAction::SharedDtor() {
}

void CMsgClientUCMSetUserPublishedFileAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMSetUserPublishedFileAction& CMsgClientUCMSetUserPublishedFileAction::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMSetUserPublishedFileAction_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMSetUserPublishedFileAction::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&action_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(action_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMSetUserPublishedFileAction::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMSetUserPublishedFileAction*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 action = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_action(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMSetUserPublishedFileAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_action(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMSetUserPublishedFileAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
}

::google::protobuf::uint8* CMsgClientUCMSetUserPublishedFileAction::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  return target;
}

size_t CMsgClientUCMSetUserPublishedFileAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 action = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMSetUserPublishedFileAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMSetUserPublishedFileAction* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMSetUserPublishedFileAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
    MergeFrom(*source);
  }
}

void CMsgClientUCMSetUserPublishedFileAction::MergeFrom(const CMsgClientUCMSetUserPublishedFileAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMSetUserPublishedFileAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMSetUserPublishedFileAction::CopyFrom(const CMsgClientUCMSetUserPublishedFileAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMSetUserPublishedFileAction::IsInitialized() const {
  return true;
}

void CMsgClientUCMSetUserPublishedFileAction::Swap(CMsgClientUCMSetUserPublishedFileAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMSetUserPublishedFileAction::InternalSwap(CMsgClientUCMSetUserPublishedFileAction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(app_id_, other->app_id_);
  swap(action_, other->action_);
}

::google::protobuf::Metadata CMsgClientUCMSetUserPublishedFileAction::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMSetUserPublishedFileActionResponse::InitAsDefaultInstance() {
}
class CMsgClientUCMSetUserPublishedFileActionResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientUCMSetUserPublishedFileActionResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMSetUserPublishedFileActionResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMSetUserPublishedFileActionResponse::CMsgClientUCMSetUserPublishedFileActionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
}
CMsgClientUCMSetUserPublishedFileActionResponse::CMsgClientUCMSetUserPublishedFileActionResponse(const CMsgClientUCMSetUserPublishedFileActionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
}

void CMsgClientUCMSetUserPublishedFileActionResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgClientUCMSetUserPublishedFileActionResponse::~CMsgClientUCMSetUserPublishedFileActionResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  SharedDtor();
}

void CMsgClientUCMSetUserPublishedFileActionResponse::SharedDtor() {
}

void CMsgClientUCMSetUserPublishedFileActionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMSetUserPublishedFileActionResponse& CMsgClientUCMSetUserPublishedFileActionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMSetUserPublishedFileActionResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMSetUserPublishedFileActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMSetUserPublishedFileActionResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMSetUserPublishedFileActionResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMSetUserPublishedFileActionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMSetUserPublishedFileActionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
}

::google::protobuf::uint8* CMsgClientUCMSetUserPublishedFileActionResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  return target;
}

size_t CMsgClientUCMSetUserPublishedFileActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 eresult = 1 [default = 2];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMSetUserPublishedFileActionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMSetUserPublishedFileActionResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMSetUserPublishedFileActionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMSetUserPublishedFileActionResponse::MergeFrom(const CMsgClientUCMSetUserPublishedFileActionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientUCMSetUserPublishedFileActionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMSetUserPublishedFileActionResponse::CopyFrom(const CMsgClientUCMSetUserPublishedFileActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMSetUserPublishedFileActionResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMSetUserPublishedFileActionResponse::Swap(CMsgClientUCMSetUserPublishedFileActionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMSetUserPublishedFileActionResponse::InternalSwap(CMsgClientUCMSetUserPublishedFileActionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientUCMSetUserPublishedFileActionResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumeratePublishedFilesByUserAction::InitAsDefaultInstance() {
}
class CMsgClientUCMEnumeratePublishedFilesByUserAction::HasBitSetters {
 public:
  static void set_has_app_id(CMsgClientUCMEnumeratePublishedFilesByUserAction* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_start_index(CMsgClientUCMEnumeratePublishedFilesByUserAction* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_action(CMsgClientUCMEnumeratePublishedFilesByUserAction* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumeratePublishedFilesByUserAction::kAppIdFieldNumber;
const int CMsgClientUCMEnumeratePublishedFilesByUserAction::kStartIndexFieldNumber;
const int CMsgClientUCMEnumeratePublishedFilesByUserAction::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumeratePublishedFilesByUserAction::CMsgClientUCMEnumeratePublishedFilesByUserAction()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
}
CMsgClientUCMEnumeratePublishedFilesByUserAction::CMsgClientUCMEnumeratePublishedFilesByUserAction(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(action_));
}

CMsgClientUCMEnumeratePublishedFilesByUserAction::~CMsgClientUCMEnumeratePublishedFilesByUserAction() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  SharedDtor();
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::SharedDtor() {
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMEnumeratePublishedFilesByUserAction& CMsgClientUCMEnumeratePublishedFilesByUserAction::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMEnumeratePublishedFilesByUserAction_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumeratePublishedFilesByUserAction::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&action_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(action_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMEnumeratePublishedFilesByUserAction::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMEnumeratePublishedFilesByUserAction*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_start_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 action = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_action(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMEnumeratePublishedFilesByUserAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_start_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_action(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMEnumeratePublishedFilesByUserAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start_index(), output);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
}

::google::protobuf::uint8* CMsgClientUCMEnumeratePublishedFilesByUserAction::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start_index(), target);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  return target;
}

size_t CMsgClientUCMEnumeratePublishedFilesByUserAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 start_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

    // optional int32 action = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumeratePublishedFilesByUserAction* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMEnumeratePublishedFilesByUserAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::MergeFrom(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::CopyFrom(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumeratePublishedFilesByUserAction::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::Swap(CMsgClientUCMEnumeratePublishedFilesByUserAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::InternalSwap(CMsgClientUCMEnumeratePublishedFilesByUserAction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(app_id_, other->app_id_);
  swap(start_index_, other->start_index_);
  swap(action_, other->action_);
}

::google::protobuf::Metadata CMsgClientUCMEnumeratePublishedFilesByUserAction::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::InitAsDefaultInstance() {
}
class CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_rtime_time_stamp(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::kPublishedFileIdFieldNumber;
const int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::kRtimeTimeStampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
}
CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rtime_time_stamp_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime_time_stamp_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rtime_time_stamp_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime_time_stamp_));
}

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::~CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  SharedDtor();
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::SharedDtor() {
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rtime_time_stamp_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime_time_stamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional fixed32 rtime_time_stamp = 2 [default = 0];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_rtime_time_stamp(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime_time_stamp = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {
          HasBitSetters::set_has_rtime_time_stamp(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime_time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional fixed32 rtime_time_stamp = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->rtime_time_stamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional fixed32 rtime_time_stamp = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->rtime_time_stamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional fixed32 rtime_time_stamp = 2 [default = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::MergeFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      rtime_time_stamp_ = from.rtime_time_stamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CopyFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::Swap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::InternalSwap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(rtime_time_stamp_, other->rtime_time_stamp_);
}

::google::protobuf::Metadata CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::InitAsDefaultInstance() {
}
class CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_total_results(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::kEresultFieldNumber;
const int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::kPublishedFilesFieldNumber;
const int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
}
CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      published_files_(from.published_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_steammessages_5fclientserver_5f2_2eproto.base);
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::~CMsgClientUCMEnumeratePublishedFilesByUserActionResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  SharedDtor();
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::SharedDtor() {
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::_InternalParse;
          object = msg->add_published_files();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_total_results(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_published_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_total_results(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->published_files(static_cast<int>(i)),
      output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
}

::google::protobuf::uint8* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->published_files(static_cast<int>(i)), target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  return target;
}

size_t CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->published_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->published_files(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 total_results = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::MergeFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_files_.MergeFrom(from.published_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CopyFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::Swap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::InternalSwap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&published_files_)->InternalSwap(CastToBase(&other->published_files_));
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientScreenshotsChanged::InitAsDefaultInstance() {
}
class CMsgClientScreenshotsChanged::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientScreenshotsChanged::CMsgClientScreenshotsChanged()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientScreenshotsChanged)
}
CMsgClientScreenshotsChanged::CMsgClientScreenshotsChanged(const CMsgClientScreenshotsChanged& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientScreenshotsChanged)
}

void CMsgClientScreenshotsChanged::SharedCtor() {
}

CMsgClientScreenshotsChanged::~CMsgClientScreenshotsChanged() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientScreenshotsChanged)
  SharedDtor();
}

void CMsgClientScreenshotsChanged::SharedDtor() {
}

void CMsgClientScreenshotsChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientScreenshotsChanged& CMsgClientScreenshotsChanged::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientScreenshotsChanged_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientScreenshotsChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientScreenshotsChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientScreenshotsChanged::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientScreenshotsChanged*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientScreenshotsChanged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientScreenshotsChanged)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientScreenshotsChanged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientScreenshotsChanged)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientScreenshotsChanged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientScreenshotsChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientScreenshotsChanged)
}

::google::protobuf::uint8* CMsgClientScreenshotsChanged::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientScreenshotsChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientScreenshotsChanged)
  return target;
}

size_t CMsgClientScreenshotsChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientScreenshotsChanged)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientScreenshotsChanged::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientScreenshotsChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientScreenshotsChanged* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientScreenshotsChanged>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientScreenshotsChanged)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientScreenshotsChanged)
    MergeFrom(*source);
  }
}

void CMsgClientScreenshotsChanged::MergeFrom(const CMsgClientScreenshotsChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientScreenshotsChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientScreenshotsChanged::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientScreenshotsChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientScreenshotsChanged::CopyFrom(const CMsgClientScreenshotsChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientScreenshotsChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientScreenshotsChanged::IsInitialized() const {
  return true;
}

void CMsgClientScreenshotsChanged::Swap(CMsgClientScreenshotsChanged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientScreenshotsChanged::InternalSwap(CMsgClientScreenshotsChanged* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CMsgClientScreenshotsChanged::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUpdateUserGameInfo::InitAsDefaultInstance() {
}
class CMsgClientUpdateUserGameInfo::HasBitSetters {
 public:
  static void set_has_steamid_idgs(CMsgClientUpdateUserGameInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_gameid(CMsgClientUpdateUserGameInfo* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_game_ip(CMsgClientUpdateUserGameInfo* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_game_port(CMsgClientUpdateUserGameInfo* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_token(CMsgClientUpdateUserGameInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUpdateUserGameInfo::kSteamidIdgsFieldNumber;
const int CMsgClientUpdateUserGameInfo::kGameidFieldNumber;
const int CMsgClientUpdateUserGameInfo::kGameIpFieldNumber;
const int CMsgClientUpdateUserGameInfo::kGamePortFieldNumber;
const int CMsgClientUpdateUserGameInfo::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUpdateUserGameInfo::CMsgClientUpdateUserGameInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUpdateUserGameInfo)
}
CMsgClientUpdateUserGameInfo::CMsgClientUpdateUserGameInfo(const CMsgClientUpdateUserGameInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&steamid_idgs_, &from.steamid_idgs_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_port_) -
    reinterpret_cast<char*>(&steamid_idgs_)) + sizeof(game_port_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUpdateUserGameInfo)
}

void CMsgClientUpdateUserGameInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUpdateUserGameInfo_steammessages_5fclientserver_5f2_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steamid_idgs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_port_) -
      reinterpret_cast<char*>(&steamid_idgs_)) + sizeof(game_port_));
}

CMsgClientUpdateUserGameInfo::~CMsgClientUpdateUserGameInfo() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUpdateUserGameInfo)
  SharedDtor();
}

void CMsgClientUpdateUserGameInfo::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUpdateUserGameInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUpdateUserGameInfo& CMsgClientUpdateUserGameInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUpdateUserGameInfo_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUpdateUserGameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUpdateUserGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    token_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&steamid_idgs_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&game_port_) -
        reinterpret_cast<char*>(&steamid_idgs_)) + sizeof(game_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUpdateUserGameInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUpdateUserGameInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steamid_idgs = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_steamid_idgs(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional fixed64 gameid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_gameid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 game_ip = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_game_ip(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 game_port = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_game_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes token = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUpdateUserGameInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUpdateUserGameInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid_idgs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_steamid_idgs(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_idgs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 gameid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {
          HasBitSetters::set_has_gameid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_game_ip(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_game_port(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes token = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUpdateUserGameInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUpdateUserGameInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUpdateUserGameInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUpdateUserGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_idgs = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid_idgs(), output);
  }

  // optional fixed64 gameid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->gameid(), output);
  }

  // optional uint32 game_ip = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->game_ip(), output);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->game_port(), output);
  }

  // optional bytes token = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUpdateUserGameInfo)
}

::google::protobuf::uint8* CMsgClientUpdateUserGameInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUpdateUserGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_idgs = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid_idgs(), target);
  }

  // optional fixed64 gameid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->gameid(), target);
  }

  // optional uint32 game_ip = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->game_ip(), target);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->game_port(), target);
  }

  // optional bytes token = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUpdateUserGameInfo)
  return target;
}

size_t CMsgClientUpdateUserGameInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUpdateUserGameInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional bytes token = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->token());
    }

    // optional fixed64 steamid_idgs = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional fixed64 gameid = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional uint32 game_ip = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_ip());
    }

    // optional uint32 game_port = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUpdateUserGameInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUpdateUserGameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUpdateUserGameInfo* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUpdateUserGameInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUpdateUserGameInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUpdateUserGameInfo)
    MergeFrom(*source);
  }
}

void CMsgClientUpdateUserGameInfo::MergeFrom(const CMsgClientUpdateUserGameInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUpdateUserGameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_idgs_ = from.steamid_idgs_;
    }
    if (cached_has_bits & 0x00000004u) {
      gameid_ = from.gameid_;
    }
    if (cached_has_bits & 0x00000008u) {
      game_ip_ = from.game_ip_;
    }
    if (cached_has_bits & 0x00000010u) {
      game_port_ = from.game_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUpdateUserGameInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUpdateUserGameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUpdateUserGameInfo::CopyFrom(const CMsgClientUpdateUserGameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUpdateUserGameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUpdateUserGameInfo::IsInitialized() const {
  return true;
}

void CMsgClientUpdateUserGameInfo::Swap(CMsgClientUpdateUserGameInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUpdateUserGameInfo::InternalSwap(CMsgClientUpdateUserGameInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steamid_idgs_, other->steamid_idgs_);
  swap(gameid_, other->gameid_);
  swap(game_ip_, other->game_ip_);
  swap(game_port_, other->game_port_);
}

::google::protobuf::Metadata CMsgClientUpdateUserGameInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRichPresenceUpload::InitAsDefaultInstance() {
}
class CMsgClientRichPresenceUpload::HasBitSetters {
 public:
  static void set_has_rich_presence_kv(CMsgClientRichPresenceUpload* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRichPresenceUpload::kRichPresenceKvFieldNumber;
const int CMsgClientRichPresenceUpload::kSteamidBroadcastFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRichPresenceUpload::CMsgClientRichPresenceUpload()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRichPresenceUpload)
}
CMsgClientRichPresenceUpload::CMsgClientRichPresenceUpload(const CMsgClientRichPresenceUpload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      steamid_broadcast_(from.steamid_broadcast_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rich_presence_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rich_presence_kv()) {
    rich_presence_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rich_presence_kv_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRichPresenceUpload)
}

void CMsgClientRichPresenceUpload::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientRichPresenceUpload_steammessages_5fclientserver_5f2_2eproto.base);
  rich_presence_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientRichPresenceUpload::~CMsgClientRichPresenceUpload() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRichPresenceUpload)
  SharedDtor();
}

void CMsgClientRichPresenceUpload::SharedDtor() {
  rich_presence_kv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRichPresenceUpload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRichPresenceUpload& CMsgClientRichPresenceUpload::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRichPresenceUpload_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRichPresenceUpload::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRichPresenceUpload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_broadcast_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    rich_presence_kv_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRichPresenceUpload::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRichPresenceUpload*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes rich_presence_kv = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_rich_presence_kv();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated fixed64 steamid_broadcast = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 17) {
          do {
            msg->add_steamid_broadcast(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
            ptr += sizeof(::google::protobuf::uint64);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 17 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedFixed64Parser;
        object = msg->mutable_steamid_broadcast();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRichPresenceUpload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRichPresenceUpload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes rich_presence_kv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rich_presence_kv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 steamid_broadcast = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 17u, input, this->mutable_steamid_broadcast())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steamid_broadcast())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRichPresenceUpload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRichPresenceUpload)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRichPresenceUpload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRichPresenceUpload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes rich_presence_kv = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->rich_presence_kv(), output);
  }

  // repeated fixed64 steamid_broadcast = 2;
  for (int i = 0, n = this->steamid_broadcast_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      2, this->steamid_broadcast(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRichPresenceUpload)
}

::google::protobuf::uint8* CMsgClientRichPresenceUpload::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRichPresenceUpload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes rich_presence_kv = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->rich_presence_kv(), target);
  }

  // repeated fixed64 steamid_broadcast = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(2, this->steamid_broadcast_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRichPresenceUpload)
  return target;
}

size_t CMsgClientRichPresenceUpload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRichPresenceUpload)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed64 steamid_broadcast = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->steamid_broadcast_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamid_broadcast_size());
    total_size += data_size;
  }

  // optional bytes rich_presence_kv = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->rich_presence_kv());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRichPresenceUpload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRichPresenceUpload)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRichPresenceUpload* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRichPresenceUpload>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRichPresenceUpload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRichPresenceUpload)
    MergeFrom(*source);
  }
}

void CMsgClientRichPresenceUpload::MergeFrom(const CMsgClientRichPresenceUpload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRichPresenceUpload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steamid_broadcast_.MergeFrom(from.steamid_broadcast_);
  if (from.has_rich_presence_kv()) {
    _has_bits_[0] |= 0x00000001u;
    rich_presence_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rich_presence_kv_);
  }
}

void CMsgClientRichPresenceUpload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRichPresenceUpload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRichPresenceUpload::CopyFrom(const CMsgClientRichPresenceUpload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRichPresenceUpload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRichPresenceUpload::IsInitialized() const {
  return true;
}

void CMsgClientRichPresenceUpload::Swap(CMsgClientRichPresenceUpload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRichPresenceUpload::InternalSwap(CMsgClientRichPresenceUpload* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  steamid_broadcast_.InternalSwap(&other->steamid_broadcast_);
  rich_presence_kv_.Swap(&other->rich_presence_kv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CMsgClientRichPresenceUpload::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRichPresenceRequest::InitAsDefaultInstance() {
}
class CMsgClientRichPresenceRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRichPresenceRequest::kSteamidRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRichPresenceRequest::CMsgClientRichPresenceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRichPresenceRequest)
}
CMsgClientRichPresenceRequest::CMsgClientRichPresenceRequest(const CMsgClientRichPresenceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      steamid_request_(from.steamid_request_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRichPresenceRequest)
}

void CMsgClientRichPresenceRequest::SharedCtor() {
}

CMsgClientRichPresenceRequest::~CMsgClientRichPresenceRequest() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRichPresenceRequest)
  SharedDtor();
}

void CMsgClientRichPresenceRequest::SharedDtor() {
}

void CMsgClientRichPresenceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRichPresenceRequest& CMsgClientRichPresenceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRichPresenceRequest_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRichPresenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRichPresenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_request_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRichPresenceRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRichPresenceRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated fixed64 steamid_request = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 9) {
          do {
            msg->add_steamid_request(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
            ptr += sizeof(::google::protobuf::uint64);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 9 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedFixed64Parser;
        object = msg->mutable_steamid_request();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRichPresenceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRichPresenceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 steamid_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 9u, input, this->mutable_steamid_request())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steamid_request())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRichPresenceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRichPresenceRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRichPresenceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRichPresenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 steamid_request = 1;
  for (int i = 0, n = this->steamid_request_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      1, this->steamid_request(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRichPresenceRequest)
}

::google::protobuf::uint8* CMsgClientRichPresenceRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRichPresenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 steamid_request = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(1, this->steamid_request_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRichPresenceRequest)
  return target;
}

size_t CMsgClientRichPresenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRichPresenceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed64 steamid_request = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->steamid_request_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamid_request_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRichPresenceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRichPresenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRichPresenceRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRichPresenceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRichPresenceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRichPresenceRequest)
    MergeFrom(*source);
  }
}

void CMsgClientRichPresenceRequest::MergeFrom(const CMsgClientRichPresenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRichPresenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steamid_request_.MergeFrom(from.steamid_request_);
}

void CMsgClientRichPresenceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRichPresenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRichPresenceRequest::CopyFrom(const CMsgClientRichPresenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRichPresenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRichPresenceRequest::IsInitialized() const {
  return true;
}

void CMsgClientRichPresenceRequest::Swap(CMsgClientRichPresenceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRichPresenceRequest::InternalSwap(CMsgClientRichPresenceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  steamid_request_.InternalSwap(&other->steamid_request_);
}

::google::protobuf::Metadata CMsgClientRichPresenceRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRichPresenceInfo_RichPresence::InitAsDefaultInstance() {
}
class CMsgClientRichPresenceInfo_RichPresence::HasBitSetters {
 public:
  static void set_has_steamid_user(CMsgClientRichPresenceInfo_RichPresence* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_rich_presence_kv(CMsgClientRichPresenceInfo_RichPresence* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRichPresenceInfo_RichPresence::kSteamidUserFieldNumber;
const int CMsgClientRichPresenceInfo_RichPresence::kRichPresenceKvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRichPresenceInfo_RichPresence::CMsgClientRichPresenceInfo_RichPresence()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
}
CMsgClientRichPresenceInfo_RichPresence::CMsgClientRichPresenceInfo_RichPresence(const CMsgClientRichPresenceInfo_RichPresence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rich_presence_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rich_presence_kv()) {
    rich_presence_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rich_presence_kv_);
  }
  steamid_user_ = from.steamid_user_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
}

void CMsgClientRichPresenceInfo_RichPresence::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientRichPresenceInfo_RichPresence_steammessages_5fclientserver_5f2_2eproto.base);
  rich_presence_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steamid_user_ = PROTOBUF_ULONGLONG(0);
}

CMsgClientRichPresenceInfo_RichPresence::~CMsgClientRichPresenceInfo_RichPresence() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  SharedDtor();
}

void CMsgClientRichPresenceInfo_RichPresence::SharedDtor() {
  rich_presence_kv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRichPresenceInfo_RichPresence::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRichPresenceInfo_RichPresence& CMsgClientRichPresenceInfo_RichPresence::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRichPresenceInfo_RichPresence_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRichPresenceInfo_RichPresence::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    rich_presence_kv_.ClearNonDefaultToEmptyNoArena();
  }
  steamid_user_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRichPresenceInfo_RichPresence::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRichPresenceInfo_RichPresence*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steamid_user = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_steamid_user(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional bytes rich_presence_kv = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_rich_presence_kv();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRichPresenceInfo_RichPresence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid_user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_steamid_user(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes rich_presence_kv = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rich_presence_kv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRichPresenceInfo_RichPresence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_user = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid_user(), output);
  }

  // optional bytes rich_presence_kv = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->rich_presence_kv(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
}

::google::protobuf::uint8* CMsgClientRichPresenceInfo_RichPresence::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_user = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid_user(), target);
  }

  // optional bytes rich_presence_kv = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->rich_presence_kv(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  return target;
}

size_t CMsgClientRichPresenceInfo_RichPresence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes rich_presence_kv = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->rich_presence_kv());
    }

    // optional fixed64 steamid_user = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRichPresenceInfo_RichPresence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRichPresenceInfo_RichPresence* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRichPresenceInfo_RichPresence>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
    MergeFrom(*source);
  }
}

void CMsgClientRichPresenceInfo_RichPresence::MergeFrom(const CMsgClientRichPresenceInfo_RichPresence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      rich_presence_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rich_presence_kv_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_user_ = from.steamid_user_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRichPresenceInfo_RichPresence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRichPresenceInfo_RichPresence::CopyFrom(const CMsgClientRichPresenceInfo_RichPresence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRichPresenceInfo_RichPresence::IsInitialized() const {
  return true;
}

void CMsgClientRichPresenceInfo_RichPresence::Swap(CMsgClientRichPresenceInfo_RichPresence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRichPresenceInfo_RichPresence::InternalSwap(CMsgClientRichPresenceInfo_RichPresence* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  rich_presence_kv_.Swap(&other->rich_presence_kv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steamid_user_, other->steamid_user_);
}

::google::protobuf::Metadata CMsgClientRichPresenceInfo_RichPresence::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRichPresenceInfo::InitAsDefaultInstance() {
}
class CMsgClientRichPresenceInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRichPresenceInfo::kRichPresenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRichPresenceInfo::CMsgClientRichPresenceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRichPresenceInfo)
}
CMsgClientRichPresenceInfo::CMsgClientRichPresenceInfo(const CMsgClientRichPresenceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      rich_presence_(from.rich_presence_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRichPresenceInfo)
}

void CMsgClientRichPresenceInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientRichPresenceInfo_steammessages_5fclientserver_5f2_2eproto.base);
}

CMsgClientRichPresenceInfo::~CMsgClientRichPresenceInfo() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRichPresenceInfo)
  SharedDtor();
}

void CMsgClientRichPresenceInfo::SharedDtor() {
}

void CMsgClientRichPresenceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRichPresenceInfo& CMsgClientRichPresenceInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRichPresenceInfo_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRichPresenceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRichPresenceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rich_presence_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRichPresenceInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRichPresenceInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.steam.CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientRichPresenceInfo_RichPresence::_InternalParse;
          object = msg->add_rich_presence();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRichPresenceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRichPresenceInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.steam.CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rich_presence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRichPresenceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRichPresenceInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRichPresenceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRichPresenceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rich_presence_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->rich_presence(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRichPresenceInfo)
}

::google::protobuf::uint8* CMsgClientRichPresenceInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRichPresenceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rich_presence_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rich_presence(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRichPresenceInfo)
  return target;
}

size_t CMsgClientRichPresenceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRichPresenceInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rich_presence_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rich_presence(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRichPresenceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRichPresenceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRichPresenceInfo* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRichPresenceInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRichPresenceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRichPresenceInfo)
    MergeFrom(*source);
  }
}

void CMsgClientRichPresenceInfo::MergeFrom(const CMsgClientRichPresenceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRichPresenceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rich_presence_.MergeFrom(from.rich_presence_);
}

void CMsgClientRichPresenceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRichPresenceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRichPresenceInfo::CopyFrom(const CMsgClientRichPresenceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRichPresenceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRichPresenceInfo::IsInitialized() const {
  return true;
}

void CMsgClientRichPresenceInfo::Swap(CMsgClientRichPresenceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRichPresenceInfo::InternalSwap(CMsgClientRichPresenceInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&rich_presence_)->InternalSwap(CastToBase(&other->rich_presence_));
}

::google::protobuf::Metadata CMsgClientRichPresenceInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientCheckFileSignature::InitAsDefaultInstance() {
}
class CMsgClientCheckFileSignature::HasBitSetters {
 public:
  static void set_has_app_id(CMsgClientCheckFileSignature* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCheckFileSignature::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCheckFileSignature::CMsgClientCheckFileSignature()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientCheckFileSignature)
}
CMsgClientCheckFileSignature::CMsgClientCheckFileSignature(const CMsgClientCheckFileSignature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientCheckFileSignature)
}

void CMsgClientCheckFileSignature::SharedCtor() {
  app_id_ = 0u;
}

CMsgClientCheckFileSignature::~CMsgClientCheckFileSignature() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientCheckFileSignature)
  SharedDtor();
}

void CMsgClientCheckFileSignature::SharedDtor() {
}

void CMsgClientCheckFileSignature::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientCheckFileSignature& CMsgClientCheckFileSignature::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientCheckFileSignature_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientCheckFileSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientCheckFileSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientCheckFileSignature::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientCheckFileSignature*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientCheckFileSignature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientCheckFileSignature)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientCheckFileSignature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientCheckFileSignature)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientCheckFileSignature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientCheckFileSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientCheckFileSignature)
}

::google::protobuf::uint8* CMsgClientCheckFileSignature::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientCheckFileSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientCheckFileSignature)
  return target;
}

size_t CMsgClientCheckFileSignature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientCheckFileSignature)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 app_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->app_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientCheckFileSignature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientCheckFileSignature)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCheckFileSignature* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientCheckFileSignature>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientCheckFileSignature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientCheckFileSignature)
    MergeFrom(*source);
  }
}

void CMsgClientCheckFileSignature::MergeFrom(const CMsgClientCheckFileSignature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientCheckFileSignature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_app_id()) {
    set_app_id(from.app_id());
  }
}

void CMsgClientCheckFileSignature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientCheckFileSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCheckFileSignature::CopyFrom(const CMsgClientCheckFileSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientCheckFileSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCheckFileSignature::IsInitialized() const {
  return true;
}

void CMsgClientCheckFileSignature::Swap(CMsgClientCheckFileSignature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCheckFileSignature::InternalSwap(CMsgClientCheckFileSignature* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(app_id_, other->app_id_);
}

::google::protobuf::Metadata CMsgClientCheckFileSignature::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientCheckFileSignatureResponse::InitAsDefaultInstance() {
}
class CMsgClientCheckFileSignatureResponse::HasBitSetters {
 public:
  static void set_has_app_id(CMsgClientCheckFileSignatureResponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pid(CMsgClientCheckFileSignatureResponse* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_eresult(CMsgClientCheckFileSignatureResponse* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_filename(CMsgClientCheckFileSignatureResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_esignatureresult(CMsgClientCheckFileSignatureResponse* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_sha_file(CMsgClientCheckFileSignatureResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_signatureheader(CMsgClientCheckFileSignatureResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_filesize(CMsgClientCheckFileSignatureResponse* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_getlasterror(CMsgClientCheckFileSignatureResponse* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_evalvesignaturecheckdetail(CMsgClientCheckFileSignatureResponse* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCheckFileSignatureResponse::kAppIdFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kPidFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kEresultFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kFilenameFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kEsignatureresultFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kShaFileFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kSignatureheaderFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kFilesizeFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kGetlasterrorFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kEvalvesignaturecheckdetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCheckFileSignatureResponse::CMsgClientCheckFileSignatureResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientCheckFileSignatureResponse)
}
CMsgClientCheckFileSignatureResponse::CMsgClientCheckFileSignatureResponse(const CMsgClientCheckFileSignatureResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  signatureheader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signatureheader()) {
    signatureheader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signatureheader_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&evalvesignaturecheckdetail_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(evalvesignaturecheckdetail_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientCheckFileSignatureResponse)
}

void CMsgClientCheckFileSignatureResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientCheckFileSignatureResponse_steammessages_5fclientserver_5f2_2eproto.base);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signatureheader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&evalvesignaturecheckdetail_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(evalvesignaturecheckdetail_));
}

CMsgClientCheckFileSignatureResponse::~CMsgClientCheckFileSignatureResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientCheckFileSignatureResponse)
  SharedDtor();
}

void CMsgClientCheckFileSignatureResponse::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signatureheader_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientCheckFileSignatureResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientCheckFileSignatureResponse& CMsgClientCheckFileSignatureResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientCheckFileSignatureResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientCheckFileSignatureResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_file_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      signatureheader_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&filesize_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(filesize_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&getlasterror_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&evalvesignaturecheckdetail_) -
        reinterpret_cast<char*>(&getlasterror_)) + sizeof(evalvesignaturecheckdetail_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientCheckFileSignatureResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientCheckFileSignatureResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 pid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 eresult = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string filename = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientCheckFileSignatureResponse.filename");
        object = msg->mutable_filename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 esignatureresult = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_esignatureresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes sha_file = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_sha_file();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes signatureheader = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_signatureheader();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 filesize = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_filesize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 getlasterror = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_getlasterror(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 evalvesignaturecheckdetail = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_evalvesignaturecheckdetail(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientCheckFileSignatureResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientCheckFileSignatureResponse.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 esignatureresult = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_esignatureresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &esignatureresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes signatureheader = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signatureheader()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 filesize = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_filesize(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 getlasterror = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_getlasterror(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &getlasterror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 evalvesignaturecheckdetail = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          HasBitSetters::set_has_evalvesignaturecheckdetail(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &evalvesignaturecheckdetail_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientCheckFileSignatureResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientCheckFileSignatureResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientCheckFileSignatureResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional uint32 eresult = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->eresult(), output);
  }

  // optional string filename = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckFileSignatureResponse.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filename(), output);
  }

  // optional uint32 esignatureresult = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->esignatureresult(), output);
  }

  // optional bytes sha_file = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->sha_file(), output);
  }

  // optional bytes signatureheader = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->signatureheader(), output);
  }

  // optional uint32 filesize = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->filesize(), output);
  }

  // optional uint32 getlasterror = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->getlasterror(), output);
  }

  // optional uint32 evalvesignaturecheckdetail = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->evalvesignaturecheckdetail(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientCheckFileSignatureResponse)
}

::google::protobuf::uint8* CMsgClientCheckFileSignatureResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional uint32 eresult = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->eresult(), target);
  }

  // optional string filename = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckFileSignatureResponse.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filename(), target);
  }

  // optional uint32 esignatureresult = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->esignatureresult(), target);
  }

  // optional bytes sha_file = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->sha_file(), target);
  }

  // optional bytes signatureheader = 7;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->signatureheader(), target);
  }

  // optional uint32 filesize = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->filesize(), target);
  }

  // optional uint32 getlasterror = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->getlasterror(), target);
  }

  // optional uint32 evalvesignaturecheckdetail = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->evalvesignaturecheckdetail(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientCheckFileSignatureResponse)
  return target;
}

size_t CMsgClientCheckFileSignatureResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string filename = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bytes sha_file = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional bytes signatureheader = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->signatureheader());
    }

    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 pid = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint32 eresult = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional uint32 esignatureresult = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->esignatureresult());
    }

    // optional uint32 filesize = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->filesize());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional uint32 getlasterror = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->getlasterror());
    }

    // optional uint32 evalvesignaturecheckdetail = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->evalvesignaturecheckdetail());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientCheckFileSignatureResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCheckFileSignatureResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientCheckFileSignatureResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientCheckFileSignatureResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientCheckFileSignatureResponse)
    MergeFrom(*source);
  }
}

void CMsgClientCheckFileSignatureResponse::MergeFrom(const CMsgClientCheckFileSignatureResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      signatureheader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signatureheader_);
    }
    if (cached_has_bits & 0x00000008u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000020u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000040u) {
      esignatureresult_ = from.esignatureresult_;
    }
    if (cached_has_bits & 0x00000080u) {
      filesize_ = from.filesize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      getlasterror_ = from.getlasterror_;
    }
    if (cached_has_bits & 0x00000200u) {
      evalvesignaturecheckdetail_ = from.evalvesignaturecheckdetail_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientCheckFileSignatureResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCheckFileSignatureResponse::CopyFrom(const CMsgClientCheckFileSignatureResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCheckFileSignatureResponse::IsInitialized() const {
  return true;
}

void CMsgClientCheckFileSignatureResponse::Swap(CMsgClientCheckFileSignatureResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCheckFileSignatureResponse::InternalSwap(CMsgClientCheckFileSignatureResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sha_file_.Swap(&other->sha_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signatureheader_.Swap(&other->signatureheader_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(pid_, other->pid_);
  swap(eresult_, other->eresult_);
  swap(esignatureresult_, other->esignatureresult_);
  swap(filesize_, other->filesize_);
  swap(getlasterror_, other->getlasterror_);
  swap(evalvesignaturecheckdetail_, other->evalvesignaturecheckdetail_);
}

::google::protobuf::Metadata CMsgClientCheckFileSignatureResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientReadMachineAuth::InitAsDefaultInstance() {
}
class CMsgClientReadMachineAuth::HasBitSetters {
 public:
  static void set_has_filename(CMsgClientReadMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_offset(CMsgClientReadMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_cubtoread(CMsgClientReadMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientReadMachineAuth::kFilenameFieldNumber;
const int CMsgClientReadMachineAuth::kOffsetFieldNumber;
const int CMsgClientReadMachineAuth::kCubtoreadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientReadMachineAuth::CMsgClientReadMachineAuth()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientReadMachineAuth)
}
CMsgClientReadMachineAuth::CMsgClientReadMachineAuth(const CMsgClientReadMachineAuth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&cubtoread_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(cubtoread_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientReadMachineAuth)
}

void CMsgClientReadMachineAuth::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientReadMachineAuth_steammessages_5fclientserver_5f2_2eproto.base);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cubtoread_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(cubtoread_));
}

CMsgClientReadMachineAuth::~CMsgClientReadMachineAuth() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientReadMachineAuth)
  SharedDtor();
}

void CMsgClientReadMachineAuth::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientReadMachineAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientReadMachineAuth& CMsgClientReadMachineAuth::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientReadMachineAuth_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientReadMachineAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientReadMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    filename_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cubtoread_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(cubtoread_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientReadMachineAuth::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientReadMachineAuth*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string filename = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientReadMachineAuth.filename");
        object = msg->mutable_filename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 offset = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_offset(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 cubtoread = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_cubtoread(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientReadMachineAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientReadMachineAuth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientReadMachineAuth.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_offset(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cubtoread = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_cubtoread(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cubtoread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientReadMachineAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientReadMachineAuth)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientReadMachineAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientReadMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientReadMachineAuth.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->offset(), output);
  }

  // optional uint32 cubtoread = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cubtoread(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientReadMachineAuth)
}

::google::protobuf::uint8* CMsgClientReadMachineAuth::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientReadMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientReadMachineAuth.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->offset(), target);
  }

  // optional uint32 cubtoread = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cubtoread(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientReadMachineAuth)
  return target;
}

size_t CMsgClientReadMachineAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientReadMachineAuth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string filename = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional uint32 offset = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 cubtoread = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cubtoread());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientReadMachineAuth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientReadMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientReadMachineAuth* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientReadMachineAuth>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientReadMachineAuth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientReadMachineAuth)
    MergeFrom(*source);
  }
}

void CMsgClientReadMachineAuth::MergeFrom(const CMsgClientReadMachineAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientReadMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      cubtoread_ = from.cubtoread_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientReadMachineAuth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientReadMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientReadMachineAuth::CopyFrom(const CMsgClientReadMachineAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientReadMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientReadMachineAuth::IsInitialized() const {
  return true;
}

void CMsgClientReadMachineAuth::Swap(CMsgClientReadMachineAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientReadMachineAuth::InternalSwap(CMsgClientReadMachineAuth* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(cubtoread_, other->cubtoread_);
}

::google::protobuf::Metadata CMsgClientReadMachineAuth::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientReadMachineAuthResponse::InitAsDefaultInstance() {
}
class CMsgClientReadMachineAuthResponse::HasBitSetters {
 public:
  static void set_has_filename(CMsgClientReadMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_eresult(CMsgClientReadMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_filesize(CMsgClientReadMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_sha_file(CMsgClientReadMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_getlasterror(CMsgClientReadMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_offset(CMsgClientReadMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_cubread(CMsgClientReadMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_bytes_read(CMsgClientReadMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_filename_sentry(CMsgClientReadMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientReadMachineAuthResponse::kFilenameFieldNumber;
const int CMsgClientReadMachineAuthResponse::kEresultFieldNumber;
const int CMsgClientReadMachineAuthResponse::kFilesizeFieldNumber;
const int CMsgClientReadMachineAuthResponse::kShaFileFieldNumber;
const int CMsgClientReadMachineAuthResponse::kGetlasterrorFieldNumber;
const int CMsgClientReadMachineAuthResponse::kOffsetFieldNumber;
const int CMsgClientReadMachineAuthResponse::kCubreadFieldNumber;
const int CMsgClientReadMachineAuthResponse::kBytesReadFieldNumber;
const int CMsgClientReadMachineAuthResponse::kFilenameSentryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientReadMachineAuthResponse::CMsgClientReadMachineAuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientReadMachineAuthResponse)
}
CMsgClientReadMachineAuthResponse::CMsgClientReadMachineAuthResponse(const CMsgClientReadMachineAuthResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  bytes_read_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bytes_read()) {
    bytes_read_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_read_);
  }
  filename_sentry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename_sentry()) {
    filename_sentry_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_sentry_);
  }
  ::memcpy(&eresult_, &from.eresult_,
    static_cast<size_t>(reinterpret_cast<char*>(&cubread_) -
    reinterpret_cast<char*>(&eresult_)) + sizeof(cubread_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientReadMachineAuthResponse)
}

void CMsgClientReadMachineAuthResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientReadMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto.base);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_read_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_sentry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&eresult_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cubread_) -
      reinterpret_cast<char*>(&eresult_)) + sizeof(cubread_));
}

CMsgClientReadMachineAuthResponse::~CMsgClientReadMachineAuthResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientReadMachineAuthResponse)
  SharedDtor();
}

void CMsgClientReadMachineAuthResponse::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_read_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_sentry_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientReadMachineAuthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientReadMachineAuthResponse& CMsgClientReadMachineAuthResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientReadMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientReadMachineAuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientReadMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_file_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      bytes_read_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      filename_sentry_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&eresult_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&offset_) -
        reinterpret_cast<char*>(&eresult_)) + sizeof(offset_));
  }
  cubread_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientReadMachineAuthResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientReadMachineAuthResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string filename = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientReadMachineAuthResponse.filename");
        object = msg->mutable_filename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 eresult = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 filesize = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_filesize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes sha_file = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_sha_file();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 getlasterror = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_getlasterror(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 offset = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_offset(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 cubread = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_cubread(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes bytes_read = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_bytes_read();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string filename_sentry = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientReadMachineAuthResponse.filename_sentry");
        object = msg->mutable_filename_sentry();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientReadMachineAuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientReadMachineAuthResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientReadMachineAuthResponse.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 filesize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_filesize(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 getlasterror = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_getlasterror(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &getlasterror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 offset = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_offset(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cubread = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_cubread(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cubread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bytes_read = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_read()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename_sentry = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename_sentry()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename_sentry().data(), static_cast<int>(this->filename_sentry().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientReadMachineAuthResponse.filename_sentry");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientReadMachineAuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientReadMachineAuthResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientReadMachineAuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientReadMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientReadMachineAuthResponse.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult(), output);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->filesize(), output);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sha_file(), output);
  }

  // optional uint32 getlasterror = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->getlasterror(), output);
  }

  // optional uint32 offset = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->offset(), output);
  }

  // optional uint32 cubread = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->cubread(), output);
  }

  // optional bytes bytes_read = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->bytes_read(), output);
  }

  // optional string filename_sentry = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename_sentry().data(), static_cast<int>(this->filename_sentry().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientReadMachineAuthResponse.filename_sentry");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->filename_sentry(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientReadMachineAuthResponse)
}

::google::protobuf::uint8* CMsgClientReadMachineAuthResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientReadMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientReadMachineAuthResponse.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult(), target);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->filesize(), target);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sha_file(), target);
  }

  // optional uint32 getlasterror = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->getlasterror(), target);
  }

  // optional uint32 offset = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->offset(), target);
  }

  // optional uint32 cubread = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->cubread(), target);
  }

  // optional bytes bytes_read = 8;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->bytes_read(), target);
  }

  // optional string filename_sentry = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename_sentry().data(), static_cast<int>(this->filename_sentry().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientReadMachineAuthResponse.filename_sentry");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->filename_sentry(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientReadMachineAuthResponse)
  return target;
}

size_t CMsgClientReadMachineAuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientReadMachineAuthResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string filename = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bytes sha_file = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional bytes bytes_read = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_read());
    }

    // optional string filename_sentry = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename_sentry());
    }

    // optional uint32 eresult = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional uint32 filesize = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->filesize());
    }

    // optional uint32 getlasterror = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->getlasterror());
    }

    // optional uint32 offset = 6;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

  }
  // optional uint32 cubread = 7;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cubread());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientReadMachineAuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientReadMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientReadMachineAuthResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientReadMachineAuthResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientReadMachineAuthResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientReadMachineAuthResponse)
    MergeFrom(*source);
  }
}

void CMsgClientReadMachineAuthResponse::MergeFrom(const CMsgClientReadMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientReadMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      bytes_read_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_read_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      filename_sentry_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_sentry_);
    }
    if (cached_has_bits & 0x00000010u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000020u) {
      filesize_ = from.filesize_;
    }
    if (cached_has_bits & 0x00000040u) {
      getlasterror_ = from.getlasterror_;
    }
    if (cached_has_bits & 0x00000080u) {
      offset_ = from.offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_cubread(from.cubread());
  }
}

void CMsgClientReadMachineAuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientReadMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientReadMachineAuthResponse::CopyFrom(const CMsgClientReadMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientReadMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientReadMachineAuthResponse::IsInitialized() const {
  return true;
}

void CMsgClientReadMachineAuthResponse::Swap(CMsgClientReadMachineAuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientReadMachineAuthResponse::InternalSwap(CMsgClientReadMachineAuthResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sha_file_.Swap(&other->sha_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bytes_read_.Swap(&other->bytes_read_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filename_sentry_.Swap(&other->filename_sentry_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eresult_, other->eresult_);
  swap(filesize_, other->filesize_);
  swap(getlasterror_, other->getlasterror_);
  swap(offset_, other->offset_);
  swap(cubread_, other->cubread_);
}

::google::protobuf::Metadata CMsgClientReadMachineAuthResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUpdateMachineAuth::InitAsDefaultInstance() {
}
class CMsgClientUpdateMachineAuth::HasBitSetters {
 public:
  static void set_has_filename(CMsgClientUpdateMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_offset(CMsgClientUpdateMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_cubtowrite(CMsgClientUpdateMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_bytes(CMsgClientUpdateMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_otp_type(CMsgClientUpdateMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_otp_identifier(CMsgClientUpdateMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_otp_sharedsecret(CMsgClientUpdateMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_otp_timedrift(CMsgClientUpdateMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUpdateMachineAuth::kFilenameFieldNumber;
const int CMsgClientUpdateMachineAuth::kOffsetFieldNumber;
const int CMsgClientUpdateMachineAuth::kCubtowriteFieldNumber;
const int CMsgClientUpdateMachineAuth::kBytesFieldNumber;
const int CMsgClientUpdateMachineAuth::kOtpTypeFieldNumber;
const int CMsgClientUpdateMachineAuth::kOtpIdentifierFieldNumber;
const int CMsgClientUpdateMachineAuth::kOtpSharedsecretFieldNumber;
const int CMsgClientUpdateMachineAuth::kOtpTimedriftFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUpdateMachineAuth::CMsgClientUpdateMachineAuth()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUpdateMachineAuth)
}
CMsgClientUpdateMachineAuth::CMsgClientUpdateMachineAuth(const CMsgClientUpdateMachineAuth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bytes()) {
    bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
  }
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp_identifier()) {
    otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
  }
  otp_sharedsecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp_sharedsecret()) {
    otp_sharedsecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_sharedsecret_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&otp_timedrift_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(otp_timedrift_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUpdateMachineAuth)
}

void CMsgClientUpdateMachineAuth::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUpdateMachineAuth_steammessages_5fclientserver_5f2_2eproto.base);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_sharedsecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&otp_timedrift_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(otp_timedrift_));
}

CMsgClientUpdateMachineAuth::~CMsgClientUpdateMachineAuth() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUpdateMachineAuth)
  SharedDtor();
}

void CMsgClientUpdateMachineAuth::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_sharedsecret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUpdateMachineAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUpdateMachineAuth& CMsgClientUpdateMachineAuth::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUpdateMachineAuth_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUpdateMachineAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUpdateMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      bytes_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      otp_identifier_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      otp_sharedsecret_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&offset_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&otp_timedrift_) -
        reinterpret_cast<char*>(&offset_)) + sizeof(otp_timedrift_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUpdateMachineAuth::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUpdateMachineAuth*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string filename = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUpdateMachineAuth.filename");
        object = msg->mutable_filename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 offset = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_offset(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 cubtowrite = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_cubtowrite(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes bytes = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_bytes();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 otp_type = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_otp_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string otp_identifier = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUpdateMachineAuth.otp_identifier");
        object = msg->mutable_otp_identifier();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes otp_sharedsecret = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_otp_sharedsecret();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 otp_timedrift = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_otp_timedrift(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUpdateMachineAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUpdateMachineAuth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUpdateMachineAuth.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_offset(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cubtowrite = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_cubtowrite(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cubtowrite_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 otp_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_otp_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otp_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string otp_identifier = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_otp_identifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUpdateMachineAuth.otp_identifier");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes otp_sharedsecret = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_otp_sharedsecret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 otp_timedrift = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_otp_timedrift(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otp_timedrift_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUpdateMachineAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUpdateMachineAuth)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUpdateMachineAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUpdateMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuth.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->offset(), output);
  }

  // optional uint32 cubtowrite = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cubtowrite(), output);
  }

  // optional bytes bytes = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->bytes(), output);
  }

  // optional uint32 otp_type = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->otp_type(), output);
  }

  // optional string otp_identifier = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuth.otp_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->otp_identifier(), output);
  }

  // optional bytes otp_sharedsecret = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->otp_sharedsecret(), output);
  }

  // optional uint32 otp_timedrift = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->otp_timedrift(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUpdateMachineAuth)
}

::google::protobuf::uint8* CMsgClientUpdateMachineAuth::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUpdateMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuth.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->offset(), target);
  }

  // optional uint32 cubtowrite = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cubtowrite(), target);
  }

  // optional bytes bytes = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->bytes(), target);
  }

  // optional uint32 otp_type = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->otp_type(), target);
  }

  // optional string otp_identifier = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuth.otp_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->otp_identifier(), target);
  }

  // optional bytes otp_sharedsecret = 7;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->otp_sharedsecret(), target);
  }

  // optional uint32 otp_timedrift = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->otp_timedrift(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUpdateMachineAuth)
  return target;
}

size_t CMsgClientUpdateMachineAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUpdateMachineAuth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string filename = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bytes bytes = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes());
    }

    // optional string otp_identifier = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->otp_identifier());
    }

    // optional bytes otp_sharedsecret = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->otp_sharedsecret());
    }

    // optional uint32 offset = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 cubtowrite = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cubtowrite());
    }

    // optional uint32 otp_type = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otp_type());
    }

    // optional uint32 otp_timedrift = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otp_timedrift());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUpdateMachineAuth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUpdateMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUpdateMachineAuth* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUpdateMachineAuth>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUpdateMachineAuth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUpdateMachineAuth)
    MergeFrom(*source);
  }
}

void CMsgClientUpdateMachineAuth::MergeFrom(const CMsgClientUpdateMachineAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUpdateMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      otp_sharedsecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_sharedsecret_);
    }
    if (cached_has_bits & 0x00000010u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000020u) {
      cubtowrite_ = from.cubtowrite_;
    }
    if (cached_has_bits & 0x00000040u) {
      otp_type_ = from.otp_type_;
    }
    if (cached_has_bits & 0x00000080u) {
      otp_timedrift_ = from.otp_timedrift_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUpdateMachineAuth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUpdateMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUpdateMachineAuth::CopyFrom(const CMsgClientUpdateMachineAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUpdateMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUpdateMachineAuth::IsInitialized() const {
  return true;
}

void CMsgClientUpdateMachineAuth::Swap(CMsgClientUpdateMachineAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUpdateMachineAuth::InternalSwap(CMsgClientUpdateMachineAuth* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bytes_.Swap(&other->bytes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  otp_identifier_.Swap(&other->otp_identifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  otp_sharedsecret_.Swap(&other->otp_sharedsecret_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(cubtowrite_, other->cubtowrite_);
  swap(otp_type_, other->otp_type_);
  swap(otp_timedrift_, other->otp_timedrift_);
}

::google::protobuf::Metadata CMsgClientUpdateMachineAuth::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUpdateMachineAuthResponse::InitAsDefaultInstance() {
}
class CMsgClientUpdateMachineAuthResponse::HasBitSetters {
 public:
  static void set_has_filename(CMsgClientUpdateMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_eresult(CMsgClientUpdateMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_filesize(CMsgClientUpdateMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_sha_file(CMsgClientUpdateMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_getlasterror(CMsgClientUpdateMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_offset(CMsgClientUpdateMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_cubwrote(CMsgClientUpdateMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_otp_type(CMsgClientUpdateMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_otp_value(CMsgClientUpdateMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
  static void set_has_otp_identifier(CMsgClientUpdateMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUpdateMachineAuthResponse::kFilenameFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kEresultFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kFilesizeFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kShaFileFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kGetlasterrorFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kOffsetFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kCubwroteFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kOtpTypeFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kOtpValueFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kOtpIdentifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUpdateMachineAuthResponse::CMsgClientUpdateMachineAuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUpdateMachineAuthResponse)
}
CMsgClientUpdateMachineAuthResponse::CMsgClientUpdateMachineAuthResponse(const CMsgClientUpdateMachineAuthResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp_identifier()) {
    otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
  }
  ::memcpy(&eresult_, &from.eresult_,
    static_cast<size_t>(reinterpret_cast<char*>(&otp_value_) -
    reinterpret_cast<char*>(&eresult_)) + sizeof(otp_value_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUpdateMachineAuthResponse)
}

void CMsgClientUpdateMachineAuthResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUpdateMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto.base);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&eresult_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&otp_value_) -
      reinterpret_cast<char*>(&eresult_)) + sizeof(otp_value_));
}

CMsgClientUpdateMachineAuthResponse::~CMsgClientUpdateMachineAuthResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUpdateMachineAuthResponse)
  SharedDtor();
}

void CMsgClientUpdateMachineAuthResponse::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUpdateMachineAuthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUpdateMachineAuthResponse& CMsgClientUpdateMachineAuthResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUpdateMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUpdateMachineAuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_file_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      otp_identifier_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&eresult_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cubwrote_) -
        reinterpret_cast<char*>(&eresult_)) + sizeof(cubwrote_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&otp_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&otp_value_) -
        reinterpret_cast<char*>(&otp_type_)) + sizeof(otp_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUpdateMachineAuthResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUpdateMachineAuthResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string filename = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUpdateMachineAuthResponse.filename");
        object = msg->mutable_filename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 eresult = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 filesize = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_filesize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes sha_file = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_sha_file();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 getlasterror = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_getlasterror(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 offset = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_offset(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 cubwrote = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_cubwrote(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 otp_type = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_otp_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 otp_value = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_otp_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string otp_identifier = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUpdateMachineAuthResponse.otp_identifier");
        object = msg->mutable_otp_identifier();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUpdateMachineAuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUpdateMachineAuthResponse.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 filesize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_filesize(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 getlasterror = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_getlasterror(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &getlasterror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 offset = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_offset(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cubwrote = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_cubwrote(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cubwrote_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 otp_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_otp_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &otp_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 otp_value = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_otp_value(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otp_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string otp_identifier = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_otp_identifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUpdateMachineAuthResponse.otp_identifier");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUpdateMachineAuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUpdateMachineAuthResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUpdateMachineAuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuthResponse.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult(), output);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->filesize(), output);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sha_file(), output);
  }

  // optional uint32 getlasterror = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->getlasterror(), output);
  }

  // optional uint32 offset = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->offset(), output);
  }

  // optional uint32 cubwrote = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->cubwrote(), output);
  }

  // optional int32 otp_type = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->otp_type(), output);
  }

  // optional uint32 otp_value = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->otp_value(), output);
  }

  // optional string otp_identifier = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuthResponse.otp_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->otp_identifier(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUpdateMachineAuthResponse)
}

::google::protobuf::uint8* CMsgClientUpdateMachineAuthResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuthResponse.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult(), target);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->filesize(), target);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sha_file(), target);
  }

  // optional uint32 getlasterror = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->getlasterror(), target);
  }

  // optional uint32 offset = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->offset(), target);
  }

  // optional uint32 cubwrote = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->cubwrote(), target);
  }

  // optional int32 otp_type = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->otp_type(), target);
  }

  // optional uint32 otp_value = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->otp_value(), target);
  }

  // optional string otp_identifier = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuthResponse.otp_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->otp_identifier(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUpdateMachineAuthResponse)
  return target;
}

size_t CMsgClientUpdateMachineAuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string filename = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bytes sha_file = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional string otp_identifier = 10;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->otp_identifier());
    }

    // optional uint32 eresult = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional uint32 filesize = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->filesize());
    }

    // optional uint32 getlasterror = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->getlasterror());
    }

    // optional uint32 offset = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 cubwrote = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cubwrote());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional int32 otp_type = 8;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->otp_type());
    }

    // optional uint32 otp_value = 9;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otp_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUpdateMachineAuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUpdateMachineAuthResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUpdateMachineAuthResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUpdateMachineAuthResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUpdateMachineAuthResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUpdateMachineAuthResponse::MergeFrom(const CMsgClientUpdateMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
    }
    if (cached_has_bits & 0x00000008u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000010u) {
      filesize_ = from.filesize_;
    }
    if (cached_has_bits & 0x00000020u) {
      getlasterror_ = from.getlasterror_;
    }
    if (cached_has_bits & 0x00000040u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000080u) {
      cubwrote_ = from.cubwrote_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      otp_type_ = from.otp_type_;
    }
    if (cached_has_bits & 0x00000200u) {
      otp_value_ = from.otp_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUpdateMachineAuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUpdateMachineAuthResponse::CopyFrom(const CMsgClientUpdateMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUpdateMachineAuthResponse::IsInitialized() const {
  return true;
}

void CMsgClientUpdateMachineAuthResponse::Swap(CMsgClientUpdateMachineAuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUpdateMachineAuthResponse::InternalSwap(CMsgClientUpdateMachineAuthResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sha_file_.Swap(&other->sha_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  otp_identifier_.Swap(&other->otp_identifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eresult_, other->eresult_);
  swap(filesize_, other->filesize_);
  swap(getlasterror_, other->getlasterror_);
  swap(offset_, other->offset_);
  swap(cubwrote_, other->cubwrote_);
  swap(otp_type_, other->otp_type_);
  swap(otp_value_, other->otp_value_);
}

::google::protobuf::Metadata CMsgClientUpdateMachineAuthResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestMachineAuth::InitAsDefaultInstance() {
}
class CMsgClientRequestMachineAuth::HasBitSetters {
 public:
  static void set_has_filename(CMsgClientRequestMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_eresult_sentryfile(CMsgClientRequestMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_filesize(CMsgClientRequestMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_sha_sentryfile(CMsgClientRequestMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_lock_account_action(CMsgClientRequestMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_otp_type(CMsgClientRequestMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
  static void set_has_otp_identifier(CMsgClientRequestMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_otp_sharedsecret(CMsgClientRequestMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_otp_value(CMsgClientRequestMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000400u;
  }
  static void set_has_machine_name(CMsgClientRequestMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_machine_name_userchosen(CMsgClientRequestMachineAuth* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestMachineAuth::kFilenameFieldNumber;
const int CMsgClientRequestMachineAuth::kEresultSentryfileFieldNumber;
const int CMsgClientRequestMachineAuth::kFilesizeFieldNumber;
const int CMsgClientRequestMachineAuth::kShaSentryfileFieldNumber;
const int CMsgClientRequestMachineAuth::kLockAccountActionFieldNumber;
const int CMsgClientRequestMachineAuth::kOtpTypeFieldNumber;
const int CMsgClientRequestMachineAuth::kOtpIdentifierFieldNumber;
const int CMsgClientRequestMachineAuth::kOtpSharedsecretFieldNumber;
const int CMsgClientRequestMachineAuth::kOtpValueFieldNumber;
const int CMsgClientRequestMachineAuth::kMachineNameFieldNumber;
const int CMsgClientRequestMachineAuth::kMachineNameUserchosenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestMachineAuth::CMsgClientRequestMachineAuth()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestMachineAuth)
}
CMsgClientRequestMachineAuth::CMsgClientRequestMachineAuth(const CMsgClientRequestMachineAuth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  sha_sentryfile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_sentryfile()) {
    sha_sentryfile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_sentryfile_);
  }
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp_identifier()) {
    otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
  }
  otp_sharedsecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp_sharedsecret()) {
    otp_sharedsecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_sharedsecret_);
  }
  machine_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_name()) {
    machine_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_name_);
  }
  machine_name_userchosen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_name_userchosen()) {
    machine_name_userchosen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_name_userchosen_);
  }
  ::memcpy(&eresult_sentryfile_, &from.eresult_sentryfile_,
    static_cast<size_t>(reinterpret_cast<char*>(&otp_value_) -
    reinterpret_cast<char*>(&eresult_sentryfile_)) + sizeof(otp_value_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestMachineAuth)
}

void CMsgClientRequestMachineAuth::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientRequestMachineAuth_steammessages_5fclientserver_5f2_2eproto.base);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_sentryfile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_sharedsecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_name_userchosen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&eresult_sentryfile_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&otp_value_) -
      reinterpret_cast<char*>(&eresult_sentryfile_)) + sizeof(otp_value_));
}

CMsgClientRequestMachineAuth::~CMsgClientRequestMachineAuth() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestMachineAuth)
  SharedDtor();
}

void CMsgClientRequestMachineAuth::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_sentryfile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_sharedsecret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_name_userchosen_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRequestMachineAuth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRequestMachineAuth& CMsgClientRequestMachineAuth::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRequestMachineAuth_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRequestMachineAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_sentryfile_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      otp_identifier_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      otp_sharedsecret_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      machine_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      machine_name_userchosen_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&eresult_sentryfile_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&filesize_) -
        reinterpret_cast<char*>(&eresult_sentryfile_)) + sizeof(filesize_));
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&lock_account_action_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&otp_value_) -
        reinterpret_cast<char*>(&lock_account_action_)) + sizeof(otp_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRequestMachineAuth::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRequestMachineAuth*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string filename = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientRequestMachineAuth.filename");
        object = msg->mutable_filename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 eresult_sentryfile = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_eresult_sentryfile(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 filesize = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_filesize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes sha_sentryfile = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_sha_sentryfile();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional int32 lock_account_action = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_lock_account_action(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 otp_type = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_otp_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string otp_identifier = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientRequestMachineAuth.otp_identifier");
        object = msg->mutable_otp_identifier();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes otp_sharedsecret = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_otp_sharedsecret();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 otp_value = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_otp_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string machine_name = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientRequestMachineAuth.machine_name");
        object = msg->mutable_machine_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string machine_name_userchosen = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientRequestMachineAuth.machine_name_userchosen");
        object = msg->mutable_machine_name_userchosen();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRequestMachineAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestMachineAuth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestMachineAuth.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult_sentryfile = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_eresult_sentryfile(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_sentryfile_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 filesize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_filesize(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_sentryfile = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_sentryfile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lock_account_action = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_lock_account_action(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lock_account_action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 otp_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_otp_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otp_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string otp_identifier = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_otp_identifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestMachineAuth.otp_identifier");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes otp_sharedsecret = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_otp_sharedsecret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 otp_value = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          HasBitSetters::set_has_otp_value(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otp_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string machine_name = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_name().data(), static_cast<int>(this->machine_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestMachineAuth.machine_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string machine_name_userchosen = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_name_userchosen()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_name_userchosen().data(), static_cast<int>(this->machine_name_userchosen().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestMachineAuth.machine_name_userchosen");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestMachineAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestMachineAuth)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRequestMachineAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 eresult_sentryfile = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult_sentryfile(), output);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->filesize(), output);
  }

  // optional bytes sha_sentryfile = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sha_sentryfile(), output);
  }

  // optional int32 lock_account_action = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->lock_account_action(), output);
  }

  // optional uint32 otp_type = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->otp_type(), output);
  }

  // optional string otp_identifier = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.otp_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->otp_identifier(), output);
  }

  // optional bytes otp_sharedsecret = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->otp_sharedsecret(), output);
  }

  // optional uint32 otp_value = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->otp_value(), output);
  }

  // optional string machine_name = 11;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_name().data(), static_cast<int>(this->machine_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.machine_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->machine_name(), output);
  }

  // optional string machine_name_userchosen = 12;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_name_userchosen().data(), static_cast<int>(this->machine_name_userchosen().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.machine_name_userchosen");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->machine_name_userchosen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestMachineAuth)
}

::google::protobuf::uint8* CMsgClientRequestMachineAuth::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 eresult_sentryfile = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult_sentryfile(), target);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->filesize(), target);
  }

  // optional bytes sha_sentryfile = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sha_sentryfile(), target);
  }

  // optional int32 lock_account_action = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->lock_account_action(), target);
  }

  // optional uint32 otp_type = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->otp_type(), target);
  }

  // optional string otp_identifier = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), static_cast<int>(this->otp_identifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.otp_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->otp_identifier(), target);
  }

  // optional bytes otp_sharedsecret = 9;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->otp_sharedsecret(), target);
  }

  // optional uint32 otp_value = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->otp_value(), target);
  }

  // optional string machine_name = 11;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_name().data(), static_cast<int>(this->machine_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.machine_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->machine_name(), target);
  }

  // optional string machine_name_userchosen = 12;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_name_userchosen().data(), static_cast<int>(this->machine_name_userchosen().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.machine_name_userchosen");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->machine_name_userchosen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestMachineAuth)
  return target;
}

size_t CMsgClientRequestMachineAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestMachineAuth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string filename = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bytes sha_sentryfile = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_sentryfile());
    }

    // optional string otp_identifier = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->otp_identifier());
    }

    // optional bytes otp_sharedsecret = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->otp_sharedsecret());
    }

    // optional string machine_name = 11;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->machine_name());
    }

    // optional string machine_name_userchosen = 12;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->machine_name_userchosen());
    }

    // optional uint32 eresult_sentryfile = 2;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult_sentryfile());
    }

    // optional uint32 filesize = 3;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->filesize());
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional int32 lock_account_action = 6;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lock_account_action());
    }

    // optional uint32 otp_type = 7;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otp_type());
    }

    // optional uint32 otp_value = 10;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otp_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestMachineAuth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestMachineAuth* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRequestMachineAuth>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestMachineAuth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestMachineAuth)
    MergeFrom(*source);
  }
}

void CMsgClientRequestMachineAuth::MergeFrom(const CMsgClientRequestMachineAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      sha_sentryfile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_sentryfile_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      otp_sharedsecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_sharedsecret_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      machine_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_name_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      machine_name_userchosen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_name_userchosen_);
    }
    if (cached_has_bits & 0x00000040u) {
      eresult_sentryfile_ = from.eresult_sentryfile_;
    }
    if (cached_has_bits & 0x00000080u) {
      filesize_ = from.filesize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      lock_account_action_ = from.lock_account_action_;
    }
    if (cached_has_bits & 0x00000200u) {
      otp_type_ = from.otp_type_;
    }
    if (cached_has_bits & 0x00000400u) {
      otp_value_ = from.otp_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRequestMachineAuth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestMachineAuth::CopyFrom(const CMsgClientRequestMachineAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestMachineAuth::IsInitialized() const {
  return true;
}

void CMsgClientRequestMachineAuth::Swap(CMsgClientRequestMachineAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestMachineAuth::InternalSwap(CMsgClientRequestMachineAuth* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sha_sentryfile_.Swap(&other->sha_sentryfile_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  otp_identifier_.Swap(&other->otp_identifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  otp_sharedsecret_.Swap(&other->otp_sharedsecret_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  machine_name_.Swap(&other->machine_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  machine_name_userchosen_.Swap(&other->machine_name_userchosen_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eresult_sentryfile_, other->eresult_sentryfile_);
  swap(filesize_, other->filesize_);
  swap(lock_account_action_, other->lock_account_action_);
  swap(otp_type_, other->otp_type_);
  swap(otp_value_, other->otp_value_);
}

::google::protobuf::Metadata CMsgClientRequestMachineAuth::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestMachineAuthResponse::InitAsDefaultInstance() {
}
class CMsgClientRequestMachineAuthResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientRequestMachineAuthResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestMachineAuthResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestMachineAuthResponse::CMsgClientRequestMachineAuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestMachineAuthResponse)
}
CMsgClientRequestMachineAuthResponse::CMsgClientRequestMachineAuthResponse(const CMsgClientRequestMachineAuthResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestMachineAuthResponse)
}

void CMsgClientRequestMachineAuthResponse::SharedCtor() {
  eresult_ = 0u;
}

CMsgClientRequestMachineAuthResponse::~CMsgClientRequestMachineAuthResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestMachineAuthResponse)
  SharedDtor();
}

void CMsgClientRequestMachineAuthResponse::SharedDtor() {
}

void CMsgClientRequestMachineAuthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRequestMachineAuthResponse& CMsgClientRequestMachineAuthResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRequestMachineAuthResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRequestMachineAuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRequestMachineAuthResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRequestMachineAuthResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 eresult = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRequestMachineAuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestMachineAuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestMachineAuthResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRequestMachineAuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestMachineAuthResponse)
}

::google::protobuf::uint8* CMsgClientRequestMachineAuthResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestMachineAuthResponse)
  return target;
}

size_t CMsgClientRequestMachineAuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 eresult = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestMachineAuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestMachineAuthResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRequestMachineAuthResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestMachineAuthResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestMachineAuthResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRequestMachineAuthResponse::MergeFrom(const CMsgClientRequestMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientRequestMachineAuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestMachineAuthResponse::CopyFrom(const CMsgClientRequestMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestMachineAuthResponse::IsInitialized() const {
  return true;
}

void CMsgClientRequestMachineAuthResponse::Swap(CMsgClientRequestMachineAuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestMachineAuthResponse::InternalSwap(CMsgClientRequestMachineAuthResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientRequestMachineAuthResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRegisterKey::InitAsDefaultInstance() {
}
class CMsgClientRegisterKey::HasBitSetters {
 public:
  static void set_has_key(CMsgClientRegisterKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRegisterKey::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRegisterKey::CMsgClientRegisterKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRegisterKey)
}
CMsgClientRegisterKey::CMsgClientRegisterKey(const CMsgClientRegisterKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRegisterKey)
}

void CMsgClientRegisterKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientRegisterKey_steammessages_5fclientserver_5f2_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientRegisterKey::~CMsgClientRegisterKey() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRegisterKey)
  SharedDtor();
}

void CMsgClientRegisterKey::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRegisterKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRegisterKey& CMsgClientRegisterKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRegisterKey_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRegisterKey::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRegisterKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    key_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRegisterKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRegisterKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientRegisterKey.key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRegisterKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRegisterKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRegisterKey.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRegisterKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRegisterKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRegisterKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRegisterKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRegisterKey.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRegisterKey)
}

::google::protobuf::uint8* CMsgClientRegisterKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRegisterKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRegisterKey.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRegisterKey)
  return target;
}

size_t CMsgClientRegisterKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRegisterKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string key = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRegisterKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRegisterKey)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRegisterKey* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRegisterKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRegisterKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRegisterKey)
    MergeFrom(*source);
  }
}

void CMsgClientRegisterKey::MergeFrom(const CMsgClientRegisterKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRegisterKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    _has_bits_[0] |= 0x00000001u;
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void CMsgClientRegisterKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRegisterKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRegisterKey::CopyFrom(const CMsgClientRegisterKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRegisterKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRegisterKey::IsInitialized() const {
  return true;
}

void CMsgClientRegisterKey::Swap(CMsgClientRegisterKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRegisterKey::InternalSwap(CMsgClientRegisterKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CMsgClientRegisterKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPurchaseResponse::InitAsDefaultInstance() {
}
class CMsgClientPurchaseResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientPurchaseResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_purchase_result_details(CMsgClientPurchaseResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_purchase_receipt_info(CMsgClientPurchaseResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPurchaseResponse::kEresultFieldNumber;
const int CMsgClientPurchaseResponse::kPurchaseResultDetailsFieldNumber;
const int CMsgClientPurchaseResponse::kPurchaseReceiptInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPurchaseResponse::CMsgClientPurchaseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientPurchaseResponse)
}
CMsgClientPurchaseResponse::CMsgClientPurchaseResponse(const CMsgClientPurchaseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  purchase_receipt_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_purchase_receipt_info()) {
    purchase_receipt_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.purchase_receipt_info_);
  }
  ::memcpy(&purchase_result_details_, &from.purchase_result_details_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&purchase_result_details_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientPurchaseResponse)
}

void CMsgClientPurchaseResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientPurchaseResponse_steammessages_5fclientserver_5f2_2eproto.base);
  purchase_receipt_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  purchase_result_details_ = 0;
  eresult_ = 2;
}

CMsgClientPurchaseResponse::~CMsgClientPurchaseResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientPurchaseResponse)
  SharedDtor();
}

void CMsgClientPurchaseResponse::SharedDtor() {
  purchase_receipt_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientPurchaseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientPurchaseResponse& CMsgClientPurchaseResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientPurchaseResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientPurchaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientPurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    purchase_receipt_info_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    purchase_result_details_ = 0;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientPurchaseResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientPurchaseResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 purchase_result_details = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_purchase_result_details(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes purchase_receipt_info = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_purchase_receipt_info();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientPurchaseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientPurchaseResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 purchase_result_details = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_purchase_result_details(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &purchase_result_details_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes purchase_receipt_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_purchase_receipt_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientPurchaseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientPurchaseResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientPurchaseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientPurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 purchase_result_details = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->purchase_result_details(), output);
  }

  // optional bytes purchase_receipt_info = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->purchase_receipt_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientPurchaseResponse)
}

::google::protobuf::uint8* CMsgClientPurchaseResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientPurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 purchase_result_details = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->purchase_result_details(), target);
  }

  // optional bytes purchase_receipt_info = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->purchase_receipt_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientPurchaseResponse)
  return target;
}

size_t CMsgClientPurchaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientPurchaseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes purchase_receipt_info = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->purchase_receipt_info());
    }

    // optional int32 purchase_result_details = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->purchase_result_details());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPurchaseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientPurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPurchaseResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientPurchaseResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientPurchaseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientPurchaseResponse)
    MergeFrom(*source);
  }
}

void CMsgClientPurchaseResponse::MergeFrom(const CMsgClientPurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientPurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      purchase_receipt_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.purchase_receipt_info_);
    }
    if (cached_has_bits & 0x00000002u) {
      purchase_result_details_ = from.purchase_result_details_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPurchaseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientPurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPurchaseResponse::CopyFrom(const CMsgClientPurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientPurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPurchaseResponse::IsInitialized() const {
  return true;
}

void CMsgClientPurchaseResponse::Swap(CMsgClientPurchaseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPurchaseResponse::InternalSwap(CMsgClientPurchaseResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  purchase_receipt_info_.Swap(&other->purchase_receipt_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(purchase_result_details_, other->purchase_result_details_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientPurchaseResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientActivateOEMLicense::InitAsDefaultInstance() {
}
class CMsgClientActivateOEMLicense::HasBitSetters {
 public:
  static void set_has_bios_manufacturer(CMsgClientActivateOEMLicense* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_bios_serialnumber(CMsgClientActivateOEMLicense* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_license_file(CMsgClientActivateOEMLicense* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_mainboard_manufacturer(CMsgClientActivateOEMLicense* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_mainboard_product(CMsgClientActivateOEMLicense* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_mainboard_serialnumber(CMsgClientActivateOEMLicense* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientActivateOEMLicense::kBiosManufacturerFieldNumber;
const int CMsgClientActivateOEMLicense::kBiosSerialnumberFieldNumber;
const int CMsgClientActivateOEMLicense::kLicenseFileFieldNumber;
const int CMsgClientActivateOEMLicense::kMainboardManufacturerFieldNumber;
const int CMsgClientActivateOEMLicense::kMainboardProductFieldNumber;
const int CMsgClientActivateOEMLicense::kMainboardSerialnumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientActivateOEMLicense::CMsgClientActivateOEMLicense()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientActivateOEMLicense)
}
CMsgClientActivateOEMLicense::CMsgClientActivateOEMLicense(const CMsgClientActivateOEMLicense& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bios_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bios_manufacturer()) {
    bios_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bios_manufacturer_);
  }
  bios_serialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bios_serialnumber()) {
    bios_serialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bios_serialnumber_);
  }
  license_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_license_file()) {
    license_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.license_file_);
  }
  mainboard_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mainboard_manufacturer()) {
    mainboard_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_manufacturer_);
  }
  mainboard_product_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mainboard_product()) {
    mainboard_product_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_product_);
  }
  mainboard_serialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mainboard_serialnumber()) {
    mainboard_serialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_serialnumber_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientActivateOEMLicense)
}

void CMsgClientActivateOEMLicense::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientActivateOEMLicense_steammessages_5fclientserver_5f2_2eproto.base);
  bios_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bios_serialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_product_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_serialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientActivateOEMLicense::~CMsgClientActivateOEMLicense() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientActivateOEMLicense)
  SharedDtor();
}

void CMsgClientActivateOEMLicense::SharedDtor() {
  bios_manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bios_serialnumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_product_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_serialnumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientActivateOEMLicense::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientActivateOEMLicense& CMsgClientActivateOEMLicense::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientActivateOEMLicense_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientActivateOEMLicense::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientActivateOEMLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      bios_manufacturer_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      bios_serialnumber_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      license_file_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      mainboard_manufacturer_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      mainboard_product_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      mainboard_serialnumber_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientActivateOEMLicense::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientActivateOEMLicense*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string bios_manufacturer = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientActivateOEMLicense.bios_manufacturer");
        object = msg->mutable_bios_manufacturer();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string bios_serialnumber = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientActivateOEMLicense.bios_serialnumber");
        object = msg->mutable_bios_serialnumber();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes license_file = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_license_file();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string mainboard_manufacturer = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientActivateOEMLicense.mainboard_manufacturer");
        object = msg->mutable_mainboard_manufacturer();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string mainboard_product = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientActivateOEMLicense.mainboard_product");
        object = msg->mutable_mainboard_product();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string mainboard_serialnumber = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientActivateOEMLicense.mainboard_serialnumber");
        object = msg->mutable_mainboard_serialnumber();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientActivateOEMLicense::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientActivateOEMLicense)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bios_manufacturer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bios_manufacturer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bios_manufacturer().data(), static_cast<int>(this->bios_manufacturer().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientActivateOEMLicense.bios_manufacturer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bios_serialnumber = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bios_serialnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bios_serialnumber().data(), static_cast<int>(this->bios_serialnumber().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientActivateOEMLicense.bios_serialnumber");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes license_file = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_license_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mainboard_manufacturer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mainboard_manufacturer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mainboard_manufacturer().data(), static_cast<int>(this->mainboard_manufacturer().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientActivateOEMLicense.mainboard_manufacturer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mainboard_product = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mainboard_product()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mainboard_product().data(), static_cast<int>(this->mainboard_product().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientActivateOEMLicense.mainboard_product");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mainboard_serialnumber = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mainboard_serialnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mainboard_serialnumber().data(), static_cast<int>(this->mainboard_serialnumber().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientActivateOEMLicense.mainboard_serialnumber");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientActivateOEMLicense)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientActivateOEMLicense)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientActivateOEMLicense::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientActivateOEMLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string bios_manufacturer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bios_manufacturer().data(), static_cast<int>(this->bios_manufacturer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.bios_manufacturer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bios_manufacturer(), output);
  }

  // optional string bios_serialnumber = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bios_serialnumber().data(), static_cast<int>(this->bios_serialnumber().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.bios_serialnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bios_serialnumber(), output);
  }

  // optional bytes license_file = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->license_file(), output);
  }

  // optional string mainboard_manufacturer = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_manufacturer().data(), static_cast<int>(this->mainboard_manufacturer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.mainboard_manufacturer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mainboard_manufacturer(), output);
  }

  // optional string mainboard_product = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_product().data(), static_cast<int>(this->mainboard_product().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.mainboard_product");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->mainboard_product(), output);
  }

  // optional string mainboard_serialnumber = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_serialnumber().data(), static_cast<int>(this->mainboard_serialnumber().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.mainboard_serialnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->mainboard_serialnumber(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientActivateOEMLicense)
}

::google::protobuf::uint8* CMsgClientActivateOEMLicense::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientActivateOEMLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string bios_manufacturer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bios_manufacturer().data(), static_cast<int>(this->bios_manufacturer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.bios_manufacturer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bios_manufacturer(), target);
  }

  // optional string bios_serialnumber = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bios_serialnumber().data(), static_cast<int>(this->bios_serialnumber().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.bios_serialnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bios_serialnumber(), target);
  }

  // optional bytes license_file = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->license_file(), target);
  }

  // optional string mainboard_manufacturer = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_manufacturer().data(), static_cast<int>(this->mainboard_manufacturer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.mainboard_manufacturer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mainboard_manufacturer(), target);
  }

  // optional string mainboard_product = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_product().data(), static_cast<int>(this->mainboard_product().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.mainboard_product");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mainboard_product(), target);
  }

  // optional string mainboard_serialnumber = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_serialnumber().data(), static_cast<int>(this->mainboard_serialnumber().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.mainboard_serialnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->mainboard_serialnumber(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientActivateOEMLicense)
  return target;
}

size_t CMsgClientActivateOEMLicense::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientActivateOEMLicense)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string bios_manufacturer = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bios_manufacturer());
    }

    // optional string bios_serialnumber = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bios_serialnumber());
    }

    // optional bytes license_file = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->license_file());
    }

    // optional string mainboard_manufacturer = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mainboard_manufacturer());
    }

    // optional string mainboard_product = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mainboard_product());
    }

    // optional string mainboard_serialnumber = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mainboard_serialnumber());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientActivateOEMLicense::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientActivateOEMLicense)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientActivateOEMLicense* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientActivateOEMLicense>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientActivateOEMLicense)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientActivateOEMLicense)
    MergeFrom(*source);
  }
}

void CMsgClientActivateOEMLicense::MergeFrom(const CMsgClientActivateOEMLicense& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientActivateOEMLicense)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      bios_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bios_manufacturer_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      bios_serialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bios_serialnumber_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      license_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.license_file_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      mainboard_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_manufacturer_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      mainboard_product_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_product_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      mainboard_serialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_serialnumber_);
    }
  }
}

void CMsgClientActivateOEMLicense::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientActivateOEMLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientActivateOEMLicense::CopyFrom(const CMsgClientActivateOEMLicense& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientActivateOEMLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientActivateOEMLicense::IsInitialized() const {
  return true;
}

void CMsgClientActivateOEMLicense::Swap(CMsgClientActivateOEMLicense* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientActivateOEMLicense::InternalSwap(CMsgClientActivateOEMLicense* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  bios_manufacturer_.Swap(&other->bios_manufacturer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bios_serialnumber_.Swap(&other->bios_serialnumber_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  license_file_.Swap(&other->license_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mainboard_manufacturer_.Swap(&other->mainboard_manufacturer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mainboard_product_.Swap(&other->mainboard_product_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mainboard_serialnumber_.Swap(&other->mainboard_serialnumber_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CMsgClientActivateOEMLicense::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRegisterOEMMachine::InitAsDefaultInstance() {
}
class CMsgClientRegisterOEMMachine::HasBitSetters {
 public:
  static void set_has_oem_register_file(CMsgClientRegisterOEMMachine* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRegisterOEMMachine::kOemRegisterFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRegisterOEMMachine::CMsgClientRegisterOEMMachine()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRegisterOEMMachine)
}
CMsgClientRegisterOEMMachine::CMsgClientRegisterOEMMachine(const CMsgClientRegisterOEMMachine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oem_register_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_oem_register_file()) {
    oem_register_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oem_register_file_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRegisterOEMMachine)
}

void CMsgClientRegisterOEMMachine::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientRegisterOEMMachine_steammessages_5fclientserver_5f2_2eproto.base);
  oem_register_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientRegisterOEMMachine::~CMsgClientRegisterOEMMachine() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRegisterOEMMachine)
  SharedDtor();
}

void CMsgClientRegisterOEMMachine::SharedDtor() {
  oem_register_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRegisterOEMMachine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRegisterOEMMachine& CMsgClientRegisterOEMMachine::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRegisterOEMMachine_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRegisterOEMMachine::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRegisterOEMMachine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    oem_register_file_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRegisterOEMMachine::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRegisterOEMMachine*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes oem_register_file = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_oem_register_file();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRegisterOEMMachine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRegisterOEMMachine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes oem_register_file = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_oem_register_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRegisterOEMMachine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRegisterOEMMachine)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRegisterOEMMachine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRegisterOEMMachine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes oem_register_file = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->oem_register_file(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRegisterOEMMachine)
}

::google::protobuf::uint8* CMsgClientRegisterOEMMachine::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRegisterOEMMachine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes oem_register_file = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->oem_register_file(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRegisterOEMMachine)
  return target;
}

size_t CMsgClientRegisterOEMMachine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRegisterOEMMachine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes oem_register_file = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->oem_register_file());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRegisterOEMMachine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRegisterOEMMachine)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRegisterOEMMachine* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRegisterOEMMachine>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRegisterOEMMachine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRegisterOEMMachine)
    MergeFrom(*source);
  }
}

void CMsgClientRegisterOEMMachine::MergeFrom(const CMsgClientRegisterOEMMachine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRegisterOEMMachine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_oem_register_file()) {
    _has_bits_[0] |= 0x00000001u;
    oem_register_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oem_register_file_);
  }
}

void CMsgClientRegisterOEMMachine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRegisterOEMMachine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRegisterOEMMachine::CopyFrom(const CMsgClientRegisterOEMMachine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRegisterOEMMachine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRegisterOEMMachine::IsInitialized() const {
  return true;
}

void CMsgClientRegisterOEMMachine::Swap(CMsgClientRegisterOEMMachine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRegisterOEMMachine::InternalSwap(CMsgClientRegisterOEMMachine* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  oem_register_file_.Swap(&other->oem_register_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CMsgClientRegisterOEMMachine::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRegisterOEMMachineResponse::InitAsDefaultInstance() {
}
class CMsgClientRegisterOEMMachineResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientRegisterOEMMachineResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRegisterOEMMachineResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRegisterOEMMachineResponse::CMsgClientRegisterOEMMachineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRegisterOEMMachineResponse)
}
CMsgClientRegisterOEMMachineResponse::CMsgClientRegisterOEMMachineResponse(const CMsgClientRegisterOEMMachineResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRegisterOEMMachineResponse)
}

void CMsgClientRegisterOEMMachineResponse::SharedCtor() {
  eresult_ = 0u;
}

CMsgClientRegisterOEMMachineResponse::~CMsgClientRegisterOEMMachineResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRegisterOEMMachineResponse)
  SharedDtor();
}

void CMsgClientRegisterOEMMachineResponse::SharedDtor() {
}

void CMsgClientRegisterOEMMachineResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRegisterOEMMachineResponse& CMsgClientRegisterOEMMachineResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRegisterOEMMachineResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRegisterOEMMachineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRegisterOEMMachineResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRegisterOEMMachineResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 eresult = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRegisterOEMMachineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRegisterOEMMachineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRegisterOEMMachineResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRegisterOEMMachineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRegisterOEMMachineResponse)
}

::google::protobuf::uint8* CMsgClientRegisterOEMMachineResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRegisterOEMMachineResponse)
  return target;
}

size_t CMsgClientRegisterOEMMachineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 eresult = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRegisterOEMMachineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRegisterOEMMachineResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRegisterOEMMachineResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRegisterOEMMachineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRegisterOEMMachineResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRegisterOEMMachineResponse::MergeFrom(const CMsgClientRegisterOEMMachineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientRegisterOEMMachineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRegisterOEMMachineResponse::CopyFrom(const CMsgClientRegisterOEMMachineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRegisterOEMMachineResponse::IsInitialized() const {
  return true;
}

void CMsgClientRegisterOEMMachineResponse::Swap(CMsgClientRegisterOEMMachineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRegisterOEMMachineResponse::InternalSwap(CMsgClientRegisterOEMMachineResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientRegisterOEMMachineResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPurchaseWithMachineID::InitAsDefaultInstance() {
}
class CMsgClientPurchaseWithMachineID::HasBitSetters {
 public:
  static void set_has_package_id(CMsgClientPurchaseWithMachineID* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_machine_info(CMsgClientPurchaseWithMachineID* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPurchaseWithMachineID::kPackageIdFieldNumber;
const int CMsgClientPurchaseWithMachineID::kMachineInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPurchaseWithMachineID::CMsgClientPurchaseWithMachineID()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientPurchaseWithMachineID)
}
CMsgClientPurchaseWithMachineID::CMsgClientPurchaseWithMachineID(const CMsgClientPurchaseWithMachineID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  machine_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_info()) {
    machine_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_info_);
  }
  package_id_ = from.package_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientPurchaseWithMachineID)
}

void CMsgClientPurchaseWithMachineID::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientPurchaseWithMachineID_steammessages_5fclientserver_5f2_2eproto.base);
  machine_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_id_ = 0u;
}

CMsgClientPurchaseWithMachineID::~CMsgClientPurchaseWithMachineID() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientPurchaseWithMachineID)
  SharedDtor();
}

void CMsgClientPurchaseWithMachineID::SharedDtor() {
  machine_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientPurchaseWithMachineID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientPurchaseWithMachineID& CMsgClientPurchaseWithMachineID::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientPurchaseWithMachineID_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientPurchaseWithMachineID::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientPurchaseWithMachineID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    machine_info_.ClearNonDefaultToEmptyNoArena();
  }
  package_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientPurchaseWithMachineID::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientPurchaseWithMachineID*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 package_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_package_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes machine_info = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_machine_info();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientPurchaseWithMachineID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientPurchaseWithMachineID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 package_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_package_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes machine_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_machine_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientPurchaseWithMachineID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientPurchaseWithMachineID)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientPurchaseWithMachineID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientPurchaseWithMachineID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 package_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->package_id(), output);
  }

  // optional bytes machine_info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->machine_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientPurchaseWithMachineID)
}

::google::protobuf::uint8* CMsgClientPurchaseWithMachineID::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientPurchaseWithMachineID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 package_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->package_id(), target);
  }

  // optional bytes machine_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->machine_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientPurchaseWithMachineID)
  return target;
}

size_t CMsgClientPurchaseWithMachineID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientPurchaseWithMachineID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes machine_info = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->machine_info());
    }

    // optional uint32 package_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPurchaseWithMachineID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientPurchaseWithMachineID)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPurchaseWithMachineID* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientPurchaseWithMachineID>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientPurchaseWithMachineID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientPurchaseWithMachineID)
    MergeFrom(*source);
  }
}

void CMsgClientPurchaseWithMachineID::MergeFrom(const CMsgClientPurchaseWithMachineID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientPurchaseWithMachineID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      machine_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_info_);
    }
    if (cached_has_bits & 0x00000002u) {
      package_id_ = from.package_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPurchaseWithMachineID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientPurchaseWithMachineID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPurchaseWithMachineID::CopyFrom(const CMsgClientPurchaseWithMachineID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientPurchaseWithMachineID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPurchaseWithMachineID::IsInitialized() const {
  return true;
}

void CMsgClientPurchaseWithMachineID::Swap(CMsgClientPurchaseWithMachineID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPurchaseWithMachineID::InternalSwap(CMsgClientPurchaseWithMachineID* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  machine_info_.Swap(&other->machine_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(package_id_, other->package_id_);
}

::google::protobuf::Metadata CMsgClientPurchaseWithMachineID::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgTrading_InitiateTradeRequest::InitAsDefaultInstance() {
}
class CMsgTrading_InitiateTradeRequest::HasBitSetters {
 public:
  static void set_has_trade_request_id(CMsgTrading_InitiateTradeRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_other_steamid(CMsgTrading_InitiateTradeRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_other_name(CMsgTrading_InitiateTradeRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTrading_InitiateTradeRequest::kTradeRequestIdFieldNumber;
const int CMsgTrading_InitiateTradeRequest::kOtherSteamidFieldNumber;
const int CMsgTrading_InitiateTradeRequest::kOtherNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTrading_InitiateTradeRequest::CMsgTrading_InitiateTradeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgTrading_InitiateTradeRequest)
}
CMsgTrading_InitiateTradeRequest::CMsgTrading_InitiateTradeRequest(const CMsgTrading_InitiateTradeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  other_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_other_name()) {
    other_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_name_);
  }
  ::memcpy(&other_steamid_, &from.other_steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&trade_request_id_) -
    reinterpret_cast<char*>(&other_steamid_)) + sizeof(trade_request_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgTrading_InitiateTradeRequest)
}

void CMsgTrading_InitiateTradeRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgTrading_InitiateTradeRequest_steammessages_5fclientserver_5f2_2eproto.base);
  other_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&other_steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trade_request_id_) -
      reinterpret_cast<char*>(&other_steamid_)) + sizeof(trade_request_id_));
}

CMsgTrading_InitiateTradeRequest::~CMsgTrading_InitiateTradeRequest() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgTrading_InitiateTradeRequest)
  SharedDtor();
}

void CMsgTrading_InitiateTradeRequest::SharedDtor() {
  other_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgTrading_InitiateTradeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgTrading_InitiateTradeRequest& CMsgTrading_InitiateTradeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgTrading_InitiateTradeRequest_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgTrading_InitiateTradeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    other_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&other_steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&trade_request_id_) -
        reinterpret_cast<char*>(&other_steamid_)) + sizeof(trade_request_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgTrading_InitiateTradeRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgTrading_InitiateTradeRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 trade_request_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_trade_request_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 other_steamid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_other_steamid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string other_name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgTrading_InitiateTradeRequest.other_name");
        object = msg->mutable_other_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgTrading_InitiateTradeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 trade_request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_trade_request_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trade_request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 other_steamid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_other_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &other_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string other_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_other_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->other_name().data(), static_cast<int>(this->other_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgTrading_InitiateTradeRequest.other_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgTrading_InitiateTradeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgTrading_InitiateTradeRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgTrading_InitiateTradeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 trade_request_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->trade_request_id(), output);
  }

  // optional uint64 other_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->other_steamid(), output);
  }

  // optional string other_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->other_name().data(), static_cast<int>(this->other_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgTrading_InitiateTradeRequest.other_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->other_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgTrading_InitiateTradeRequest)
}

::google::protobuf::uint8* CMsgTrading_InitiateTradeRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 trade_request_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->trade_request_id(), target);
  }

  // optional uint64 other_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->other_steamid(), target);
  }

  // optional string other_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->other_name().data(), static_cast<int>(this->other_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgTrading_InitiateTradeRequest.other_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->other_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgTrading_InitiateTradeRequest)
  return target;
}

size_t CMsgTrading_InitiateTradeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string other_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->other_name());
    }

    // optional uint64 other_steamid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->other_steamid());
    }

    // optional uint32 trade_request_id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->trade_request_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgTrading_InitiateTradeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTrading_InitiateTradeRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgTrading_InitiateTradeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgTrading_InitiateTradeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgTrading_InitiateTradeRequest)
    MergeFrom(*source);
  }
}

void CMsgTrading_InitiateTradeRequest::MergeFrom(const CMsgTrading_InitiateTradeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      other_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      other_steamid_ = from.other_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      trade_request_id_ = from.trade_request_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgTrading_InitiateTradeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTrading_InitiateTradeRequest::CopyFrom(const CMsgTrading_InitiateTradeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTrading_InitiateTradeRequest::IsInitialized() const {
  return true;
}

void CMsgTrading_InitiateTradeRequest::Swap(CMsgTrading_InitiateTradeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTrading_InitiateTradeRequest::InternalSwap(CMsgTrading_InitiateTradeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  other_name_.Swap(&other->other_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(other_steamid_, other->other_steamid_);
  swap(trade_request_id_, other->trade_request_id_);
}

::google::protobuf::Metadata CMsgTrading_InitiateTradeRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgTrading_InitiateTradeResponse::InitAsDefaultInstance() {
}
class CMsgTrading_InitiateTradeResponse::HasBitSetters {
 public:
  static void set_has_response(CMsgTrading_InitiateTradeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_trade_request_id(CMsgTrading_InitiateTradeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_other_steamid(CMsgTrading_InitiateTradeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_steamguard_required_days(CMsgTrading_InitiateTradeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_new_device_cooldown_days(CMsgTrading_InitiateTradeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_default_password_reset_probation_days(CMsgTrading_InitiateTradeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_password_reset_probation_days(CMsgTrading_InitiateTradeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_default_email_change_probation_days(CMsgTrading_InitiateTradeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_email_change_probation_days(CMsgTrading_InitiateTradeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTrading_InitiateTradeResponse::kResponseFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kTradeRequestIdFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kOtherSteamidFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kSteamguardRequiredDaysFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kNewDeviceCooldownDaysFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kDefaultPasswordResetProbationDaysFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kPasswordResetProbationDaysFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kDefaultEmailChangeProbationDaysFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kEmailChangeProbationDaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTrading_InitiateTradeResponse::CMsgTrading_InitiateTradeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgTrading_InitiateTradeResponse)
}
CMsgTrading_InitiateTradeResponse::CMsgTrading_InitiateTradeResponse(const CMsgTrading_InitiateTradeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&response_, &from.response_,
    static_cast<size_t>(reinterpret_cast<char*>(&email_change_probation_days_) -
    reinterpret_cast<char*>(&response_)) + sizeof(email_change_probation_days_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgTrading_InitiateTradeResponse)
}

void CMsgTrading_InitiateTradeResponse::SharedCtor() {
  ::memset(&response_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&email_change_probation_days_) -
      reinterpret_cast<char*>(&response_)) + sizeof(email_change_probation_days_));
}

CMsgTrading_InitiateTradeResponse::~CMsgTrading_InitiateTradeResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgTrading_InitiateTradeResponse)
  SharedDtor();
}

void CMsgTrading_InitiateTradeResponse::SharedDtor() {
}

void CMsgTrading_InitiateTradeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgTrading_InitiateTradeResponse& CMsgTrading_InitiateTradeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgTrading_InitiateTradeResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgTrading_InitiateTradeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&response_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_email_change_probation_days_) -
        reinterpret_cast<char*>(&response_)) + sizeof(default_email_change_probation_days_));
  }
  email_change_probation_days_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgTrading_InitiateTradeResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgTrading_InitiateTradeResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 response = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_response(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 trade_request_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_trade_request_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 other_steamid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_other_steamid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 steamguard_required_days = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_steamguard_required_days(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 new_device_cooldown_days = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_new_device_cooldown_days(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 default_password_reset_probation_days = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_default_password_reset_probation_days(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 password_reset_probation_days = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_password_reset_probation_days(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 default_email_change_probation_days = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_default_email_change_probation_days(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 email_change_probation_days = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_email_change_probation_days(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgTrading_InitiateTradeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 response = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_response(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &response_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 trade_request_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_trade_request_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trade_request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 other_steamid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_other_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &other_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 steamguard_required_days = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_steamguard_required_days(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &steamguard_required_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 new_device_cooldown_days = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_new_device_cooldown_days(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_device_cooldown_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 default_password_reset_probation_days = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_default_password_reset_probation_days(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &default_password_reset_probation_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 password_reset_probation_days = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_password_reset_probation_days(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &password_reset_probation_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 default_email_change_probation_days = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_default_email_change_probation_days(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &default_email_change_probation_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 email_change_probation_days = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_email_change_probation_days(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &email_change_probation_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgTrading_InitiateTradeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgTrading_InitiateTradeResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgTrading_InitiateTradeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->response(), output);
  }

  // optional uint32 trade_request_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->trade_request_id(), output);
  }

  // optional uint64 other_steamid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->other_steamid(), output);
  }

  // optional uint32 steamguard_required_days = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->steamguard_required_days(), output);
  }

  // optional uint32 new_device_cooldown_days = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->new_device_cooldown_days(), output);
  }

  // optional uint32 default_password_reset_probation_days = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->default_password_reset_probation_days(), output);
  }

  // optional uint32 password_reset_probation_days = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->password_reset_probation_days(), output);
  }

  // optional uint32 default_email_change_probation_days = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->default_email_change_probation_days(), output);
  }

  // optional uint32 email_change_probation_days = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->email_change_probation_days(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgTrading_InitiateTradeResponse)
}

::google::protobuf::uint8* CMsgTrading_InitiateTradeResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->response(), target);
  }

  // optional uint32 trade_request_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->trade_request_id(), target);
  }

  // optional uint64 other_steamid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->other_steamid(), target);
  }

  // optional uint32 steamguard_required_days = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->steamguard_required_days(), target);
  }

  // optional uint32 new_device_cooldown_days = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->new_device_cooldown_days(), target);
  }

  // optional uint32 default_password_reset_probation_days = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->default_password_reset_probation_days(), target);
  }

  // optional uint32 password_reset_probation_days = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->password_reset_probation_days(), target);
  }

  // optional uint32 default_email_change_probation_days = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->default_email_change_probation_days(), target);
  }

  // optional uint32 email_change_probation_days = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->email_change_probation_days(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgTrading_InitiateTradeResponse)
  return target;
}

size_t CMsgTrading_InitiateTradeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint32 response = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->response());
    }

    // optional uint32 trade_request_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->trade_request_id());
    }

    // optional uint64 other_steamid = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->other_steamid());
    }

    // optional uint32 steamguard_required_days = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->steamguard_required_days());
    }

    // optional uint32 new_device_cooldown_days = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_device_cooldown_days());
    }

    // optional uint32 default_password_reset_probation_days = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->default_password_reset_probation_days());
    }

    // optional uint32 password_reset_probation_days = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->password_reset_probation_days());
    }

    // optional uint32 default_email_change_probation_days = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->default_email_change_probation_days());
    }

  }
  // optional uint32 email_change_probation_days = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->email_change_probation_days());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgTrading_InitiateTradeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTrading_InitiateTradeResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgTrading_InitiateTradeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgTrading_InitiateTradeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgTrading_InitiateTradeResponse)
    MergeFrom(*source);
  }
}

void CMsgTrading_InitiateTradeResponse::MergeFrom(const CMsgTrading_InitiateTradeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      response_ = from.response_;
    }
    if (cached_has_bits & 0x00000002u) {
      trade_request_id_ = from.trade_request_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      other_steamid_ = from.other_steamid_;
    }
    if (cached_has_bits & 0x00000008u) {
      steamguard_required_days_ = from.steamguard_required_days_;
    }
    if (cached_has_bits & 0x00000010u) {
      new_device_cooldown_days_ = from.new_device_cooldown_days_;
    }
    if (cached_has_bits & 0x00000020u) {
      default_password_reset_probation_days_ = from.default_password_reset_probation_days_;
    }
    if (cached_has_bits & 0x00000040u) {
      password_reset_probation_days_ = from.password_reset_probation_days_;
    }
    if (cached_has_bits & 0x00000080u) {
      default_email_change_probation_days_ = from.default_email_change_probation_days_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_email_change_probation_days(from.email_change_probation_days());
  }
}

void CMsgTrading_InitiateTradeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTrading_InitiateTradeResponse::CopyFrom(const CMsgTrading_InitiateTradeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTrading_InitiateTradeResponse::IsInitialized() const {
  return true;
}

void CMsgTrading_InitiateTradeResponse::Swap(CMsgTrading_InitiateTradeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTrading_InitiateTradeResponse::InternalSwap(CMsgTrading_InitiateTradeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(response_, other->response_);
  swap(trade_request_id_, other->trade_request_id_);
  swap(other_steamid_, other->other_steamid_);
  swap(steamguard_required_days_, other->steamguard_required_days_);
  swap(new_device_cooldown_days_, other->new_device_cooldown_days_);
  swap(default_password_reset_probation_days_, other->default_password_reset_probation_days_);
  swap(password_reset_probation_days_, other->password_reset_probation_days_);
  swap(default_email_change_probation_days_, other->default_email_change_probation_days_);
  swap(email_change_probation_days_, other->email_change_probation_days_);
}

::google::protobuf::Metadata CMsgTrading_InitiateTradeResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgTrading_CancelTradeRequest::InitAsDefaultInstance() {
}
class CMsgTrading_CancelTradeRequest::HasBitSetters {
 public:
  static void set_has_other_steamid(CMsgTrading_CancelTradeRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTrading_CancelTradeRequest::kOtherSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTrading_CancelTradeRequest::CMsgTrading_CancelTradeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgTrading_CancelTradeRequest)
}
CMsgTrading_CancelTradeRequest::CMsgTrading_CancelTradeRequest(const CMsgTrading_CancelTradeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  other_steamid_ = from.other_steamid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgTrading_CancelTradeRequest)
}

void CMsgTrading_CancelTradeRequest::SharedCtor() {
  other_steamid_ = PROTOBUF_ULONGLONG(0);
}

CMsgTrading_CancelTradeRequest::~CMsgTrading_CancelTradeRequest() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgTrading_CancelTradeRequest)
  SharedDtor();
}

void CMsgTrading_CancelTradeRequest::SharedDtor() {
}

void CMsgTrading_CancelTradeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgTrading_CancelTradeRequest& CMsgTrading_CancelTradeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgTrading_CancelTradeRequest_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgTrading_CancelTradeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgTrading_CancelTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  other_steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgTrading_CancelTradeRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgTrading_CancelTradeRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 other_steamid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_other_steamid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgTrading_CancelTradeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgTrading_CancelTradeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 other_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_other_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &other_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgTrading_CancelTradeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgTrading_CancelTradeRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgTrading_CancelTradeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgTrading_CancelTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 other_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->other_steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgTrading_CancelTradeRequest)
}

::google::protobuf::uint8* CMsgTrading_CancelTradeRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgTrading_CancelTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 other_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->other_steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgTrading_CancelTradeRequest)
  return target;
}

size_t CMsgTrading_CancelTradeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgTrading_CancelTradeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 other_steamid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->other_steamid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgTrading_CancelTradeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgTrading_CancelTradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTrading_CancelTradeRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgTrading_CancelTradeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgTrading_CancelTradeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgTrading_CancelTradeRequest)
    MergeFrom(*source);
  }
}

void CMsgTrading_CancelTradeRequest::MergeFrom(const CMsgTrading_CancelTradeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgTrading_CancelTradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_other_steamid()) {
    set_other_steamid(from.other_steamid());
  }
}

void CMsgTrading_CancelTradeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgTrading_CancelTradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTrading_CancelTradeRequest::CopyFrom(const CMsgTrading_CancelTradeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgTrading_CancelTradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTrading_CancelTradeRequest::IsInitialized() const {
  return true;
}

void CMsgTrading_CancelTradeRequest::Swap(CMsgTrading_CancelTradeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTrading_CancelTradeRequest::InternalSwap(CMsgTrading_CancelTradeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(other_steamid_, other->other_steamid_);
}

::google::protobuf::Metadata CMsgTrading_CancelTradeRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgTrading_StartSession::InitAsDefaultInstance() {
}
class CMsgTrading_StartSession::HasBitSetters {
 public:
  static void set_has_other_steamid(CMsgTrading_StartSession* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTrading_StartSession::kOtherSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTrading_StartSession::CMsgTrading_StartSession()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgTrading_StartSession)
}
CMsgTrading_StartSession::CMsgTrading_StartSession(const CMsgTrading_StartSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  other_steamid_ = from.other_steamid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgTrading_StartSession)
}

void CMsgTrading_StartSession::SharedCtor() {
  other_steamid_ = PROTOBUF_ULONGLONG(0);
}

CMsgTrading_StartSession::~CMsgTrading_StartSession() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgTrading_StartSession)
  SharedDtor();
}

void CMsgTrading_StartSession::SharedDtor() {
}

void CMsgTrading_StartSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgTrading_StartSession& CMsgTrading_StartSession::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgTrading_StartSession_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgTrading_StartSession::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgTrading_StartSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  other_steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgTrading_StartSession::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgTrading_StartSession*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 other_steamid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_other_steamid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgTrading_StartSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgTrading_StartSession)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 other_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_other_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &other_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgTrading_StartSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgTrading_StartSession)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgTrading_StartSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgTrading_StartSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 other_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->other_steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgTrading_StartSession)
}

::google::protobuf::uint8* CMsgTrading_StartSession::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgTrading_StartSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 other_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->other_steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgTrading_StartSession)
  return target;
}

size_t CMsgTrading_StartSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgTrading_StartSession)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 other_steamid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->other_steamid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgTrading_StartSession::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgTrading_StartSession)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTrading_StartSession* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgTrading_StartSession>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgTrading_StartSession)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgTrading_StartSession)
    MergeFrom(*source);
  }
}

void CMsgTrading_StartSession::MergeFrom(const CMsgTrading_StartSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgTrading_StartSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_other_steamid()) {
    set_other_steamid(from.other_steamid());
  }
}

void CMsgTrading_StartSession::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgTrading_StartSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTrading_StartSession::CopyFrom(const CMsgTrading_StartSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgTrading_StartSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTrading_StartSession::IsInitialized() const {
  return true;
}

void CMsgTrading_StartSession::Swap(CMsgTrading_StartSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTrading_StartSession::InternalSwap(CMsgTrading_StartSession* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(other_steamid_, other->other_steamid_);
}

::google::protobuf::Metadata CMsgTrading_StartSession::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetCDNAuthToken::InitAsDefaultInstance() {
}
class CMsgClientGetCDNAuthToken::HasBitSetters {
 public:
  static void set_has_depot_id(CMsgClientGetCDNAuthToken* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_host_name(CMsgClientGetCDNAuthToken* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_app_id(CMsgClientGetCDNAuthToken* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetCDNAuthToken::kDepotIdFieldNumber;
const int CMsgClientGetCDNAuthToken::kHostNameFieldNumber;
const int CMsgClientGetCDNAuthToken::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetCDNAuthToken::CMsgClientGetCDNAuthToken()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetCDNAuthToken)
}
CMsgClientGetCDNAuthToken::CMsgClientGetCDNAuthToken(const CMsgClientGetCDNAuthToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host_name()) {
    host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
  }
  ::memcpy(&depot_id_, &from.depot_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&depot_id_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetCDNAuthToken)
}

void CMsgClientGetCDNAuthToken::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientGetCDNAuthToken_steammessages_5fclientserver_5f2_2eproto.base);
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&depot_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&depot_id_)) + sizeof(app_id_));
}

CMsgClientGetCDNAuthToken::~CMsgClientGetCDNAuthToken() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetCDNAuthToken)
  SharedDtor();
}

void CMsgClientGetCDNAuthToken::SharedDtor() {
  host_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetCDNAuthToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientGetCDNAuthToken& CMsgClientGetCDNAuthToken::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientGetCDNAuthToken_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientGetCDNAuthToken::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetCDNAuthToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    host_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&depot_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&depot_id_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientGetCDNAuthToken::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientGetCDNAuthToken*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 depot_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_depot_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string host_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientGetCDNAuthToken.host_name");
        object = msg->mutable_host_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 app_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientGetCDNAuthToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetCDNAuthToken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 depot_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_depot_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string host_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_name().data(), static_cast<int>(this->host_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientGetCDNAuthToken.host_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetCDNAuthToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetCDNAuthToken)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientGetCDNAuthToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetCDNAuthToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 depot_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->depot_id(), output);
  }

  // optional string host_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGetCDNAuthToken.host_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host_name(), output);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetCDNAuthToken)
}

::google::protobuf::uint8* CMsgClientGetCDNAuthToken::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetCDNAuthToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 depot_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->depot_id(), target);
  }

  // optional string host_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGetCDNAuthToken.host_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host_name(), target);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetCDNAuthToken)
  return target;
}

size_t CMsgClientGetCDNAuthToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetCDNAuthToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string host_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host_name());
    }

    // optional uint32 depot_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depot_id());
    }

    // optional uint32 app_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetCDNAuthToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetCDNAuthToken)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetCDNAuthToken* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientGetCDNAuthToken>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetCDNAuthToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetCDNAuthToken)
    MergeFrom(*source);
  }
}

void CMsgClientGetCDNAuthToken::MergeFrom(const CMsgClientGetCDNAuthToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetCDNAuthToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      depot_id_ = from.depot_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetCDNAuthToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetCDNAuthToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetCDNAuthToken::CopyFrom(const CMsgClientGetCDNAuthToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetCDNAuthToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetCDNAuthToken::IsInitialized() const {
  return true;
}

void CMsgClientGetCDNAuthToken::Swap(CMsgClientGetCDNAuthToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetCDNAuthToken::InternalSwap(CMsgClientGetCDNAuthToken* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  host_name_.Swap(&other->host_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(depot_id_, other->depot_id_);
  swap(app_id_, other->app_id_);
}

::google::protobuf::Metadata CMsgClientGetCDNAuthToken::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetDepotDecryptionKey::InitAsDefaultInstance() {
}
class CMsgClientGetDepotDecryptionKey::HasBitSetters {
 public:
  static void set_has_depot_id(CMsgClientGetDepotDecryptionKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_app_id(CMsgClientGetDepotDecryptionKey* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetDepotDecryptionKey::kDepotIdFieldNumber;
const int CMsgClientGetDepotDecryptionKey::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetDepotDecryptionKey::CMsgClientGetDepotDecryptionKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetDepotDecryptionKey)
}
CMsgClientGetDepotDecryptionKey::CMsgClientGetDepotDecryptionKey(const CMsgClientGetDepotDecryptionKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&depot_id_, &from.depot_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&depot_id_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetDepotDecryptionKey)
}

void CMsgClientGetDepotDecryptionKey::SharedCtor() {
  ::memset(&depot_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&depot_id_)) + sizeof(app_id_));
}

CMsgClientGetDepotDecryptionKey::~CMsgClientGetDepotDecryptionKey() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetDepotDecryptionKey)
  SharedDtor();
}

void CMsgClientGetDepotDecryptionKey::SharedDtor() {
}

void CMsgClientGetDepotDecryptionKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientGetDepotDecryptionKey& CMsgClientGetDepotDecryptionKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientGetDepotDecryptionKey_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientGetDepotDecryptionKey::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&depot_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&depot_id_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientGetDepotDecryptionKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientGetDepotDecryptionKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 depot_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_depot_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientGetDepotDecryptionKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 depot_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_depot_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetDepotDecryptionKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetDepotDecryptionKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientGetDepotDecryptionKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 depot_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->depot_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetDepotDecryptionKey)
}

::google::protobuf::uint8* CMsgClientGetDepotDecryptionKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 depot_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->depot_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetDepotDecryptionKey)
  return target;
}

size_t CMsgClientGetDepotDecryptionKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 depot_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depot_id());
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetDepotDecryptionKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetDepotDecryptionKey* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientGetDepotDecryptionKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetDepotDecryptionKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetDepotDecryptionKey)
    MergeFrom(*source);
  }
}

void CMsgClientGetDepotDecryptionKey::MergeFrom(const CMsgClientGetDepotDecryptionKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      depot_id_ = from.depot_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetDepotDecryptionKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetDepotDecryptionKey::CopyFrom(const CMsgClientGetDepotDecryptionKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetDepotDecryptionKey::IsInitialized() const {
  return true;
}

void CMsgClientGetDepotDecryptionKey::Swap(CMsgClientGetDepotDecryptionKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetDepotDecryptionKey::InternalSwap(CMsgClientGetDepotDecryptionKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(depot_id_, other->depot_id_);
  swap(app_id_, other->app_id_);
}

::google::protobuf::Metadata CMsgClientGetDepotDecryptionKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetDepotDecryptionKeyResponse::InitAsDefaultInstance() {
}
class CMsgClientGetDepotDecryptionKeyResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientGetDepotDecryptionKeyResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_depot_id(CMsgClientGetDepotDecryptionKeyResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_depot_encryption_key(CMsgClientGetDepotDecryptionKeyResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetDepotDecryptionKeyResponse::kEresultFieldNumber;
const int CMsgClientGetDepotDecryptionKeyResponse::kDepotIdFieldNumber;
const int CMsgClientGetDepotDecryptionKeyResponse::kDepotEncryptionKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetDepotDecryptionKeyResponse::CMsgClientGetDepotDecryptionKeyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
}
CMsgClientGetDepotDecryptionKeyResponse::CMsgClientGetDepotDecryptionKeyResponse(const CMsgClientGetDepotDecryptionKeyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  depot_encryption_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_depot_encryption_key()) {
    depot_encryption_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.depot_encryption_key_);
  }
  ::memcpy(&depot_id_, &from.depot_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&depot_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
}

void CMsgClientGetDepotDecryptionKeyResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientGetDepotDecryptionKeyResponse_steammessages_5fclientserver_5f2_2eproto.base);
  depot_encryption_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  depot_id_ = 0u;
  eresult_ = 2;
}

CMsgClientGetDepotDecryptionKeyResponse::~CMsgClientGetDepotDecryptionKeyResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  SharedDtor();
}

void CMsgClientGetDepotDecryptionKeyResponse::SharedDtor() {
  depot_encryption_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetDepotDecryptionKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientGetDepotDecryptionKeyResponse& CMsgClientGetDepotDecryptionKeyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientGetDepotDecryptionKeyResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientGetDepotDecryptionKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    depot_encryption_key_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    depot_id_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientGetDepotDecryptionKeyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientGetDepotDecryptionKeyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 depot_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_depot_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes depot_encryption_key = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_depot_encryption_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientGetDepotDecryptionKeyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 depot_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_depot_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes depot_encryption_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_depot_encryption_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientGetDepotDecryptionKeyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 depot_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->depot_id(), output);
  }

  // optional bytes depot_encryption_key = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->depot_encryption_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
}

::google::protobuf::uint8* CMsgClientGetDepotDecryptionKeyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 depot_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->depot_id(), target);
  }

  // optional bytes depot_encryption_key = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->depot_encryption_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  return target;
}

size_t CMsgClientGetDepotDecryptionKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes depot_encryption_key = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->depot_encryption_key());
    }

    // optional uint32 depot_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depot_id());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetDepotDecryptionKeyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetDepotDecryptionKeyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientGetDepotDecryptionKeyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetDepotDecryptionKeyResponse::MergeFrom(const CMsgClientGetDepotDecryptionKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      depot_encryption_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.depot_encryption_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      depot_id_ = from.depot_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetDepotDecryptionKeyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetDepotDecryptionKeyResponse::CopyFrom(const CMsgClientGetDepotDecryptionKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetDepotDecryptionKeyResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetDepotDecryptionKeyResponse::Swap(CMsgClientGetDepotDecryptionKeyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetDepotDecryptionKeyResponse::InternalSwap(CMsgClientGetDepotDecryptionKeyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  depot_encryption_key_.Swap(&other->depot_encryption_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(depot_id_, other->depot_id_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientGetDepotDecryptionKeyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientCheckAppBetaPassword::InitAsDefaultInstance() {
}
class CMsgClientCheckAppBetaPassword::HasBitSetters {
 public:
  static void set_has_app_id(CMsgClientCheckAppBetaPassword* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_betapassword(CMsgClientCheckAppBetaPassword* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCheckAppBetaPassword::kAppIdFieldNumber;
const int CMsgClientCheckAppBetaPassword::kBetapasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCheckAppBetaPassword::CMsgClientCheckAppBetaPassword()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientCheckAppBetaPassword)
}
CMsgClientCheckAppBetaPassword::CMsgClientCheckAppBetaPassword(const CMsgClientCheckAppBetaPassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  betapassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_betapassword()) {
    betapassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betapassword_);
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientCheckAppBetaPassword)
}

void CMsgClientCheckAppBetaPassword::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientCheckAppBetaPassword_steammessages_5fclientserver_5f2_2eproto.base);
  betapassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
}

CMsgClientCheckAppBetaPassword::~CMsgClientCheckAppBetaPassword() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientCheckAppBetaPassword)
  SharedDtor();
}

void CMsgClientCheckAppBetaPassword::SharedDtor() {
  betapassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientCheckAppBetaPassword::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientCheckAppBetaPassword& CMsgClientCheckAppBetaPassword::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientCheckAppBetaPassword_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientCheckAppBetaPassword::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientCheckAppBetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    betapassword_.ClearNonDefaultToEmptyNoArena();
  }
  app_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientCheckAppBetaPassword::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientCheckAppBetaPassword*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string betapassword = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientCheckAppBetaPassword.betapassword");
        object = msg->mutable_betapassword();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientCheckAppBetaPassword::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientCheckAppBetaPassword)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string betapassword = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_betapassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->betapassword().data(), static_cast<int>(this->betapassword().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientCheckAppBetaPassword.betapassword");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientCheckAppBetaPassword)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientCheckAppBetaPassword)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientCheckAppBetaPassword::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientCheckAppBetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional string betapassword = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betapassword().data(), static_cast<int>(this->betapassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckAppBetaPassword.betapassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->betapassword(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientCheckAppBetaPassword)
}

::google::protobuf::uint8* CMsgClientCheckAppBetaPassword::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientCheckAppBetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional string betapassword = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betapassword().data(), static_cast<int>(this->betapassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckAppBetaPassword.betapassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->betapassword(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientCheckAppBetaPassword)
  return target;
}

size_t CMsgClientCheckAppBetaPassword::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientCheckAppBetaPassword)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string betapassword = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->betapassword());
    }

    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientCheckAppBetaPassword::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientCheckAppBetaPassword)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCheckAppBetaPassword* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientCheckAppBetaPassword>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientCheckAppBetaPassword)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientCheckAppBetaPassword)
    MergeFrom(*source);
  }
}

void CMsgClientCheckAppBetaPassword::MergeFrom(const CMsgClientCheckAppBetaPassword& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientCheckAppBetaPassword)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      betapassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betapassword_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientCheckAppBetaPassword::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientCheckAppBetaPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCheckAppBetaPassword::CopyFrom(const CMsgClientCheckAppBetaPassword& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientCheckAppBetaPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCheckAppBetaPassword::IsInitialized() const {
  return true;
}

void CMsgClientCheckAppBetaPassword::Swap(CMsgClientCheckAppBetaPassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCheckAppBetaPassword::InternalSwap(CMsgClientCheckAppBetaPassword* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  betapassword_.Swap(&other->betapassword_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
}

::google::protobuf::Metadata CMsgClientCheckAppBetaPassword::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::InitAsDefaultInstance() {
}
class CMsgClientCheckAppBetaPasswordResponse_BetaPassword::HasBitSetters {
 public:
  static void set_has_betaname(CMsgClientCheckAppBetaPasswordResponse_BetaPassword* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_betapassword(CMsgClientCheckAppBetaPasswordResponse_BetaPassword* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCheckAppBetaPasswordResponse_BetaPassword::kBetanameFieldNumber;
const int CMsgClientCheckAppBetaPasswordResponse_BetaPassword::kBetapasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCheckAppBetaPasswordResponse_BetaPassword::CMsgClientCheckAppBetaPasswordResponse_BetaPassword()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
}
CMsgClientCheckAppBetaPasswordResponse_BetaPassword::CMsgClientCheckAppBetaPasswordResponse_BetaPassword(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  betaname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_betaname()) {
    betaname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betaname_);
  }
  betapassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_betapassword()) {
    betapassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betapassword_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientCheckAppBetaPasswordResponse_BetaPassword_steammessages_5fclientserver_5f2_2eproto.base);
  betaname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  betapassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientCheckAppBetaPasswordResponse_BetaPassword::~CMsgClientCheckAppBetaPasswordResponse_BetaPassword() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  SharedDtor();
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::SharedDtor() {
  betaname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  betapassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& CMsgClientCheckAppBetaPasswordResponse_BetaPassword::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientCheckAppBetaPasswordResponse_BetaPassword_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      betaname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      betapassword_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientCheckAppBetaPasswordResponse_BetaPassword*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string betaname = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname");
        object = msg->mutable_betaname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string betapassword = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword");
        object = msg->mutable_betapassword();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string betaname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_betaname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->betaname().data(), static_cast<int>(this->betaname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string betapassword = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_betapassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->betapassword().data(), static_cast<int>(this->betapassword().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string betaname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betaname().data(), static_cast<int>(this->betaname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->betaname(), output);
  }

  // optional string betapassword = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betapassword().data(), static_cast<int>(this->betapassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->betapassword(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
}

::google::protobuf::uint8* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string betaname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betaname().data(), static_cast<int>(this->betaname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->betaname(), target);
  }

  // optional string betapassword = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betapassword().data(), static_cast<int>(this->betapassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->betapassword(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  return target;
}

size_t CMsgClientCheckAppBetaPasswordResponse_BetaPassword::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string betaname = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->betaname());
    }

    // optional string betapassword = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->betapassword());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCheckAppBetaPasswordResponse_BetaPassword* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientCheckAppBetaPasswordResponse_BetaPassword>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
    MergeFrom(*source);
  }
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::MergeFrom(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      betaname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betaname_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      betapassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betapassword_);
    }
  }
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::CopyFrom(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::IsInitialized() const {
  return true;
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::Swap(CMsgClientCheckAppBetaPasswordResponse_BetaPassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::InternalSwap(CMsgClientCheckAppBetaPasswordResponse_BetaPassword* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  betaname_.Swap(&other->betaname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  betapassword_.Swap(&other->betapassword_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CMsgClientCheckAppBetaPasswordResponse_BetaPassword::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientCheckAppBetaPasswordResponse::InitAsDefaultInstance() {
}
class CMsgClientCheckAppBetaPasswordResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientCheckAppBetaPasswordResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCheckAppBetaPasswordResponse::kEresultFieldNumber;
const int CMsgClientCheckAppBetaPasswordResponse::kBetapasswordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCheckAppBetaPasswordResponse::CMsgClientCheckAppBetaPasswordResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
}
CMsgClientCheckAppBetaPasswordResponse::CMsgClientCheckAppBetaPasswordResponse(const CMsgClientCheckAppBetaPasswordResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      betapasswords_(from.betapasswords_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
}

void CMsgClientCheckAppBetaPasswordResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientCheckAppBetaPasswordResponse_steammessages_5fclientserver_5f2_2eproto.base);
  eresult_ = 2;
}

CMsgClientCheckAppBetaPasswordResponse::~CMsgClientCheckAppBetaPasswordResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  SharedDtor();
}

void CMsgClientCheckAppBetaPasswordResponse::SharedDtor() {
}

void CMsgClientCheckAppBetaPasswordResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientCheckAppBetaPasswordResponse& CMsgClientCheckAppBetaPasswordResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientCheckAppBetaPasswordResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientCheckAppBetaPasswordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  betapasswords_.Clear();
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientCheckAppBetaPasswordResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientCheckAppBetaPasswordResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword::_InternalParse;
          object = msg->add_betapasswords();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientCheckAppBetaPasswordResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_betapasswords()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientCheckAppBetaPasswordResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->betapasswords_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->betapasswords(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
}

::google::protobuf::uint8* CMsgClientCheckAppBetaPasswordResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->betapasswords_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->betapasswords(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  return target;
}

size_t CMsgClientCheckAppBetaPasswordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->betapasswords_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->betapasswords(static_cast<int>(i)));
    }
  }

  // optional int32 eresult = 1 [default = 2];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientCheckAppBetaPasswordResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCheckAppBetaPasswordResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientCheckAppBetaPasswordResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
    MergeFrom(*source);
  }
}

void CMsgClientCheckAppBetaPasswordResponse::MergeFrom(const CMsgClientCheckAppBetaPasswordResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  betapasswords_.MergeFrom(from.betapasswords_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientCheckAppBetaPasswordResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCheckAppBetaPasswordResponse::CopyFrom(const CMsgClientCheckAppBetaPasswordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCheckAppBetaPasswordResponse::IsInitialized() const {
  return true;
}

void CMsgClientCheckAppBetaPasswordResponse::Swap(CMsgClientCheckAppBetaPasswordResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCheckAppBetaPasswordResponse::InternalSwap(CMsgClientCheckAppBetaPasswordResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&betapasswords_)->InternalSwap(CastToBase(&other->betapasswords_));
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientCheckAppBetaPasswordResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUpdateAppJobReport::InitAsDefaultInstance() {
}
class CMsgClientUpdateAppJobReport::HasBitSetters {
 public:
  static void set_has_app_id(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_app_state(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_job_app_error(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_error_details(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_job_duration(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_files_validation_failed(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_job_bytes_downloaded(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_job_bytes_staged(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_bytes_comitted(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00000400u;
  }
  static void set_has_start_app_state(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
  static void set_has_stats_machine_id(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00000800u;
  }
  static void set_has_branch_name(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_total_bytes_downloaded(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00001000u;
  }
  static void set_has_total_bytes_staged(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00002000u;
  }
  static void set_has_total_bytes_restored(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00004000u;
  }
  static void set_has_is_borrowed(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00040000u;
  }
  static void set_has_is_free_weekend(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00080000u;
  }
  static void set_has_total_bytes_legacy(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00008000u;
  }
  static void set_has_total_bytes_patched(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00010000u;
  }
  static void set_has_total_bytes_saved(CMsgClientUpdateAppJobReport* msg) {
    msg->_has_bits_[0] |= 0x00020000u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUpdateAppJobReport::kAppIdFieldNumber;
const int CMsgClientUpdateAppJobReport::kDepotIdsFieldNumber;
const int CMsgClientUpdateAppJobReport::kAppStateFieldNumber;
const int CMsgClientUpdateAppJobReport::kJobAppErrorFieldNumber;
const int CMsgClientUpdateAppJobReport::kErrorDetailsFieldNumber;
const int CMsgClientUpdateAppJobReport::kJobDurationFieldNumber;
const int CMsgClientUpdateAppJobReport::kFilesValidationFailedFieldNumber;
const int CMsgClientUpdateAppJobReport::kJobBytesDownloadedFieldNumber;
const int CMsgClientUpdateAppJobReport::kJobBytesStagedFieldNumber;
const int CMsgClientUpdateAppJobReport::kBytesComittedFieldNumber;
const int CMsgClientUpdateAppJobReport::kStartAppStateFieldNumber;
const int CMsgClientUpdateAppJobReport::kStatsMachineIdFieldNumber;
const int CMsgClientUpdateAppJobReport::kBranchNameFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesDownloadedFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesStagedFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesRestoredFieldNumber;
const int CMsgClientUpdateAppJobReport::kIsBorrowedFieldNumber;
const int CMsgClientUpdateAppJobReport::kIsFreeWeekendFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesLegacyFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesPatchedFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesSavedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUpdateAppJobReport::CMsgClientUpdateAppJobReport()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUpdateAppJobReport)
}
CMsgClientUpdateAppJobReport::CMsgClientUpdateAppJobReport(const CMsgClientUpdateAppJobReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      depot_ids_(from.depot_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_details()) {
    error_details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_details_);
  }
  branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_branch_name()) {
    branch_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_name_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_free_weekend_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(is_free_weekend_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUpdateAppJobReport)
}

void CMsgClientUpdateAppJobReport::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUpdateAppJobReport_steammessages_5fclientserver_5f2_2eproto.base);
  error_details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_free_weekend_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(is_free_weekend_));
}

CMsgClientUpdateAppJobReport::~CMsgClientUpdateAppJobReport() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUpdateAppJobReport)
  SharedDtor();
}

void CMsgClientUpdateAppJobReport::SharedDtor() {
  error_details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUpdateAppJobReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUpdateAppJobReport& CMsgClientUpdateAppJobReport::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUpdateAppJobReport_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUpdateAppJobReport::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUpdateAppJobReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  depot_ids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      error_details_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      branch_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&job_bytes_staged_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(job_bytes_staged_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&files_validation_failed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&total_bytes_legacy_) -
        reinterpret_cast<char*>(&files_validation_failed_)) + sizeof(total_bytes_legacy_));
  }
  if (cached_has_bits & 0x000f0000u) {
    ::memset(&total_bytes_patched_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_free_weekend_) -
        reinterpret_cast<char*>(&total_bytes_patched_)) + sizeof(is_free_weekend_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUpdateAppJobReport::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUpdateAppJobReport*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 depot_ids = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_depot_ids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_depot_ids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional uint32 app_state = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_app_state(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 job_app_error = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_job_app_error(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string error_details = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUpdateAppJobReport.error_details");
        object = msg->mutable_error_details();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 job_duration = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_job_duration(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 files_validation_failed = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_files_validation_failed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 job_bytes_downloaded = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_job_bytes_downloaded(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 job_bytes_staged = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_job_bytes_staged(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 bytes_comitted = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_bytes_comitted(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 start_app_state = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_start_app_state(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 stats_machine_id = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 97) goto handle_unusual;
        msg->set_stats_machine_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional string branch_name = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientUpdateAppJobReport.branch_name");
        object = msg->mutable_branch_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint64 total_bytes_downloaded = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 112) goto handle_unusual;
        msg->set_total_bytes_downloaded(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 total_bytes_staged = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 120) goto handle_unusual;
        msg->set_total_bytes_staged(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 total_bytes_restored = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 128) goto handle_unusual;
        msg->set_total_bytes_restored(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool is_borrowed = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 136) goto handle_unusual;
        msg->set_is_borrowed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool is_free_weekend = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 144) goto handle_unusual;
        msg->set_is_free_weekend(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 total_bytes_legacy = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 152) goto handle_unusual;
        msg->set_total_bytes_legacy(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 total_bytes_patched = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 160) goto handle_unusual;
        msg->set_total_bytes_patched(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 total_bytes_saved = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 168) goto handle_unusual;
        msg->set_total_bytes_saved(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUpdateAppJobReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUpdateAppJobReport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 depot_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_depot_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_depot_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_app_state(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 job_app_error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_job_app_error(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_app_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error_details = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_details()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_details().data(), static_cast<int>(this->error_details().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUpdateAppJobReport.error_details");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 job_duration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_job_duration(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 files_validation_failed = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_files_validation_failed(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &files_validation_failed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 job_bytes_downloaded = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_job_bytes_downloaded(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &job_bytes_downloaded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 job_bytes_staged = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_job_bytes_staged(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &job_bytes_staged_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bytes_comitted = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          HasBitSetters::set_has_bytes_comitted(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_comitted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_app_state = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {
          HasBitSetters::set_has_start_app_state(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_app_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 stats_machine_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (97 & 0xFF)) {
          HasBitSetters::set_has_stats_machine_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &stats_machine_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string branch_name = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_branch_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->branch_name().data(), static_cast<int>(this->branch_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUpdateAppJobReport.branch_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_downloaded = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (112 & 0xFF)) {
          HasBitSetters::set_has_total_bytes_downloaded(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_downloaded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_staged = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (120 & 0xFF)) {
          HasBitSetters::set_has_total_bytes_staged(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_staged_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_restored = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (128 & 0xFF)) {
          HasBitSetters::set_has_total_bytes_restored(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_restored_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_borrowed = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (136 & 0xFF)) {
          HasBitSetters::set_has_is_borrowed(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_borrowed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_free_weekend = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (144 & 0xFF)) {
          HasBitSetters::set_has_is_free_weekend(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_free_weekend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_legacy = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (152 & 0xFF)) {
          HasBitSetters::set_has_total_bytes_legacy(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_legacy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_patched = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (160 & 0xFF)) {
          HasBitSetters::set_has_total_bytes_patched(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_patched_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_saved = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (168 & 0xFF)) {
          HasBitSetters::set_has_total_bytes_saved(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_saved_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUpdateAppJobReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUpdateAppJobReport)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUpdateAppJobReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUpdateAppJobReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // repeated uint32 depot_ids = 2;
  for (int i = 0, n = this->depot_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->depot_ids(i), output);
  }

  // optional uint32 app_state = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->app_state(), output);
  }

  // optional uint32 job_app_error = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->job_app_error(), output);
  }

  // optional string error_details = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_details().data(), static_cast<int>(this->error_details().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateAppJobReport.error_details");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->error_details(), output);
  }

  // optional uint32 job_duration = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->job_duration(), output);
  }

  // optional uint32 files_validation_failed = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->files_validation_failed(), output);
  }

  // optional uint64 job_bytes_downloaded = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->job_bytes_downloaded(), output);
  }

  // optional uint64 job_bytes_staged = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->job_bytes_staged(), output);
  }

  // optional uint64 bytes_comitted = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->bytes_comitted(), output);
  }

  // optional uint32 start_app_state = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->start_app_state(), output);
  }

  // optional fixed64 stats_machine_id = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(12, this->stats_machine_id(), output);
  }

  // optional string branch_name = 13;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->branch_name().data(), static_cast<int>(this->branch_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateAppJobReport.branch_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->branch_name(), output);
  }

  // optional uint64 total_bytes_downloaded = 14;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->total_bytes_downloaded(), output);
  }

  // optional uint64 total_bytes_staged = 15;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->total_bytes_staged(), output);
  }

  // optional uint64 total_bytes_restored = 16;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->total_bytes_restored(), output);
  }

  // optional bool is_borrowed = 17;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->is_borrowed(), output);
  }

  // optional bool is_free_weekend = 18;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->is_free_weekend(), output);
  }

  // optional uint64 total_bytes_legacy = 19;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(19, this->total_bytes_legacy(), output);
  }

  // optional uint64 total_bytes_patched = 20;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(20, this->total_bytes_patched(), output);
  }

  // optional uint64 total_bytes_saved = 21;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(21, this->total_bytes_saved(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUpdateAppJobReport)
}

::google::protobuf::uint8* CMsgClientUpdateAppJobReport::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUpdateAppJobReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // repeated uint32 depot_ids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->depot_ids_, target);

  // optional uint32 app_state = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->app_state(), target);
  }

  // optional uint32 job_app_error = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->job_app_error(), target);
  }

  // optional string error_details = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_details().data(), static_cast<int>(this->error_details().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateAppJobReport.error_details");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->error_details(), target);
  }

  // optional uint32 job_duration = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->job_duration(), target);
  }

  // optional uint32 files_validation_failed = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->files_validation_failed(), target);
  }

  // optional uint64 job_bytes_downloaded = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->job_bytes_downloaded(), target);
  }

  // optional uint64 job_bytes_staged = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->job_bytes_staged(), target);
  }

  // optional uint64 bytes_comitted = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->bytes_comitted(), target);
  }

  // optional uint32 start_app_state = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->start_app_state(), target);
  }

  // optional fixed64 stats_machine_id = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(12, this->stats_machine_id(), target);
  }

  // optional string branch_name = 13;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->branch_name().data(), static_cast<int>(this->branch_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateAppJobReport.branch_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->branch_name(), target);
  }

  // optional uint64 total_bytes_downloaded = 14;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->total_bytes_downloaded(), target);
  }

  // optional uint64 total_bytes_staged = 15;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->total_bytes_staged(), target);
  }

  // optional uint64 total_bytes_restored = 16;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->total_bytes_restored(), target);
  }

  // optional bool is_borrowed = 17;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->is_borrowed(), target);
  }

  // optional bool is_free_weekend = 18;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->is_free_weekend(), target);
  }

  // optional uint64 total_bytes_legacy = 19;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(19, this->total_bytes_legacy(), target);
  }

  // optional uint64 total_bytes_patched = 20;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(20, this->total_bytes_patched(), target);
  }

  // optional uint64 total_bytes_saved = 21;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(21, this->total_bytes_saved(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUpdateAppJobReport)
  return target;
}

size_t CMsgClientUpdateAppJobReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUpdateAppJobReport)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 depot_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->depot_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->depot_ids_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string error_details = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_details());
    }

    // optional string branch_name = 13;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->branch_name());
    }

    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 app_state = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_state());
    }

    // optional uint32 job_app_error = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->job_app_error());
    }

    // optional uint32 job_duration = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->job_duration());
    }

    // optional uint64 job_bytes_downloaded = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->job_bytes_downloaded());
    }

    // optional uint64 job_bytes_staged = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->job_bytes_staged());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional uint32 files_validation_failed = 7;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->files_validation_failed());
    }

    // optional uint32 start_app_state = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_app_state());
    }

    // optional uint64 bytes_comitted = 10;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes_comitted());
    }

    // optional fixed64 stats_machine_id = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 8;
    }

    // optional uint64 total_bytes_downloaded = 14;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_downloaded());
    }

    // optional uint64 total_bytes_staged = 15;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_staged());
    }

    // optional uint64 total_bytes_restored = 16;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_restored());
    }

    // optional uint64 total_bytes_legacy = 19;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_legacy());
    }

  }
  if (cached_has_bits & 0x000f0000u) {
    // optional uint64 total_bytes_patched = 20;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_patched());
    }

    // optional uint64 total_bytes_saved = 21;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_saved());
    }

    // optional bool is_borrowed = 17;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional bool is_free_weekend = 18;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUpdateAppJobReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUpdateAppJobReport)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUpdateAppJobReport* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUpdateAppJobReport>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUpdateAppJobReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUpdateAppJobReport)
    MergeFrom(*source);
  }
}

void CMsgClientUpdateAppJobReport::MergeFrom(const CMsgClientUpdateAppJobReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUpdateAppJobReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  depot_ids_.MergeFrom(from.depot_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      error_details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_details_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      branch_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      app_state_ = from.app_state_;
    }
    if (cached_has_bits & 0x00000010u) {
      job_app_error_ = from.job_app_error_;
    }
    if (cached_has_bits & 0x00000020u) {
      job_duration_ = from.job_duration_;
    }
    if (cached_has_bits & 0x00000040u) {
      job_bytes_downloaded_ = from.job_bytes_downloaded_;
    }
    if (cached_has_bits & 0x00000080u) {
      job_bytes_staged_ = from.job_bytes_staged_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      files_validation_failed_ = from.files_validation_failed_;
    }
    if (cached_has_bits & 0x00000200u) {
      start_app_state_ = from.start_app_state_;
    }
    if (cached_has_bits & 0x00000400u) {
      bytes_comitted_ = from.bytes_comitted_;
    }
    if (cached_has_bits & 0x00000800u) {
      stats_machine_id_ = from.stats_machine_id_;
    }
    if (cached_has_bits & 0x00001000u) {
      total_bytes_downloaded_ = from.total_bytes_downloaded_;
    }
    if (cached_has_bits & 0x00002000u) {
      total_bytes_staged_ = from.total_bytes_staged_;
    }
    if (cached_has_bits & 0x00004000u) {
      total_bytes_restored_ = from.total_bytes_restored_;
    }
    if (cached_has_bits & 0x00008000u) {
      total_bytes_legacy_ = from.total_bytes_legacy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x000f0000u) {
    if (cached_has_bits & 0x00010000u) {
      total_bytes_patched_ = from.total_bytes_patched_;
    }
    if (cached_has_bits & 0x00020000u) {
      total_bytes_saved_ = from.total_bytes_saved_;
    }
    if (cached_has_bits & 0x00040000u) {
      is_borrowed_ = from.is_borrowed_;
    }
    if (cached_has_bits & 0x00080000u) {
      is_free_weekend_ = from.is_free_weekend_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUpdateAppJobReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUpdateAppJobReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUpdateAppJobReport::CopyFrom(const CMsgClientUpdateAppJobReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUpdateAppJobReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUpdateAppJobReport::IsInitialized() const {
  return true;
}

void CMsgClientUpdateAppJobReport::Swap(CMsgClientUpdateAppJobReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUpdateAppJobReport::InternalSwap(CMsgClientUpdateAppJobReport* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  depot_ids_.InternalSwap(&other->depot_ids_);
  error_details_.Swap(&other->error_details_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  branch_name_.Swap(&other->branch_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(app_state_, other->app_state_);
  swap(job_app_error_, other->job_app_error_);
  swap(job_duration_, other->job_duration_);
  swap(job_bytes_downloaded_, other->job_bytes_downloaded_);
  swap(job_bytes_staged_, other->job_bytes_staged_);
  swap(files_validation_failed_, other->files_validation_failed_);
  swap(start_app_state_, other->start_app_state_);
  swap(bytes_comitted_, other->bytes_comitted_);
  swap(stats_machine_id_, other->stats_machine_id_);
  swap(total_bytes_downloaded_, other->total_bytes_downloaded_);
  swap(total_bytes_staged_, other->total_bytes_staged_);
  swap(total_bytes_restored_, other->total_bytes_restored_);
  swap(total_bytes_legacy_, other->total_bytes_legacy_);
  swap(total_bytes_patched_, other->total_bytes_patched_);
  swap(total_bytes_saved_, other->total_bytes_saved_);
  swap(is_borrowed_, other->is_borrowed_);
  swap(is_free_weekend_, other->is_free_weekend_);
}

::google::protobuf::Metadata CMsgClientUpdateAppJobReport::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDPContentStatsReport::InitAsDefaultInstance() {
}
class CMsgClientDPContentStatsReport::HasBitSetters {
 public:
  static void set_has_stats_machine_id(CMsgClientDPContentStatsReport* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_country_code(CMsgClientDPContentStatsReport* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_os_type(CMsgClientDPContentStatsReport* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_language(CMsgClientDPContentStatsReport* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_num_install_folders(CMsgClientDPContentStatsReport* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_num_installed_games(CMsgClientDPContentStatsReport* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_size_installed_games(CMsgClientDPContentStatsReport* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDPContentStatsReport::kStatsMachineIdFieldNumber;
const int CMsgClientDPContentStatsReport::kCountryCodeFieldNumber;
const int CMsgClientDPContentStatsReport::kOsTypeFieldNumber;
const int CMsgClientDPContentStatsReport::kLanguageFieldNumber;
const int CMsgClientDPContentStatsReport::kNumInstallFoldersFieldNumber;
const int CMsgClientDPContentStatsReport::kNumInstalledGamesFieldNumber;
const int CMsgClientDPContentStatsReport::kSizeInstalledGamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDPContentStatsReport::CMsgClientDPContentStatsReport()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientDPContentStatsReport)
}
CMsgClientDPContentStatsReport::CMsgClientDPContentStatsReport(const CMsgClientDPContentStatsReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country_code()) {
    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  ::memcpy(&stats_machine_id_, &from.stats_machine_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_installed_games_) -
    reinterpret_cast<char*>(&stats_machine_id_)) + sizeof(size_installed_games_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientDPContentStatsReport)
}

void CMsgClientDPContentStatsReport::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientDPContentStatsReport_steammessages_5fclientserver_5f2_2eproto.base);
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stats_machine_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_installed_games_) -
      reinterpret_cast<char*>(&stats_machine_id_)) + sizeof(size_installed_games_));
}

CMsgClientDPContentStatsReport::~CMsgClientDPContentStatsReport() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientDPContentStatsReport)
  SharedDtor();
}

void CMsgClientDPContentStatsReport::SharedDtor() {
  country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientDPContentStatsReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientDPContentStatsReport& CMsgClientDPContentStatsReport::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientDPContentStatsReport_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientDPContentStatsReport::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientDPContentStatsReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    country_code_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000007eu) {
    ::memset(&stats_machine_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_installed_games_) -
        reinterpret_cast<char*>(&stats_machine_id_)) + sizeof(size_installed_games_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientDPContentStatsReport::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientDPContentStatsReport*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 stats_machine_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_stats_machine_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional string country_code = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientDPContentStatsReport.country_code");
        object = msg->mutable_country_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional int32 os_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_os_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 language = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_language(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 num_install_folders = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_num_install_folders(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 num_installed_games = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_num_installed_games(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 size_installed_games = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_size_installed_games(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientDPContentStatsReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientDPContentStatsReport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 stats_machine_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_stats_machine_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &stats_machine_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string country_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country_code().data(), static_cast<int>(this->country_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientDPContentStatsReport.country_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 os_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_os_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &os_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_language(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_install_folders = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_num_install_folders(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_install_folders_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_installed_games = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_num_installed_games(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_installed_games_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 size_installed_games = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_size_installed_games(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_installed_games_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientDPContentStatsReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientDPContentStatsReport)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientDPContentStatsReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientDPContentStatsReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 stats_machine_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->stats_machine_id(), output);
  }

  // optional string country_code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientDPContentStatsReport.country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->country_code(), output);
  }

  // optional int32 os_type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->os_type(), output);
  }

  // optional int32 language = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->language(), output);
  }

  // optional uint32 num_install_folders = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->num_install_folders(), output);
  }

  // optional uint32 num_installed_games = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->num_installed_games(), output);
  }

  // optional uint64 size_installed_games = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->size_installed_games(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientDPContentStatsReport)
}

::google::protobuf::uint8* CMsgClientDPContentStatsReport::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientDPContentStatsReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 stats_machine_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->stats_machine_id(), target);
  }

  // optional string country_code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), static_cast<int>(this->country_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientDPContentStatsReport.country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->country_code(), target);
  }

  // optional int32 os_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->os_type(), target);
  }

  // optional int32 language = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->language(), target);
  }

  // optional uint32 num_install_folders = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->num_install_folders(), target);
  }

  // optional uint32 num_installed_games = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->num_installed_games(), target);
  }

  // optional uint64 size_installed_games = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->size_installed_games(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientDPContentStatsReport)
  return target;
}

size_t CMsgClientDPContentStatsReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientDPContentStatsReport)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string country_code = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country_code());
    }

    // optional fixed64 stats_machine_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional int32 os_type = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->os_type());
    }

    // optional int32 language = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

    // optional uint32 num_install_folders = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_install_folders());
    }

    // optional uint32 num_installed_games = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_installed_games());
    }

    // optional uint64 size_installed_games = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->size_installed_games());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDPContentStatsReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientDPContentStatsReport)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDPContentStatsReport* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientDPContentStatsReport>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientDPContentStatsReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientDPContentStatsReport)
    MergeFrom(*source);
  }
}

void CMsgClientDPContentStatsReport::MergeFrom(const CMsgClientDPContentStatsReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientDPContentStatsReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      stats_machine_id_ = from.stats_machine_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      os_type_ = from.os_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      language_ = from.language_;
    }
    if (cached_has_bits & 0x00000010u) {
      num_install_folders_ = from.num_install_folders_;
    }
    if (cached_has_bits & 0x00000020u) {
      num_installed_games_ = from.num_installed_games_;
    }
    if (cached_has_bits & 0x00000040u) {
      size_installed_games_ = from.size_installed_games_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDPContentStatsReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientDPContentStatsReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDPContentStatsReport::CopyFrom(const CMsgClientDPContentStatsReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientDPContentStatsReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDPContentStatsReport::IsInitialized() const {
  return true;
}

void CMsgClientDPContentStatsReport::Swap(CMsgClientDPContentStatsReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDPContentStatsReport::InternalSwap(CMsgClientDPContentStatsReport* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  country_code_.Swap(&other->country_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(stats_machine_id_, other->stats_machine_id_);
  swap(os_type_, other->os_type_);
  swap(language_, other->language_);
  swap(num_install_folders_, other->num_install_folders_);
  swap(num_installed_games_, other->num_installed_games_);
  swap(size_installed_games_, other->size_installed_games_);
}

::google::protobuf::Metadata CMsgClientDPContentStatsReport::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetCDNAuthTokenResponse::InitAsDefaultInstance() {
}
class CMsgClientGetCDNAuthTokenResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientGetCDNAuthTokenResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_token(CMsgClientGetCDNAuthTokenResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_expiration_time(CMsgClientGetCDNAuthTokenResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetCDNAuthTokenResponse::kEresultFieldNumber;
const int CMsgClientGetCDNAuthTokenResponse::kTokenFieldNumber;
const int CMsgClientGetCDNAuthTokenResponse::kExpirationTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetCDNAuthTokenResponse::CMsgClientGetCDNAuthTokenResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetCDNAuthTokenResponse)
}
CMsgClientGetCDNAuthTokenResponse::CMsgClientGetCDNAuthTokenResponse(const CMsgClientGetCDNAuthTokenResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&expiration_time_, &from.expiration_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&expiration_time_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetCDNAuthTokenResponse)
}

void CMsgClientGetCDNAuthTokenResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientGetCDNAuthTokenResponse_steammessages_5fclientserver_5f2_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiration_time_ = 0u;
  eresult_ = 2u;
}

CMsgClientGetCDNAuthTokenResponse::~CMsgClientGetCDNAuthTokenResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  SharedDtor();
}

void CMsgClientGetCDNAuthTokenResponse::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetCDNAuthTokenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientGetCDNAuthTokenResponse& CMsgClientGetCDNAuthTokenResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientGetCDNAuthTokenResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientGetCDNAuthTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    token_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    expiration_time_ = 0u;
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientGetCDNAuthTokenResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientGetCDNAuthTokenResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientGetCDNAuthTokenResponse.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 expiration_time = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_expiration_time(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientGetCDNAuthTokenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientGetCDNAuthTokenResponse.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 expiration_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_expiration_time(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expiration_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientGetCDNAuthTokenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional string token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGetCDNAuthTokenResponse.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  // optional uint32 expiration_time = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->expiration_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetCDNAuthTokenResponse)
}

::google::protobuf::uint8* CMsgClientGetCDNAuthTokenResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional string token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGetCDNAuthTokenResponse.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  // optional uint32 expiration_time = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->expiration_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  return target;
}

size_t CMsgClientGetCDNAuthTokenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string token = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->token());
    }

    // optional uint32 expiration_time = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expiration_time());
    }

    // optional uint32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetCDNAuthTokenResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetCDNAuthTokenResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientGetCDNAuthTokenResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetCDNAuthTokenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetCDNAuthTokenResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetCDNAuthTokenResponse::MergeFrom(const CMsgClientGetCDNAuthTokenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      expiration_time_ = from.expiration_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetCDNAuthTokenResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetCDNAuthTokenResponse::CopyFrom(const CMsgClientGetCDNAuthTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetCDNAuthTokenResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetCDNAuthTokenResponse::Swap(CMsgClientGetCDNAuthTokenResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetCDNAuthTokenResponse::InternalSwap(CMsgClientGetCDNAuthTokenResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(expiration_time_, other->expiration_time_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientGetCDNAuthTokenResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDownloadRateStatistics_StatsInfo::InitAsDefaultInstance() {
}
class CMsgDownloadRateStatistics_StatsInfo::HasBitSetters {
 public:
  static void set_has_source_type(CMsgDownloadRateStatistics_StatsInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_source_id(CMsgDownloadRateStatistics_StatsInfo* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_seconds(CMsgDownloadRateStatistics_StatsInfo* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_bytes(CMsgDownloadRateStatistics_StatsInfo* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_host_name(CMsgDownloadRateStatistics_StatsInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDownloadRateStatistics_StatsInfo::kSourceTypeFieldNumber;
const int CMsgDownloadRateStatistics_StatsInfo::kSourceIdFieldNumber;
const int CMsgDownloadRateStatistics_StatsInfo::kSecondsFieldNumber;
const int CMsgDownloadRateStatistics_StatsInfo::kBytesFieldNumber;
const int CMsgDownloadRateStatistics_StatsInfo::kHostNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDownloadRateStatistics_StatsInfo::CMsgDownloadRateStatistics_StatsInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
}
CMsgDownloadRateStatistics_StatsInfo::CMsgDownloadRateStatistics_StatsInfo(const CMsgDownloadRateStatistics_StatsInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host_name()) {
    host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
  }
  ::memcpy(&source_type_, &from.source_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&seconds_) -
    reinterpret_cast<char*>(&source_type_)) + sizeof(seconds_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
}

void CMsgDownloadRateStatistics_StatsInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDownloadRateStatistics_StatsInfo_steammessages_5fclientserver_5f2_2eproto.base);
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seconds_) -
      reinterpret_cast<char*>(&source_type_)) + sizeof(seconds_));
}

CMsgDownloadRateStatistics_StatsInfo::~CMsgDownloadRateStatistics_StatsInfo() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  SharedDtor();
}

void CMsgDownloadRateStatistics_StatsInfo::SharedDtor() {
  host_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDownloadRateStatistics_StatsInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDownloadRateStatistics_StatsInfo& CMsgDownloadRateStatistics_StatsInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDownloadRateStatistics_StatsInfo_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgDownloadRateStatistics_StatsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    host_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&source_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seconds_) -
        reinterpret_cast<char*>(&source_type_)) + sizeof(seconds_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDownloadRateStatistics_StatsInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDownloadRateStatistics_StatsInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 source_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_source_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 source_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_source_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 seconds = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_seconds(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 bytes = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_bytes(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string host_name = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgDownloadRateStatistics.StatsInfo.host_name");
        object = msg->mutable_host_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDownloadRateStatistics_StatsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 source_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_source_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 source_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_source_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 seconds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_seconds(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_bytes(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string host_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_name().data(), static_cast<int>(this->host_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgDownloadRateStatistics.StatsInfo.host_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDownloadRateStatistics_StatsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 source_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->source_type(), output);
  }

  // optional uint32 source_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->source_id(), output);
  }

  // optional uint32 seconds = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->seconds(), output);
  }

  // optional uint64 bytes = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->bytes(), output);
  }

  // optional string host_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDownloadRateStatistics.StatsInfo.host_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->host_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
}

::google::protobuf::uint8* CMsgDownloadRateStatistics_StatsInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 source_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->source_type(), target);
  }

  // optional uint32 source_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->source_id(), target);
  }

  // optional uint32 seconds = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->seconds(), target);
  }

  // optional uint64 bytes = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->bytes(), target);
  }

  // optional string host_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), static_cast<int>(this->host_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDownloadRateStatistics.StatsInfo.host_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->host_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  return target;
}

size_t CMsgDownloadRateStatistics_StatsInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string host_name = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host_name());
    }

    // optional uint32 source_type = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source_type());
    }

    // optional uint32 source_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source_id());
    }

    // optional uint64 bytes = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes());
    }

    // optional uint32 seconds = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seconds());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDownloadRateStatistics_StatsInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDownloadRateStatistics_StatsInfo* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDownloadRateStatistics_StatsInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
    MergeFrom(*source);
  }
}

void CMsgDownloadRateStatistics_StatsInfo::MergeFrom(const CMsgDownloadRateStatistics_StatsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      source_type_ = from.source_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      source_id_ = from.source_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      bytes_ = from.bytes_;
    }
    if (cached_has_bits & 0x00000010u) {
      seconds_ = from.seconds_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDownloadRateStatistics_StatsInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDownloadRateStatistics_StatsInfo::CopyFrom(const CMsgDownloadRateStatistics_StatsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDownloadRateStatistics_StatsInfo::IsInitialized() const {
  return true;
}

void CMsgDownloadRateStatistics_StatsInfo::Swap(CMsgDownloadRateStatistics_StatsInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDownloadRateStatistics_StatsInfo::InternalSwap(CMsgDownloadRateStatistics_StatsInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  host_name_.Swap(&other->host_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(source_type_, other->source_type_);
  swap(source_id_, other->source_id_);
  swap(bytes_, other->bytes_);
  swap(seconds_, other->seconds_);
}

::google::protobuf::Metadata CMsgDownloadRateStatistics_StatsInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDownloadRateStatistics::InitAsDefaultInstance() {
}
class CMsgDownloadRateStatistics::HasBitSetters {
 public:
  static void set_has_cell_id(CMsgDownloadRateStatistics* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDownloadRateStatistics::kCellIdFieldNumber;
const int CMsgDownloadRateStatistics::kStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDownloadRateStatistics::CMsgDownloadRateStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgDownloadRateStatistics)
}
CMsgDownloadRateStatistics::CMsgDownloadRateStatistics(const CMsgDownloadRateStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      stats_(from.stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cell_id_ = from.cell_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgDownloadRateStatistics)
}

void CMsgDownloadRateStatistics::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDownloadRateStatistics_steammessages_5fclientserver_5f2_2eproto.base);
  cell_id_ = 0u;
}

CMsgDownloadRateStatistics::~CMsgDownloadRateStatistics() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgDownloadRateStatistics)
  SharedDtor();
}

void CMsgDownloadRateStatistics::SharedDtor() {
}

void CMsgDownloadRateStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDownloadRateStatistics& CMsgDownloadRateStatistics::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDownloadRateStatistics_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgDownloadRateStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgDownloadRateStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  cell_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDownloadRateStatistics::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDownloadRateStatistics*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 cell_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_cell_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgDownloadRateStatistics.StatsInfo stats = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgDownloadRateStatistics_StatsInfo::_InternalParse;
          object = msg->add_stats();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDownloadRateStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgDownloadRateStatistics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 cell_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_cell_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cell_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgDownloadRateStatistics.StatsInfo stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgDownloadRateStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgDownloadRateStatistics)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDownloadRateStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgDownloadRateStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 cell_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cell_id(), output);
  }

  // repeated .proto.steam.CMsgDownloadRateStatistics.StatsInfo stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->stats(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgDownloadRateStatistics)
}

::google::protobuf::uint8* CMsgDownloadRateStatistics::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgDownloadRateStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 cell_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cell_id(), target);
  }

  // repeated .proto.steam.CMsgDownloadRateStatistics.StatsInfo stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->stats(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgDownloadRateStatistics)
  return target;
}

size_t CMsgDownloadRateStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgDownloadRateStatistics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgDownloadRateStatistics.StatsInfo stats = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stats(static_cast<int>(i)));
    }
  }

  // optional uint32 cell_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cell_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDownloadRateStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgDownloadRateStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDownloadRateStatistics* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDownloadRateStatistics>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgDownloadRateStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgDownloadRateStatistics)
    MergeFrom(*source);
  }
}

void CMsgDownloadRateStatistics::MergeFrom(const CMsgDownloadRateStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgDownloadRateStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
  if (from.has_cell_id()) {
    set_cell_id(from.cell_id());
  }
}

void CMsgDownloadRateStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgDownloadRateStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDownloadRateStatistics::CopyFrom(const CMsgDownloadRateStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgDownloadRateStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDownloadRateStatistics::IsInitialized() const {
  return true;
}

void CMsgDownloadRateStatistics::Swap(CMsgDownloadRateStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDownloadRateStatistics::InternalSwap(CMsgDownloadRateStatistics* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&stats_)->InternalSwap(CastToBase(&other->stats_));
  swap(cell_id_, other->cell_id_);
}

::google::protobuf::Metadata CMsgDownloadRateStatistics::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestAccountData::InitAsDefaultInstance() {
}
class CMsgClientRequestAccountData::HasBitSetters {
 public:
  static void set_has_account_or_email(CMsgClientRequestAccountData* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_action(CMsgClientRequestAccountData* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestAccountData::kAccountOrEmailFieldNumber;
const int CMsgClientRequestAccountData::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestAccountData::CMsgClientRequestAccountData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestAccountData)
}
CMsgClientRequestAccountData::CMsgClientRequestAccountData(const CMsgClientRequestAccountData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_or_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_or_email()) {
    account_or_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_or_email_);
  }
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestAccountData)
}

void CMsgClientRequestAccountData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientRequestAccountData_steammessages_5fclientserver_5f2_2eproto.base);
  account_or_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_ = 0u;
}

CMsgClientRequestAccountData::~CMsgClientRequestAccountData() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestAccountData)
  SharedDtor();
}

void CMsgClientRequestAccountData::SharedDtor() {
  account_or_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRequestAccountData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRequestAccountData& CMsgClientRequestAccountData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRequestAccountData_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRequestAccountData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestAccountData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    account_or_email_.ClearNonDefaultToEmptyNoArena();
  }
  action_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRequestAccountData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRequestAccountData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string account_or_email = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientRequestAccountData.account_or_email");
        object = msg->mutable_account_or_email();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 action = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_action(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRequestAccountData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestAccountData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_or_email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_or_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_or_email().data(), static_cast<int>(this->account_or_email().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestAccountData.account_or_email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 action = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_action(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestAccountData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestAccountData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRequestAccountData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestAccountData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account_or_email = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_or_email().data(), static_cast<int>(this->account_or_email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountData.account_or_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_or_email(), output);
  }

  // optional uint32 action = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestAccountData)
}

::google::protobuf::uint8* CMsgClientRequestAccountData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestAccountData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account_or_email = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_or_email().data(), static_cast<int>(this->account_or_email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountData.account_or_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_or_email(), target);
  }

  // optional uint32 action = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestAccountData)
  return target;
}

size_t CMsgClientRequestAccountData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestAccountData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string account_or_email = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_or_email());
    }

    // optional uint32 action = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->action());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestAccountData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestAccountData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestAccountData* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRequestAccountData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestAccountData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestAccountData)
    MergeFrom(*source);
  }
}

void CMsgClientRequestAccountData::MergeFrom(const CMsgClientRequestAccountData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestAccountData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      account_or_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_or_email_);
    }
    if (cached_has_bits & 0x00000002u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRequestAccountData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestAccountData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestAccountData::CopyFrom(const CMsgClientRequestAccountData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestAccountData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestAccountData::IsInitialized() const {
  return true;
}

void CMsgClientRequestAccountData::Swap(CMsgClientRequestAccountData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestAccountData::InternalSwap(CMsgClientRequestAccountData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  account_or_email_.Swap(&other->account_or_email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(action_, other->action_);
}

::google::protobuf::Metadata CMsgClientRequestAccountData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestAccountDataResponse::InitAsDefaultInstance() {
}
class CMsgClientRequestAccountDataResponse::HasBitSetters {
 public:
  static void set_has_action(CMsgClientRequestAccountDataResponse* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_eresult(CMsgClientRequestAccountDataResponse* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_account_name(CMsgClientRequestAccountDataResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ct_matches(CMsgClientRequestAccountDataResponse* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_account_name_suggestion1(CMsgClientRequestAccountDataResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_account_name_suggestion2(CMsgClientRequestAccountDataResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_account_name_suggestion3(CMsgClientRequestAccountDataResponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestAccountDataResponse::kActionFieldNumber;
const int CMsgClientRequestAccountDataResponse::kEresultFieldNumber;
const int CMsgClientRequestAccountDataResponse::kAccountNameFieldNumber;
const int CMsgClientRequestAccountDataResponse::kCtMatchesFieldNumber;
const int CMsgClientRequestAccountDataResponse::kAccountNameSuggestion1FieldNumber;
const int CMsgClientRequestAccountDataResponse::kAccountNameSuggestion2FieldNumber;
const int CMsgClientRequestAccountDataResponse::kAccountNameSuggestion3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestAccountDataResponse::CMsgClientRequestAccountDataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestAccountDataResponse)
}
CMsgClientRequestAccountDataResponse::CMsgClientRequestAccountDataResponse(const CMsgClientRequestAccountDataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name()) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  account_name_suggestion1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name_suggestion1()) {
    account_name_suggestion1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion1_);
  }
  account_name_suggestion2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name_suggestion2()) {
    account_name_suggestion2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion2_);
  }
  account_name_suggestion3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name_suggestion3()) {
    account_name_suggestion3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion3_);
  }
  ::memcpy(&action_, &from.action_,
    static_cast<size_t>(reinterpret_cast<char*>(&ct_matches_) -
    reinterpret_cast<char*>(&action_)) + sizeof(ct_matches_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestAccountDataResponse)
}

void CMsgClientRequestAccountDataResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientRequestAccountDataResponse_steammessages_5fclientserver_5f2_2eproto.base);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ct_matches_) -
      reinterpret_cast<char*>(&action_)) + sizeof(ct_matches_));
}

CMsgClientRequestAccountDataResponse::~CMsgClientRequestAccountDataResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestAccountDataResponse)
  SharedDtor();
}

void CMsgClientRequestAccountDataResponse::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRequestAccountDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRequestAccountDataResponse& CMsgClientRequestAccountDataResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRequestAccountDataResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRequestAccountDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestAccountDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      account_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      account_name_suggestion1_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      account_name_suggestion2_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      account_name_suggestion3_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000070u) {
    ::memset(&action_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ct_matches_) -
        reinterpret_cast<char*>(&action_)) + sizeof(ct_matches_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRequestAccountDataResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRequestAccountDataResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 action = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_action(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 eresult = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string account_name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientRequestAccountDataResponse.account_name");
        object = msg->mutable_account_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 ct_matches = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_ct_matches(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string account_name_suggestion1 = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion1");
        object = msg->mutable_account_name_suggestion1();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string account_name_suggestion2 = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion2");
        object = msg->mutable_account_name_suggestion2();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string account_name_suggestion3 = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion3");
        object = msg->mutable_account_name_suggestion3();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRequestAccountDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestAccountDataResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_action(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name().data(), static_cast<int>(this->account_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestAccountDataResponse.account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ct_matches = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_ct_matches(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ct_matches_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name_suggestion1 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name_suggestion1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name_suggestion1().data(), static_cast<int>(this->account_name_suggestion1().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name_suggestion2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name_suggestion2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name_suggestion2().data(), static_cast<int>(this->account_name_suggestion2().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name_suggestion3 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name_suggestion3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name_suggestion3().data(), static_cast<int>(this->account_name_suggestion3().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion3");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestAccountDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestAccountDataResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRequestAccountDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestAccountDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 action = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->action(), output);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult(), output);
  }

  // optional string account_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account_name(), output);
  }

  // optional uint32 ct_matches = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ct_matches(), output);
  }

  // optional string account_name_suggestion1 = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion1().data(), static_cast<int>(this->account_name_suggestion1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->account_name_suggestion1(), output);
  }

  // optional string account_name_suggestion2 = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion2().data(), static_cast<int>(this->account_name_suggestion2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->account_name_suggestion2(), output);
  }

  // optional string account_name_suggestion3 = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion3().data(), static_cast<int>(this->account_name_suggestion3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->account_name_suggestion3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestAccountDataResponse)
}

::google::protobuf::uint8* CMsgClientRequestAccountDataResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestAccountDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 action = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->action(), target);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult(), target);
  }

  // optional string account_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account_name(), target);
  }

  // optional uint32 ct_matches = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ct_matches(), target);
  }

  // optional string account_name_suggestion1 = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion1().data(), static_cast<int>(this->account_name_suggestion1().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->account_name_suggestion1(), target);
  }

  // optional string account_name_suggestion2 = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion2().data(), static_cast<int>(this->account_name_suggestion2().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->account_name_suggestion2(), target);
  }

  // optional string account_name_suggestion3 = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion3().data(), static_cast<int>(this->account_name_suggestion3().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->account_name_suggestion3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestAccountDataResponse)
  return target;
}

size_t CMsgClientRequestAccountDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestAccountDataResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string account_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

    // optional string account_name_suggestion1 = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name_suggestion1());
    }

    // optional string account_name_suggestion2 = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name_suggestion2());
    }

    // optional string account_name_suggestion3 = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name_suggestion3());
    }

    // optional uint32 action = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->action());
    }

    // optional uint32 eresult = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional uint32 ct_matches = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ct_matches());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestAccountDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestAccountDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestAccountDataResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRequestAccountDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestAccountDataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestAccountDataResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRequestAccountDataResponse::MergeFrom(const CMsgClientRequestAccountDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestAccountDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      account_name_suggestion1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion1_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      account_name_suggestion2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion2_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      account_name_suggestion3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion3_);
    }
    if (cached_has_bits & 0x00000010u) {
      action_ = from.action_;
    }
    if (cached_has_bits & 0x00000020u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000040u) {
      ct_matches_ = from.ct_matches_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRequestAccountDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestAccountDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestAccountDataResponse::CopyFrom(const CMsgClientRequestAccountDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestAccountDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestAccountDataResponse::IsInitialized() const {
  return true;
}

void CMsgClientRequestAccountDataResponse::Swap(CMsgClientRequestAccountDataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestAccountDataResponse::InternalSwap(CMsgClientRequestAccountDataResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  account_name_.Swap(&other->account_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_name_suggestion1_.Swap(&other->account_name_suggestion1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_name_suggestion2_.Swap(&other->account_name_suggestion2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_name_suggestion3_.Swap(&other->account_name_suggestion3_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(action_, other->action_);
  swap(eresult_, other->eresult_);
  swap(ct_matches_, other->ct_matches_);
}

::google::protobuf::Metadata CMsgClientRequestAccountDataResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUGSGetGlobalStats::InitAsDefaultInstance() {
}
class CMsgClientUGSGetGlobalStats::HasBitSetters {
 public:
  static void set_has_gameid(CMsgClientUGSGetGlobalStats* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_history_days_requested(CMsgClientUGSGetGlobalStats* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_time_last_requested(CMsgClientUGSGetGlobalStats* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_first_day_cached(CMsgClientUGSGetGlobalStats* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_days_cached(CMsgClientUGSGetGlobalStats* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUGSGetGlobalStats::kGameidFieldNumber;
const int CMsgClientUGSGetGlobalStats::kHistoryDaysRequestedFieldNumber;
const int CMsgClientUGSGetGlobalStats::kTimeLastRequestedFieldNumber;
const int CMsgClientUGSGetGlobalStats::kFirstDayCachedFieldNumber;
const int CMsgClientUGSGetGlobalStats::kDaysCachedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUGSGetGlobalStats::CMsgClientUGSGetGlobalStats()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUGSGetGlobalStats)
}
CMsgClientUGSGetGlobalStats::CMsgClientUGSGetGlobalStats(const CMsgClientUGSGetGlobalStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gameid_, &from.gameid_,
    static_cast<size_t>(reinterpret_cast<char*>(&days_cached_) -
    reinterpret_cast<char*>(&gameid_)) + sizeof(days_cached_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUGSGetGlobalStats)
}

void CMsgClientUGSGetGlobalStats::SharedCtor() {
  ::memset(&gameid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&days_cached_) -
      reinterpret_cast<char*>(&gameid_)) + sizeof(days_cached_));
}

CMsgClientUGSGetGlobalStats::~CMsgClientUGSGetGlobalStats() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUGSGetGlobalStats)
  SharedDtor();
}

void CMsgClientUGSGetGlobalStats::SharedDtor() {
}

void CMsgClientUGSGetGlobalStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUGSGetGlobalStats& CMsgClientUGSGetGlobalStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUGSGetGlobalStats_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUGSGetGlobalStats::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUGSGetGlobalStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&gameid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&days_cached_) -
        reinterpret_cast<char*>(&gameid_)) + sizeof(days_cached_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUGSGetGlobalStats::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUGSGetGlobalStats*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 gameid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_gameid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 history_days_requested = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_history_days_requested(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed32 time_last_requested = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        msg->set_time_last_requested(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      // optional uint32 first_day_cached = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_first_day_cached(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 days_cached = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_days_cached(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUGSGetGlobalStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUGSGetGlobalStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 gameid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_gameid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 history_days_requested = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_history_days_requested(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &history_days_requested_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 time_last_requested = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {
          HasBitSetters::set_has_time_last_requested(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &time_last_requested_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 first_day_cached = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_first_day_cached(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &first_day_cached_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 days_cached = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_days_cached(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &days_cached_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUGSGetGlobalStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUGSGetGlobalStats)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUGSGetGlobalStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUGSGetGlobalStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 gameid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gameid(), output);
  }

  // optional uint32 history_days_requested = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->history_days_requested(), output);
  }

  // optional fixed32 time_last_requested = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->time_last_requested(), output);
  }

  // optional uint32 first_day_cached = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->first_day_cached(), output);
  }

  // optional uint32 days_cached = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->days_cached(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUGSGetGlobalStats)
}

::google::protobuf::uint8* CMsgClientUGSGetGlobalStats::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUGSGetGlobalStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 gameid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gameid(), target);
  }

  // optional uint32 history_days_requested = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->history_days_requested(), target);
  }

  // optional fixed32 time_last_requested = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->time_last_requested(), target);
  }

  // optional uint32 first_day_cached = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->first_day_cached(), target);
  }

  // optional uint32 days_cached = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->days_cached(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUGSGetGlobalStats)
  return target;
}

size_t CMsgClientUGSGetGlobalStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUGSGetGlobalStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint64 gameid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gameid());
    }

    // optional uint32 history_days_requested = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->history_days_requested());
    }

    // optional fixed32 time_last_requested = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional uint32 first_day_cached = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->first_day_cached());
    }

    // optional uint32 days_cached = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->days_cached());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUGSGetGlobalStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStats)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUGSGetGlobalStats* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUGSGetGlobalStats>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUGSGetGlobalStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUGSGetGlobalStats)
    MergeFrom(*source);
  }
}

void CMsgClientUGSGetGlobalStats::MergeFrom(const CMsgClientUGSGetGlobalStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      gameid_ = from.gameid_;
    }
    if (cached_has_bits & 0x00000002u) {
      history_days_requested_ = from.history_days_requested_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_last_requested_ = from.time_last_requested_;
    }
    if (cached_has_bits & 0x00000008u) {
      first_day_cached_ = from.first_day_cached_;
    }
    if (cached_has_bits & 0x00000010u) {
      days_cached_ = from.days_cached_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUGSGetGlobalStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUGSGetGlobalStats::CopyFrom(const CMsgClientUGSGetGlobalStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUGSGetGlobalStats::IsInitialized() const {
  return true;
}

void CMsgClientUGSGetGlobalStats::Swap(CMsgClientUGSGetGlobalStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUGSGetGlobalStats::InternalSwap(CMsgClientUGSGetGlobalStats* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(gameid_, other->gameid_);
  swap(history_days_requested_, other->history_days_requested_);
  swap(time_last_requested_, other->time_last_requested_);
  swap(first_day_cached_, other->first_day_cached_);
  swap(days_cached_, other->days_cached_);
}

::google::protobuf::Metadata CMsgClientUGSGetGlobalStats::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::InitAsDefaultInstance() {
}
class CMsgClientUGSGetGlobalStatsResponse_Day_Stat::HasBitSetters {
 public:
  static void set_has_stat_id(CMsgClientUGSGetGlobalStatsResponse_Day_Stat* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_data(CMsgClientUGSGetGlobalStatsResponse_Day_Stat* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUGSGetGlobalStatsResponse_Day_Stat::kStatIdFieldNumber;
const int CMsgClientUGSGetGlobalStatsResponse_Day_Stat::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUGSGetGlobalStatsResponse_Day_Stat::CMsgClientUGSGetGlobalStatsResponse_Day_Stat()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
}
CMsgClientUGSGetGlobalStatsResponse_Day_Stat::CMsgClientUGSGetGlobalStatsResponse_Day_Stat(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&data_, &from.data_,
    static_cast<size_t>(reinterpret_cast<char*>(&stat_id_) -
    reinterpret_cast<char*>(&data_)) + sizeof(stat_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::SharedCtor() {
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stat_id_) -
      reinterpret_cast<char*>(&data_)) + sizeof(stat_id_));
}

CMsgClientUGSGetGlobalStatsResponse_Day_Stat::~CMsgClientUGSGetGlobalStatsResponse_Day_Stat() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  SharedDtor();
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::SharedDtor() {
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& CMsgClientUGSGetGlobalStatsResponse_Day_Stat::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_Stat_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&data_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stat_id_) -
        reinterpret_cast<char*>(&data_)) + sizeof(stat_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUGSGetGlobalStatsResponse_Day_Stat::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUGSGetGlobalStatsResponse_Day_Stat*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 stat_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_stat_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int64 data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_data(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUGSGetGlobalStatsResponse_Day_Stat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 stat_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_stat_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stat_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_data(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 stat_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stat_id(), output);
  }

  // optional int64 data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
}

::google::protobuf::uint8* CMsgClientUGSGetGlobalStatsResponse_Day_Stat::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 stat_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stat_id(), target);
  }

  // optional int64 data = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  return target;
}

size_t CMsgClientUGSGetGlobalStatsResponse_Day_Stat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->data());
    }

    // optional int32 stat_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stat_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUGSGetGlobalStatsResponse_Day_Stat* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUGSGetGlobalStatsResponse_Day_Stat>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
    MergeFrom(*source);
  }
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::MergeFrom(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      data_ = from.data_;
    }
    if (cached_has_bits & 0x00000002u) {
      stat_id_ = from.stat_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::CopyFrom(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUGSGetGlobalStatsResponse_Day_Stat::IsInitialized() const {
  return true;
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::Swap(CMsgClientUGSGetGlobalStatsResponse_Day_Stat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::InternalSwap(CMsgClientUGSGetGlobalStatsResponse_Day_Stat* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(data_, other->data_);
  swap(stat_id_, other->stat_id_);
}

::google::protobuf::Metadata CMsgClientUGSGetGlobalStatsResponse_Day_Stat::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUGSGetGlobalStatsResponse_Day::InitAsDefaultInstance() {
}
class CMsgClientUGSGetGlobalStatsResponse_Day::HasBitSetters {
 public:
  static void set_has_day_id(CMsgClientUGSGetGlobalStatsResponse_Day* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUGSGetGlobalStatsResponse_Day::kDayIdFieldNumber;
const int CMsgClientUGSGetGlobalStatsResponse_Day::kStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUGSGetGlobalStatsResponse_Day::CMsgClientUGSGetGlobalStatsResponse_Day()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
}
CMsgClientUGSGetGlobalStatsResponse_Day::CMsgClientUGSGetGlobalStatsResponse_Day(const CMsgClientUGSGetGlobalStatsResponse_Day& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      stats_(from.stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  day_id_ = from.day_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
}

void CMsgClientUGSGetGlobalStatsResponse_Day::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_steammessages_5fclientserver_5f2_2eproto.base);
  day_id_ = 0u;
}

CMsgClientUGSGetGlobalStatsResponse_Day::~CMsgClientUGSGetGlobalStatsResponse_Day() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  SharedDtor();
}

void CMsgClientUGSGetGlobalStatsResponse_Day::SharedDtor() {
}

void CMsgClientUGSGetGlobalStatsResponse_Day::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUGSGetGlobalStatsResponse_Day& CMsgClientUGSGetGlobalStatsResponse_Day::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUGSGetGlobalStatsResponse_Day_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUGSGetGlobalStatsResponse_Day::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  day_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUGSGetGlobalStatsResponse_Day::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUGSGetGlobalStatsResponse_Day*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 day_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_day_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat::_InternalParse;
          object = msg->add_stats();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUGSGetGlobalStatsResponse_Day::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 day_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_day_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &day_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUGSGetGlobalStatsResponse_Day::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 day_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->day_id(), output);
  }

  // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->stats(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
}

::google::protobuf::uint8* CMsgClientUGSGetGlobalStatsResponse_Day::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 day_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->day_id(), target);
  }

  // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->stats(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  return target;
}

size_t CMsgClientUGSGetGlobalStatsResponse_Day::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stats(static_cast<int>(i)));
    }
  }

  // optional uint32 day_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->day_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUGSGetGlobalStatsResponse_Day::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUGSGetGlobalStatsResponse_Day* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUGSGetGlobalStatsResponse_Day>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
    MergeFrom(*source);
  }
}

void CMsgClientUGSGetGlobalStatsResponse_Day::MergeFrom(const CMsgClientUGSGetGlobalStatsResponse_Day& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
  if (from.has_day_id()) {
    set_day_id(from.day_id());
  }
}

void CMsgClientUGSGetGlobalStatsResponse_Day::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUGSGetGlobalStatsResponse_Day::CopyFrom(const CMsgClientUGSGetGlobalStatsResponse_Day& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUGSGetGlobalStatsResponse_Day::IsInitialized() const {
  return true;
}

void CMsgClientUGSGetGlobalStatsResponse_Day::Swap(CMsgClientUGSGetGlobalStatsResponse_Day* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUGSGetGlobalStatsResponse_Day::InternalSwap(CMsgClientUGSGetGlobalStatsResponse_Day* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&stats_)->InternalSwap(CastToBase(&other->stats_));
  swap(day_id_, other->day_id_);
}

::google::protobuf::Metadata CMsgClientUGSGetGlobalStatsResponse_Day::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUGSGetGlobalStatsResponse::InitAsDefaultInstance() {
}
class CMsgClientUGSGetGlobalStatsResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientUGSGetGlobalStatsResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_timestamp(CMsgClientUGSGetGlobalStatsResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_day_current(CMsgClientUGSGetGlobalStatsResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUGSGetGlobalStatsResponse::kEresultFieldNumber;
const int CMsgClientUGSGetGlobalStatsResponse::kTimestampFieldNumber;
const int CMsgClientUGSGetGlobalStatsResponse::kDayCurrentFieldNumber;
const int CMsgClientUGSGetGlobalStatsResponse::kDaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUGSGetGlobalStatsResponse::CMsgClientUGSGetGlobalStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
}
CMsgClientUGSGetGlobalStatsResponse::CMsgClientUGSGetGlobalStatsResponse(const CMsgClientUGSGetGlobalStatsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      days_(from.days_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
}

void CMsgClientUGSGetGlobalStatsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUGSGetGlobalStatsResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&day_current_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(day_current_));
  eresult_ = 2;
}

CMsgClientUGSGetGlobalStatsResponse::~CMsgClientUGSGetGlobalStatsResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  SharedDtor();
}

void CMsgClientUGSGetGlobalStatsResponse::SharedDtor() {
}

void CMsgClientUGSGetGlobalStatsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUGSGetGlobalStatsResponse& CMsgClientUGSGetGlobalStatsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUGSGetGlobalStatsResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUGSGetGlobalStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  days_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&day_current_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(day_current_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUGSGetGlobalStatsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUGSGetGlobalStatsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed32 timestamp = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_timestamp(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      // optional int32 day_current = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_day_current(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day::_InternalParse;
          object = msg->add_days();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUGSGetGlobalStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {
          HasBitSetters::set_has_timestamp(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 day_current = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_day_current(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_days()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUGSGetGlobalStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional fixed32 timestamp = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->timestamp(), output);
  }

  // optional int32 day_current = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->day_current(), output);
  }

  // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->days_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->days(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
}

::google::protobuf::uint8* CMsgClientUGSGetGlobalStatsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional fixed32 timestamp = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->timestamp(), target);
  }

  // optional int32 day_current = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->day_current(), target);
  }

  // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->days_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->days(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  return target;
}

size_t CMsgClientUGSGetGlobalStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->days_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->days(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional fixed32 timestamp = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional int32 day_current = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->day_current());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUGSGetGlobalStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUGSGetGlobalStatsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUGSGetGlobalStatsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUGSGetGlobalStatsResponse::MergeFrom(const CMsgClientUGSGetGlobalStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  days_.MergeFrom(from.days_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000002u) {
      day_current_ = from.day_current_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUGSGetGlobalStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUGSGetGlobalStatsResponse::CopyFrom(const CMsgClientUGSGetGlobalStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUGSGetGlobalStatsResponse::IsInitialized() const {
  return true;
}

void CMsgClientUGSGetGlobalStatsResponse::Swap(CMsgClientUGSGetGlobalStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUGSGetGlobalStatsResponse::InternalSwap(CMsgClientUGSGetGlobalStatsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&days_)->InternalSwap(CastToBase(&other->days_));
  swap(timestamp_, other->timestamp_);
  swap(day_current_, other->day_current_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientUGSGetGlobalStatsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGameServerData_Player::InitAsDefaultInstance() {
}
class CMsgGameServerData_Player::HasBitSetters {
 public:
  static void set_has_steam_id(CMsgGameServerData_Player* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerData_Player::kSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerData_Player::CMsgGameServerData_Player()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGameServerData.Player)
}
CMsgGameServerData_Player::CMsgGameServerData_Player(const CMsgGameServerData_Player& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_ = from.steam_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGameServerData.Player)
}

void CMsgGameServerData_Player::SharedCtor() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgGameServerData_Player::~CMsgGameServerData_Player() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGameServerData.Player)
  SharedDtor();
}

void CMsgGameServerData_Player::SharedDtor() {
}

void CMsgGameServerData_Player::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGameServerData_Player& CMsgGameServerData_Player::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGameServerData_Player_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgGameServerData_Player::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGameServerData.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGameServerData_Player::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGameServerData_Player*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_steam_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGameServerData_Player::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGameServerData.Player)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_steam_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGameServerData.Player)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGameServerData.Player)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGameServerData_Player::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGameServerData.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGameServerData.Player)
}

::google::protobuf::uint8* CMsgGameServerData_Player::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGameServerData.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGameServerData.Player)
  return target;
}

size_t CMsgGameServerData_Player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGameServerData.Player)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 steam_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGameServerData_Player::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGameServerData.Player)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerData_Player* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGameServerData_Player>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGameServerData.Player)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGameServerData.Player)
    MergeFrom(*source);
  }
}

void CMsgGameServerData_Player::MergeFrom(const CMsgGameServerData_Player& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGameServerData.Player)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id()) {
    set_steam_id(from.steam_id());
  }
}

void CMsgGameServerData_Player::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGameServerData.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerData_Player::CopyFrom(const CMsgGameServerData_Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGameServerData.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerData_Player::IsInitialized() const {
  return true;
}

void CMsgGameServerData_Player::Swap(CMsgGameServerData_Player* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerData_Player::InternalSwap(CMsgGameServerData_Player* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(steam_id_, other->steam_id_);
}

::google::protobuf::Metadata CMsgGameServerData_Player::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGameServerData::InitAsDefaultInstance() {
}
class CMsgGameServerData::HasBitSetters {
 public:
  static void set_has_steam_id_gs(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
  static void set_has_ip(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00000400u;
  }
  static void set_has_query_port(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00000800u;
  }
  static void set_has_game_port(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00001000u;
  }
  static void set_has_sourcetv_port(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00002000u;
  }
  static void set_has_name(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_app_id(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00004000u;
  }
  static void set_has_gamedir(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_version(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_product(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_region(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_max_players(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00008000u;
  }
  static void set_has_bot_count(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00010000u;
  }
  static void set_has_password(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00020000u;
  }
  static void set_has_secure(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00040000u;
  }
  static void set_has_dedicated(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00080000u;
  }
  static void set_has_os(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_game_data(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_game_data_version(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00100000u;
  }
  static void set_has_game_type(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_map(CMsgGameServerData* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerData::kSteamIdGsFieldNumber;
const int CMsgGameServerData::kIpFieldNumber;
const int CMsgGameServerData::kQueryPortFieldNumber;
const int CMsgGameServerData::kGamePortFieldNumber;
const int CMsgGameServerData::kSourcetvPortFieldNumber;
const int CMsgGameServerData::kNameFieldNumber;
const int CMsgGameServerData::kAppIdFieldNumber;
const int CMsgGameServerData::kGamedirFieldNumber;
const int CMsgGameServerData::kVersionFieldNumber;
const int CMsgGameServerData::kProductFieldNumber;
const int CMsgGameServerData::kRegionFieldNumber;
const int CMsgGameServerData::kPlayersFieldNumber;
const int CMsgGameServerData::kMaxPlayersFieldNumber;
const int CMsgGameServerData::kBotCountFieldNumber;
const int CMsgGameServerData::kPasswordFieldNumber;
const int CMsgGameServerData::kSecureFieldNumber;
const int CMsgGameServerData::kDedicatedFieldNumber;
const int CMsgGameServerData::kOsFieldNumber;
const int CMsgGameServerData::kGameDataFieldNumber;
const int CMsgGameServerData::kGameDataVersionFieldNumber;
const int CMsgGameServerData::kGameTypeFieldNumber;
const int CMsgGameServerData::kMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerData::CMsgGameServerData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGameServerData)
}
CMsgGameServerData::CMsgGameServerData(const CMsgGameServerData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      players_(from.players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gamedir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamedir()) {
    gamedir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamedir_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  product_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_product()) {
    product_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_region()) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_os()) {
    os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
  }
  game_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_data()) {
    game_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data_);
  }
  game_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_type()) {
    game_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_type_);
  }
  map_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_map()) {
    map_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&steam_id_gs_, &from.steam_id_gs_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_data_version_) -
    reinterpret_cast<char*>(&steam_id_gs_)) + sizeof(game_data_version_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGameServerData)
}

void CMsgGameServerData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGameServerData_steammessages_5fclientserver_5f2_2eproto.base);
  gamedir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  map_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_gs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_data_version_) -
      reinterpret_cast<char*>(&steam_id_gs_)) + sizeof(game_data_version_));
}

CMsgGameServerData::~CMsgGameServerData() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGameServerData)
  SharedDtor();
}

void CMsgGameServerData::SharedDtor() {
  gamedir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  map_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGameServerData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGameServerData& CMsgGameServerData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGameServerData_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgGameServerData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGameServerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  players_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      gamedir_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      version_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      product_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      region_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      os_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      game_data_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      game_type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      map_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000fe00u) {
    ::memset(&steam_id_gs_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_players_) -
        reinterpret_cast<char*>(&steam_id_gs_)) + sizeof(max_players_));
  }
  if (cached_has_bits & 0x001f0000u) {
    ::memset(&bot_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&game_data_version_) -
        reinterpret_cast<char*>(&bot_count_)) + sizeof(game_data_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGameServerData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGameServerData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steam_id_gs = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_steam_id_gs(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 ip = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_ip(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 query_port = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_query_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 game_port = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_game_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 sourcetv_port = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_sourcetv_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 app_id = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string gamedir = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgGameServerData.gamedir");
        object = msg->mutable_gamedir();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string version = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgGameServerData.version");
        object = msg->mutable_version();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string product = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgGameServerData.product");
        object = msg->mutable_product();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string region = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgGameServerData.region");
        object = msg->mutable_region();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .proto.steam.CMsgGameServerData.Player players = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgGameServerData_Player::_InternalParse;
          object = msg->add_players();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 90 && (ptr += 1));
        break;
      }
      // optional uint32 max_players = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_max_players(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 bot_count = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_bot_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool password = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 112) goto handle_unusual;
        msg->set_password(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool secure = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 120) goto handle_unusual;
        msg->set_secure(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool dedicated = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 128) goto handle_unusual;
        msg->set_dedicated(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string os = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgGameServerData.os");
        object = msg->mutable_os();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string game_data = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgGameServerData.game_data");
        object = msg->mutable_game_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 game_data_version = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 152) goto handle_unusual;
        msg->set_game_data_version(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string game_type = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgGameServerData.game_type");
        object = msg->mutable_game_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string map = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 170) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgGameServerData.map");
        object = msg->mutable_map();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string name = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgGameServerData.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGameServerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGameServerData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_gs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_steam_id_gs(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_gs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_ip(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 query_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_query_port(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &query_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_game_port(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sourcetv_port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_sourcetv_port(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sourcetv_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gamedir = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gamedir()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gamedir().data(), static_cast<int>(this->gamedir().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.gamedir");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string product = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->product().data(), static_cast<int>(this->product().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.product");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string region = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.region");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgGameServerData.Player players = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 max_players = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {
          HasBitSetters::set_has_max_players(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_players_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bot_count = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {
          HasBitSetters::set_has_bot_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bot_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool password = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (112 & 0xFF)) {
          HasBitSetters::set_has_password(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &password_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool secure = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (120 & 0xFF)) {
          HasBitSetters::set_has_secure(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &secure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool dedicated = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (128 & 0xFF)) {
          HasBitSetters::set_has_dedicated(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dedicated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string os = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_os()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->os().data(), static_cast<int>(this->os().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.os");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string game_data = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->game_data().data(), static_cast<int>(this->game_data().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.game_data");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_data_version = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (152 & 0xFF)) {
          HasBitSetters::set_has_game_data_version(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string game_type = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (162 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->game_type().data(), static_cast<int>(this->game_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.game_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string map = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (170 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_map()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->map().data(), static_cast<int>(this->map().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.map");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (178 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGameServerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGameServerData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGameServerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGameServerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_gs = 1;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_gs(), output);
  }

  // optional uint32 ip = 2;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ip(), output);
  }

  // optional uint32 query_port = 3;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->query_port(), output);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->game_port(), output);
  }

  // optional uint32 sourcetv_port = 5;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sourcetv_port(), output);
  }

  // optional uint32 app_id = 6;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->app_id(), output);
  }

  // optional string gamedir = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gamedir().data(), static_cast<int>(this->gamedir().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.gamedir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->gamedir(), output);
  }

  // optional string version = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->version(), output);
  }

  // optional string product = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product().data(), static_cast<int>(this->product().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.product");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->product(), output);
  }

  // optional string region = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->region(), output);
  }

  // repeated .proto.steam.CMsgGameServerData.Player players = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->players(static_cast<int>(i)),
      output);
  }

  // optional uint32 max_players = 12;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->max_players(), output);
  }

  // optional uint32 bot_count = 13;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->bot_count(), output);
  }

  // optional bool password = 14;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->password(), output);
  }

  // optional bool secure = 15;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->secure(), output);
  }

  // optional bool dedicated = 16;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->dedicated(), output);
  }

  // optional string os = 17;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.os");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->os(), output);
  }

  // optional string game_data = 18;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_data().data(), static_cast<int>(this->game_data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.game_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->game_data(), output);
  }

  // optional uint32 game_data_version = 19;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->game_data_version(), output);
  }

  // optional string game_type = 20;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_type().data(), static_cast<int>(this->game_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.game_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->game_type(), output);
  }

  // optional string map = 21;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map().data(), static_cast<int>(this->map().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.map");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->map(), output);
  }

  // optional string name = 22;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGameServerData)
}

::google::protobuf::uint8* CMsgGameServerData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGameServerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_gs = 1;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_gs(), target);
  }

  // optional uint32 ip = 2;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ip(), target);
  }

  // optional uint32 query_port = 3;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->query_port(), target);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->game_port(), target);
  }

  // optional uint32 sourcetv_port = 5;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sourcetv_port(), target);
  }

  // optional uint32 app_id = 6;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->app_id(), target);
  }

  // optional string gamedir = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gamedir().data(), static_cast<int>(this->gamedir().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.gamedir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->gamedir(), target);
  }

  // optional string version = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->version(), target);
  }

  // optional string product = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product().data(), static_cast<int>(this->product().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.product");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->product(), target);
  }

  // optional string region = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->region(), target);
  }

  // repeated .proto.steam.CMsgGameServerData.Player players = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->players(static_cast<int>(i)), target);
  }

  // optional uint32 max_players = 12;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->max_players(), target);
  }

  // optional uint32 bot_count = 13;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->bot_count(), target);
  }

  // optional bool password = 14;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->password(), target);
  }

  // optional bool secure = 15;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->secure(), target);
  }

  // optional bool dedicated = 16;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->dedicated(), target);
  }

  // optional string os = 17;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.os");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->os(), target);
  }

  // optional string game_data = 18;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_data().data(), static_cast<int>(this->game_data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.game_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->game_data(), target);
  }

  // optional uint32 game_data_version = 19;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->game_data_version(), target);
  }

  // optional string game_type = 20;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_type().data(), static_cast<int>(this->game_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.game_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->game_type(), target);
  }

  // optional string map = 21;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map().data(), static_cast<int>(this->map().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.map");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->map(), target);
  }

  // optional string name = 22;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGameServerData)
  return target;
}

size_t CMsgGameServerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGameServerData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgGameServerData.Player players = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string gamedir = 7;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gamedir());
    }

    // optional string version = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional string product = 9;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->product());
    }

    // optional string region = 10;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->region());
    }

    // optional string os = 17;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->os());
    }

    // optional string game_data = 18;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->game_data());
    }

    // optional string game_type = 20;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->game_type());
    }

    // optional string map = 21;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->map());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional string name = 22;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional fixed64 steam_id_gs = 1;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 8;
    }

    // optional uint32 ip = 2;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ip());
    }

    // optional uint32 query_port = 3;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->query_port());
    }

    // optional uint32 game_port = 4;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_port());
    }

    // optional uint32 sourcetv_port = 5;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sourcetv_port());
    }

    // optional uint32 app_id = 6;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 max_players = 12;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_players());
    }

  }
  if (cached_has_bits & 0x001f0000u) {
    // optional uint32 bot_count = 13;
    if (cached_has_bits & 0x00010000u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bot_count());
    }

    // optional bool password = 14;
    if (cached_has_bits & 0x00020000u) {
      total_size += 1 + 1;
    }

    // optional bool secure = 15;
    if (cached_has_bits & 0x00040000u) {
      total_size += 1 + 1;
    }

    // optional bool dedicated = 16;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 1;
    }

    // optional uint32 game_data_version = 19;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_data_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGameServerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGameServerData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerData* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGameServerData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGameServerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGameServerData)
    MergeFrom(*source);
  }
}

void CMsgGameServerData::MergeFrom(const CMsgGameServerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGameServerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_.MergeFrom(from.players_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      gamedir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamedir_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      product_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      game_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data_);
    }
    if (cached_has_bits & 0x00000040u) {
      _has_bits_[0] |= 0x00000040u;
      game_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_type_);
    }
    if (cached_has_bits & 0x00000080u) {
      _has_bits_[0] |= 0x00000080u;
      map_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_);
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _has_bits_[0] |= 0x00000100u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000200u) {
      steam_id_gs_ = from.steam_id_gs_;
    }
    if (cached_has_bits & 0x00000400u) {
      ip_ = from.ip_;
    }
    if (cached_has_bits & 0x00000800u) {
      query_port_ = from.query_port_;
    }
    if (cached_has_bits & 0x00001000u) {
      game_port_ = from.game_port_;
    }
    if (cached_has_bits & 0x00002000u) {
      sourcetv_port_ = from.sourcetv_port_;
    }
    if (cached_has_bits & 0x00004000u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00008000u) {
      max_players_ = from.max_players_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x001f0000u) {
    if (cached_has_bits & 0x00010000u) {
      bot_count_ = from.bot_count_;
    }
    if (cached_has_bits & 0x00020000u) {
      password_ = from.password_;
    }
    if (cached_has_bits & 0x00040000u) {
      secure_ = from.secure_;
    }
    if (cached_has_bits & 0x00080000u) {
      dedicated_ = from.dedicated_;
    }
    if (cached_has_bits & 0x00100000u) {
      game_data_version_ = from.game_data_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGameServerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerData::CopyFrom(const CMsgGameServerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGameServerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerData::IsInitialized() const {
  return true;
}

void CMsgGameServerData::Swap(CMsgGameServerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerData::InternalSwap(CMsgGameServerData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&players_)->InternalSwap(CastToBase(&other->players_));
  gamedir_.Swap(&other->gamedir_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  product_.Swap(&other->product_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  region_.Swap(&other->region_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  os_.Swap(&other->os_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_data_.Swap(&other->game_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_type_.Swap(&other->game_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  map_.Swap(&other->map_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_gs_, other->steam_id_gs_);
  swap(ip_, other->ip_);
  swap(query_port_, other->query_port_);
  swap(game_port_, other->game_port_);
  swap(sourcetv_port_, other->sourcetv_port_);
  swap(app_id_, other->app_id_);
  swap(max_players_, other->max_players_);
  swap(bot_count_, other->bot_count_);
  swap(password_, other->password_);
  swap(secure_, other->secure_);
  swap(dedicated_, other->dedicated_);
  swap(game_data_version_, other->game_data_version_);
}

::google::protobuf::Metadata CMsgGameServerData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGameServerRemove::InitAsDefaultInstance() {
}
class CMsgGameServerRemove::HasBitSetters {
 public:
  static void set_has_steam_id(CMsgGameServerRemove* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ip(CMsgGameServerRemove* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_query_port(CMsgGameServerRemove* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerRemove::kSteamIdFieldNumber;
const int CMsgGameServerRemove::kIpFieldNumber;
const int CMsgGameServerRemove::kQueryPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerRemove::CMsgGameServerRemove()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGameServerRemove)
}
CMsgGameServerRemove::CMsgGameServerRemove(const CMsgGameServerRemove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&query_port_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(query_port_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGameServerRemove)
}

void CMsgGameServerRemove::SharedCtor() {
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_port_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(query_port_));
}

CMsgGameServerRemove::~CMsgGameServerRemove() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGameServerRemove)
  SharedDtor();
}

void CMsgGameServerRemove::SharedDtor() {
}

void CMsgGameServerRemove::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGameServerRemove& CMsgGameServerRemove::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGameServerRemove_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgGameServerRemove::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGameServerRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&query_port_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(query_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGameServerRemove::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGameServerRemove*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_steam_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 ip = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_ip(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 query_port = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_query_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGameServerRemove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGameServerRemove)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_steam_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_ip(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 query_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_query_port(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &query_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGameServerRemove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGameServerRemove)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGameServerRemove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGameServerRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional uint32 ip = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ip(), output);
  }

  // optional uint32 query_port = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->query_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGameServerRemove)
}

::google::protobuf::uint8* CMsgGameServerRemove::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGameServerRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional uint32 ip = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ip(), target);
  }

  // optional uint32 query_port = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->query_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGameServerRemove)
  return target;
}

size_t CMsgGameServerRemove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGameServerRemove)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional fixed64 steam_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint32 ip = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ip());
    }

    // optional uint32 query_port = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->query_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGameServerRemove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGameServerRemove)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerRemove* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGameServerRemove>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGameServerRemove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGameServerRemove)
    MergeFrom(*source);
  }
}

void CMsgGameServerRemove::MergeFrom(const CMsgGameServerRemove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGameServerRemove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      ip_ = from.ip_;
    }
    if (cached_has_bits & 0x00000004u) {
      query_port_ = from.query_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerRemove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGameServerRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerRemove::CopyFrom(const CMsgGameServerRemove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGameServerRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerRemove::IsInitialized() const {
  return true;
}

void CMsgGameServerRemove::Swap(CMsgGameServerRemove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerRemove::InternalSwap(CMsgGameServerRemove* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(steam_id_, other->steam_id_);
  swap(ip_, other->ip_);
  swap(query_port_, other->query_port_);
}

::google::protobuf::Metadata CMsgGameServerRemove::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGMSServerQuery::InitAsDefaultInstance() {
}
class CMsgClientGMSServerQuery::HasBitSetters {
 public:
  static void set_has_app_id(CMsgClientGMSServerQuery* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_geo_location_ip(CMsgClientGMSServerQuery* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_region_code(CMsgClientGMSServerQuery* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_filter_text(CMsgClientGMSServerQuery* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_max_servers(CMsgClientGMSServerQuery* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGMSServerQuery::kAppIdFieldNumber;
const int CMsgClientGMSServerQuery::kGeoLocationIpFieldNumber;
const int CMsgClientGMSServerQuery::kRegionCodeFieldNumber;
const int CMsgClientGMSServerQuery::kFilterTextFieldNumber;
const int CMsgClientGMSServerQuery::kMaxServersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGMSServerQuery::CMsgClientGMSServerQuery()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGMSServerQuery)
}
CMsgClientGMSServerQuery::CMsgClientGMSServerQuery(const CMsgClientGMSServerQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filter_text()) {
    filter_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_text_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_servers_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(max_servers_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGMSServerQuery)
}

void CMsgClientGMSServerQuery::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientGMSServerQuery_steammessages_5fclientserver_5f2_2eproto.base);
  filter_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_servers_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(max_servers_));
}

CMsgClientGMSServerQuery::~CMsgClientGMSServerQuery() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGMSServerQuery)
  SharedDtor();
}

void CMsgClientGMSServerQuery::SharedDtor() {
  filter_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGMSServerQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientGMSServerQuery& CMsgClientGMSServerQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientGMSServerQuery_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientGMSServerQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGMSServerQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    filter_text_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_servers_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(max_servers_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientGMSServerQuery::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientGMSServerQuery*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 geo_location_ip = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_geo_location_ip(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 region_code = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_region_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string filter_text = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientGMSServerQuery.filter_text");
        object = msg->mutable_filter_text();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 max_servers = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_max_servers(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientGMSServerQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGMSServerQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 geo_location_ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_geo_location_ip(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &geo_location_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 region_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_region_code(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &region_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filter_text = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filter_text().data(), static_cast<int>(this->filter_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientGMSServerQuery.filter_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 max_servers = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_max_servers(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_servers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGMSServerQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGMSServerQuery)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientGMSServerQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGMSServerQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 geo_location_ip = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->geo_location_ip(), output);
  }

  // optional uint32 region_code = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->region_code(), output);
  }

  // optional string filter_text = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filter_text().data(), static_cast<int>(this->filter_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGMSServerQuery.filter_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filter_text(), output);
  }

  // optional uint32 max_servers = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->max_servers(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGMSServerQuery)
}

::google::protobuf::uint8* CMsgClientGMSServerQuery::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGMSServerQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 geo_location_ip = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->geo_location_ip(), target);
  }

  // optional uint32 region_code = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->region_code(), target);
  }

  // optional string filter_text = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filter_text().data(), static_cast<int>(this->filter_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGMSServerQuery.filter_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filter_text(), target);
  }

  // optional uint32 max_servers = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->max_servers(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGMSServerQuery)
  return target;
}

size_t CMsgClientGMSServerQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGMSServerQuery)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string filter_text = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filter_text());
    }

    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 geo_location_ip = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->geo_location_ip());
    }

    // optional uint32 region_code = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->region_code());
    }

    // optional uint32 max_servers = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_servers());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGMSServerQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGMSServerQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGMSServerQuery* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientGMSServerQuery>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGMSServerQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGMSServerQuery)
    MergeFrom(*source);
  }
}

void CMsgClientGMSServerQuery::MergeFrom(const CMsgClientGMSServerQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGMSServerQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      filter_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_text_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      geo_location_ip_ = from.geo_location_ip_;
    }
    if (cached_has_bits & 0x00000008u) {
      region_code_ = from.region_code_;
    }
    if (cached_has_bits & 0x00000010u) {
      max_servers_ = from.max_servers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGMSServerQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGMSServerQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGMSServerQuery::CopyFrom(const CMsgClientGMSServerQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGMSServerQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGMSServerQuery::IsInitialized() const {
  return true;
}

void CMsgClientGMSServerQuery::Swap(CMsgClientGMSServerQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGMSServerQuery::InternalSwap(CMsgClientGMSServerQuery* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  filter_text_.Swap(&other->filter_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(geo_location_ip_, other->geo_location_ip_);
  swap(region_code_, other->region_code_);
  swap(max_servers_, other->max_servers_);
}

::google::protobuf::Metadata CMsgClientGMSServerQuery::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGMSClientServerQueryResponse_Server::InitAsDefaultInstance() {
}
class CMsgGMSClientServerQueryResponse_Server::HasBitSetters {
 public:
  static void set_has_server_ip(CMsgGMSClientServerQueryResponse_Server* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_server_port(CMsgGMSClientServerQueryResponse_Server* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_auth_players(CMsgGMSClientServerQueryResponse_Server* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGMSClientServerQueryResponse_Server::kServerIpFieldNumber;
const int CMsgGMSClientServerQueryResponse_Server::kServerPortFieldNumber;
const int CMsgGMSClientServerQueryResponse_Server::kAuthPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGMSClientServerQueryResponse_Server::CMsgGMSClientServerQueryResponse_Server()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGMSClientServerQueryResponse.Server)
}
CMsgGMSClientServerQueryResponse_Server::CMsgGMSClientServerQueryResponse_Server(const CMsgGMSClientServerQueryResponse_Server& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&server_ip_, &from.server_ip_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_players_) -
    reinterpret_cast<char*>(&server_ip_)) + sizeof(auth_players_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGMSClientServerQueryResponse.Server)
}

void CMsgGMSClientServerQueryResponse_Server::SharedCtor() {
  ::memset(&server_ip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_players_) -
      reinterpret_cast<char*>(&server_ip_)) + sizeof(auth_players_));
}

CMsgGMSClientServerQueryResponse_Server::~CMsgGMSClientServerQueryResponse_Server() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  SharedDtor();
}

void CMsgGMSClientServerQueryResponse_Server::SharedDtor() {
}

void CMsgGMSClientServerQueryResponse_Server::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGMSClientServerQueryResponse_Server& CMsgGMSClientServerQueryResponse_Server::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGMSClientServerQueryResponse_Server_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgGMSClientServerQueryResponse_Server::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&server_ip_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&auth_players_) -
        reinterpret_cast<char*>(&server_ip_)) + sizeof(auth_players_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGMSClientServerQueryResponse_Server::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGMSClientServerQueryResponse_Server*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 server_ip = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_server_ip(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 server_port = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_server_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 auth_players = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_auth_players(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGMSClientServerQueryResponse_Server::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 server_ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_server_ip(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_server_port(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_players = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_auth_players(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_players_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGMSClientServerQueryResponse_Server::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 server_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_ip(), output);
  }

  // optional uint32 server_port = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_port(), output);
  }

  // optional uint32 auth_players = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->auth_players(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGMSClientServerQueryResponse.Server)
}

::google::protobuf::uint8* CMsgGMSClientServerQueryResponse_Server::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 server_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_ip(), target);
  }

  // optional uint32 server_port = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_port(), target);
  }

  // optional uint32 auth_players = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->auth_players(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  return target;
}

size_t CMsgGMSClientServerQueryResponse_Server::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 server_ip = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_ip());
    }

    // optional uint32 server_port = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_port());
    }

    // optional uint32 auth_players = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->auth_players());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGMSClientServerQueryResponse_Server::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGMSClientServerQueryResponse_Server* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGMSClientServerQueryResponse_Server>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGMSClientServerQueryResponse.Server)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGMSClientServerQueryResponse.Server)
    MergeFrom(*source);
  }
}

void CMsgGMSClientServerQueryResponse_Server::MergeFrom(const CMsgGMSClientServerQueryResponse_Server& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      server_ip_ = from.server_ip_;
    }
    if (cached_has_bits & 0x00000002u) {
      server_port_ = from.server_port_;
    }
    if (cached_has_bits & 0x00000004u) {
      auth_players_ = from.auth_players_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGMSClientServerQueryResponse_Server::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGMSClientServerQueryResponse_Server::CopyFrom(const CMsgGMSClientServerQueryResponse_Server& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGMSClientServerQueryResponse_Server::IsInitialized() const {
  return true;
}

void CMsgGMSClientServerQueryResponse_Server::Swap(CMsgGMSClientServerQueryResponse_Server* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGMSClientServerQueryResponse_Server::InternalSwap(CMsgGMSClientServerQueryResponse_Server* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(server_ip_, other->server_ip_);
  swap(server_port_, other->server_port_);
  swap(auth_players_, other->auth_players_);
}

::google::protobuf::Metadata CMsgGMSClientServerQueryResponse_Server::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGMSClientServerQueryResponse::InitAsDefaultInstance() {
}
class CMsgGMSClientServerQueryResponse::HasBitSetters {
 public:
  static void set_has_error(CMsgGMSClientServerQueryResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGMSClientServerQueryResponse::kServersFieldNumber;
const int CMsgGMSClientServerQueryResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGMSClientServerQueryResponse::CMsgGMSClientServerQueryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGMSClientServerQueryResponse)
}
CMsgGMSClientServerQueryResponse::CMsgGMSClientServerQueryResponse(const CMsgGMSClientServerQueryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      servers_(from.servers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGMSClientServerQueryResponse)
}

void CMsgGMSClientServerQueryResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGMSClientServerQueryResponse_steammessages_5fclientserver_5f2_2eproto.base);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgGMSClientServerQueryResponse::~CMsgGMSClientServerQueryResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGMSClientServerQueryResponse)
  SharedDtor();
}

void CMsgGMSClientServerQueryResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGMSClientServerQueryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGMSClientServerQueryResponse& CMsgGMSClientServerQueryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGMSClientServerQueryResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgGMSClientServerQueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGMSClientServerQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servers_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    error_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGMSClientServerQueryResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGMSClientServerQueryResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.steam.CMsgGMSClientServerQueryResponse.Server servers = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgGMSClientServerQueryResponse_Server::_InternalParse;
          object = msg->add_servers();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // optional string error = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgGMSClientServerQueryResponse.error");
        object = msg->mutable_error();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGMSClientServerQueryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGMSClientServerQueryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.steam.CMsgGMSClientServerQueryResponse.Server servers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_servers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGMSClientServerQueryResponse.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGMSClientServerQueryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGMSClientServerQueryResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGMSClientServerQueryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGMSClientServerQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgGMSClientServerQueryResponse.Server servers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->servers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->servers(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string error = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGMSClientServerQueryResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGMSClientServerQueryResponse)
}

::google::protobuf::uint8* CMsgGMSClientServerQueryResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGMSClientServerQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgGMSClientServerQueryResponse.Server servers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->servers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->servers(static_cast<int>(i)), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string error = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGMSClientServerQueryResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGMSClientServerQueryResponse)
  return target;
}

size_t CMsgGMSClientServerQueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGMSClientServerQueryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgGMSClientServerQueryResponse.Server servers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->servers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->servers(static_cast<int>(i)));
    }
  }

  // optional string error = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGMSClientServerQueryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGMSClientServerQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGMSClientServerQueryResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGMSClientServerQueryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGMSClientServerQueryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGMSClientServerQueryResponse)
    MergeFrom(*source);
  }
}

void CMsgGMSClientServerQueryResponse::MergeFrom(const CMsgGMSClientServerQueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGMSClientServerQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  servers_.MergeFrom(from.servers_);
  if (from.has_error()) {
    _has_bits_[0] |= 0x00000001u;
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void CMsgGMSClientServerQueryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGMSClientServerQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGMSClientServerQueryResponse::CopyFrom(const CMsgGMSClientServerQueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGMSClientServerQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGMSClientServerQueryResponse::IsInitialized() const {
  return true;
}

void CMsgGMSClientServerQueryResponse::Swap(CMsgGMSClientServerQueryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGMSClientServerQueryResponse::InternalSwap(CMsgGMSClientServerQueryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&servers_)->InternalSwap(CastToBase(&other->servers_));
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CMsgGMSClientServerQueryResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGameServerOutOfDate::InitAsDefaultInstance() {
}
class CMsgGameServerOutOfDate::HasBitSetters {
 public:
  static void set_has_steam_id_gs(CMsgGameServerOutOfDate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_reject(CMsgGameServerOutOfDate* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_message(CMsgGameServerOutOfDate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerOutOfDate::kSteamIdGsFieldNumber;
const int CMsgGameServerOutOfDate::kRejectFieldNumber;
const int CMsgGameServerOutOfDate::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerOutOfDate::CMsgGameServerOutOfDate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGameServerOutOfDate)
}
CMsgGameServerOutOfDate::CMsgGameServerOutOfDate(const CMsgGameServerOutOfDate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&steam_id_gs_, &from.steam_id_gs_,
    static_cast<size_t>(reinterpret_cast<char*>(&reject_) -
    reinterpret_cast<char*>(&steam_id_gs_)) + sizeof(reject_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGameServerOutOfDate)
}

void CMsgGameServerOutOfDate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGameServerOutOfDate_steammessages_5fclientserver_5f2_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_gs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reject_) -
      reinterpret_cast<char*>(&steam_id_gs_)) + sizeof(reject_));
}

CMsgGameServerOutOfDate::~CMsgGameServerOutOfDate() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGameServerOutOfDate)
  SharedDtor();
}

void CMsgGameServerOutOfDate::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGameServerOutOfDate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGameServerOutOfDate& CMsgGameServerOutOfDate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGameServerOutOfDate_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgGameServerOutOfDate::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGameServerOutOfDate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&steam_id_gs_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&reject_) -
        reinterpret_cast<char*>(&steam_id_gs_)) + sizeof(reject_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGameServerOutOfDate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGameServerOutOfDate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steam_id_gs = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_steam_id_gs(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional bool reject = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_reject(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string message = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgGameServerOutOfDate.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGameServerOutOfDate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGameServerOutOfDate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_gs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_steam_id_gs(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_gs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool reject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_reject(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerOutOfDate.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGameServerOutOfDate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGameServerOutOfDate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGameServerOutOfDate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGameServerOutOfDate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_gs = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_gs(), output);
  }

  // optional bool reject = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reject(), output);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerOutOfDate.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGameServerOutOfDate)
}

::google::protobuf::uint8* CMsgGameServerOutOfDate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGameServerOutOfDate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_gs = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_gs(), target);
  }

  // optional bool reject = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reject(), target);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerOutOfDate.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGameServerOutOfDate)
  return target;
}

size_t CMsgGameServerOutOfDate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGameServerOutOfDate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string message = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional fixed64 steam_id_gs = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional bool reject = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGameServerOutOfDate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGameServerOutOfDate)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerOutOfDate* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGameServerOutOfDate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGameServerOutOfDate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGameServerOutOfDate)
    MergeFrom(*source);
  }
}

void CMsgGameServerOutOfDate::MergeFrom(const CMsgGameServerOutOfDate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGameServerOutOfDate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_gs_ = from.steam_id_gs_;
    }
    if (cached_has_bits & 0x00000004u) {
      reject_ = from.reject_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerOutOfDate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGameServerOutOfDate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerOutOfDate::CopyFrom(const CMsgGameServerOutOfDate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGameServerOutOfDate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerOutOfDate::IsInitialized() const {
  return true;
}

void CMsgGameServerOutOfDate::Swap(CMsgGameServerOutOfDate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerOutOfDate::InternalSwap(CMsgGameServerOutOfDate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steam_id_gs_, other->steam_id_gs_);
  swap(reject_, other->reject_);
}

::google::protobuf::Metadata CMsgGameServerOutOfDate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRedeemGuestPass::InitAsDefaultInstance() {
}
class CMsgClientRedeemGuestPass::HasBitSetters {
 public:
  static void set_has_guest_pass_id(CMsgClientRedeemGuestPass* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRedeemGuestPass::kGuestPassIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRedeemGuestPass::CMsgClientRedeemGuestPass()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRedeemGuestPass)
}
CMsgClientRedeemGuestPass::CMsgClientRedeemGuestPass(const CMsgClientRedeemGuestPass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guest_pass_id_ = from.guest_pass_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRedeemGuestPass)
}

void CMsgClientRedeemGuestPass::SharedCtor() {
  guest_pass_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgClientRedeemGuestPass::~CMsgClientRedeemGuestPass() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRedeemGuestPass)
  SharedDtor();
}

void CMsgClientRedeemGuestPass::SharedDtor() {
}

void CMsgClientRedeemGuestPass::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRedeemGuestPass& CMsgClientRedeemGuestPass::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRedeemGuestPass_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRedeemGuestPass::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRedeemGuestPass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guest_pass_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRedeemGuestPass::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRedeemGuestPass*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 guest_pass_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_guest_pass_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRedeemGuestPass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRedeemGuestPass)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 guest_pass_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_guest_pass_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &guest_pass_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRedeemGuestPass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRedeemGuestPass)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRedeemGuestPass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRedeemGuestPass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 guest_pass_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->guest_pass_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRedeemGuestPass)
}

::google::protobuf::uint8* CMsgClientRedeemGuestPass::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRedeemGuestPass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 guest_pass_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->guest_pass_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRedeemGuestPass)
  return target;
}

size_t CMsgClientRedeemGuestPass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRedeemGuestPass)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 guest_pass_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRedeemGuestPass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRedeemGuestPass)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRedeemGuestPass* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRedeemGuestPass>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRedeemGuestPass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRedeemGuestPass)
    MergeFrom(*source);
  }
}

void CMsgClientRedeemGuestPass::MergeFrom(const CMsgClientRedeemGuestPass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRedeemGuestPass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_guest_pass_id()) {
    set_guest_pass_id(from.guest_pass_id());
  }
}

void CMsgClientRedeemGuestPass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRedeemGuestPass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRedeemGuestPass::CopyFrom(const CMsgClientRedeemGuestPass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRedeemGuestPass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRedeemGuestPass::IsInitialized() const {
  return true;
}

void CMsgClientRedeemGuestPass::Swap(CMsgClientRedeemGuestPass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRedeemGuestPass::InternalSwap(CMsgClientRedeemGuestPass* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guest_pass_id_, other->guest_pass_id_);
}

::google::protobuf::Metadata CMsgClientRedeemGuestPass::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRedeemGuestPassResponse::InitAsDefaultInstance() {
}
class CMsgClientRedeemGuestPassResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientRedeemGuestPassResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_package_id(CMsgClientRedeemGuestPassResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_must_own_appid(CMsgClientRedeemGuestPassResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRedeemGuestPassResponse::kEresultFieldNumber;
const int CMsgClientRedeemGuestPassResponse::kPackageIdFieldNumber;
const int CMsgClientRedeemGuestPassResponse::kMustOwnAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRedeemGuestPassResponse::CMsgClientRedeemGuestPassResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRedeemGuestPassResponse)
}
CMsgClientRedeemGuestPassResponse::CMsgClientRedeemGuestPassResponse(const CMsgClientRedeemGuestPassResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&package_id_, &from.package_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&package_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRedeemGuestPassResponse)
}

void CMsgClientRedeemGuestPassResponse::SharedCtor() {
  ::memset(&package_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&must_own_appid_) -
      reinterpret_cast<char*>(&package_id_)) + sizeof(must_own_appid_));
  eresult_ = 2u;
}

CMsgClientRedeemGuestPassResponse::~CMsgClientRedeemGuestPassResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRedeemGuestPassResponse)
  SharedDtor();
}

void CMsgClientRedeemGuestPassResponse::SharedDtor() {
}

void CMsgClientRedeemGuestPassResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRedeemGuestPassResponse& CMsgClientRedeemGuestPassResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRedeemGuestPassResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRedeemGuestPassResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&package_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&must_own_appid_) -
        reinterpret_cast<char*>(&package_id_)) + sizeof(must_own_appid_));
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRedeemGuestPassResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRedeemGuestPassResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 package_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_package_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 must_own_appid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_must_own_appid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRedeemGuestPassResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 package_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_package_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 must_own_appid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_must_own_appid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &must_own_appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRedeemGuestPassResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRedeemGuestPassResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRedeemGuestPassResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional uint32 package_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->package_id(), output);
  }

  // optional uint32 must_own_appid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->must_own_appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRedeemGuestPassResponse)
}

::google::protobuf::uint8* CMsgClientRedeemGuestPassResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 package_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->package_id(), target);
  }

  // optional uint32 must_own_appid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->must_own_appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRedeemGuestPassResponse)
  return target;
}

size_t CMsgClientRedeemGuestPassResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 package_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package_id());
    }

    // optional uint32 must_own_appid = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->must_own_appid());
    }

    // optional uint32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRedeemGuestPassResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRedeemGuestPassResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRedeemGuestPassResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRedeemGuestPassResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRedeemGuestPassResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRedeemGuestPassResponse::MergeFrom(const CMsgClientRedeemGuestPassResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      package_id_ = from.package_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      must_own_appid_ = from.must_own_appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRedeemGuestPassResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRedeemGuestPassResponse::CopyFrom(const CMsgClientRedeemGuestPassResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRedeemGuestPassResponse::IsInitialized() const {
  return true;
}

void CMsgClientRedeemGuestPassResponse::Swap(CMsgClientRedeemGuestPassResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRedeemGuestPassResponse::InternalSwap(CMsgClientRedeemGuestPassResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(package_id_, other->package_id_);
  swap(must_own_appid_, other->must_own_appid_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientRedeemGuestPassResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetClanActivityCounts::InitAsDefaultInstance() {
}
class CMsgClientGetClanActivityCounts::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetClanActivityCounts::kSteamidClansFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetClanActivityCounts::CMsgClientGetClanActivityCounts()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetClanActivityCounts)
}
CMsgClientGetClanActivityCounts::CMsgClientGetClanActivityCounts(const CMsgClientGetClanActivityCounts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      steamid_clans_(from.steamid_clans_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetClanActivityCounts)
}

void CMsgClientGetClanActivityCounts::SharedCtor() {
}

CMsgClientGetClanActivityCounts::~CMsgClientGetClanActivityCounts() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetClanActivityCounts)
  SharedDtor();
}

void CMsgClientGetClanActivityCounts::SharedDtor() {
}

void CMsgClientGetClanActivityCounts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientGetClanActivityCounts& CMsgClientGetClanActivityCounts::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientGetClanActivityCounts_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientGetClanActivityCounts::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetClanActivityCounts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_clans_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientGetClanActivityCounts::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientGetClanActivityCounts*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint64 steamid_clans = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_steamid_clans(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
        object = msg->mutable_steamid_clans();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientGetClanActivityCounts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetClanActivityCounts)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 steamid_clans = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_steamid_clans())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_steamid_clans())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetClanActivityCounts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetClanActivityCounts)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientGetClanActivityCounts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetClanActivityCounts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 steamid_clans = 1;
  for (int i = 0, n = this->steamid_clans_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->steamid_clans(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetClanActivityCounts)
}

::google::protobuf::uint8* CMsgClientGetClanActivityCounts::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetClanActivityCounts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 steamid_clans = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->steamid_clans_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetClanActivityCounts)
  return target;
}

size_t CMsgClientGetClanActivityCounts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetClanActivityCounts)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 steamid_clans = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->steamid_clans_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamid_clans_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetClanActivityCounts::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetClanActivityCounts)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetClanActivityCounts* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientGetClanActivityCounts>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetClanActivityCounts)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetClanActivityCounts)
    MergeFrom(*source);
  }
}

void CMsgClientGetClanActivityCounts::MergeFrom(const CMsgClientGetClanActivityCounts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetClanActivityCounts)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steamid_clans_.MergeFrom(from.steamid_clans_);
}

void CMsgClientGetClanActivityCounts::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetClanActivityCounts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetClanActivityCounts::CopyFrom(const CMsgClientGetClanActivityCounts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetClanActivityCounts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetClanActivityCounts::IsInitialized() const {
  return true;
}

void CMsgClientGetClanActivityCounts::Swap(CMsgClientGetClanActivityCounts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetClanActivityCounts::InternalSwap(CMsgClientGetClanActivityCounts* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  steamid_clans_.InternalSwap(&other->steamid_clans_);
}

::google::protobuf::Metadata CMsgClientGetClanActivityCounts::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetClanActivityCountsResponse::InitAsDefaultInstance() {
}
class CMsgClientGetClanActivityCountsResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientGetClanActivityCountsResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetClanActivityCountsResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetClanActivityCountsResponse::CMsgClientGetClanActivityCountsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetClanActivityCountsResponse)
}
CMsgClientGetClanActivityCountsResponse::CMsgClientGetClanActivityCountsResponse(const CMsgClientGetClanActivityCountsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetClanActivityCountsResponse)
}

void CMsgClientGetClanActivityCountsResponse::SharedCtor() {
  eresult_ = 2u;
}

CMsgClientGetClanActivityCountsResponse::~CMsgClientGetClanActivityCountsResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetClanActivityCountsResponse)
  SharedDtor();
}

void CMsgClientGetClanActivityCountsResponse::SharedDtor() {
}

void CMsgClientGetClanActivityCountsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientGetClanActivityCountsResponse& CMsgClientGetClanActivityCountsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientGetClanActivityCountsResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientGetClanActivityCountsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientGetClanActivityCountsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientGetClanActivityCountsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientGetClanActivityCountsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetClanActivityCountsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetClanActivityCountsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientGetClanActivityCountsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetClanActivityCountsResponse)
}

::google::protobuf::uint8* CMsgClientGetClanActivityCountsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetClanActivityCountsResponse)
  return target;
}

size_t CMsgClientGetClanActivityCountsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 eresult = 1 [default = 2];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetClanActivityCountsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetClanActivityCountsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientGetClanActivityCountsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetClanActivityCountsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetClanActivityCountsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetClanActivityCountsResponse::MergeFrom(const CMsgClientGetClanActivityCountsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientGetClanActivityCountsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetClanActivityCountsResponse::CopyFrom(const CMsgClientGetClanActivityCountsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetClanActivityCountsResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetClanActivityCountsResponse::Swap(CMsgClientGetClanActivityCountsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetClanActivityCountsResponse::InternalSwap(CMsgClientGetClanActivityCountsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientGetClanActivityCountsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientOGSReportString::InitAsDefaultInstance() {
}
class CMsgClientOGSReportString::HasBitSetters {
 public:
  static void set_has_accumulated(CMsgClientOGSReportString* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_sessionid(CMsgClientOGSReportString* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_severity(CMsgClientOGSReportString* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_formatter(CMsgClientOGSReportString* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_varargs(CMsgClientOGSReportString* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientOGSReportString::kAccumulatedFieldNumber;
const int CMsgClientOGSReportString::kSessionidFieldNumber;
const int CMsgClientOGSReportString::kSeverityFieldNumber;
const int CMsgClientOGSReportString::kFormatterFieldNumber;
const int CMsgClientOGSReportString::kVarargsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientOGSReportString::CMsgClientOGSReportString()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientOGSReportString)
}
CMsgClientOGSReportString::CMsgClientOGSReportString(const CMsgClientOGSReportString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  formatter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_formatter()) {
    formatter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.formatter_);
  }
  varargs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_varargs()) {
    varargs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.varargs_);
  }
  ::memcpy(&sessionid_, &from.sessionid_,
    static_cast<size_t>(reinterpret_cast<char*>(&severity_) -
    reinterpret_cast<char*>(&sessionid_)) + sizeof(severity_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientOGSReportString)
}

void CMsgClientOGSReportString::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientOGSReportString_steammessages_5fclientserver_5f2_2eproto.base);
  formatter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  varargs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sessionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&sessionid_)) + sizeof(severity_));
}

CMsgClientOGSReportString::~CMsgClientOGSReportString() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientOGSReportString)
  SharedDtor();
}

void CMsgClientOGSReportString::SharedDtor() {
  formatter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  varargs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientOGSReportString::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientOGSReportString& CMsgClientOGSReportString::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientOGSReportString_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientOGSReportString::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientOGSReportString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      formatter_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      varargs_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&sessionid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&severity_) -
        reinterpret_cast<char*>(&sessionid_)) + sizeof(severity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientOGSReportString::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientOGSReportString*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool accumulated = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_accumulated(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 sessionid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_sessionid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 severity = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_severity(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string formatter = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientOGSReportString.formatter");
        object = msg->mutable_formatter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes varargs = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_varargs();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientOGSReportString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientOGSReportString)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool accumulated = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_accumulated(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &accumulated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 sessionid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_sessionid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 severity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_severity(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &severity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string formatter = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_formatter()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->formatter().data(), static_cast<int>(this->formatter().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientOGSReportString.formatter");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes varargs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_varargs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientOGSReportString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientOGSReportString)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientOGSReportString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientOGSReportString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool accumulated = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->accumulated(), output);
  }

  // optional uint64 sessionid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->sessionid(), output);
  }

  // optional int32 severity = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->severity(), output);
  }

  // optional string formatter = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->formatter().data(), static_cast<int>(this->formatter().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientOGSReportString.formatter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->formatter(), output);
  }

  // optional bytes varargs = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->varargs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientOGSReportString)
}

::google::protobuf::uint8* CMsgClientOGSReportString::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientOGSReportString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool accumulated = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->accumulated(), target);
  }

  // optional uint64 sessionid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->sessionid(), target);
  }

  // optional int32 severity = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->severity(), target);
  }

  // optional string formatter = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->formatter().data(), static_cast<int>(this->formatter().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientOGSReportString.formatter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->formatter(), target);
  }

  // optional bytes varargs = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->varargs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientOGSReportString)
  return target;
}

size_t CMsgClientOGSReportString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientOGSReportString)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string formatter = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->formatter());
    }

    // optional bytes varargs = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->varargs());
    }

    // optional uint64 sessionid = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sessionid());
    }

    // optional bool accumulated = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional int32 severity = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->severity());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientOGSReportString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientOGSReportString)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientOGSReportString* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientOGSReportString>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientOGSReportString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientOGSReportString)
    MergeFrom(*source);
  }
}

void CMsgClientOGSReportString::MergeFrom(const CMsgClientOGSReportString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientOGSReportString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      formatter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.formatter_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      varargs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.varargs_);
    }
    if (cached_has_bits & 0x00000004u) {
      sessionid_ = from.sessionid_;
    }
    if (cached_has_bits & 0x00000008u) {
      accumulated_ = from.accumulated_;
    }
    if (cached_has_bits & 0x00000010u) {
      severity_ = from.severity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientOGSReportString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientOGSReportString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientOGSReportString::CopyFrom(const CMsgClientOGSReportString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientOGSReportString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientOGSReportString::IsInitialized() const {
  return true;
}

void CMsgClientOGSReportString::Swap(CMsgClientOGSReportString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientOGSReportString::InternalSwap(CMsgClientOGSReportString* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  formatter_.Swap(&other->formatter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  varargs_.Swap(&other->varargs_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sessionid_, other->sessionid_);
  swap(accumulated_, other->accumulated_);
  swap(severity_, other->severity_);
}

::google::protobuf::Metadata CMsgClientOGSReportString::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientOGSReportBug::InitAsDefaultInstance() {
}
class CMsgClientOGSReportBug::HasBitSetters {
 public:
  static void set_has_sessionid(CMsgClientOGSReportBug* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_bugtext(CMsgClientOGSReportBug* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_screenshot(CMsgClientOGSReportBug* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientOGSReportBug::kSessionidFieldNumber;
const int CMsgClientOGSReportBug::kBugtextFieldNumber;
const int CMsgClientOGSReportBug::kScreenshotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientOGSReportBug::CMsgClientOGSReportBug()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientOGSReportBug)
}
CMsgClientOGSReportBug::CMsgClientOGSReportBug(const CMsgClientOGSReportBug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bugtext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bugtext()) {
    bugtext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bugtext_);
  }
  screenshot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_screenshot()) {
    screenshot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenshot_);
  }
  sessionid_ = from.sessionid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientOGSReportBug)
}

void CMsgClientOGSReportBug::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientOGSReportBug_steammessages_5fclientserver_5f2_2eproto.base);
  bugtext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  screenshot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_ = PROTOBUF_ULONGLONG(0);
}

CMsgClientOGSReportBug::~CMsgClientOGSReportBug() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientOGSReportBug)
  SharedDtor();
}

void CMsgClientOGSReportBug::SharedDtor() {
  bugtext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  screenshot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientOGSReportBug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientOGSReportBug& CMsgClientOGSReportBug::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientOGSReportBug_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientOGSReportBug::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientOGSReportBug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      bugtext_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      screenshot_.ClearNonDefaultToEmptyNoArena();
    }
  }
  sessionid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientOGSReportBug::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientOGSReportBug*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 sessionid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_sessionid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string bugtext = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientOGSReportBug.bugtext");
        object = msg->mutable_bugtext();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes screenshot = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_screenshot();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientOGSReportBug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientOGSReportBug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 sessionid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_sessionid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bugtext = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bugtext()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bugtext().data(), static_cast<int>(this->bugtext().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientOGSReportBug.bugtext");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes screenshot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_screenshot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientOGSReportBug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientOGSReportBug)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientOGSReportBug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientOGSReportBug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 sessionid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sessionid(), output);
  }

  // optional string bugtext = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bugtext().data(), static_cast<int>(this->bugtext().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientOGSReportBug.bugtext");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bugtext(), output);
  }

  // optional bytes screenshot = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->screenshot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientOGSReportBug)
}

::google::protobuf::uint8* CMsgClientOGSReportBug::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientOGSReportBug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 sessionid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sessionid(), target);
  }

  // optional string bugtext = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bugtext().data(), static_cast<int>(this->bugtext().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientOGSReportBug.bugtext");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bugtext(), target);
  }

  // optional bytes screenshot = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->screenshot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientOGSReportBug)
  return target;
}

size_t CMsgClientOGSReportBug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientOGSReportBug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string bugtext = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bugtext());
    }

    // optional bytes screenshot = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->screenshot());
    }

    // optional uint64 sessionid = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sessionid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientOGSReportBug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientOGSReportBug)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientOGSReportBug* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientOGSReportBug>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientOGSReportBug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientOGSReportBug)
    MergeFrom(*source);
  }
}

void CMsgClientOGSReportBug::MergeFrom(const CMsgClientOGSReportBug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientOGSReportBug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      bugtext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bugtext_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      screenshot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenshot_);
    }
    if (cached_has_bits & 0x00000004u) {
      sessionid_ = from.sessionid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientOGSReportBug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientOGSReportBug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientOGSReportBug::CopyFrom(const CMsgClientOGSReportBug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientOGSReportBug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientOGSReportBug::IsInitialized() const {
  return true;
}

void CMsgClientOGSReportBug::Swap(CMsgClientOGSReportBug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientOGSReportBug::InternalSwap(CMsgClientOGSReportBug* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  bugtext_.Swap(&other->bugtext_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  screenshot_.Swap(&other->screenshot_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sessionid_, other->sessionid_);
}

::google::protobuf::Metadata CMsgClientOGSReportBug::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSAssociateWithClan::InitAsDefaultInstance() {
}
class CMsgGSAssociateWithClan::HasBitSetters {
 public:
  static void set_has_steam_id_clan(CMsgGSAssociateWithClan* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSAssociateWithClan::kSteamIdClanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSAssociateWithClan::CMsgGSAssociateWithClan()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGSAssociateWithClan)
}
CMsgGSAssociateWithClan::CMsgGSAssociateWithClan(const CMsgGSAssociateWithClan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_clan_ = from.steam_id_clan_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGSAssociateWithClan)
}

void CMsgGSAssociateWithClan::SharedCtor() {
  steam_id_clan_ = PROTOBUF_ULONGLONG(0);
}

CMsgGSAssociateWithClan::~CMsgGSAssociateWithClan() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGSAssociateWithClan)
  SharedDtor();
}

void CMsgGSAssociateWithClan::SharedDtor() {
}

void CMsgGSAssociateWithClan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGSAssociateWithClan& CMsgGSAssociateWithClan::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGSAssociateWithClan_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgGSAssociateWithClan::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGSAssociateWithClan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_id_clan_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGSAssociateWithClan::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGSAssociateWithClan*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steam_id_clan = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_steam_id_clan(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGSAssociateWithClan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGSAssociateWithClan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_clan = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_steam_id_clan(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_clan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGSAssociateWithClan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGSAssociateWithClan)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGSAssociateWithClan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGSAssociateWithClan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_clan = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_clan(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGSAssociateWithClan)
}

::google::protobuf::uint8* CMsgGSAssociateWithClan::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGSAssociateWithClan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_clan = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_clan(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGSAssociateWithClan)
  return target;
}

size_t CMsgGSAssociateWithClan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGSAssociateWithClan)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 steam_id_clan = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSAssociateWithClan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGSAssociateWithClan)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSAssociateWithClan* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGSAssociateWithClan>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGSAssociateWithClan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGSAssociateWithClan)
    MergeFrom(*source);
  }
}

void CMsgGSAssociateWithClan::MergeFrom(const CMsgGSAssociateWithClan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGSAssociateWithClan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id_clan()) {
    set_steam_id_clan(from.steam_id_clan());
  }
}

void CMsgGSAssociateWithClan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGSAssociateWithClan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSAssociateWithClan::CopyFrom(const CMsgGSAssociateWithClan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGSAssociateWithClan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSAssociateWithClan::IsInitialized() const {
  return true;
}

void CMsgGSAssociateWithClan::Swap(CMsgGSAssociateWithClan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSAssociateWithClan::InternalSwap(CMsgGSAssociateWithClan* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(steam_id_clan_, other->steam_id_clan_);
}

::google::protobuf::Metadata CMsgGSAssociateWithClan::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSAssociateWithClanResponse::InitAsDefaultInstance() {
}
class CMsgGSAssociateWithClanResponse::HasBitSetters {
 public:
  static void set_has_steam_id_clan(CMsgGSAssociateWithClanResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_eresult(CMsgGSAssociateWithClanResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSAssociateWithClanResponse::kSteamIdClanFieldNumber;
const int CMsgGSAssociateWithClanResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSAssociateWithClanResponse::CMsgGSAssociateWithClanResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGSAssociateWithClanResponse)
}
CMsgGSAssociateWithClanResponse::CMsgGSAssociateWithClanResponse(const CMsgGSAssociateWithClanResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_clan_, &from.steam_id_clan_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steam_id_clan_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGSAssociateWithClanResponse)
}

void CMsgGSAssociateWithClanResponse::SharedCtor() {
  steam_id_clan_ = PROTOBUF_ULONGLONG(0);
  eresult_ = 2u;
}

CMsgGSAssociateWithClanResponse::~CMsgGSAssociateWithClanResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGSAssociateWithClanResponse)
  SharedDtor();
}

void CMsgGSAssociateWithClanResponse::SharedDtor() {
}

void CMsgGSAssociateWithClanResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGSAssociateWithClanResponse& CMsgGSAssociateWithClanResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGSAssociateWithClanResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgGSAssociateWithClanResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGSAssociateWithClanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    steam_id_clan_ = PROTOBUF_ULONGLONG(0);
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGSAssociateWithClanResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGSAssociateWithClanResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steam_id_clan = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_steam_id_clan(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 eresult = 2 [default = 2];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGSAssociateWithClanResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGSAssociateWithClanResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_clan = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_steam_id_clan(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_clan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 2 [default = 2];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGSAssociateWithClanResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGSAssociateWithClanResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGSAssociateWithClanResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGSAssociateWithClanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_clan = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_clan(), output);
  }

  // optional uint32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGSAssociateWithClanResponse)
}

::google::protobuf::uint8* CMsgGSAssociateWithClanResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGSAssociateWithClanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_clan = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_clan(), target);
  }

  // optional uint32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGSAssociateWithClanResponse)
  return target;
}

size_t CMsgGSAssociateWithClanResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGSAssociateWithClanResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 steam_id_clan = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint32 eresult = 2 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSAssociateWithClanResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGSAssociateWithClanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSAssociateWithClanResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGSAssociateWithClanResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGSAssociateWithClanResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGSAssociateWithClanResponse)
    MergeFrom(*source);
  }
}

void CMsgGSAssociateWithClanResponse::MergeFrom(const CMsgGSAssociateWithClanResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGSAssociateWithClanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_clan_ = from.steam_id_clan_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGSAssociateWithClanResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGSAssociateWithClanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSAssociateWithClanResponse::CopyFrom(const CMsgGSAssociateWithClanResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGSAssociateWithClanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSAssociateWithClanResponse::IsInitialized() const {
  return true;
}

void CMsgGSAssociateWithClanResponse::Swap(CMsgGSAssociateWithClanResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSAssociateWithClanResponse::InternalSwap(CMsgGSAssociateWithClanResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(steam_id_clan_, other->steam_id_clan_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgGSAssociateWithClanResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSComputeNewPlayerCompatibility::InitAsDefaultInstance() {
}
class CMsgGSComputeNewPlayerCompatibility::HasBitSetters {
 public:
  static void set_has_steam_id_candidate(CMsgGSComputeNewPlayerCompatibility* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSComputeNewPlayerCompatibility::kSteamIdCandidateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSComputeNewPlayerCompatibility::CMsgGSComputeNewPlayerCompatibility()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGSComputeNewPlayerCompatibility)
}
CMsgGSComputeNewPlayerCompatibility::CMsgGSComputeNewPlayerCompatibility(const CMsgGSComputeNewPlayerCompatibility& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_candidate_ = from.steam_id_candidate_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGSComputeNewPlayerCompatibility)
}

void CMsgGSComputeNewPlayerCompatibility::SharedCtor() {
  steam_id_candidate_ = PROTOBUF_ULONGLONG(0);
}

CMsgGSComputeNewPlayerCompatibility::~CMsgGSComputeNewPlayerCompatibility() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  SharedDtor();
}

void CMsgGSComputeNewPlayerCompatibility::SharedDtor() {
}

void CMsgGSComputeNewPlayerCompatibility::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGSComputeNewPlayerCompatibility& CMsgGSComputeNewPlayerCompatibility::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGSComputeNewPlayerCompatibility_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgGSComputeNewPlayerCompatibility::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_id_candidate_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGSComputeNewPlayerCompatibility::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGSComputeNewPlayerCompatibility*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steam_id_candidate = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_steam_id_candidate(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGSComputeNewPlayerCompatibility::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_candidate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_steam_id_candidate(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_candidate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGSComputeNewPlayerCompatibility::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_candidate = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_candidate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGSComputeNewPlayerCompatibility)
}

::google::protobuf::uint8* CMsgGSComputeNewPlayerCompatibility::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_candidate = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_candidate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  return target;
}

size_t CMsgGSComputeNewPlayerCompatibility::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 steam_id_candidate = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSComputeNewPlayerCompatibility::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSComputeNewPlayerCompatibility* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGSComputeNewPlayerCompatibility>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGSComputeNewPlayerCompatibility)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGSComputeNewPlayerCompatibility)
    MergeFrom(*source);
  }
}

void CMsgGSComputeNewPlayerCompatibility::MergeFrom(const CMsgGSComputeNewPlayerCompatibility& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id_candidate()) {
    set_steam_id_candidate(from.steam_id_candidate());
  }
}

void CMsgGSComputeNewPlayerCompatibility::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSComputeNewPlayerCompatibility::CopyFrom(const CMsgGSComputeNewPlayerCompatibility& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSComputeNewPlayerCompatibility::IsInitialized() const {
  return true;
}

void CMsgGSComputeNewPlayerCompatibility::Swap(CMsgGSComputeNewPlayerCompatibility* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSComputeNewPlayerCompatibility::InternalSwap(CMsgGSComputeNewPlayerCompatibility* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(steam_id_candidate_, other->steam_id_candidate_);
}

::google::protobuf::Metadata CMsgGSComputeNewPlayerCompatibility::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGSComputeNewPlayerCompatibilityResponse::InitAsDefaultInstance() {
}
class CMsgGSComputeNewPlayerCompatibilityResponse::HasBitSetters {
 public:
  static void set_has_steam_id_candidate(CMsgGSComputeNewPlayerCompatibilityResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_eresult(CMsgGSComputeNewPlayerCompatibilityResponse* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_is_clan_member(CMsgGSComputeNewPlayerCompatibilityResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ct_dont_like_you(CMsgGSComputeNewPlayerCompatibilityResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_ct_you_dont_like(CMsgGSComputeNewPlayerCompatibilityResponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_ct_clanmembers_dont_like_you(CMsgGSComputeNewPlayerCompatibilityResponse* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSComputeNewPlayerCompatibilityResponse::kSteamIdCandidateFieldNumber;
const int CMsgGSComputeNewPlayerCompatibilityResponse::kEresultFieldNumber;
const int CMsgGSComputeNewPlayerCompatibilityResponse::kIsClanMemberFieldNumber;
const int CMsgGSComputeNewPlayerCompatibilityResponse::kCtDontLikeYouFieldNumber;
const int CMsgGSComputeNewPlayerCompatibilityResponse::kCtYouDontLikeFieldNumber;
const int CMsgGSComputeNewPlayerCompatibilityResponse::kCtClanmembersDontLikeYouFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSComputeNewPlayerCompatibilityResponse::CMsgGSComputeNewPlayerCompatibilityResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
}
CMsgGSComputeNewPlayerCompatibilityResponse::CMsgGSComputeNewPlayerCompatibilityResponse(const CMsgGSComputeNewPlayerCompatibilityResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_candidate_, &from.steam_id_candidate_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steam_id_candidate_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
}

void CMsgGSComputeNewPlayerCompatibilityResponse::SharedCtor() {
  ::memset(&steam_id_candidate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ct_clanmembers_dont_like_you_) -
      reinterpret_cast<char*>(&steam_id_candidate_)) + sizeof(ct_clanmembers_dont_like_you_));
  eresult_ = 2u;
}

CMsgGSComputeNewPlayerCompatibilityResponse::~CMsgGSComputeNewPlayerCompatibilityResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  SharedDtor();
}

void CMsgGSComputeNewPlayerCompatibilityResponse::SharedDtor() {
}

void CMsgGSComputeNewPlayerCompatibilityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGSComputeNewPlayerCompatibilityResponse& CMsgGSComputeNewPlayerCompatibilityResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGSComputeNewPlayerCompatibilityResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgGSComputeNewPlayerCompatibilityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&steam_id_candidate_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ct_clanmembers_dont_like_you_) -
        reinterpret_cast<char*>(&steam_id_candidate_)) + sizeof(ct_clanmembers_dont_like_you_));
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGSComputeNewPlayerCompatibilityResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGSComputeNewPlayerCompatibilityResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steam_id_candidate = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_steam_id_candidate(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 eresult = 2 [default = 2];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool is_clan_member = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_is_clan_member(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 ct_dont_like_you = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_ct_dont_like_you(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 ct_you_dont_like = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_ct_you_dont_like(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 ct_clanmembers_dont_like_you = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_ct_clanmembers_dont_like_you(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGSComputeNewPlayerCompatibilityResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_candidate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_steam_id_candidate(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_candidate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 2 [default = 2];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_clan_member = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_is_clan_member(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_clan_member_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ct_dont_like_you = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_ct_dont_like_you(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ct_dont_like_you_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ct_you_dont_like = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_ct_you_dont_like(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ct_you_dont_like_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ct_clanmembers_dont_like_you = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_ct_clanmembers_dont_like_you(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ct_clanmembers_dont_like_you_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGSComputeNewPlayerCompatibilityResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_candidate = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_candidate(), output);
  }

  // optional uint32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult(), output);
  }

  // optional bool is_clan_member = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_clan_member(), output);
  }

  // optional int32 ct_dont_like_you = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ct_dont_like_you(), output);
  }

  // optional int32 ct_you_dont_like = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ct_you_dont_like(), output);
  }

  // optional int32 ct_clanmembers_dont_like_you = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ct_clanmembers_dont_like_you(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
}

::google::protobuf::uint8* CMsgGSComputeNewPlayerCompatibilityResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_candidate = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_candidate(), target);
  }

  // optional uint32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult(), target);
  }

  // optional bool is_clan_member = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_clan_member(), target);
  }

  // optional int32 ct_dont_like_you = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ct_dont_like_you(), target);
  }

  // optional int32 ct_you_dont_like = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ct_you_dont_like(), target);
  }

  // optional int32 ct_clanmembers_dont_like_you = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ct_clanmembers_dont_like_you(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  return target;
}

size_t CMsgGSComputeNewPlayerCompatibilityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional fixed64 steam_id_candidate = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional bool is_clan_member = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional int32 ct_dont_like_you = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ct_dont_like_you());
    }

    // optional int32 ct_you_dont_like = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ct_you_dont_like());
    }

    // optional int32 ct_clanmembers_dont_like_you = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ct_clanmembers_dont_like_you());
    }

    // optional uint32 eresult = 2 [default = 2];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGSComputeNewPlayerCompatibilityResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSComputeNewPlayerCompatibilityResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGSComputeNewPlayerCompatibilityResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
    MergeFrom(*source);
  }
}

void CMsgGSComputeNewPlayerCompatibilityResponse::MergeFrom(const CMsgGSComputeNewPlayerCompatibilityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_candidate_ = from.steam_id_candidate_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_clan_member_ = from.is_clan_member_;
    }
    if (cached_has_bits & 0x00000004u) {
      ct_dont_like_you_ = from.ct_dont_like_you_;
    }
    if (cached_has_bits & 0x00000008u) {
      ct_you_dont_like_ = from.ct_you_dont_like_;
    }
    if (cached_has_bits & 0x00000010u) {
      ct_clanmembers_dont_like_you_ = from.ct_clanmembers_dont_like_you_;
    }
    if (cached_has_bits & 0x00000020u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGSComputeNewPlayerCompatibilityResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSComputeNewPlayerCompatibilityResponse::CopyFrom(const CMsgGSComputeNewPlayerCompatibilityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSComputeNewPlayerCompatibilityResponse::IsInitialized() const {
  return true;
}

void CMsgGSComputeNewPlayerCompatibilityResponse::Swap(CMsgGSComputeNewPlayerCompatibilityResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSComputeNewPlayerCompatibilityResponse::InternalSwap(CMsgGSComputeNewPlayerCompatibilityResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(steam_id_candidate_, other->steam_id_candidate_);
  swap(is_clan_member_, other->is_clan_member_);
  swap(ct_dont_like_you_, other->ct_dont_like_you_);
  swap(ct_you_dont_like_, other->ct_you_dont_like_);
  swap(ct_clanmembers_dont_like_you_, other->ct_clanmembers_dont_like_you_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgGSComputeNewPlayerCompatibilityResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientSentLogs::InitAsDefaultInstance() {
}
class CMsgClientSentLogs::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSentLogs::CMsgClientSentLogs()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientSentLogs)
}
CMsgClientSentLogs::CMsgClientSentLogs(const CMsgClientSentLogs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientSentLogs)
}

void CMsgClientSentLogs::SharedCtor() {
}

CMsgClientSentLogs::~CMsgClientSentLogs() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientSentLogs)
  SharedDtor();
}

void CMsgClientSentLogs::SharedDtor() {
}

void CMsgClientSentLogs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientSentLogs& CMsgClientSentLogs::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientSentLogs_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientSentLogs::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientSentLogs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientSentLogs::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientSentLogs*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientSentLogs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientSentLogs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientSentLogs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientSentLogs)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientSentLogs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientSentLogs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientSentLogs)
}

::google::protobuf::uint8* CMsgClientSentLogs::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientSentLogs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientSentLogs)
  return target;
}

size_t CMsgClientSentLogs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientSentLogs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientSentLogs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientSentLogs)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSentLogs* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientSentLogs>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientSentLogs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientSentLogs)
    MergeFrom(*source);
  }
}

void CMsgClientSentLogs::MergeFrom(const CMsgClientSentLogs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientSentLogs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientSentLogs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientSentLogs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSentLogs::CopyFrom(const CMsgClientSentLogs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientSentLogs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSentLogs::IsInitialized() const {
  return true;
}

void CMsgClientSentLogs::Swap(CMsgClientSentLogs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSentLogs::InternalSwap(CMsgClientSentLogs* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CMsgClientSentLogs::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCClient::InitAsDefaultInstance() {
}
class CMsgGCClient::HasBitSetters {
 public:
  static void set_has_appid(CMsgGCClient* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_msgtype(CMsgGCClient* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_payload(CMsgGCClient* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_steamid(CMsgGCClient* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_gcname(CMsgGCClient* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ip(CMsgGCClient* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCClient::kAppidFieldNumber;
const int CMsgGCClient::kMsgtypeFieldNumber;
const int CMsgGCClient::kPayloadFieldNumber;
const int CMsgGCClient::kSteamidFieldNumber;
const int CMsgGCClient::kGcnameFieldNumber;
const int CMsgGCClient::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCClient::CMsgGCClient()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGCClient)
}
CMsgGCClient::CMsgGCClient(const CMsgGCClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_payload()) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  gcname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gcname()) {
    gcname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcname_);
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ip_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(ip_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGCClient)
}

void CMsgGCClient::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGCClient_steammessages_5fclientserver_5f2_2eproto.base);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ip_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(ip_));
}

CMsgGCClient::~CMsgGCClient() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGCClient)
  SharedDtor();
}

void CMsgGCClient::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCClient::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGCClient& CMsgGCClient::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGCClient_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgGCClient::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGCClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      payload_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      gcname_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ip_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(ip_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGCClient::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGCClient*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_appid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 msgtype = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_msgtype(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes payload = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_payload();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional fixed64 steamid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 33) goto handle_unusual;
        msg->set_steamid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional string gcname = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgGCClient.gcname");
        object = msg->mutable_gcname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 ip = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_ip(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGCClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGCClient)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_appid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_msgtype(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes payload = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {
          HasBitSetters::set_has_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gcname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gcname().data(), static_cast<int>(this->gcname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGCClient.gcname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ip = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_ip(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGCClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGCClient)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGCClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGCClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 msgtype = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgtype(), output);
  }

  // optional bytes payload = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->payload(), output);
  }

  // optional fixed64 steamid = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->steamid(), output);
  }

  // optional string gcname = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gcname().data(), static_cast<int>(this->gcname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGCClient.gcname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->gcname(), output);
  }

  // optional uint32 ip = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGCClient)
}

::google::protobuf::uint8* CMsgGCClient::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGCClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 msgtype = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgtype(), target);
  }

  // optional bytes payload = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->payload(), target);
  }

  // optional fixed64 steamid = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->steamid(), target);
  }

  // optional string gcname = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gcname().data(), static_cast<int>(this->gcname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGCClient.gcname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->gcname(), target);
  }

  // optional uint32 ip = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGCClient)
  return target;
}

size_t CMsgGCClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGCClient)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional bytes payload = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->payload());
    }

    // optional string gcname = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gcname());
    }

    // optional uint32 appid = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 msgtype = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgtype());
    }

    // optional fixed64 steamid = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

    // optional uint32 ip = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ip());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGCClient)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCClient* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGCClient>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGCClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGCClient)
    MergeFrom(*source);
  }
}

void CMsgGCClient::MergeFrom(const CMsgGCClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGCClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      gcname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcname_);
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      msgtype_ = from.msgtype_;
    }
    if (cached_has_bits & 0x00000010u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000020u) {
      ip_ = from.ip_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGCClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCClient::CopyFrom(const CMsgGCClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGCClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCClient::IsInitialized() const {
  return true;
}

void CMsgGCClient::Swap(CMsgGCClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCClient::InternalSwap(CMsgGCClient* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gcname_.Swap(&other->gcname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(msgtype_, other->msgtype_);
  swap(steamid_, other->steamid_);
  swap(ip_, other->ip_);
}

::google::protobuf::Metadata CMsgGCClient::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestFreeLicense::InitAsDefaultInstance() {
}
class CMsgClientRequestFreeLicense::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestFreeLicense::kAppidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestFreeLicense::CMsgClientRequestFreeLicense()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestFreeLicense)
}
CMsgClientRequestFreeLicense::CMsgClientRequestFreeLicense(const CMsgClientRequestFreeLicense& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      appids_(from.appids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestFreeLicense)
}

void CMsgClientRequestFreeLicense::SharedCtor() {
}

CMsgClientRequestFreeLicense::~CMsgClientRequestFreeLicense() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestFreeLicense)
  SharedDtor();
}

void CMsgClientRequestFreeLicense::SharedDtor() {
}

void CMsgClientRequestFreeLicense::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRequestFreeLicense& CMsgClientRequestFreeLicense::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRequestFreeLicense_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRequestFreeLicense::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestFreeLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRequestFreeLicense::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRequestFreeLicense*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 appids = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_appids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_appids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRequestFreeLicense::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestFreeLicense)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 appids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_appids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_appids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestFreeLicense)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestFreeLicense)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRequestFreeLicense::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestFreeLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 appids = 2;
  for (int i = 0, n = this->appids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->appids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestFreeLicense)
}

::google::protobuf::uint8* CMsgClientRequestFreeLicense::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestFreeLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 appids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->appids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestFreeLicense)
  return target;
}

size_t CMsgClientRequestFreeLicense::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestFreeLicense)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 appids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->appids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->appids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestFreeLicense::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestFreeLicense)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestFreeLicense* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRequestFreeLicense>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestFreeLicense)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestFreeLicense)
    MergeFrom(*source);
  }
}

void CMsgClientRequestFreeLicense::MergeFrom(const CMsgClientRequestFreeLicense& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestFreeLicense)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  appids_.MergeFrom(from.appids_);
}

void CMsgClientRequestFreeLicense::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestFreeLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestFreeLicense::CopyFrom(const CMsgClientRequestFreeLicense& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestFreeLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestFreeLicense::IsInitialized() const {
  return true;
}

void CMsgClientRequestFreeLicense::Swap(CMsgClientRequestFreeLicense* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestFreeLicense::InternalSwap(CMsgClientRequestFreeLicense* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  appids_.InternalSwap(&other->appids_);
}

::google::protobuf::Metadata CMsgClientRequestFreeLicense::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestFreeLicenseResponse::InitAsDefaultInstance() {
}
class CMsgClientRequestFreeLicenseResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientRequestFreeLicenseResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestFreeLicenseResponse::kEresultFieldNumber;
const int CMsgClientRequestFreeLicenseResponse::kGrantedPackageidsFieldNumber;
const int CMsgClientRequestFreeLicenseResponse::kGrantedAppidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestFreeLicenseResponse::CMsgClientRequestFreeLicenseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestFreeLicenseResponse)
}
CMsgClientRequestFreeLicenseResponse::CMsgClientRequestFreeLicenseResponse(const CMsgClientRequestFreeLicenseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      granted_packageids_(from.granted_packageids_),
      granted_appids_(from.granted_appids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestFreeLicenseResponse)
}

void CMsgClientRequestFreeLicenseResponse::SharedCtor() {
  eresult_ = 2u;
}

CMsgClientRequestFreeLicenseResponse::~CMsgClientRequestFreeLicenseResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestFreeLicenseResponse)
  SharedDtor();
}

void CMsgClientRequestFreeLicenseResponse::SharedDtor() {
}

void CMsgClientRequestFreeLicenseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRequestFreeLicenseResponse& CMsgClientRequestFreeLicenseResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRequestFreeLicenseResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRequestFreeLicenseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  granted_packageids_.Clear();
  granted_appids_.Clear();
  eresult_ = 2u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRequestFreeLicenseResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRequestFreeLicenseResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 granted_packageids = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_granted_packageids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_granted_packageids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // repeated uint32 granted_appids = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 24) {
          do {
            msg->add_granted_appids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_granted_appids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRequestFreeLicenseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 granted_packageids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_granted_packageids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_granted_packageids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 granted_appids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_granted_appids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_granted_appids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestFreeLicenseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestFreeLicenseResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRequestFreeLicenseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // repeated uint32 granted_packageids = 2;
  for (int i = 0, n = this->granted_packageids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->granted_packageids(i), output);
  }

  // repeated uint32 granted_appids = 3;
  for (int i = 0, n = this->granted_appids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->granted_appids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestFreeLicenseResponse)
}

::google::protobuf::uint8* CMsgClientRequestFreeLicenseResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // repeated uint32 granted_packageids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->granted_packageids_, target);

  // repeated uint32 granted_appids = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->granted_appids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestFreeLicenseResponse)
  return target;
}

size_t CMsgClientRequestFreeLicenseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 granted_packageids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->granted_packageids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->granted_packageids_size());
    total_size += data_size;
  }

  // repeated uint32 granted_appids = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->granted_appids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->granted_appids_size());
    total_size += data_size;
  }

  // optional uint32 eresult = 1 [default = 2];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestFreeLicenseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestFreeLicenseResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRequestFreeLicenseResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestFreeLicenseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestFreeLicenseResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRequestFreeLicenseResponse::MergeFrom(const CMsgClientRequestFreeLicenseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  granted_packageids_.MergeFrom(from.granted_packageids_);
  granted_appids_.MergeFrom(from.granted_appids_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientRequestFreeLicenseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestFreeLicenseResponse::CopyFrom(const CMsgClientRequestFreeLicenseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestFreeLicenseResponse::IsInitialized() const {
  return true;
}

void CMsgClientRequestFreeLicenseResponse::Swap(CMsgClientRequestFreeLicenseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestFreeLicenseResponse::InternalSwap(CMsgClientRequestFreeLicenseResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  granted_packageids_.InternalSwap(&other->granted_packageids_);
  granted_appids_.InternalSwap(&other->granted_appids_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientRequestFreeLicenseResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDRMDownloadRequestWithCrashData::InitAsDefaultInstance() {
}
class CMsgDRMDownloadRequestWithCrashData::HasBitSetters {
 public:
  static void set_has_download_flags(CMsgDRMDownloadRequestWithCrashData* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_download_types_known(CMsgDRMDownloadRequestWithCrashData* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_guid_drm(CMsgDRMDownloadRequestWithCrashData* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_guid_split(CMsgDRMDownloadRequestWithCrashData* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_guid_merge(CMsgDRMDownloadRequestWithCrashData* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_module_name(CMsgDRMDownloadRequestWithCrashData* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_module_path(CMsgDRMDownloadRequestWithCrashData* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_crash_data(CMsgDRMDownloadRequestWithCrashData* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDRMDownloadRequestWithCrashData::kDownloadFlagsFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kDownloadTypesKnownFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kGuidDrmFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kGuidSplitFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kGuidMergeFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kModuleNameFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kModulePathFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kCrashDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDRMDownloadRequestWithCrashData::CMsgDRMDownloadRequestWithCrashData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgDRMDownloadRequestWithCrashData)
}
CMsgDRMDownloadRequestWithCrashData::CMsgDRMDownloadRequestWithCrashData(const CMsgDRMDownloadRequestWithCrashData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_drm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid_drm()) {
    guid_drm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_drm_);
  }
  guid_split_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid_split()) {
    guid_split_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_split_);
  }
  guid_merge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid_merge()) {
    guid_merge_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_merge_);
  }
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_name()) {
    module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
  }
  module_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_path()) {
    module_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_path_);
  }
  crash_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_crash_data()) {
    crash_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crash_data_);
  }
  ::memcpy(&download_flags_, &from.download_flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&download_types_known_) -
    reinterpret_cast<char*>(&download_flags_)) + sizeof(download_types_known_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgDRMDownloadRequestWithCrashData)
}

void CMsgDRMDownloadRequestWithCrashData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDRMDownloadRequestWithCrashData_steammessages_5fclientserver_5f2_2eproto.base);
  guid_drm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_split_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_merge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crash_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&download_flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&download_types_known_) -
      reinterpret_cast<char*>(&download_flags_)) + sizeof(download_types_known_));
}

CMsgDRMDownloadRequestWithCrashData::~CMsgDRMDownloadRequestWithCrashData() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  SharedDtor();
}

void CMsgDRMDownloadRequestWithCrashData::SharedDtor() {
  guid_drm_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_split_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_merge_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crash_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDRMDownloadRequestWithCrashData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDRMDownloadRequestWithCrashData& CMsgDRMDownloadRequestWithCrashData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDRMDownloadRequestWithCrashData_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgDRMDownloadRequestWithCrashData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      guid_drm_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      guid_split_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      guid_merge_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      module_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      module_path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      crash_data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&download_flags_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&download_types_known_) -
        reinterpret_cast<char*>(&download_flags_)) + sizeof(download_types_known_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDRMDownloadRequestWithCrashData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDRMDownloadRequestWithCrashData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 download_flags = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_download_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 download_types_known = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_download_types_known(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes guid_drm = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_guid_drm();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes guid_split = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_guid_split();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes guid_merge = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_guid_merge();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string module_name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgDRMDownloadRequestWithCrashData.module_name");
        object = msg->mutable_module_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string module_path = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgDRMDownloadRequestWithCrashData.module_path");
        object = msg->mutable_module_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes crash_data = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_crash_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDRMDownloadRequestWithCrashData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 download_flags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_download_flags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_types_known = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_download_types_known(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_types_known_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes guid_drm = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid_drm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes guid_split = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid_split()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes guid_merge = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid_merge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string module_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->module_name().data(), static_cast<int>(this->module_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgDRMDownloadRequestWithCrashData.module_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string module_path = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->module_path().data(), static_cast<int>(this->module_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgDRMDownloadRequestWithCrashData.module_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes crash_data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_crash_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDRMDownloadRequestWithCrashData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 download_flags = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->download_flags(), output);
  }

  // optional uint32 download_types_known = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->download_types_known(), output);
  }

  // optional bytes guid_drm = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->guid_drm(), output);
  }

  // optional bytes guid_split = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->guid_split(), output);
  }

  // optional bytes guid_merge = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->guid_merge(), output);
  }

  // optional string module_name = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_name().data(), static_cast<int>(this->module_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadRequestWithCrashData.module_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->module_name(), output);
  }

  // optional string module_path = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_path().data(), static_cast<int>(this->module_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadRequestWithCrashData.module_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->module_path(), output);
  }

  // optional bytes crash_data = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->crash_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgDRMDownloadRequestWithCrashData)
}

::google::protobuf::uint8* CMsgDRMDownloadRequestWithCrashData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 download_flags = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->download_flags(), target);
  }

  // optional uint32 download_types_known = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->download_types_known(), target);
  }

  // optional bytes guid_drm = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->guid_drm(), target);
  }

  // optional bytes guid_split = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->guid_split(), target);
  }

  // optional bytes guid_merge = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->guid_merge(), target);
  }

  // optional string module_name = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_name().data(), static_cast<int>(this->module_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadRequestWithCrashData.module_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->module_name(), target);
  }

  // optional string module_path = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_path().data(), static_cast<int>(this->module_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadRequestWithCrashData.module_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->module_path(), target);
  }

  // optional bytes crash_data = 8;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->crash_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  return target;
}

size_t CMsgDRMDownloadRequestWithCrashData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes guid_drm = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->guid_drm());
    }

    // optional bytes guid_split = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->guid_split());
    }

    // optional bytes guid_merge = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->guid_merge());
    }

    // optional string module_name = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->module_name());
    }

    // optional string module_path = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->module_path());
    }

    // optional bytes crash_data = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->crash_data());
    }

    // optional uint32 download_flags = 1;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_flags());
    }

    // optional uint32 download_types_known = 2;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_types_known());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDRMDownloadRequestWithCrashData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDRMDownloadRequestWithCrashData* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDRMDownloadRequestWithCrashData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgDRMDownloadRequestWithCrashData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgDRMDownloadRequestWithCrashData)
    MergeFrom(*source);
  }
}

void CMsgDRMDownloadRequestWithCrashData::MergeFrom(const CMsgDRMDownloadRequestWithCrashData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      guid_drm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_drm_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      guid_split_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_split_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      guid_merge_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_merge_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      module_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_path_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      crash_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crash_data_);
    }
    if (cached_has_bits & 0x00000040u) {
      download_flags_ = from.download_flags_;
    }
    if (cached_has_bits & 0x00000080u) {
      download_types_known_ = from.download_types_known_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDRMDownloadRequestWithCrashData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDRMDownloadRequestWithCrashData::CopyFrom(const CMsgDRMDownloadRequestWithCrashData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDRMDownloadRequestWithCrashData::IsInitialized() const {
  return true;
}

void CMsgDRMDownloadRequestWithCrashData::Swap(CMsgDRMDownloadRequestWithCrashData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDRMDownloadRequestWithCrashData::InternalSwap(CMsgDRMDownloadRequestWithCrashData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  guid_drm_.Swap(&other->guid_drm_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  guid_split_.Swap(&other->guid_split_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  guid_merge_.Swap(&other->guid_merge_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  module_name_.Swap(&other->module_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  module_path_.Swap(&other->module_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  crash_data_.Swap(&other->crash_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(download_flags_, other->download_flags_);
  swap(download_types_known_, other->download_types_known_);
}

::google::protobuf::Metadata CMsgDRMDownloadRequestWithCrashData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDRMDownloadResponse::InitAsDefaultInstance() {
}
class CMsgDRMDownloadResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgDRMDownloadResponse* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_app_id(CMsgDRMDownloadResponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_blob_download_type(CMsgDRMDownloadResponse* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_merge_guid(CMsgDRMDownloadResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_download_file_dfs_ip(CMsgDRMDownloadResponse* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_download_file_dfs_port(CMsgDRMDownloadResponse* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_download_file_url(CMsgDRMDownloadResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_module_path(CMsgDRMDownloadResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDRMDownloadResponse::kEresultFieldNumber;
const int CMsgDRMDownloadResponse::kAppIdFieldNumber;
const int CMsgDRMDownloadResponse::kBlobDownloadTypeFieldNumber;
const int CMsgDRMDownloadResponse::kMergeGuidFieldNumber;
const int CMsgDRMDownloadResponse::kDownloadFileDfsIpFieldNumber;
const int CMsgDRMDownloadResponse::kDownloadFileDfsPortFieldNumber;
const int CMsgDRMDownloadResponse::kDownloadFileUrlFieldNumber;
const int CMsgDRMDownloadResponse::kModulePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDRMDownloadResponse::CMsgDRMDownloadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgDRMDownloadResponse)
}
CMsgDRMDownloadResponse::CMsgDRMDownloadResponse(const CMsgDRMDownloadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  merge_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_merge_guid()) {
    merge_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merge_guid_);
  }
  download_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_download_file_url()) {
    download_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.download_file_url_);
  }
  module_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_path()) {
    module_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_path_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgDRMDownloadResponse)
}

void CMsgDRMDownloadResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDRMDownloadResponse_steammessages_5fclientserver_5f2_2eproto.base);
  merge_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&download_file_dfs_port_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(download_file_dfs_port_));
  eresult_ = 2u;
}

CMsgDRMDownloadResponse::~CMsgDRMDownloadResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgDRMDownloadResponse)
  SharedDtor();
}

void CMsgDRMDownloadResponse::SharedDtor() {
  merge_guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_file_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDRMDownloadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDRMDownloadResponse& CMsgDRMDownloadResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDRMDownloadResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgDRMDownloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgDRMDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      merge_guid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      download_file_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      module_path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&download_file_dfs_port_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(download_file_dfs_port_));
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDRMDownloadResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDRMDownloadResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 blob_download_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_blob_download_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes merge_guid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_merge_guid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 download_file_dfs_ip = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_download_file_dfs_ip(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 download_file_dfs_port = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_download_file_dfs_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string download_file_url = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgDRMDownloadResponse.download_file_url");
        object = msg->mutable_download_file_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string module_path = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgDRMDownloadResponse.module_path");
        object = msg->mutable_module_path();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDRMDownloadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgDRMDownloadResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 blob_download_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_blob_download_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blob_download_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes merge_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_merge_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_file_dfs_ip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_download_file_dfs_ip(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_file_dfs_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_file_dfs_port = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_download_file_dfs_port(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_file_dfs_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string download_file_url = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_download_file_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->download_file_url().data(), static_cast<int>(this->download_file_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgDRMDownloadResponse.download_file_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string module_path = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->module_path().data(), static_cast<int>(this->module_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgDRMDownloadResponse.module_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgDRMDownloadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgDRMDownloadResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDRMDownloadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgDRMDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional uint32 blob_download_type = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->blob_download_type(), output);
  }

  // optional bytes merge_guid = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->merge_guid(), output);
  }

  // optional uint32 download_file_dfs_ip = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->download_file_dfs_ip(), output);
  }

  // optional uint32 download_file_dfs_port = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->download_file_dfs_port(), output);
  }

  // optional string download_file_url = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->download_file_url().data(), static_cast<int>(this->download_file_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadResponse.download_file_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->download_file_url(), output);
  }

  // optional string module_path = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_path().data(), static_cast<int>(this->module_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadResponse.module_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->module_path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgDRMDownloadResponse)
}

::google::protobuf::uint8* CMsgDRMDownloadResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgDRMDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional uint32 blob_download_type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->blob_download_type(), target);
  }

  // optional bytes merge_guid = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->merge_guid(), target);
  }

  // optional uint32 download_file_dfs_ip = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->download_file_dfs_ip(), target);
  }

  // optional uint32 download_file_dfs_port = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->download_file_dfs_port(), target);
  }

  // optional string download_file_url = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->download_file_url().data(), static_cast<int>(this->download_file_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadResponse.download_file_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->download_file_url(), target);
  }

  // optional string module_path = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_path().data(), static_cast<int>(this->module_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadResponse.module_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->module_path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgDRMDownloadResponse)
  return target;
}

size_t CMsgDRMDownloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgDRMDownloadResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes merge_guid = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->merge_guid());
    }

    // optional string download_file_url = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->download_file_url());
    }

    // optional string module_path = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->module_path());
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 blob_download_type = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->blob_download_type());
    }

    // optional uint32 download_file_dfs_ip = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_file_dfs_ip());
    }

    // optional uint32 download_file_dfs_port = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_file_dfs_port());
    }

    // optional uint32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDRMDownloadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgDRMDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDRMDownloadResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDRMDownloadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgDRMDownloadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgDRMDownloadResponse)
    MergeFrom(*source);
  }
}

void CMsgDRMDownloadResponse::MergeFrom(const CMsgDRMDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgDRMDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      merge_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merge_guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      download_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.download_file_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      module_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_path_);
    }
    if (cached_has_bits & 0x00000008u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      blob_download_type_ = from.blob_download_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      download_file_dfs_ip_ = from.download_file_dfs_ip_;
    }
    if (cached_has_bits & 0x00000040u) {
      download_file_dfs_port_ = from.download_file_dfs_port_;
    }
    if (cached_has_bits & 0x00000080u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDRMDownloadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgDRMDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDRMDownloadResponse::CopyFrom(const CMsgDRMDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgDRMDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDRMDownloadResponse::IsInitialized() const {
  return true;
}

void CMsgDRMDownloadResponse::Swap(CMsgDRMDownloadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDRMDownloadResponse::InternalSwap(CMsgDRMDownloadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  merge_guid_.Swap(&other->merge_guid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  download_file_url_.Swap(&other->download_file_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  module_path_.Swap(&other->module_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(blob_download_type_, other->blob_download_type_);
  swap(download_file_dfs_ip_, other->download_file_dfs_ip_);
  swap(download_file_dfs_port_, other->download_file_dfs_port_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgDRMDownloadResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDRMFinalResult::InitAsDefaultInstance() {
}
class CMsgDRMFinalResult::HasBitSetters {
 public:
  static void set_has_eresult(CMsgDRMFinalResult* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_app_id(CMsgDRMFinalResult* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_blob_download_type(CMsgDRMFinalResult* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_error_detail(CMsgDRMFinalResult* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_merge_guid(CMsgDRMFinalResult* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_download_file_dfs_ip(CMsgDRMFinalResult* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_download_file_dfs_port(CMsgDRMFinalResult* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_download_file_url(CMsgDRMFinalResult* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDRMFinalResult::kEResultFieldNumber;
const int CMsgDRMFinalResult::kAppIdFieldNumber;
const int CMsgDRMFinalResult::kBlobDownloadTypeFieldNumber;
const int CMsgDRMFinalResult::kErrorDetailFieldNumber;
const int CMsgDRMFinalResult::kMergeGuidFieldNumber;
const int CMsgDRMFinalResult::kDownloadFileDfsIpFieldNumber;
const int CMsgDRMFinalResult::kDownloadFileDfsPortFieldNumber;
const int CMsgDRMFinalResult::kDownloadFileUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDRMFinalResult::CMsgDRMFinalResult()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgDRMFinalResult)
}
CMsgDRMFinalResult::CMsgDRMFinalResult(const CMsgDRMFinalResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  merge_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_merge_guid()) {
    merge_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merge_guid_);
  }
  download_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_download_file_url()) {
    download_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.download_file_url_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgDRMFinalResult)
}

void CMsgDRMFinalResult::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgDRMFinalResult_steammessages_5fclientserver_5f2_2eproto.base);
  merge_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&download_file_dfs_port_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(download_file_dfs_port_));
  eresult_ = 2u;
}

CMsgDRMFinalResult::~CMsgDRMFinalResult() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgDRMFinalResult)
  SharedDtor();
}

void CMsgDRMFinalResult::SharedDtor() {
  merge_guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_file_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDRMFinalResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDRMFinalResult& CMsgDRMFinalResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDRMFinalResult_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgDRMFinalResult::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgDRMFinalResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      merge_guid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      download_file_url_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&download_file_dfs_port_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(download_file_dfs_port_));
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDRMFinalResult::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDRMFinalResult*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 eResult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 blob_download_type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_blob_download_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 error_detail = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_error_detail(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes merge_guid = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_merge_guid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 download_file_dfs_ip = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_download_file_dfs_ip(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 download_file_dfs_port = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_download_file_dfs_port(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string download_file_url = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgDRMFinalResult.download_file_url");
        object = msg->mutable_download_file_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDRMFinalResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgDRMFinalResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eResult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 blob_download_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_blob_download_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blob_download_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 error_detail = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_error_detail(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_detail_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes merge_guid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_merge_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_file_dfs_ip = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_download_file_dfs_ip(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_file_dfs_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_file_dfs_port = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_download_file_dfs_port(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_file_dfs_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string download_file_url = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_download_file_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->download_file_url().data(), static_cast<int>(this->download_file_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgDRMFinalResult.download_file_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgDRMFinalResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgDRMFinalResult)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDRMFinalResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgDRMFinalResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional uint32 blob_download_type = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->blob_download_type(), output);
  }

  // optional uint32 error_detail = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->error_detail(), output);
  }

  // optional bytes merge_guid = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->merge_guid(), output);
  }

  // optional uint32 download_file_dfs_ip = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->download_file_dfs_ip(), output);
  }

  // optional uint32 download_file_dfs_port = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->download_file_dfs_port(), output);
  }

  // optional string download_file_url = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->download_file_url().data(), static_cast<int>(this->download_file_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMFinalResult.download_file_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->download_file_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgDRMFinalResult)
}

::google::protobuf::uint8* CMsgDRMFinalResult::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgDRMFinalResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional uint32 blob_download_type = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->blob_download_type(), target);
  }

  // optional uint32 error_detail = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->error_detail(), target);
  }

  // optional bytes merge_guid = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->merge_guid(), target);
  }

  // optional uint32 download_file_dfs_ip = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->download_file_dfs_ip(), target);
  }

  // optional uint32 download_file_dfs_port = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->download_file_dfs_port(), target);
  }

  // optional string download_file_url = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->download_file_url().data(), static_cast<int>(this->download_file_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMFinalResult.download_file_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->download_file_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgDRMFinalResult)
  return target;
}

size_t CMsgDRMFinalResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgDRMFinalResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes merge_guid = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->merge_guid());
    }

    // optional string download_file_url = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->download_file_url());
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 blob_download_type = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->blob_download_type());
    }

    // optional uint32 error_detail = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_detail());
    }

    // optional uint32 download_file_dfs_ip = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_file_dfs_ip());
    }

    // optional uint32 download_file_dfs_port = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_file_dfs_port());
    }

    // optional uint32 eResult = 1 [default = 2];
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDRMFinalResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgDRMFinalResult)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDRMFinalResult* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDRMFinalResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgDRMFinalResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgDRMFinalResult)
    MergeFrom(*source);
  }
}

void CMsgDRMFinalResult::MergeFrom(const CMsgDRMFinalResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgDRMFinalResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      merge_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merge_guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      download_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.download_file_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      blob_download_type_ = from.blob_download_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      error_detail_ = from.error_detail_;
    }
    if (cached_has_bits & 0x00000020u) {
      download_file_dfs_ip_ = from.download_file_dfs_ip_;
    }
    if (cached_has_bits & 0x00000040u) {
      download_file_dfs_port_ = from.download_file_dfs_port_;
    }
    if (cached_has_bits & 0x00000080u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDRMFinalResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgDRMFinalResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDRMFinalResult::CopyFrom(const CMsgDRMFinalResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgDRMFinalResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDRMFinalResult::IsInitialized() const {
  return true;
}

void CMsgDRMFinalResult::Swap(CMsgDRMFinalResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDRMFinalResult::InternalSwap(CMsgDRMFinalResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  merge_guid_.Swap(&other->merge_guid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  download_file_url_.Swap(&other->download_file_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(app_id_, other->app_id_);
  swap(blob_download_type_, other->blob_download_type_);
  swap(error_detail_, other->error_detail_);
  swap(download_file_dfs_ip_, other->download_file_dfs_ip_);
  swap(download_file_dfs_port_, other->download_file_dfs_port_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgDRMFinalResult::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDPCheckSpecialSurvey::InitAsDefaultInstance() {
}
class CMsgClientDPCheckSpecialSurvey::HasBitSetters {
 public:
  static void set_has_survey_id(CMsgClientDPCheckSpecialSurvey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDPCheckSpecialSurvey::kSurveyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDPCheckSpecialSurvey::CMsgClientDPCheckSpecialSurvey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientDPCheckSpecialSurvey)
}
CMsgClientDPCheckSpecialSurvey::CMsgClientDPCheckSpecialSurvey(const CMsgClientDPCheckSpecialSurvey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  survey_id_ = from.survey_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientDPCheckSpecialSurvey)
}

void CMsgClientDPCheckSpecialSurvey::SharedCtor() {
  survey_id_ = 0u;
}

CMsgClientDPCheckSpecialSurvey::~CMsgClientDPCheckSpecialSurvey() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientDPCheckSpecialSurvey)
  SharedDtor();
}

void CMsgClientDPCheckSpecialSurvey::SharedDtor() {
}

void CMsgClientDPCheckSpecialSurvey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientDPCheckSpecialSurvey& CMsgClientDPCheckSpecialSurvey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientDPCheckSpecialSurvey_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientDPCheckSpecialSurvey::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  survey_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientDPCheckSpecialSurvey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientDPCheckSpecialSurvey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 survey_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_survey_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientDPCheckSpecialSurvey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 survey_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_survey_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &survey_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientDPCheckSpecialSurvey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientDPCheckSpecialSurvey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientDPCheckSpecialSurvey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 survey_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->survey_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientDPCheckSpecialSurvey)
}

::google::protobuf::uint8* CMsgClientDPCheckSpecialSurvey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 survey_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->survey_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientDPCheckSpecialSurvey)
  return target;
}

size_t CMsgClientDPCheckSpecialSurvey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 survey_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->survey_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDPCheckSpecialSurvey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDPCheckSpecialSurvey* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientDPCheckSpecialSurvey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientDPCheckSpecialSurvey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientDPCheckSpecialSurvey)
    MergeFrom(*source);
  }
}

void CMsgClientDPCheckSpecialSurvey::MergeFrom(const CMsgClientDPCheckSpecialSurvey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_survey_id()) {
    set_survey_id(from.survey_id());
  }
}

void CMsgClientDPCheckSpecialSurvey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDPCheckSpecialSurvey::CopyFrom(const CMsgClientDPCheckSpecialSurvey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDPCheckSpecialSurvey::IsInitialized() const {
  return true;
}

void CMsgClientDPCheckSpecialSurvey::Swap(CMsgClientDPCheckSpecialSurvey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDPCheckSpecialSurvey::InternalSwap(CMsgClientDPCheckSpecialSurvey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(survey_id_, other->survey_id_);
}

::google::protobuf::Metadata CMsgClientDPCheckSpecialSurvey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDPCheckSpecialSurveyResponse::InitAsDefaultInstance() {
}
class CMsgClientDPCheckSpecialSurveyResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientDPCheckSpecialSurveyResponse* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_state(CMsgClientDPCheckSpecialSurveyResponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_name(CMsgClientDPCheckSpecialSurveyResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_custom_url(CMsgClientDPCheckSpecialSurveyResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_include_software(CMsgClientDPCheckSpecialSurveyResponse* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_token(CMsgClientDPCheckSpecialSurveyResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDPCheckSpecialSurveyResponse::kEResultFieldNumber;
const int CMsgClientDPCheckSpecialSurveyResponse::kStateFieldNumber;
const int CMsgClientDPCheckSpecialSurveyResponse::kNameFieldNumber;
const int CMsgClientDPCheckSpecialSurveyResponse::kCustomUrlFieldNumber;
const int CMsgClientDPCheckSpecialSurveyResponse::kIncludeSoftwareFieldNumber;
const int CMsgClientDPCheckSpecialSurveyResponse::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDPCheckSpecialSurveyResponse::CMsgClientDPCheckSpecialSurveyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
}
CMsgClientDPCheckSpecialSurveyResponse::CMsgClientDPCheckSpecialSurveyResponse(const CMsgClientDPCheckSpecialSurveyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  custom_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_custom_url()) {
    custom_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_url_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&state_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
}

void CMsgClientDPCheckSpecialSurveyResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientDPCheckSpecialSurveyResponse_steammessages_5fclientserver_5f2_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&include_software_) -
      reinterpret_cast<char*>(&state_)) + sizeof(include_software_));
  eresult_ = 2u;
}

CMsgClientDPCheckSpecialSurveyResponse::~CMsgClientDPCheckSpecialSurveyResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  SharedDtor();
}

void CMsgClientDPCheckSpecialSurveyResponse::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientDPCheckSpecialSurveyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientDPCheckSpecialSurveyResponse& CMsgClientDPCheckSpecialSurveyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientDPCheckSpecialSurveyResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientDPCheckSpecialSurveyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      custom_url_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000038u) {
    ::memset(&state_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&include_software_) -
        reinterpret_cast<char*>(&state_)) + sizeof(include_software_));
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientDPCheckSpecialSurveyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientDPCheckSpecialSurveyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 eResult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 state = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_state(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientDPCheckSpecialSurveyResponse.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string custom_url = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientDPCheckSpecialSurveyResponse.custom_url");
        object = msg->mutable_custom_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool include_software = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_include_software(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes token = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientDPCheckSpecialSurveyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eResult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_state(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientDPCheckSpecialSurveyResponse.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string custom_url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custom_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->custom_url().data(), static_cast<int>(this->custom_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientDPCheckSpecialSurveyResponse.custom_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool include_software = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_include_software(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_software_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes token = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientDPCheckSpecialSurveyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional uint32 state = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientDPCheckSpecialSurveyResponse.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string custom_url = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->custom_url().data(), static_cast<int>(this->custom_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientDPCheckSpecialSurveyResponse.custom_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->custom_url(), output);
  }

  // optional bool include_software = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->include_software(), output);
  }

  // optional bytes token = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
}

::google::protobuf::uint8* CMsgClientDPCheckSpecialSurveyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 state = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->state(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientDPCheckSpecialSurveyResponse.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string custom_url = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->custom_url().data(), static_cast<int>(this->custom_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientDPCheckSpecialSurveyResponse.custom_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->custom_url(), target);
  }

  // optional bool include_software = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->include_software(), target);
  }

  // optional bytes token = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  return target;
}

size_t CMsgClientDPCheckSpecialSurveyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string custom_url = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->custom_url());
    }

    // optional bytes token = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->token());
    }

    // optional uint32 state = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state());
    }

    // optional bool include_software = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional uint32 eResult = 1 [default = 2];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDPCheckSpecialSurveyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDPCheckSpecialSurveyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientDPCheckSpecialSurveyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
    MergeFrom(*source);
  }
}

void CMsgClientDPCheckSpecialSurveyResponse::MergeFrom(const CMsgClientDPCheckSpecialSurveyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      custom_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000008u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000010u) {
      include_software_ = from.include_software_;
    }
    if (cached_has_bits & 0x00000020u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDPCheckSpecialSurveyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDPCheckSpecialSurveyResponse::CopyFrom(const CMsgClientDPCheckSpecialSurveyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDPCheckSpecialSurveyResponse::IsInitialized() const {
  return true;
}

void CMsgClientDPCheckSpecialSurveyResponse::Swap(CMsgClientDPCheckSpecialSurveyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDPCheckSpecialSurveyResponse::InternalSwap(CMsgClientDPCheckSpecialSurveyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  custom_url_.Swap(&other->custom_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(state_, other->state_);
  swap(include_software_, other->include_software_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientDPCheckSpecialSurveyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDPSendSpecialSurveyResponse::InitAsDefaultInstance() {
}
class CMsgClientDPSendSpecialSurveyResponse::HasBitSetters {
 public:
  static void set_has_survey_id(CMsgClientDPSendSpecialSurveyResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_data(CMsgClientDPSendSpecialSurveyResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDPSendSpecialSurveyResponse::kSurveyIdFieldNumber;
const int CMsgClientDPSendSpecialSurveyResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDPSendSpecialSurveyResponse::CMsgClientDPSendSpecialSurveyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
}
CMsgClientDPSendSpecialSurveyResponse::CMsgClientDPSendSpecialSurveyResponse(const CMsgClientDPSendSpecialSurveyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  survey_id_ = from.survey_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
}

void CMsgClientDPSendSpecialSurveyResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientDPSendSpecialSurveyResponse_steammessages_5fclientserver_5f2_2eproto.base);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  survey_id_ = 0u;
}

CMsgClientDPSendSpecialSurveyResponse::~CMsgClientDPSendSpecialSurveyResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  SharedDtor();
}

void CMsgClientDPSendSpecialSurveyResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientDPSendSpecialSurveyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientDPSendSpecialSurveyResponse& CMsgClientDPSendSpecialSurveyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientDPSendSpecialSurveyResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientDPSendSpecialSurveyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    data_.ClearNonDefaultToEmptyNoArena();
  }
  survey_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientDPSendSpecialSurveyResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientDPSendSpecialSurveyResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 survey_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_survey_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes data = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientDPSendSpecialSurveyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 survey_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_survey_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &survey_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientDPSendSpecialSurveyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 survey_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->survey_id(), output);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
}

::google::protobuf::uint8* CMsgClientDPSendSpecialSurveyResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 survey_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->survey_id(), target);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  return target;
}

size_t CMsgClientDPSendSpecialSurveyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional uint32 survey_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->survey_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDPSendSpecialSurveyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDPSendSpecialSurveyResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientDPSendSpecialSurveyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
    MergeFrom(*source);
  }
}

void CMsgClientDPSendSpecialSurveyResponse::MergeFrom(const CMsgClientDPSendSpecialSurveyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      survey_id_ = from.survey_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDPSendSpecialSurveyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDPSendSpecialSurveyResponse::CopyFrom(const CMsgClientDPSendSpecialSurveyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDPSendSpecialSurveyResponse::IsInitialized() const {
  return true;
}

void CMsgClientDPSendSpecialSurveyResponse::Swap(CMsgClientDPSendSpecialSurveyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDPSendSpecialSurveyResponse::InternalSwap(CMsgClientDPSendSpecialSurveyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(survey_id_, other->survey_id_);
}

::google::protobuf::Metadata CMsgClientDPSendSpecialSurveyResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDPSendSpecialSurveyResponseReply::InitAsDefaultInstance() {
}
class CMsgClientDPSendSpecialSurveyResponseReply::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientDPSendSpecialSurveyResponseReply* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_token(CMsgClientDPSendSpecialSurveyResponseReply* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDPSendSpecialSurveyResponseReply::kEResultFieldNumber;
const int CMsgClientDPSendSpecialSurveyResponseReply::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDPSendSpecialSurveyResponseReply::CMsgClientDPSendSpecialSurveyResponseReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
}
CMsgClientDPSendSpecialSurveyResponseReply::CMsgClientDPSendSpecialSurveyResponseReply(const CMsgClientDPSendSpecialSurveyResponseReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
}

void CMsgClientDPSendSpecialSurveyResponseReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientDPSendSpecialSurveyResponseReply_steammessages_5fclientserver_5f2_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eresult_ = 2u;
}

CMsgClientDPSendSpecialSurveyResponseReply::~CMsgClientDPSendSpecialSurveyResponseReply() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  SharedDtor();
}

void CMsgClientDPSendSpecialSurveyResponseReply::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientDPSendSpecialSurveyResponseReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientDPSendSpecialSurveyResponseReply& CMsgClientDPSendSpecialSurveyResponseReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientDPSendSpecialSurveyResponseReply_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientDPSendSpecialSurveyResponseReply::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientDPSendSpecialSurveyResponseReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientDPSendSpecialSurveyResponseReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 eResult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientDPSendSpecialSurveyResponseReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eResult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientDPSendSpecialSurveyResponseReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional bytes token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
}

::google::protobuf::uint8* CMsgClientDPSendSpecialSurveyResponseReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional bytes token = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  return target;
}

size_t CMsgClientDPSendSpecialSurveyResponseReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes token = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->token());
    }

    // optional uint32 eResult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDPSendSpecialSurveyResponseReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDPSendSpecialSurveyResponseReply* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientDPSendSpecialSurveyResponseReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
    MergeFrom(*source);
  }
}

void CMsgClientDPSendSpecialSurveyResponseReply::MergeFrom(const CMsgClientDPSendSpecialSurveyResponseReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDPSendSpecialSurveyResponseReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDPSendSpecialSurveyResponseReply::CopyFrom(const CMsgClientDPSendSpecialSurveyResponseReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDPSendSpecialSurveyResponseReply::IsInitialized() const {
  return true;
}

void CMsgClientDPSendSpecialSurveyResponseReply::Swap(CMsgClientDPSendSpecialSurveyResponseReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDPSendSpecialSurveyResponseReply::InternalSwap(CMsgClientDPSendSpecialSurveyResponseReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientDPSendSpecialSurveyResponseReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestForgottenPasswordEmail::InitAsDefaultInstance() {
}
class CMsgClientRequestForgottenPasswordEmail::HasBitSetters {
 public:
  static void set_has_account_name(CMsgClientRequestForgottenPasswordEmail* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_password_tried(CMsgClientRequestForgottenPasswordEmail* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestForgottenPasswordEmail::kAccountNameFieldNumber;
const int CMsgClientRequestForgottenPasswordEmail::kPasswordTriedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestForgottenPasswordEmail::CMsgClientRequestForgottenPasswordEmail()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestForgottenPasswordEmail)
}
CMsgClientRequestForgottenPasswordEmail::CMsgClientRequestForgottenPasswordEmail(const CMsgClientRequestForgottenPasswordEmail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name()) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  password_tried_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password_tried()) {
    password_tried_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_tried_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestForgottenPasswordEmail)
}

void CMsgClientRequestForgottenPasswordEmail::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientRequestForgottenPasswordEmail_steammessages_5fclientserver_5f2_2eproto.base);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_tried_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientRequestForgottenPasswordEmail::~CMsgClientRequestForgottenPasswordEmail() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  SharedDtor();
}

void CMsgClientRequestForgottenPasswordEmail::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_tried_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRequestForgottenPasswordEmail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRequestForgottenPasswordEmail& CMsgClientRequestForgottenPasswordEmail::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRequestForgottenPasswordEmail_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRequestForgottenPasswordEmail::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      account_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      password_tried_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRequestForgottenPasswordEmail::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRequestForgottenPasswordEmail*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string account_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientRequestForgottenPasswordEmail.account_name");
        object = msg->mutable_account_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string password_tried = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientRequestForgottenPasswordEmail.password_tried");
        object = msg->mutable_password_tried();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRequestForgottenPasswordEmail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name().data(), static_cast<int>(this->account_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestForgottenPasswordEmail.account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password_tried = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password_tried()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password_tried().data(), static_cast<int>(this->password_tried().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestForgottenPasswordEmail.password_tried");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRequestForgottenPasswordEmail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestForgottenPasswordEmail.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // optional string password_tried = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password_tried().data(), static_cast<int>(this->password_tried().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestForgottenPasswordEmail.password_tried");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password_tried(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestForgottenPasswordEmail)
}

::google::protobuf::uint8* CMsgClientRequestForgottenPasswordEmail::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestForgottenPasswordEmail.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // optional string password_tried = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password_tried().data(), static_cast<int>(this->password_tried().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestForgottenPasswordEmail.password_tried");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password_tried(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  return target;
}

size_t CMsgClientRequestForgottenPasswordEmail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string account_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

    // optional string password_tried = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password_tried());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestForgottenPasswordEmail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestForgottenPasswordEmail* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRequestForgottenPasswordEmail>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestForgottenPasswordEmail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestForgottenPasswordEmail)
    MergeFrom(*source);
  }
}

void CMsgClientRequestForgottenPasswordEmail::MergeFrom(const CMsgClientRequestForgottenPasswordEmail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      password_tried_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_tried_);
    }
  }
}

void CMsgClientRequestForgottenPasswordEmail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestForgottenPasswordEmail::CopyFrom(const CMsgClientRequestForgottenPasswordEmail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestForgottenPasswordEmail::IsInitialized() const {
  return true;
}

void CMsgClientRequestForgottenPasswordEmail::Swap(CMsgClientRequestForgottenPasswordEmail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestForgottenPasswordEmail::InternalSwap(CMsgClientRequestForgottenPasswordEmail* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  account_name_.Swap(&other->account_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_tried_.Swap(&other->password_tried_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CMsgClientRequestForgottenPasswordEmail::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestForgottenPasswordEmailResponse::InitAsDefaultInstance() {
}
class CMsgClientRequestForgottenPasswordEmailResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientRequestForgottenPasswordEmailResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_use_secret_question(CMsgClientRequestForgottenPasswordEmailResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestForgottenPasswordEmailResponse::kEResultFieldNumber;
const int CMsgClientRequestForgottenPasswordEmailResponse::kUseSecretQuestionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestForgottenPasswordEmailResponse::CMsgClientRequestForgottenPasswordEmailResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
}
CMsgClientRequestForgottenPasswordEmailResponse::CMsgClientRequestForgottenPasswordEmailResponse(const CMsgClientRequestForgottenPasswordEmailResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&eresult_, &from.eresult_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_secret_question_) -
    reinterpret_cast<char*>(&eresult_)) + sizeof(use_secret_question_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
}

void CMsgClientRequestForgottenPasswordEmailResponse::SharedCtor() {
  ::memset(&eresult_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_secret_question_) -
      reinterpret_cast<char*>(&eresult_)) + sizeof(use_secret_question_));
}

CMsgClientRequestForgottenPasswordEmailResponse::~CMsgClientRequestForgottenPasswordEmailResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  SharedDtor();
}

void CMsgClientRequestForgottenPasswordEmailResponse::SharedDtor() {
}

void CMsgClientRequestForgottenPasswordEmailResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRequestForgottenPasswordEmailResponse& CMsgClientRequestForgottenPasswordEmailResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRequestForgottenPasswordEmailResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRequestForgottenPasswordEmailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&eresult_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&use_secret_question_) -
        reinterpret_cast<char*>(&eresult_)) + sizeof(use_secret_question_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRequestForgottenPasswordEmailResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRequestForgottenPasswordEmailResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 eResult = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool use_secret_question = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_use_secret_question(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRequestForgottenPasswordEmailResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eResult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_secret_question = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_use_secret_question(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_secret_question_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRequestForgottenPasswordEmailResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional bool use_secret_question = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->use_secret_question(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
}

::google::protobuf::uint8* CMsgClientRequestForgottenPasswordEmailResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional bool use_secret_question = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->use_secret_question(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  return target;
}

size_t CMsgClientRequestForgottenPasswordEmailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 eResult = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional bool use_secret_question = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestForgottenPasswordEmailResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestForgottenPasswordEmailResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRequestForgottenPasswordEmailResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRequestForgottenPasswordEmailResponse::MergeFrom(const CMsgClientRequestForgottenPasswordEmailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000002u) {
      use_secret_question_ = from.use_secret_question_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRequestForgottenPasswordEmailResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestForgottenPasswordEmailResponse::CopyFrom(const CMsgClientRequestForgottenPasswordEmailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestForgottenPasswordEmailResponse::IsInitialized() const {
  return true;
}

void CMsgClientRequestForgottenPasswordEmailResponse::Swap(CMsgClientRequestForgottenPasswordEmailResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestForgottenPasswordEmailResponse::InternalSwap(CMsgClientRequestForgottenPasswordEmailResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(eresult_, other->eresult_);
  swap(use_secret_question_, other->use_secret_question_);
}

::google::protobuf::Metadata CMsgClientRequestForgottenPasswordEmailResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientItemAnnouncements::InitAsDefaultInstance() {
}
class CMsgClientItemAnnouncements::HasBitSetters {
 public:
  static void set_has_count_new_items(CMsgClientItemAnnouncements* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientItemAnnouncements::kCountNewItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientItemAnnouncements::CMsgClientItemAnnouncements()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientItemAnnouncements)
}
CMsgClientItemAnnouncements::CMsgClientItemAnnouncements(const CMsgClientItemAnnouncements& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_new_items_ = from.count_new_items_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientItemAnnouncements)
}

void CMsgClientItemAnnouncements::SharedCtor() {
  count_new_items_ = 0u;
}

CMsgClientItemAnnouncements::~CMsgClientItemAnnouncements() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientItemAnnouncements)
  SharedDtor();
}

void CMsgClientItemAnnouncements::SharedDtor() {
}

void CMsgClientItemAnnouncements::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientItemAnnouncements& CMsgClientItemAnnouncements::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientItemAnnouncements_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientItemAnnouncements::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  count_new_items_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientItemAnnouncements::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientItemAnnouncements*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 count_new_items = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_count_new_items(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientItemAnnouncements::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientItemAnnouncements)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 count_new_items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_count_new_items(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_new_items_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientItemAnnouncements)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientItemAnnouncements)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientItemAnnouncements::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 count_new_items = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count_new_items(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientItemAnnouncements)
}

::google::protobuf::uint8* CMsgClientItemAnnouncements::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 count_new_items = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count_new_items(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientItemAnnouncements)
  return target;
}

size_t CMsgClientItemAnnouncements::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientItemAnnouncements)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 count_new_items = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count_new_items());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientItemAnnouncements::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientItemAnnouncements)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientItemAnnouncements* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientItemAnnouncements>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientItemAnnouncements)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientItemAnnouncements)
    MergeFrom(*source);
  }
}

void CMsgClientItemAnnouncements::MergeFrom(const CMsgClientItemAnnouncements& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientItemAnnouncements)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_count_new_items()) {
    set_count_new_items(from.count_new_items());
  }
}

void CMsgClientItemAnnouncements::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientItemAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientItemAnnouncements::CopyFrom(const CMsgClientItemAnnouncements& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientItemAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientItemAnnouncements::IsInitialized() const {
  return true;
}

void CMsgClientItemAnnouncements::Swap(CMsgClientItemAnnouncements* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientItemAnnouncements::InternalSwap(CMsgClientItemAnnouncements* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(count_new_items_, other->count_new_items_);
}

::google::protobuf::Metadata CMsgClientItemAnnouncements::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestItemAnnouncements::InitAsDefaultInstance() {
}
class CMsgClientRequestItemAnnouncements::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestItemAnnouncements::CMsgClientRequestItemAnnouncements()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestItemAnnouncements)
}
CMsgClientRequestItemAnnouncements::CMsgClientRequestItemAnnouncements(const CMsgClientRequestItemAnnouncements& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestItemAnnouncements)
}

void CMsgClientRequestItemAnnouncements::SharedCtor() {
}

CMsgClientRequestItemAnnouncements::~CMsgClientRequestItemAnnouncements() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestItemAnnouncements)
  SharedDtor();
}

void CMsgClientRequestItemAnnouncements::SharedDtor() {
}

void CMsgClientRequestItemAnnouncements::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRequestItemAnnouncements& CMsgClientRequestItemAnnouncements::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRequestItemAnnouncements_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRequestItemAnnouncements::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRequestItemAnnouncements::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRequestItemAnnouncements*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRequestItemAnnouncements::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestItemAnnouncements)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestItemAnnouncements)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestItemAnnouncements)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRequestItemAnnouncements::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestItemAnnouncements)
}

::google::protobuf::uint8* CMsgClientRequestItemAnnouncements::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestItemAnnouncements)
  return target;
}

size_t CMsgClientRequestItemAnnouncements::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestItemAnnouncements)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestItemAnnouncements::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestItemAnnouncements)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestItemAnnouncements* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRequestItemAnnouncements>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestItemAnnouncements)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestItemAnnouncements)
    MergeFrom(*source);
  }
}

void CMsgClientRequestItemAnnouncements::MergeFrom(const CMsgClientRequestItemAnnouncements& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestItemAnnouncements)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientRequestItemAnnouncements::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestItemAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestItemAnnouncements::CopyFrom(const CMsgClientRequestItemAnnouncements& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestItemAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestItemAnnouncements::IsInitialized() const {
  return true;
}

void CMsgClientRequestItemAnnouncements::Swap(CMsgClientRequestItemAnnouncements* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestItemAnnouncements::InternalSwap(CMsgClientRequestItemAnnouncements* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CMsgClientRequestItemAnnouncements::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUserNotifications_Notification::InitAsDefaultInstance() {
}
class CMsgClientUserNotifications_Notification::HasBitSetters {
 public:
  static void set_has_user_notification_type(CMsgClientUserNotifications_Notification* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_count(CMsgClientUserNotifications_Notification* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUserNotifications_Notification::kUserNotificationTypeFieldNumber;
const int CMsgClientUserNotifications_Notification::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUserNotifications_Notification::CMsgClientUserNotifications_Notification()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUserNotifications.Notification)
}
CMsgClientUserNotifications_Notification::CMsgClientUserNotifications_Notification(const CMsgClientUserNotifications_Notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_notification_type_, &from.user_notification_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&user_notification_type_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUserNotifications.Notification)
}

void CMsgClientUserNotifications_Notification::SharedCtor() {
  ::memset(&user_notification_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&user_notification_type_)) + sizeof(count_));
}

CMsgClientUserNotifications_Notification::~CMsgClientUserNotifications_Notification() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUserNotifications.Notification)
  SharedDtor();
}

void CMsgClientUserNotifications_Notification::SharedDtor() {
}

void CMsgClientUserNotifications_Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUserNotifications_Notification& CMsgClientUserNotifications_Notification::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUserNotifications_Notification_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUserNotifications_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUserNotifications.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&user_notification_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&user_notification_type_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUserNotifications_Notification::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUserNotifications_Notification*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 user_notification_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_user_notification_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 count = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUserNotifications_Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUserNotifications.Notification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_notification_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_user_notification_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_notification_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUserNotifications.Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUserNotifications.Notification)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUserNotifications_Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUserNotifications.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 user_notification_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_notification_type(), output);
  }

  // optional uint32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUserNotifications.Notification)
}

::google::protobuf::uint8* CMsgClientUserNotifications_Notification::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUserNotifications.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 user_notification_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_notification_type(), target);
  }

  // optional uint32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUserNotifications.Notification)
  return target;
}

size_t CMsgClientUserNotifications_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUserNotifications.Notification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 user_notification_type = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_notification_type());
    }

    // optional uint32 count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUserNotifications_Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUserNotifications.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUserNotifications_Notification* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUserNotifications_Notification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUserNotifications.Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUserNotifications.Notification)
    MergeFrom(*source);
  }
}

void CMsgClientUserNotifications_Notification::MergeFrom(const CMsgClientUserNotifications_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUserNotifications.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      user_notification_type_ = from.user_notification_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUserNotifications_Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUserNotifications.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUserNotifications_Notification::CopyFrom(const CMsgClientUserNotifications_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUserNotifications.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUserNotifications_Notification::IsInitialized() const {
  return true;
}

void CMsgClientUserNotifications_Notification::Swap(CMsgClientUserNotifications_Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUserNotifications_Notification::InternalSwap(CMsgClientUserNotifications_Notification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(user_notification_type_, other->user_notification_type_);
  swap(count_, other->count_);
}

::google::protobuf::Metadata CMsgClientUserNotifications_Notification::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUserNotifications::InitAsDefaultInstance() {
}
class CMsgClientUserNotifications::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUserNotifications::kNotificationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUserNotifications::CMsgClientUserNotifications()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUserNotifications)
}
CMsgClientUserNotifications::CMsgClientUserNotifications(const CMsgClientUserNotifications& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      notifications_(from.notifications_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUserNotifications)
}

void CMsgClientUserNotifications::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUserNotifications_steammessages_5fclientserver_5f2_2eproto.base);
}

CMsgClientUserNotifications::~CMsgClientUserNotifications() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUserNotifications)
  SharedDtor();
}

void CMsgClientUserNotifications::SharedDtor() {
}

void CMsgClientUserNotifications::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUserNotifications& CMsgClientUserNotifications::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUserNotifications_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUserNotifications::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUserNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notifications_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUserNotifications::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUserNotifications*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.steam.CMsgClientUserNotifications.Notification notifications = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientUserNotifications_Notification::_InternalParse;
          object = msg->add_notifications();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUserNotifications::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUserNotifications)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.steam.CMsgClientUserNotifications.Notification notifications = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_notifications()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUserNotifications)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUserNotifications)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUserNotifications::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUserNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientUserNotifications.Notification notifications = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notifications_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->notifications(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUserNotifications)
}

::google::protobuf::uint8* CMsgClientUserNotifications::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUserNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientUserNotifications.Notification notifications = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notifications_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->notifications(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUserNotifications)
  return target;
}

size_t CMsgClientUserNotifications::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUserNotifications)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientUserNotifications.Notification notifications = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->notifications_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->notifications(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUserNotifications::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUserNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUserNotifications* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUserNotifications>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUserNotifications)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUserNotifications)
    MergeFrom(*source);
  }
}

void CMsgClientUserNotifications::MergeFrom(const CMsgClientUserNotifications& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUserNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notifications_.MergeFrom(from.notifications_);
}

void CMsgClientUserNotifications::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUserNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUserNotifications::CopyFrom(const CMsgClientUserNotifications& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUserNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUserNotifications::IsInitialized() const {
  return true;
}

void CMsgClientUserNotifications::Swap(CMsgClientUserNotifications* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUserNotifications::InternalSwap(CMsgClientUserNotifications* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&notifications_)->InternalSwap(CastToBase(&other->notifications_));
}

::google::protobuf::Metadata CMsgClientUserNotifications::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientCommentNotifications::InitAsDefaultInstance() {
}
class CMsgClientCommentNotifications::HasBitSetters {
 public:
  static void set_has_count_new_comments(CMsgClientCommentNotifications* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_count_new_comments_owner(CMsgClientCommentNotifications* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_count_new_comments_subscriptions(CMsgClientCommentNotifications* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCommentNotifications::kCountNewCommentsFieldNumber;
const int CMsgClientCommentNotifications::kCountNewCommentsOwnerFieldNumber;
const int CMsgClientCommentNotifications::kCountNewCommentsSubscriptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCommentNotifications::CMsgClientCommentNotifications()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientCommentNotifications)
}
CMsgClientCommentNotifications::CMsgClientCommentNotifications(const CMsgClientCommentNotifications& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_new_comments_, &from.count_new_comments_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_new_comments_subscriptions_) -
    reinterpret_cast<char*>(&count_new_comments_)) + sizeof(count_new_comments_subscriptions_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientCommentNotifications)
}

void CMsgClientCommentNotifications::SharedCtor() {
  ::memset(&count_new_comments_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_new_comments_subscriptions_) -
      reinterpret_cast<char*>(&count_new_comments_)) + sizeof(count_new_comments_subscriptions_));
}

CMsgClientCommentNotifications::~CMsgClientCommentNotifications() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientCommentNotifications)
  SharedDtor();
}

void CMsgClientCommentNotifications::SharedDtor() {
}

void CMsgClientCommentNotifications::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientCommentNotifications& CMsgClientCommentNotifications::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientCommentNotifications_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientCommentNotifications::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&count_new_comments_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_new_comments_subscriptions_) -
        reinterpret_cast<char*>(&count_new_comments_)) + sizeof(count_new_comments_subscriptions_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientCommentNotifications::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientCommentNotifications*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 count_new_comments = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_count_new_comments(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 count_new_comments_owner = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_count_new_comments_owner(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 count_new_comments_subscriptions = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_count_new_comments_subscriptions(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientCommentNotifications::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientCommentNotifications)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 count_new_comments = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_count_new_comments(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_new_comments_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count_new_comments_owner = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_count_new_comments_owner(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_new_comments_owner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count_new_comments_subscriptions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_count_new_comments_subscriptions(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_new_comments_subscriptions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientCommentNotifications)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientCommentNotifications)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientCommentNotifications::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 count_new_comments = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count_new_comments(), output);
  }

  // optional uint32 count_new_comments_owner = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count_new_comments_owner(), output);
  }

  // optional uint32 count_new_comments_subscriptions = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count_new_comments_subscriptions(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientCommentNotifications)
}

::google::protobuf::uint8* CMsgClientCommentNotifications::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 count_new_comments = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count_new_comments(), target);
  }

  // optional uint32 count_new_comments_owner = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count_new_comments_owner(), target);
  }

  // optional uint32 count_new_comments_subscriptions = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count_new_comments_subscriptions(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientCommentNotifications)
  return target;
}

size_t CMsgClientCommentNotifications::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientCommentNotifications)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 count_new_comments = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count_new_comments());
    }

    // optional uint32 count_new_comments_owner = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count_new_comments_owner());
    }

    // optional uint32 count_new_comments_subscriptions = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count_new_comments_subscriptions());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientCommentNotifications::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientCommentNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCommentNotifications* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientCommentNotifications>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientCommentNotifications)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientCommentNotifications)
    MergeFrom(*source);
  }
}

void CMsgClientCommentNotifications::MergeFrom(const CMsgClientCommentNotifications& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientCommentNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      count_new_comments_ = from.count_new_comments_;
    }
    if (cached_has_bits & 0x00000002u) {
      count_new_comments_owner_ = from.count_new_comments_owner_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_new_comments_subscriptions_ = from.count_new_comments_subscriptions_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientCommentNotifications::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientCommentNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCommentNotifications::CopyFrom(const CMsgClientCommentNotifications& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientCommentNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCommentNotifications::IsInitialized() const {
  return true;
}

void CMsgClientCommentNotifications::Swap(CMsgClientCommentNotifications* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCommentNotifications::InternalSwap(CMsgClientCommentNotifications* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(count_new_comments_, other->count_new_comments_);
  swap(count_new_comments_owner_, other->count_new_comments_owner_);
  swap(count_new_comments_subscriptions_, other->count_new_comments_subscriptions_);
}

::google::protobuf::Metadata CMsgClientCommentNotifications::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestCommentNotifications::InitAsDefaultInstance() {
}
class CMsgClientRequestCommentNotifications::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestCommentNotifications::CMsgClientRequestCommentNotifications()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestCommentNotifications)
}
CMsgClientRequestCommentNotifications::CMsgClientRequestCommentNotifications(const CMsgClientRequestCommentNotifications& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestCommentNotifications)
}

void CMsgClientRequestCommentNotifications::SharedCtor() {
}

CMsgClientRequestCommentNotifications::~CMsgClientRequestCommentNotifications() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestCommentNotifications)
  SharedDtor();
}

void CMsgClientRequestCommentNotifications::SharedDtor() {
}

void CMsgClientRequestCommentNotifications::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRequestCommentNotifications& CMsgClientRequestCommentNotifications::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRequestCommentNotifications_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRequestCommentNotifications::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRequestCommentNotifications::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRequestCommentNotifications*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRequestCommentNotifications::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestCommentNotifications)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestCommentNotifications)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestCommentNotifications)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRequestCommentNotifications::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestCommentNotifications)
}

::google::protobuf::uint8* CMsgClientRequestCommentNotifications::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestCommentNotifications)
  return target;
}

size_t CMsgClientRequestCommentNotifications::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestCommentNotifications)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestCommentNotifications::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestCommentNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestCommentNotifications* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRequestCommentNotifications>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestCommentNotifications)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestCommentNotifications)
    MergeFrom(*source);
  }
}

void CMsgClientRequestCommentNotifications::MergeFrom(const CMsgClientRequestCommentNotifications& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestCommentNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientRequestCommentNotifications::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestCommentNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestCommentNotifications::CopyFrom(const CMsgClientRequestCommentNotifications& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestCommentNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestCommentNotifications::IsInitialized() const {
  return true;
}

void CMsgClientRequestCommentNotifications::Swap(CMsgClientRequestCommentNotifications* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestCommentNotifications::InternalSwap(CMsgClientRequestCommentNotifications* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CMsgClientRequestCommentNotifications::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientOfflineMessageNotification::InitAsDefaultInstance() {
}
class CMsgClientOfflineMessageNotification::HasBitSetters {
 public:
  static void set_has_offline_messages(CMsgClientOfflineMessageNotification* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientOfflineMessageNotification::kOfflineMessagesFieldNumber;
const int CMsgClientOfflineMessageNotification::kFriendsWithOfflineMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientOfflineMessageNotification::CMsgClientOfflineMessageNotification()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientOfflineMessageNotification)
}
CMsgClientOfflineMessageNotification::CMsgClientOfflineMessageNotification(const CMsgClientOfflineMessageNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      friends_with_offline_messages_(from.friends_with_offline_messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  offline_messages_ = from.offline_messages_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientOfflineMessageNotification)
}

void CMsgClientOfflineMessageNotification::SharedCtor() {
  offline_messages_ = 0u;
}

CMsgClientOfflineMessageNotification::~CMsgClientOfflineMessageNotification() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientOfflineMessageNotification)
  SharedDtor();
}

void CMsgClientOfflineMessageNotification::SharedDtor() {
}

void CMsgClientOfflineMessageNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientOfflineMessageNotification& CMsgClientOfflineMessageNotification::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientOfflineMessageNotification_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientOfflineMessageNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientOfflineMessageNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friends_with_offline_messages_.Clear();
  offline_messages_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientOfflineMessageNotification::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientOfflineMessageNotification*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 offline_messages = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_offline_messages(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 friends_with_offline_messages = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_friends_with_offline_messages(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_friends_with_offline_messages();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientOfflineMessageNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientOfflineMessageNotification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 offline_messages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_offline_messages(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offline_messages_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 friends_with_offline_messages = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_friends_with_offline_messages())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_friends_with_offline_messages())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientOfflineMessageNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientOfflineMessageNotification)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientOfflineMessageNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientOfflineMessageNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 offline_messages = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->offline_messages(), output);
  }

  // repeated uint32 friends_with_offline_messages = 2;
  for (int i = 0, n = this->friends_with_offline_messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->friends_with_offline_messages(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientOfflineMessageNotification)
}

::google::protobuf::uint8* CMsgClientOfflineMessageNotification::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientOfflineMessageNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 offline_messages = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->offline_messages(), target);
  }

  // repeated uint32 friends_with_offline_messages = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->friends_with_offline_messages_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientOfflineMessageNotification)
  return target;
}

size_t CMsgClientOfflineMessageNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientOfflineMessageNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 friends_with_offline_messages = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->friends_with_offline_messages_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->friends_with_offline_messages_size());
    total_size += data_size;
  }

  // optional uint32 offline_messages = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offline_messages());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientOfflineMessageNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientOfflineMessageNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientOfflineMessageNotification* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientOfflineMessageNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientOfflineMessageNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientOfflineMessageNotification)
    MergeFrom(*source);
  }
}

void CMsgClientOfflineMessageNotification::MergeFrom(const CMsgClientOfflineMessageNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientOfflineMessageNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friends_with_offline_messages_.MergeFrom(from.friends_with_offline_messages_);
  if (from.has_offline_messages()) {
    set_offline_messages(from.offline_messages());
  }
}

void CMsgClientOfflineMessageNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientOfflineMessageNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientOfflineMessageNotification::CopyFrom(const CMsgClientOfflineMessageNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientOfflineMessageNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientOfflineMessageNotification::IsInitialized() const {
  return true;
}

void CMsgClientOfflineMessageNotification::Swap(CMsgClientOfflineMessageNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientOfflineMessageNotification::InternalSwap(CMsgClientOfflineMessageNotification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  friends_with_offline_messages_.InternalSwap(&other->friends_with_offline_messages_);
  swap(offline_messages_, other->offline_messages_);
}

::google::protobuf::Metadata CMsgClientOfflineMessageNotification::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientRequestOfflineMessageCount::InitAsDefaultInstance() {
}
class CMsgClientRequestOfflineMessageCount::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestOfflineMessageCount::CMsgClientRequestOfflineMessageCount()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestOfflineMessageCount)
}
CMsgClientRequestOfflineMessageCount::CMsgClientRequestOfflineMessageCount(const CMsgClientRequestOfflineMessageCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestOfflineMessageCount)
}

void CMsgClientRequestOfflineMessageCount::SharedCtor() {
}

CMsgClientRequestOfflineMessageCount::~CMsgClientRequestOfflineMessageCount() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestOfflineMessageCount)
  SharedDtor();
}

void CMsgClientRequestOfflineMessageCount::SharedDtor() {
}

void CMsgClientRequestOfflineMessageCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientRequestOfflineMessageCount& CMsgClientRequestOfflineMessageCount::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientRequestOfflineMessageCount_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientRequestOfflineMessageCount::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientRequestOfflineMessageCount::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientRequestOfflineMessageCount*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientRequestOfflineMessageCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestOfflineMessageCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestOfflineMessageCount)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientRequestOfflineMessageCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestOfflineMessageCount)
}

::google::protobuf::uint8* CMsgClientRequestOfflineMessageCount::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestOfflineMessageCount)
  return target;
}

size_t CMsgClientRequestOfflineMessageCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientRequestOfflineMessageCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestOfflineMessageCount* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientRequestOfflineMessageCount>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestOfflineMessageCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestOfflineMessageCount)
    MergeFrom(*source);
  }
}

void CMsgClientRequestOfflineMessageCount::MergeFrom(const CMsgClientRequestOfflineMessageCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientRequestOfflineMessageCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestOfflineMessageCount::CopyFrom(const CMsgClientRequestOfflineMessageCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestOfflineMessageCount::IsInitialized() const {
  return true;
}

void CMsgClientRequestOfflineMessageCount::Swap(CMsgClientRequestOfflineMessageCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestOfflineMessageCount::InternalSwap(CMsgClientRequestOfflineMessageCount* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CMsgClientRequestOfflineMessageCount::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientChatGetFriendMessageHistory::InitAsDefaultInstance() {
}
class CMsgClientChatGetFriendMessageHistory::HasBitSetters {
 public:
  static void set_has_steamid(CMsgClientChatGetFriendMessageHistory* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientChatGetFriendMessageHistory::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientChatGetFriendMessageHistory::CMsgClientChatGetFriendMessageHistory()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientChatGetFriendMessageHistory)
}
CMsgClientChatGetFriendMessageHistory::CMsgClientChatGetFriendMessageHistory(const CMsgClientChatGetFriendMessageHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientChatGetFriendMessageHistory)
}

void CMsgClientChatGetFriendMessageHistory::SharedCtor() {
  steamid_ = PROTOBUF_ULONGLONG(0);
}

CMsgClientChatGetFriendMessageHistory::~CMsgClientChatGetFriendMessageHistory() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientChatGetFriendMessageHistory)
  SharedDtor();
}

void CMsgClientChatGetFriendMessageHistory::SharedDtor() {
}

void CMsgClientChatGetFriendMessageHistory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientChatGetFriendMessageHistory& CMsgClientChatGetFriendMessageHistory::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientChatGetFriendMessageHistory_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientChatGetFriendMessageHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientChatGetFriendMessageHistory::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientChatGetFriendMessageHistory*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_steamid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientChatGetFriendMessageHistory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientChatGetFriendMessageHistory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientChatGetFriendMessageHistory)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientChatGetFriendMessageHistory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientChatGetFriendMessageHistory)
}

::google::protobuf::uint8* CMsgClientChatGetFriendMessageHistory::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientChatGetFriendMessageHistory)
  return target;
}

size_t CMsgClientChatGetFriendMessageHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 steamid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientChatGetFriendMessageHistory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientChatGetFriendMessageHistory* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientChatGetFriendMessageHistory>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientChatGetFriendMessageHistory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientChatGetFriendMessageHistory)
    MergeFrom(*source);
  }
}

void CMsgClientChatGetFriendMessageHistory::MergeFrom(const CMsgClientChatGetFriendMessageHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steamid()) {
    set_steamid(from.steamid());
  }
}

void CMsgClientChatGetFriendMessageHistory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientChatGetFriendMessageHistory::CopyFrom(const CMsgClientChatGetFriendMessageHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientChatGetFriendMessageHistory::IsInitialized() const {
  return true;
}

void CMsgClientChatGetFriendMessageHistory::Swap(CMsgClientChatGetFriendMessageHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientChatGetFriendMessageHistory::InternalSwap(CMsgClientChatGetFriendMessageHistory* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(steamid_, other->steamid_);
}

::google::protobuf::Metadata CMsgClientChatGetFriendMessageHistory::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::InitAsDefaultInstance() {
}
class CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::HasBitSetters {
 public:
  static void set_has_accountid(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_timestamp(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_message(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_unread(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::kAccountidFieldNumber;
const int CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::kTimestampFieldNumber;
const int CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::kMessageFieldNumber;
const int CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::kUnreadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
}
CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&unread_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(unread_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_steammessages_5fclientserver_5f2_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unread_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(unread_));
}

CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::~CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  SharedDtor();
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&accountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&unread_) -
        reinterpret_cast<char*>(&accountid_)) + sizeof(unread_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 accountid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_accountid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 timestamp = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_timestamp(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string message = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool unread = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_unread(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 accountid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_accountid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_timestamp(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool unread = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_unread(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accountid(), output);
  }

  // optional uint32 timestamp = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->timestamp(), output);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  // optional bool unread = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->unread(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
}

::google::protobuf::uint8* CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accountid(), target);
  }

  // optional uint32 timestamp = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->timestamp(), target);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  // optional bool unread = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->unread(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  return target;
}

size_t CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string message = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional uint32 accountid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

    // optional uint32 timestamp = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamp());
    }

    // optional bool unread = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
    MergeFrom(*source);
  }
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::MergeFrom(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      accountid_ = from.accountid_;
    }
    if (cached_has_bits & 0x00000004u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000008u) {
      unread_ = from.unread_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::CopyFrom(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::IsInitialized() const {
  return true;
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::Swap(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::InternalSwap(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(accountid_, other->accountid_);
  swap(timestamp_, other->timestamp_);
  swap(unread_, other->unread_);
}

::google::protobuf::Metadata CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientChatGetFriendMessageHistoryResponse::InitAsDefaultInstance() {
}
class CMsgClientChatGetFriendMessageHistoryResponse::HasBitSetters {
 public:
  static void set_has_steamid(CMsgClientChatGetFriendMessageHistoryResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_success(CMsgClientChatGetFriendMessageHistoryResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientChatGetFriendMessageHistoryResponse::kSteamidFieldNumber;
const int CMsgClientChatGetFriendMessageHistoryResponse::kSuccessFieldNumber;
const int CMsgClientChatGetFriendMessageHistoryResponse::kMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientChatGetFriendMessageHistoryResponse::CMsgClientChatGetFriendMessageHistoryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
}
CMsgClientChatGetFriendMessageHistoryResponse::CMsgClientChatGetFriendMessageHistoryResponse(const CMsgClientChatGetFriendMessageHistoryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(success_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
}

void CMsgClientChatGetFriendMessageHistoryResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientChatGetFriendMessageHistoryResponse_steammessages_5fclientserver_5f2_2eproto.base);
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(success_));
}

CMsgClientChatGetFriendMessageHistoryResponse::~CMsgClientChatGetFriendMessageHistoryResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  SharedDtor();
}

void CMsgClientChatGetFriendMessageHistoryResponse::SharedDtor() {
}

void CMsgClientChatGetFriendMessageHistoryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientChatGetFriendMessageHistoryResponse& CMsgClientChatGetFriendMessageHistoryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientChatGetFriendMessageHistoryResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientChatGetFriendMessageHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&success_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(success_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientChatGetFriendMessageHistoryResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientChatGetFriendMessageHistoryResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_steamid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 success = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::_InternalParse;
          object = msg->add_messages();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientChatGetFriendMessageHistoryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientChatGetFriendMessageHistoryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 success = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->success(), output);
  }

  // repeated .proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->messages(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
}

::google::protobuf::uint8* CMsgClientChatGetFriendMessageHistoryResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 success = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->success(), target);
  }

  // repeated .proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->messages(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  return target;
}

size_t CMsgClientChatGetFriendMessageHistoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->messages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->messages(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint32 success = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->success());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientChatGetFriendMessageHistoryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientChatGetFriendMessageHistoryResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientChatGetFriendMessageHistoryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
    MergeFrom(*source);
  }
}

void CMsgClientChatGetFriendMessageHistoryResponse::MergeFrom(const CMsgClientChatGetFriendMessageHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientChatGetFriendMessageHistoryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientChatGetFriendMessageHistoryResponse::CopyFrom(const CMsgClientChatGetFriendMessageHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientChatGetFriendMessageHistoryResponse::IsInitialized() const {
  return true;
}

void CMsgClientChatGetFriendMessageHistoryResponse::Swap(CMsgClientChatGetFriendMessageHistoryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientChatGetFriendMessageHistoryResponse::InternalSwap(CMsgClientChatGetFriendMessageHistoryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&messages_)->InternalSwap(CastToBase(&other->messages_));
  swap(steamid_, other->steamid_);
  swap(success_, other->success_);
}

::google::protobuf::Metadata CMsgClientChatGetFriendMessageHistoryResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::InitAsDefaultInstance() {
}
class CMsgClientChatGetFriendMessageHistoryForOfflineMessages::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientChatGetFriendMessageHistoryForOfflineMessages::CMsgClientChatGetFriendMessageHistoryForOfflineMessages()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
}
CMsgClientChatGetFriendMessageHistoryForOfflineMessages::CMsgClientChatGetFriendMessageHistoryForOfflineMessages(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::SharedCtor() {
}

CMsgClientChatGetFriendMessageHistoryForOfflineMessages::~CMsgClientChatGetFriendMessageHistoryForOfflineMessages() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  SharedDtor();
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::SharedDtor() {
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& CMsgClientChatGetFriendMessageHistoryForOfflineMessages::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientChatGetFriendMessageHistoryForOfflineMessages_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientChatGetFriendMessageHistoryForOfflineMessages::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientChatGetFriendMessageHistoryForOfflineMessages*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientChatGetFriendMessageHistoryForOfflineMessages::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
}

::google::protobuf::uint8* CMsgClientChatGetFriendMessageHistoryForOfflineMessages::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  return target;
}

size_t CMsgClientChatGetFriendMessageHistoryForOfflineMessages::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientChatGetFriendMessageHistoryForOfflineMessages* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientChatGetFriendMessageHistoryForOfflineMessages>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
    MergeFrom(*source);
  }
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::MergeFrom(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::CopyFrom(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientChatGetFriendMessageHistoryForOfflineMessages::IsInitialized() const {
  return true;
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::Swap(CMsgClientChatGetFriendMessageHistoryForOfflineMessages* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::InternalSwap(CMsgClientChatGetFriendMessageHistoryForOfflineMessages* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CMsgClientChatGetFriendMessageHistoryForOfflineMessages::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFSGetFriendsSteamLevels::InitAsDefaultInstance() {
}
class CMsgClientFSGetFriendsSteamLevels::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFSGetFriendsSteamLevels::kAccountidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFSGetFriendsSteamLevels::CMsgClientFSGetFriendsSteamLevels()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientFSGetFriendsSteamLevels)
}
CMsgClientFSGetFriendsSteamLevels::CMsgClientFSGetFriendsSteamLevels(const CMsgClientFSGetFriendsSteamLevels& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      accountids_(from.accountids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientFSGetFriendsSteamLevels)
}

void CMsgClientFSGetFriendsSteamLevels::SharedCtor() {
}

CMsgClientFSGetFriendsSteamLevels::~CMsgClientFSGetFriendsSteamLevels() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  SharedDtor();
}

void CMsgClientFSGetFriendsSteamLevels::SharedDtor() {
}

void CMsgClientFSGetFriendsSteamLevels::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientFSGetFriendsSteamLevels& CMsgClientFSGetFriendsSteamLevels::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientFSGetFriendsSteamLevels_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientFSGetFriendsSteamLevels::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientFSGetFriendsSteamLevels::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientFSGetFriendsSteamLevels*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 accountids = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_accountids(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_accountids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientFSGetFriendsSteamLevels::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 accountids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_accountids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_accountids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientFSGetFriendsSteamLevels::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 accountids = 1;
  for (int i = 0, n = this->accountids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->accountids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientFSGetFriendsSteamLevels)
}

::google::protobuf::uint8* CMsgClientFSGetFriendsSteamLevels::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 accountids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->accountids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  return target;
}

size_t CMsgClientFSGetFriendsSteamLevels::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 accountids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->accountids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->accountids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFSGetFriendsSteamLevels::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFSGetFriendsSteamLevels* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientFSGetFriendsSteamLevels>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientFSGetFriendsSteamLevels)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientFSGetFriendsSteamLevels)
    MergeFrom(*source);
  }
}

void CMsgClientFSGetFriendsSteamLevels::MergeFrom(const CMsgClientFSGetFriendsSteamLevels& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accountids_.MergeFrom(from.accountids_);
}

void CMsgClientFSGetFriendsSteamLevels::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFSGetFriendsSteamLevels::CopyFrom(const CMsgClientFSGetFriendsSteamLevels& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFSGetFriendsSteamLevels::IsInitialized() const {
  return true;
}

void CMsgClientFSGetFriendsSteamLevels::Swap(CMsgClientFSGetFriendsSteamLevels* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFSGetFriendsSteamLevels::InternalSwap(CMsgClientFSGetFriendsSteamLevels* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  accountids_.InternalSwap(&other->accountids_);
}

::google::protobuf::Metadata CMsgClientFSGetFriendsSteamLevels::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::InitAsDefaultInstance() {
}
class CMsgClientFSGetFriendsSteamLevelsResponse_Friend::HasBitSetters {
 public:
  static void set_has_accountid(CMsgClientFSGetFriendsSteamLevelsResponse_Friend* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_level(CMsgClientFSGetFriendsSteamLevelsResponse_Friend* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFSGetFriendsSteamLevelsResponse_Friend::kAccountidFieldNumber;
const int CMsgClientFSGetFriendsSteamLevelsResponse_Friend::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFSGetFriendsSteamLevelsResponse_Friend::CMsgClientFSGetFriendsSteamLevelsResponse_Friend()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
}
CMsgClientFSGetFriendsSteamLevelsResponse_Friend::CMsgClientFSGetFriendsSteamLevelsResponse_Friend(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::SharedCtor() {
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(level_));
}

CMsgClientFSGetFriendsSteamLevelsResponse_Friend::~CMsgClientFSGetFriendsSteamLevelsResponse_Friend() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  SharedDtor();
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::SharedDtor() {
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& CMsgClientFSGetFriendsSteamLevelsResponse_Friend::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientFSGetFriendsSteamLevelsResponse_Friend_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&accountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&level_) -
        reinterpret_cast<char*>(&accountid_)) + sizeof(level_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientFSGetFriendsSteamLevelsResponse_Friend::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientFSGetFriendsSteamLevelsResponse_Friend*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 accountid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_accountid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 level = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_level(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientFSGetFriendsSteamLevelsResponse_Friend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 accountid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_accountid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_level(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accountid(), output);
  }

  // optional uint32 level = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
}

::google::protobuf::uint8* CMsgClientFSGetFriendsSteamLevelsResponse_Friend::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accountid(), target);
  }

  // optional uint32 level = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  return target;
}

size_t CMsgClientFSGetFriendsSteamLevelsResponse_Friend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 accountid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

    // optional uint32 level = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFSGetFriendsSteamLevelsResponse_Friend* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientFSGetFriendsSteamLevelsResponse_Friend>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
    MergeFrom(*source);
  }
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::MergeFrom(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      accountid_ = from.accountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::CopyFrom(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFSGetFriendsSteamLevelsResponse_Friend::IsInitialized() const {
  return true;
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::Swap(CMsgClientFSGetFriendsSteamLevelsResponse_Friend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::InternalSwap(CMsgClientFSGetFriendsSteamLevelsResponse_Friend* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(accountid_, other->accountid_);
  swap(level_, other->level_);
}

::google::protobuf::Metadata CMsgClientFSGetFriendsSteamLevelsResponse_Friend::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFSGetFriendsSteamLevelsResponse::InitAsDefaultInstance() {
}
class CMsgClientFSGetFriendsSteamLevelsResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFSGetFriendsSteamLevelsResponse::kFriendsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFSGetFriendsSteamLevelsResponse::CMsgClientFSGetFriendsSteamLevelsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
}
CMsgClientFSGetFriendsSteamLevelsResponse::CMsgClientFSGetFriendsSteamLevelsResponse(const CMsgClientFSGetFriendsSteamLevelsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      friends_(from.friends_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
}

void CMsgClientFSGetFriendsSteamLevelsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientFSGetFriendsSteamLevelsResponse_steammessages_5fclientserver_5f2_2eproto.base);
}

CMsgClientFSGetFriendsSteamLevelsResponse::~CMsgClientFSGetFriendsSteamLevelsResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  SharedDtor();
}

void CMsgClientFSGetFriendsSteamLevelsResponse::SharedDtor() {
}

void CMsgClientFSGetFriendsSteamLevelsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientFSGetFriendsSteamLevelsResponse& CMsgClientFSGetFriendsSteamLevelsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientFSGetFriendsSteamLevelsResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientFSGetFriendsSteamLevelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friends_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientFSGetFriendsSteamLevelsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientFSGetFriendsSteamLevelsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend::_InternalParse;
          object = msg->add_friends();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientFSGetFriendsSteamLevelsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_friends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientFSGetFriendsSteamLevelsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friends_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->friends(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
}

::google::protobuf::uint8* CMsgClientFSGetFriendsSteamLevelsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friends_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->friends(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  return target;
}

size_t CMsgClientFSGetFriendsSteamLevelsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->friends_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->friends(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFSGetFriendsSteamLevelsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFSGetFriendsSteamLevelsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientFSGetFriendsSteamLevelsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientFSGetFriendsSteamLevelsResponse::MergeFrom(const CMsgClientFSGetFriendsSteamLevelsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friends_.MergeFrom(from.friends_);
}

void CMsgClientFSGetFriendsSteamLevelsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFSGetFriendsSteamLevelsResponse::CopyFrom(const CMsgClientFSGetFriendsSteamLevelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFSGetFriendsSteamLevelsResponse::IsInitialized() const {
  return true;
}

void CMsgClientFSGetFriendsSteamLevelsResponse::Swap(CMsgClientFSGetFriendsSteamLevelsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFSGetFriendsSteamLevelsResponse::InternalSwap(CMsgClientFSGetFriendsSteamLevelsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&friends_)->InternalSwap(CastToBase(&other->friends_));
}

::google::protobuf::Metadata CMsgClientFSGetFriendsSteamLevelsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientEmailAddrInfo::InitAsDefaultInstance() {
}
class CMsgClientEmailAddrInfo::HasBitSetters {
 public:
  static void set_has_email_address(CMsgClientEmailAddrInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_email_is_validated(CMsgClientEmailAddrInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_email_validation_changed(CMsgClientEmailAddrInfo* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_credential_change_requires_code(CMsgClientEmailAddrInfo* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_password_or_secretqa_change_requires_code(CMsgClientEmailAddrInfo* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_remind_user_about_email(CMsgClientEmailAddrInfo* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientEmailAddrInfo::kEmailAddressFieldNumber;
const int CMsgClientEmailAddrInfo::kEmailIsValidatedFieldNumber;
const int CMsgClientEmailAddrInfo::kEmailValidationChangedFieldNumber;
const int CMsgClientEmailAddrInfo::kCredentialChangeRequiresCodeFieldNumber;
const int CMsgClientEmailAddrInfo::kPasswordOrSecretqaChangeRequiresCodeFieldNumber;
const int CMsgClientEmailAddrInfo::kRemindUserAboutEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientEmailAddrInfo::CMsgClientEmailAddrInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientEmailAddrInfo)
}
CMsgClientEmailAddrInfo::CMsgClientEmailAddrInfo(const CMsgClientEmailAddrInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email_address()) {
    email_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_address_);
  }
  ::memcpy(&email_is_validated_, &from.email_is_validated_,
    static_cast<size_t>(reinterpret_cast<char*>(&remind_user_about_email_) -
    reinterpret_cast<char*>(&email_is_validated_)) + sizeof(remind_user_about_email_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientEmailAddrInfo)
}

void CMsgClientEmailAddrInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientEmailAddrInfo_steammessages_5fclientserver_5f2_2eproto.base);
  email_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&email_is_validated_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remind_user_about_email_) -
      reinterpret_cast<char*>(&email_is_validated_)) + sizeof(remind_user_about_email_));
}

CMsgClientEmailAddrInfo::~CMsgClientEmailAddrInfo() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientEmailAddrInfo)
  SharedDtor();
}

void CMsgClientEmailAddrInfo::SharedDtor() {
  email_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientEmailAddrInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientEmailAddrInfo& CMsgClientEmailAddrInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientEmailAddrInfo_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientEmailAddrInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientEmailAddrInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    email_address_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&email_is_validated_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&remind_user_about_email_) -
        reinterpret_cast<char*>(&email_is_validated_)) + sizeof(remind_user_about_email_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientEmailAddrInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientEmailAddrInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string email_address = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientEmailAddrInfo.email_address");
        object = msg->mutable_email_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool email_is_validated = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_email_is_validated(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool email_validation_changed = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_email_validation_changed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool credential_change_requires_code = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_credential_change_requires_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool password_or_secretqa_change_requires_code = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_password_or_secretqa_change_requires_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool remind_user_about_email = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_remind_user_about_email(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientEmailAddrInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientEmailAddrInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string email_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email_address().data(), static_cast<int>(this->email_address().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientEmailAddrInfo.email_address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool email_is_validated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_email_is_validated(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &email_is_validated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool email_validation_changed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_email_validation_changed(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &email_validation_changed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool credential_change_requires_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_credential_change_requires_code(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &credential_change_requires_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool password_or_secretqa_change_requires_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_password_or_secretqa_change_requires_code(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &password_or_secretqa_change_requires_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool remind_user_about_email = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_remind_user_about_email(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &remind_user_about_email_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientEmailAddrInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientEmailAddrInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientEmailAddrInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientEmailAddrInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string email_address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email_address().data(), static_cast<int>(this->email_address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientEmailAddrInfo.email_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email_address(), output);
  }

  // optional bool email_is_validated = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->email_is_validated(), output);
  }

  // optional bool email_validation_changed = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->email_validation_changed(), output);
  }

  // optional bool credential_change_requires_code = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->credential_change_requires_code(), output);
  }

  // optional bool password_or_secretqa_change_requires_code = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->password_or_secretqa_change_requires_code(), output);
  }

  // optional bool remind_user_about_email = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->remind_user_about_email(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientEmailAddrInfo)
}

::google::protobuf::uint8* CMsgClientEmailAddrInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientEmailAddrInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string email_address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email_address().data(), static_cast<int>(this->email_address().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientEmailAddrInfo.email_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email_address(), target);
  }

  // optional bool email_is_validated = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->email_is_validated(), target);
  }

  // optional bool email_validation_changed = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->email_validation_changed(), target);
  }

  // optional bool credential_change_requires_code = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->credential_change_requires_code(), target);
  }

  // optional bool password_or_secretqa_change_requires_code = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->password_or_secretqa_change_requires_code(), target);
  }

  // optional bool remind_user_about_email = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->remind_user_about_email(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientEmailAddrInfo)
  return target;
}

size_t CMsgClientEmailAddrInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientEmailAddrInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string email_address = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email_address());
    }

    // optional bool email_is_validated = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool email_validation_changed = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool credential_change_requires_code = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool password_or_secretqa_change_requires_code = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool remind_user_about_email = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientEmailAddrInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientEmailAddrInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientEmailAddrInfo* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientEmailAddrInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientEmailAddrInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientEmailAddrInfo)
    MergeFrom(*source);
  }
}

void CMsgClientEmailAddrInfo::MergeFrom(const CMsgClientEmailAddrInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientEmailAddrInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      email_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_address_);
    }
    if (cached_has_bits & 0x00000002u) {
      email_is_validated_ = from.email_is_validated_;
    }
    if (cached_has_bits & 0x00000004u) {
      email_validation_changed_ = from.email_validation_changed_;
    }
    if (cached_has_bits & 0x00000008u) {
      credential_change_requires_code_ = from.credential_change_requires_code_;
    }
    if (cached_has_bits & 0x00000010u) {
      password_or_secretqa_change_requires_code_ = from.password_or_secretqa_change_requires_code_;
    }
    if (cached_has_bits & 0x00000020u) {
      remind_user_about_email_ = from.remind_user_about_email_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientEmailAddrInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientEmailAddrInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientEmailAddrInfo::CopyFrom(const CMsgClientEmailAddrInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientEmailAddrInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientEmailAddrInfo::IsInitialized() const {
  return true;
}

void CMsgClientEmailAddrInfo::Swap(CMsgClientEmailAddrInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientEmailAddrInfo::InternalSwap(CMsgClientEmailAddrInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  email_address_.Swap(&other->email_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(email_is_validated_, other->email_is_validated_);
  swap(email_validation_changed_, other->email_validation_changed_);
  swap(credential_change_requires_code_, other->credential_change_requires_code_);
  swap(password_or_secretqa_change_requires_code_, other->password_or_secretqa_change_requires_code_);
  swap(remind_user_about_email_, other->remind_user_about_email_);
}

::google::protobuf::Metadata CMsgClientEmailAddrInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREEnumeratePublishedFiles::InitAsDefaultInstance() {
}
class CMsgCREEnumeratePublishedFiles::HasBitSetters {
 public:
  static void set_has_app_id(CMsgCREEnumeratePublishedFiles* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_query_type(CMsgCREEnumeratePublishedFiles* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_start_index(CMsgCREEnumeratePublishedFiles* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_days(CMsgCREEnumeratePublishedFiles* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_count(CMsgCREEnumeratePublishedFiles* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_matching_file_type(CMsgCREEnumeratePublishedFiles* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREEnumeratePublishedFiles::kAppIdFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kQueryTypeFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kStartIndexFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kDaysFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kCountFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kTagsFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kUserTagsFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kMatchingFileTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREEnumeratePublishedFiles::CMsgCREEnumeratePublishedFiles()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREEnumeratePublishedFiles)
}
CMsgCREEnumeratePublishedFiles::CMsgCREEnumeratePublishedFiles(const CMsgCREEnumeratePublishedFiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      tags_(from.tags_),
      user_tags_(from.user_tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&matching_file_type_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(matching_file_type_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREEnumeratePublishedFiles)
}

void CMsgCREEnumeratePublishedFiles::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgCREEnumeratePublishedFiles_steammessages_5fclientserver_5f2_2eproto.base);
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(count_));
  matching_file_type_ = 13u;
}

CMsgCREEnumeratePublishedFiles::~CMsgCREEnumeratePublishedFiles() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREEnumeratePublishedFiles)
  SharedDtor();
}

void CMsgCREEnumeratePublishedFiles::SharedDtor() {
}

void CMsgCREEnumeratePublishedFiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgCREEnumeratePublishedFiles& CMsgCREEnumeratePublishedFiles::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgCREEnumeratePublishedFiles_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgCREEnumeratePublishedFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  user_tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(count_));
    matching_file_type_ = 13u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgCREEnumeratePublishedFiles::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgCREEnumeratePublishedFiles*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 query_type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_query_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 start_index = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_start_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 days = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_days(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 count = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated string tags = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("proto.steam.CMsgCREEnumeratePublishedFiles.tags");
          object = msg->add_tags();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // repeated string user_tags = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("proto.steam.CMsgCREEnumeratePublishedFiles.user_tags");
          object = msg->add_user_tags();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 58 && (ptr += 1));
        break;
      }
      // optional uint32 matching_file_type = 8 [default = 13];
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_matching_file_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgCREEnumeratePublishedFiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 query_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_query_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &query_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_start_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 days = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_days(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tags(this->tags_size() - 1).data(),
            static_cast<int>(this->tags(this->tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgCREEnumeratePublishedFiles.tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string user_tags = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_user_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_tags(this->user_tags_size() - 1).data(),
            static_cast<int>(this->user_tags(this->user_tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgCREEnumeratePublishedFiles.user_tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 matching_file_type = 8 [default = 13];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_matching_file_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matching_file_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREEnumeratePublishedFiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREEnumeratePublishedFiles)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgCREEnumeratePublishedFiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional int32 query_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->query_type(), output);
  }

  // optional uint32 start_index = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->start_index(), output);
  }

  // optional uint32 days = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->days(), output);
  }

  // optional uint32 count = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count(), output);
  }

  // repeated string tags = 6;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgCREEnumeratePublishedFiles.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->tags(i), output);
  }

  // repeated string user_tags = 7;
  for (int i = 0, n = this->user_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_tags(i).data(), static_cast<int>(this->user_tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgCREEnumeratePublishedFiles.user_tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->user_tags(i), output);
  }

  // optional uint32 matching_file_type = 8 [default = 13];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->matching_file_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREEnumeratePublishedFiles)
}

::google::protobuf::uint8* CMsgCREEnumeratePublishedFiles::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional int32 query_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->query_type(), target);
  }

  // optional uint32 start_index = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->start_index(), target);
  }

  // optional uint32 days = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->days(), target);
  }

  // optional uint32 count = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count(), target);
  }

  // repeated string tags = 6;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), static_cast<int>(this->tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgCREEnumeratePublishedFiles.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->tags(i), target);
  }

  // repeated string user_tags = 7;
  for (int i = 0, n = this->user_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_tags(i).data(), static_cast<int>(this->user_tags(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgCREEnumeratePublishedFiles.user_tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->user_tags(i), target);
  }

  // optional uint32 matching_file_type = 8 [default = 13];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->matching_file_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREEnumeratePublishedFiles)
  return target;
}

size_t CMsgCREEnumeratePublishedFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // repeated string user_tags = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->user_tags_size());
  for (int i = 0, n = this->user_tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->user_tags(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 query_type = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->query_type());
    }

    // optional uint32 start_index = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

    // optional uint32 days = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->days());
    }

    // optional uint32 count = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // optional uint32 matching_file_type = 8 [default = 13];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->matching_file_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREEnumeratePublishedFiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREEnumeratePublishedFiles* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgCREEnumeratePublishedFiles>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREEnumeratePublishedFiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREEnumeratePublishedFiles)
    MergeFrom(*source);
  }
}

void CMsgCREEnumeratePublishedFiles::MergeFrom(const CMsgCREEnumeratePublishedFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  user_tags_.MergeFrom(from.user_tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      query_type_ = from.query_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      days_ = from.days_;
    }
    if (cached_has_bits & 0x00000010u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000020u) {
      matching_file_type_ = from.matching_file_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREEnumeratePublishedFiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREEnumeratePublishedFiles::CopyFrom(const CMsgCREEnumeratePublishedFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREEnumeratePublishedFiles::IsInitialized() const {
  return true;
}

void CMsgCREEnumeratePublishedFiles::Swap(CMsgCREEnumeratePublishedFiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREEnumeratePublishedFiles::InternalSwap(CMsgCREEnumeratePublishedFiles* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  tags_.InternalSwap(CastToBase(&other->tags_));
  user_tags_.InternalSwap(CastToBase(&other->user_tags_));
  swap(app_id_, other->app_id_);
  swap(query_type_, other->query_type_);
  swap(start_index_, other->start_index_);
  swap(days_, other->days_);
  swap(count_, other->count_);
  swap(matching_file_type_, other->matching_file_type_);
}

::google::protobuf::Metadata CMsgCREEnumeratePublishedFiles::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::InitAsDefaultInstance() {
}
class CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_votes_for(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_votes_against(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_reports(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_score(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::kPublishedFileIdFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::kVotesForFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::kVotesAgainstFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::kReportsFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
}
CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId(const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(score_));
}

CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::~CMsgCREEnumeratePublishedFilesResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  SharedDtor();
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::SharedDtor() {
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId& CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&score_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(score_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgCREEnumeratePublishedFilesResponse_PublishedFileId*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional int32 votes_for = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_votes_for(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 votes_against = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_votes_against(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 reports = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_reports(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional float score = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 45) goto handle_unusual;
        msg->set_score(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 votes_for = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_votes_for(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &votes_for_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 votes_against = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_votes_against(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &votes_against_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 reports = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_reports(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reports_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float score = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (45 & 0xFF)) {
          HasBitSetters::set_has_score(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional int32 votes_for = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->votes_for(), output);
  }

  // optional int32 votes_against = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->votes_against(), output);
  }

  // optional int32 reports = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->reports(), output);
  }

  // optional float score = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->score(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional int32 votes_for = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->votes_for(), target);
  }

  // optional int32 votes_against = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->votes_against(), target);
  }

  // optional int32 reports = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->reports(), target);
  }

  // optional float score = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->score(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  return target;
}

size_t CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional int32 votes_for = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->votes_for());
    }

    // optional int32 votes_against = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->votes_against());
    }

    // optional int32 reports = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reports());
    }

    // optional float score = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgCREEnumeratePublishedFilesResponse_PublishedFileId>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::MergeFrom(const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      votes_for_ = from.votes_for_;
    }
    if (cached_has_bits & 0x00000004u) {
      votes_against_ = from.votes_against_;
    }
    if (cached_has_bits & 0x00000008u) {
      reports_ = from.reports_;
    }
    if (cached_has_bits & 0x00000010u) {
      score_ = from.score_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::CopyFrom(const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::Swap(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::InternalSwap(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(votes_for_, other->votes_for_);
  swap(votes_against_, other->votes_against_);
  swap(reports_, other->reports_);
  swap(score_, other->score_);
}

::google::protobuf::Metadata CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREEnumeratePublishedFilesResponse::InitAsDefaultInstance() {
}
class CMsgCREEnumeratePublishedFilesResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgCREEnumeratePublishedFilesResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_total_results(CMsgCREEnumeratePublishedFilesResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREEnumeratePublishedFilesResponse::kEresultFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse::kPublishedFilesFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREEnumeratePublishedFilesResponse::CMsgCREEnumeratePublishedFilesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
}
CMsgCREEnumeratePublishedFilesResponse::CMsgCREEnumeratePublishedFilesResponse(const CMsgCREEnumeratePublishedFilesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      published_files_(from.published_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
}

void CMsgCREEnumeratePublishedFilesResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgCREEnumeratePublishedFilesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgCREEnumeratePublishedFilesResponse::~CMsgCREEnumeratePublishedFilesResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  SharedDtor();
}

void CMsgCREEnumeratePublishedFilesResponse::SharedDtor() {
}

void CMsgCREEnumeratePublishedFilesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgCREEnumeratePublishedFilesResponse& CMsgCREEnumeratePublishedFilesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgCREEnumeratePublishedFilesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgCREEnumeratePublishedFilesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgCREEnumeratePublishedFilesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgCREEnumeratePublishedFilesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::_InternalParse;
          object = msg->add_published_files();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_total_results(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgCREEnumeratePublishedFilesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_published_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_total_results(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgCREEnumeratePublishedFilesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->published_files(static_cast<int>(i)),
      output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
}

::google::protobuf::uint8* CMsgCREEnumeratePublishedFilesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->published_files(static_cast<int>(i)), target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  return target;
}

size_t CMsgCREEnumeratePublishedFilesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId published_files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->published_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->published_files(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 total_results = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREEnumeratePublishedFilesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREEnumeratePublishedFilesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgCREEnumeratePublishedFilesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
    MergeFrom(*source);
  }
}

void CMsgCREEnumeratePublishedFilesResponse::MergeFrom(const CMsgCREEnumeratePublishedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_files_.MergeFrom(from.published_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREEnumeratePublishedFilesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREEnumeratePublishedFilesResponse::CopyFrom(const CMsgCREEnumeratePublishedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREEnumeratePublishedFilesResponse::IsInitialized() const {
  return true;
}

void CMsgCREEnumeratePublishedFilesResponse::Swap(CMsgCREEnumeratePublishedFilesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREEnumeratePublishedFilesResponse::InternalSwap(CMsgCREEnumeratePublishedFilesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&published_files_)->InternalSwap(CastToBase(&other->published_files_));
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgCREEnumeratePublishedFilesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREItemVoteSummary_PublishedFileId::InitAsDefaultInstance() {
}
class CMsgCREItemVoteSummary_PublishedFileId::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgCREItemVoteSummary_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREItemVoteSummary_PublishedFileId::kPublishedFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREItemVoteSummary_PublishedFileId::CMsgCREItemVoteSummary_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
}
CMsgCREItemVoteSummary_PublishedFileId::CMsgCREItemVoteSummary_PublishedFileId(const CMsgCREItemVoteSummary_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  published_file_id_ = from.published_file_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
}

void CMsgCREItemVoteSummary_PublishedFileId::SharedCtor() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgCREItemVoteSummary_PublishedFileId::~CMsgCREItemVoteSummary_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  SharedDtor();
}

void CMsgCREItemVoteSummary_PublishedFileId::SharedDtor() {
}

void CMsgCREItemVoteSummary_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgCREItemVoteSummary_PublishedFileId& CMsgCREItemVoteSummary_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgCREItemVoteSummary_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgCREItemVoteSummary_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgCREItemVoteSummary_PublishedFileId::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgCREItemVoteSummary_PublishedFileId*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgCREItemVoteSummary_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgCREItemVoteSummary_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
}

::google::protobuf::uint8* CMsgCREItemVoteSummary_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  return target;
}

size_t CMsgCREItemVoteSummary_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 published_file_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREItemVoteSummary_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREItemVoteSummary_PublishedFileId* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgCREItemVoteSummary_PublishedFileId>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgCREItemVoteSummary_PublishedFileId::MergeFrom(const CMsgCREItemVoteSummary_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_published_file_id()) {
    set_published_file_id(from.published_file_id());
  }
}

void CMsgCREItemVoteSummary_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREItemVoteSummary_PublishedFileId::CopyFrom(const CMsgCREItemVoteSummary_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREItemVoteSummary_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgCREItemVoteSummary_PublishedFileId::Swap(CMsgCREItemVoteSummary_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREItemVoteSummary_PublishedFileId::InternalSwap(CMsgCREItemVoteSummary_PublishedFileId* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
}

::google::protobuf::Metadata CMsgCREItemVoteSummary_PublishedFileId::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREItemVoteSummary::InitAsDefaultInstance() {
}
class CMsgCREItemVoteSummary::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREItemVoteSummary::kPublishedFileIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREItemVoteSummary::CMsgCREItemVoteSummary()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREItemVoteSummary)
}
CMsgCREItemVoteSummary::CMsgCREItemVoteSummary(const CMsgCREItemVoteSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      published_file_ids_(from.published_file_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREItemVoteSummary)
}

void CMsgCREItemVoteSummary::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgCREItemVoteSummary_steammessages_5fclientserver_5f2_2eproto.base);
}

CMsgCREItemVoteSummary::~CMsgCREItemVoteSummary() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREItemVoteSummary)
  SharedDtor();
}

void CMsgCREItemVoteSummary::SharedDtor() {
}

void CMsgCREItemVoteSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgCREItemVoteSummary& CMsgCREItemVoteSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgCREItemVoteSummary_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgCREItemVoteSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_file_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgCREItemVoteSummary::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgCREItemVoteSummary*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.steam.CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgCREItemVoteSummary_PublishedFileId::_InternalParse;
          object = msg->add_published_file_ids();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgCREItemVoteSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREItemVoteSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.steam.CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_published_file_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREItemVoteSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREItemVoteSummary)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgCREItemVoteSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_file_ids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->published_file_ids(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREItemVoteSummary)
}

::google::protobuf::uint8* CMsgCREItemVoteSummary::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_file_ids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->published_file_ids(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREItemVoteSummary)
  return target;
}

size_t CMsgCREItemVoteSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREItemVoteSummary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->published_file_ids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->published_file_ids(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREItemVoteSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREItemVoteSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREItemVoteSummary* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgCREItemVoteSummary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREItemVoteSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREItemVoteSummary)
    MergeFrom(*source);
  }
}

void CMsgCREItemVoteSummary::MergeFrom(const CMsgCREItemVoteSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREItemVoteSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_file_ids_.MergeFrom(from.published_file_ids_);
}

void CMsgCREItemVoteSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREItemVoteSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREItemVoteSummary::CopyFrom(const CMsgCREItemVoteSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREItemVoteSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREItemVoteSummary::IsInitialized() const {
  return true;
}

void CMsgCREItemVoteSummary::Swap(CMsgCREItemVoteSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREItemVoteSummary::InternalSwap(CMsgCREItemVoteSummary* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&published_file_ids_)->InternalSwap(CastToBase(&other->published_file_ids_));
}

::google::protobuf::Metadata CMsgCREItemVoteSummary::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::InitAsDefaultInstance() {
}
class CMsgCREItemVoteSummaryResponse_ItemVoteSummary::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgCREItemVoteSummaryResponse_ItemVoteSummary* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_votes_for(CMsgCREItemVoteSummaryResponse_ItemVoteSummary* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_votes_against(CMsgCREItemVoteSummaryResponse_ItemVoteSummary* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_reports(CMsgCREItemVoteSummaryResponse_ItemVoteSummary* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_score(CMsgCREItemVoteSummaryResponse_ItemVoteSummary* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREItemVoteSummaryResponse_ItemVoteSummary::kPublishedFileIdFieldNumber;
const int CMsgCREItemVoteSummaryResponse_ItemVoteSummary::kVotesForFieldNumber;
const int CMsgCREItemVoteSummaryResponse_ItemVoteSummary::kVotesAgainstFieldNumber;
const int CMsgCREItemVoteSummaryResponse_ItemVoteSummary::kReportsFieldNumber;
const int CMsgCREItemVoteSummaryResponse_ItemVoteSummary::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREItemVoteSummaryResponse_ItemVoteSummary::CMsgCREItemVoteSummaryResponse_ItemVoteSummary()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
}
CMsgCREItemVoteSummaryResponse_ItemVoteSummary::CMsgCREItemVoteSummaryResponse_ItemVoteSummary(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(score_));
}

CMsgCREItemVoteSummaryResponse_ItemVoteSummary::~CMsgCREItemVoteSummaryResponse_ItemVoteSummary() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  SharedDtor();
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::SharedDtor() {
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& CMsgCREItemVoteSummaryResponse_ItemVoteSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgCREItemVoteSummaryResponse_ItemVoteSummary_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&score_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(score_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgCREItemVoteSummaryResponse_ItemVoteSummary*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional int32 votes_for = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_votes_for(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 votes_against = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_votes_against(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 reports = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_reports(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional float score = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 45) goto handle_unusual;
        msg->set_score(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 votes_for = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_votes_for(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &votes_for_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 votes_against = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_votes_against(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &votes_against_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 reports = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_reports(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reports_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float score = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (45 & 0xFF)) {
          HasBitSetters::set_has_score(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional int32 votes_for = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->votes_for(), output);
  }

  // optional int32 votes_against = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->votes_against(), output);
  }

  // optional int32 reports = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->reports(), output);
  }

  // optional float score = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->score(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
}

::google::protobuf::uint8* CMsgCREItemVoteSummaryResponse_ItemVoteSummary::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional int32 votes_for = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->votes_for(), target);
  }

  // optional int32 votes_against = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->votes_against(), target);
  }

  // optional int32 reports = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->reports(), target);
  }

  // optional float score = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->score(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  return target;
}

size_t CMsgCREItemVoteSummaryResponse_ItemVoteSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional int32 votes_for = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->votes_for());
    }

    // optional int32 votes_against = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->votes_against());
    }

    // optional int32 reports = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reports());
    }

    // optional float score = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREItemVoteSummaryResponse_ItemVoteSummary* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgCREItemVoteSummaryResponse_ItemVoteSummary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
    MergeFrom(*source);
  }
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::MergeFrom(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      votes_for_ = from.votes_for_;
    }
    if (cached_has_bits & 0x00000004u) {
      votes_against_ = from.votes_against_;
    }
    if (cached_has_bits & 0x00000008u) {
      reports_ = from.reports_;
    }
    if (cached_has_bits & 0x00000010u) {
      score_ = from.score_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::CopyFrom(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::IsInitialized() const {
  return true;
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::Swap(CMsgCREItemVoteSummaryResponse_ItemVoteSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::InternalSwap(CMsgCREItemVoteSummaryResponse_ItemVoteSummary* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(votes_for_, other->votes_for_);
  swap(votes_against_, other->votes_against_);
  swap(reports_, other->reports_);
  swap(score_, other->score_);
}

::google::protobuf::Metadata CMsgCREItemVoteSummaryResponse_ItemVoteSummary::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREItemVoteSummaryResponse::InitAsDefaultInstance() {
}
class CMsgCREItemVoteSummaryResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgCREItemVoteSummaryResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREItemVoteSummaryResponse::kEresultFieldNumber;
const int CMsgCREItemVoteSummaryResponse::kItemVoteSummariesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREItemVoteSummaryResponse::CMsgCREItemVoteSummaryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREItemVoteSummaryResponse)
}
CMsgCREItemVoteSummaryResponse::CMsgCREItemVoteSummaryResponse(const CMsgCREItemVoteSummaryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      item_vote_summaries_(from.item_vote_summaries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREItemVoteSummaryResponse)
}

void CMsgCREItemVoteSummaryResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgCREItemVoteSummaryResponse_steammessages_5fclientserver_5f2_2eproto.base);
  eresult_ = 2;
}

CMsgCREItemVoteSummaryResponse::~CMsgCREItemVoteSummaryResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREItemVoteSummaryResponse)
  SharedDtor();
}

void CMsgCREItemVoteSummaryResponse::SharedDtor() {
}

void CMsgCREItemVoteSummaryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgCREItemVoteSummaryResponse& CMsgCREItemVoteSummaryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgCREItemVoteSummaryResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgCREItemVoteSummaryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_vote_summaries_.Clear();
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgCREItemVoteSummaryResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgCREItemVoteSummaryResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_InternalParse;
          object = msg->add_item_vote_summaries();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgCREItemVoteSummaryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_item_vote_summaries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREItemVoteSummaryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREItemVoteSummaryResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgCREItemVoteSummaryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_vote_summaries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->item_vote_summaries(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREItemVoteSummaryResponse)
}

::google::protobuf::uint8* CMsgCREItemVoteSummaryResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_vote_summaries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->item_vote_summaries(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREItemVoteSummaryResponse)
  return target;
}

size_t CMsgCREItemVoteSummaryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->item_vote_summaries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->item_vote_summaries(static_cast<int>(i)));
    }
  }

  // optional int32 eresult = 1 [default = 2];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREItemVoteSummaryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREItemVoteSummaryResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgCREItemVoteSummaryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREItemVoteSummaryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREItemVoteSummaryResponse)
    MergeFrom(*source);
  }
}

void CMsgCREItemVoteSummaryResponse::MergeFrom(const CMsgCREItemVoteSummaryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_vote_summaries_.MergeFrom(from.item_vote_summaries_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgCREItemVoteSummaryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREItemVoteSummaryResponse::CopyFrom(const CMsgCREItemVoteSummaryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREItemVoteSummaryResponse::IsInitialized() const {
  return true;
}

void CMsgCREItemVoteSummaryResponse::Swap(CMsgCREItemVoteSummaryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREItemVoteSummaryResponse::InternalSwap(CMsgCREItemVoteSummaryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&item_vote_summaries_)->InternalSwap(CastToBase(&other->item_vote_summaries_));
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgCREItemVoteSummaryResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREUpdateUserPublishedItemVote::InitAsDefaultInstance() {
}
class CMsgCREUpdateUserPublishedItemVote::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgCREUpdateUserPublishedItemVote* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_vote_up(CMsgCREUpdateUserPublishedItemVote* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREUpdateUserPublishedItemVote::kPublishedFileIdFieldNumber;
const int CMsgCREUpdateUserPublishedItemVote::kVoteUpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREUpdateUserPublishedItemVote::CMsgCREUpdateUserPublishedItemVote()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREUpdateUserPublishedItemVote)
}
CMsgCREUpdateUserPublishedItemVote::CMsgCREUpdateUserPublishedItemVote(const CMsgCREUpdateUserPublishedItemVote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&vote_up_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(vote_up_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREUpdateUserPublishedItemVote)
}

void CMsgCREUpdateUserPublishedItemVote::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vote_up_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(vote_up_));
}

CMsgCREUpdateUserPublishedItemVote::~CMsgCREUpdateUserPublishedItemVote() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  SharedDtor();
}

void CMsgCREUpdateUserPublishedItemVote::SharedDtor() {
}

void CMsgCREUpdateUserPublishedItemVote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgCREUpdateUserPublishedItemVote& CMsgCREUpdateUserPublishedItemVote::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgCREUpdateUserPublishedItemVote_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgCREUpdateUserPublishedItemVote::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vote_up_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(vote_up_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgCREUpdateUserPublishedItemVote::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgCREUpdateUserPublishedItemVote*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional bool vote_up = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_vote_up(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgCREUpdateUserPublishedItemVote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vote_up = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_vote_up(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vote_up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgCREUpdateUserPublishedItemVote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional bool vote_up = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->vote_up(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREUpdateUserPublishedItemVote)
}

::google::protobuf::uint8* CMsgCREUpdateUserPublishedItemVote::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional bool vote_up = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->vote_up(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  return target;
}

size_t CMsgCREUpdateUserPublishedItemVote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional bool vote_up = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREUpdateUserPublishedItemVote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREUpdateUserPublishedItemVote* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgCREUpdateUserPublishedItemVote>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREUpdateUserPublishedItemVote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREUpdateUserPublishedItemVote)
    MergeFrom(*source);
  }
}

void CMsgCREUpdateUserPublishedItemVote::MergeFrom(const CMsgCREUpdateUserPublishedItemVote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      vote_up_ = from.vote_up_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREUpdateUserPublishedItemVote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREUpdateUserPublishedItemVote::CopyFrom(const CMsgCREUpdateUserPublishedItemVote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREUpdateUserPublishedItemVote::IsInitialized() const {
  return true;
}

void CMsgCREUpdateUserPublishedItemVote::Swap(CMsgCREUpdateUserPublishedItemVote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREUpdateUserPublishedItemVote::InternalSwap(CMsgCREUpdateUserPublishedItemVote* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(vote_up_, other->vote_up_);
}

::google::protobuf::Metadata CMsgCREUpdateUserPublishedItemVote::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREUpdateUserPublishedItemVoteResponse::InitAsDefaultInstance() {
}
class CMsgCREUpdateUserPublishedItemVoteResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgCREUpdateUserPublishedItemVoteResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREUpdateUserPublishedItemVoteResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREUpdateUserPublishedItemVoteResponse::CMsgCREUpdateUserPublishedItemVoteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
}
CMsgCREUpdateUserPublishedItemVoteResponse::CMsgCREUpdateUserPublishedItemVoteResponse(const CMsgCREUpdateUserPublishedItemVoteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
}

void CMsgCREUpdateUserPublishedItemVoteResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgCREUpdateUserPublishedItemVoteResponse::~CMsgCREUpdateUserPublishedItemVoteResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  SharedDtor();
}

void CMsgCREUpdateUserPublishedItemVoteResponse::SharedDtor() {
}

void CMsgCREUpdateUserPublishedItemVoteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgCREUpdateUserPublishedItemVoteResponse& CMsgCREUpdateUserPublishedItemVoteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgCREUpdateUserPublishedItemVoteResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgCREUpdateUserPublishedItemVoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgCREUpdateUserPublishedItemVoteResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgCREUpdateUserPublishedItemVoteResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgCREUpdateUserPublishedItemVoteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgCREUpdateUserPublishedItemVoteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
}

::google::protobuf::uint8* CMsgCREUpdateUserPublishedItemVoteResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  return target;
}

size_t CMsgCREUpdateUserPublishedItemVoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 eresult = 1 [default = 2];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREUpdateUserPublishedItemVoteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREUpdateUserPublishedItemVoteResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgCREUpdateUserPublishedItemVoteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
    MergeFrom(*source);
  }
}

void CMsgCREUpdateUserPublishedItemVoteResponse::MergeFrom(const CMsgCREUpdateUserPublishedItemVoteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgCREUpdateUserPublishedItemVoteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREUpdateUserPublishedItemVoteResponse::CopyFrom(const CMsgCREUpdateUserPublishedItemVoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREUpdateUserPublishedItemVoteResponse::IsInitialized() const {
  return true;
}

void CMsgCREUpdateUserPublishedItemVoteResponse::Swap(CMsgCREUpdateUserPublishedItemVoteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREUpdateUserPublishedItemVoteResponse::InternalSwap(CMsgCREUpdateUserPublishedItemVoteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgCREUpdateUserPublishedItemVoteResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::InitAsDefaultInstance() {
}
class CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::kPublishedFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
}
CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  published_file_id_ = from.published_file_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::SharedCtor() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::~CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  SharedDtor();
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::SharedDtor() {
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
}

::google::protobuf::uint8* CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  return target;
}

size_t CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 published_file_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::MergeFrom(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_published_file_id()) {
    set_published_file_id(from.published_file_id());
  }
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::CopyFrom(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::Swap(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::InternalSwap(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
}

::google::protobuf::Metadata CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREGetUserPublishedItemVoteDetails::InitAsDefaultInstance() {
}
class CMsgCREGetUserPublishedItemVoteDetails::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREGetUserPublishedItemVoteDetails::kPublishedFileIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREGetUserPublishedItemVoteDetails::CMsgCREGetUserPublishedItemVoteDetails()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
}
CMsgCREGetUserPublishedItemVoteDetails::CMsgCREGetUserPublishedItemVoteDetails(const CMsgCREGetUserPublishedItemVoteDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      published_file_ids_(from.published_file_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
}

void CMsgCREGetUserPublishedItemVoteDetails::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgCREGetUserPublishedItemVoteDetails_steammessages_5fclientserver_5f2_2eproto.base);
}

CMsgCREGetUserPublishedItemVoteDetails::~CMsgCREGetUserPublishedItemVoteDetails() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  SharedDtor();
}

void CMsgCREGetUserPublishedItemVoteDetails::SharedDtor() {
}

void CMsgCREGetUserPublishedItemVoteDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgCREGetUserPublishedItemVoteDetails& CMsgCREGetUserPublishedItemVoteDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgCREGetUserPublishedItemVoteDetails_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgCREGetUserPublishedItemVoteDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_file_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgCREGetUserPublishedItemVoteDetails::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgCREGetUserPublishedItemVoteDetails*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::_InternalParse;
          object = msg->add_published_file_ids();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgCREGetUserPublishedItemVoteDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_published_file_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgCREGetUserPublishedItemVoteDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_file_ids_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->published_file_ids(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
}

::google::protobuf::uint8* CMsgCREGetUserPublishedItemVoteDetails::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->published_file_ids_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->published_file_ids(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  return target;
}

size_t CMsgCREGetUserPublishedItemVoteDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->published_file_ids_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->published_file_ids(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREGetUserPublishedItemVoteDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREGetUserPublishedItemVoteDetails* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgCREGetUserPublishedItemVoteDetails>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
    MergeFrom(*source);
  }
}

void CMsgCREGetUserPublishedItemVoteDetails::MergeFrom(const CMsgCREGetUserPublishedItemVoteDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_file_ids_.MergeFrom(from.published_file_ids_);
}

void CMsgCREGetUserPublishedItemVoteDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREGetUserPublishedItemVoteDetails::CopyFrom(const CMsgCREGetUserPublishedItemVoteDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREGetUserPublishedItemVoteDetails::IsInitialized() const {
  return true;
}

void CMsgCREGetUserPublishedItemVoteDetails::Swap(CMsgCREGetUserPublishedItemVoteDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREGetUserPublishedItemVoteDetails::InternalSwap(CMsgCREGetUserPublishedItemVoteDetails* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&published_file_ids_)->InternalSwap(CastToBase(&other->published_file_ids_));
}

::google::protobuf::Metadata CMsgCREGetUserPublishedItemVoteDetails::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::InitAsDefaultInstance() {
}
class CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::HasBitSetters {
 public:
  static void set_has_published_file_id(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_vote(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::kPublishedFileIdFieldNumber;
const int CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::kVoteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
}
CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&vote_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(vote_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::SharedCtor() {
  ::memset(&published_file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vote_) -
      reinterpret_cast<char*>(&published_file_id_)) + sizeof(vote_));
}

CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::~CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  SharedDtor();
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::SharedDtor() {
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vote_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(vote_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_published_file_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional int32 vote = 2 [default = 0];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_vote(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_published_file_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vote = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_vote(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vote_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional int32 vote = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vote(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
}

::google::protobuf::uint8* CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional int32 vote = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vote(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  return target;
}

size_t CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional int32 vote = 2 [default = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vote());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
    MergeFrom(*source);
  }
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::MergeFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      vote_ = from.vote_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::CopyFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::IsInitialized() const {
  return true;
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::Swap(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::InternalSwap(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(published_file_id_, other->published_file_id_);
  swap(vote_, other->vote_);
}

::google::protobuf::Metadata CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgCREGetUserPublishedItemVoteDetailsResponse::InitAsDefaultInstance() {
}
class CMsgCREGetUserPublishedItemVoteDetailsResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgCREGetUserPublishedItemVoteDetailsResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREGetUserPublishedItemVoteDetailsResponse::kEresultFieldNumber;
const int CMsgCREGetUserPublishedItemVoteDetailsResponse::kUserItemVoteDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREGetUserPublishedItemVoteDetailsResponse::CMsgCREGetUserPublishedItemVoteDetailsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
}
CMsgCREGetUserPublishedItemVoteDetailsResponse::CMsgCREGetUserPublishedItemVoteDetailsResponse(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      user_item_vote_details_(from.user_item_vote_details_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse_steammessages_5fclientserver_5f2_2eproto.base);
  eresult_ = 2;
}

CMsgCREGetUserPublishedItemVoteDetailsResponse::~CMsgCREGetUserPublishedItemVoteDetailsResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  SharedDtor();
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::SharedDtor() {
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgCREGetUserPublishedItemVoteDetailsResponse& CMsgCREGetUserPublishedItemVoteDetailsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgCREGetUserPublishedItemVoteDetailsResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgCREGetUserPublishedItemVoteDetailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_item_vote_details_.Clear();
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgCREGetUserPublishedItemVoteDetailsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgCREGetUserPublishedItemVoteDetailsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::_InternalParse;
          object = msg->add_user_item_vote_details();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgCREGetUserPublishedItemVoteDetailsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_user_item_vote_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgCREGetUserPublishedItemVoteDetailsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_item_vote_details_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->user_item_vote_details(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
}

::google::protobuf::uint8* CMsgCREGetUserPublishedItemVoteDetailsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->user_item_vote_details_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->user_item_vote_details(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  return target;
}

size_t CMsgCREGetUserPublishedItemVoteDetailsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->user_item_vote_details_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->user_item_vote_details(static_cast<int>(i)));
    }
  }

  // optional int32 eresult = 1 [default = 2];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREGetUserPublishedItemVoteDetailsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgCREGetUserPublishedItemVoteDetailsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
    MergeFrom(*source);
  }
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::MergeFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_item_vote_details_.MergeFrom(from.user_item_vote_details_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::CopyFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREGetUserPublishedItemVoteDetailsResponse::IsInitialized() const {
  return true;
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::Swap(CMsgCREGetUserPublishedItemVoteDetailsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse::InternalSwap(CMsgCREGetUserPublishedItemVoteDetailsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&user_item_vote_details_)->InternalSwap(CastToBase(&other->user_item_vote_details_));
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgCREGetUserPublishedItemVoteDetailsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGameServerPingSample_Sample::InitAsDefaultInstance() {
}
class CMsgGameServerPingSample_Sample::HasBitSetters {
 public:
  static void set_has_ip(CMsgGameServerPingSample_Sample* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_avg_ping_ms(CMsgGameServerPingSample_Sample* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_stddev_ping_ms_x10(CMsgGameServerPingSample_Sample* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerPingSample_Sample::kIpFieldNumber;
const int CMsgGameServerPingSample_Sample::kAvgPingMsFieldNumber;
const int CMsgGameServerPingSample_Sample::kStddevPingMsX10FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerPingSample_Sample::CMsgGameServerPingSample_Sample()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGameServerPingSample.Sample)
}
CMsgGameServerPingSample_Sample::CMsgGameServerPingSample_Sample(const CMsgGameServerPingSample_Sample& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ip_, &from.ip_,
    static_cast<size_t>(reinterpret_cast<char*>(&stddev_ping_ms_x10_) -
    reinterpret_cast<char*>(&ip_)) + sizeof(stddev_ping_ms_x10_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGameServerPingSample.Sample)
}

void CMsgGameServerPingSample_Sample::SharedCtor() {
  ::memset(&ip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stddev_ping_ms_x10_) -
      reinterpret_cast<char*>(&ip_)) + sizeof(stddev_ping_ms_x10_));
}

CMsgGameServerPingSample_Sample::~CMsgGameServerPingSample_Sample() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGameServerPingSample.Sample)
  SharedDtor();
}

void CMsgGameServerPingSample_Sample::SharedDtor() {
}

void CMsgGameServerPingSample_Sample::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGameServerPingSample_Sample& CMsgGameServerPingSample_Sample::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGameServerPingSample_Sample_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgGameServerPingSample_Sample::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGameServerPingSample.Sample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&ip_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stddev_ping_ms_x10_) -
        reinterpret_cast<char*>(&ip_)) + sizeof(stddev_ping_ms_x10_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGameServerPingSample_Sample::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGameServerPingSample_Sample*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed32 ip = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_ip(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      // optional uint32 avg_ping_ms = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_avg_ping_ms(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 stddev_ping_ms_x10 = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_stddev_ping_ms_x10(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGameServerPingSample_Sample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGameServerPingSample.Sample)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {
          HasBitSetters::set_has_ip(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 avg_ping_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_avg_ping_ms(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avg_ping_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stddev_ping_ms_x10 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_stddev_ping_ms_x10(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stddev_ping_ms_x10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGameServerPingSample.Sample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGameServerPingSample.Sample)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGameServerPingSample_Sample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGameServerPingSample.Sample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->ip(), output);
  }

  // optional uint32 avg_ping_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->avg_ping_ms(), output);
  }

  // optional uint32 stddev_ping_ms_x10 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->stddev_ping_ms_x10(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGameServerPingSample.Sample)
}

::google::protobuf::uint8* CMsgGameServerPingSample_Sample::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGameServerPingSample.Sample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 ip = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->ip(), target);
  }

  // optional uint32 avg_ping_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->avg_ping_ms(), target);
  }

  // optional uint32 stddev_ping_ms_x10 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->stddev_ping_ms_x10(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGameServerPingSample.Sample)
  return target;
}

size_t CMsgGameServerPingSample_Sample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGameServerPingSample.Sample)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional fixed32 ip = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional uint32 avg_ping_ms = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->avg_ping_ms());
    }

    // optional uint32 stddev_ping_ms_x10 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stddev_ping_ms_x10());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGameServerPingSample_Sample::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGameServerPingSample.Sample)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerPingSample_Sample* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGameServerPingSample_Sample>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGameServerPingSample.Sample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGameServerPingSample.Sample)
    MergeFrom(*source);
  }
}

void CMsgGameServerPingSample_Sample::MergeFrom(const CMsgGameServerPingSample_Sample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGameServerPingSample.Sample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ip_ = from.ip_;
    }
    if (cached_has_bits & 0x00000002u) {
      avg_ping_ms_ = from.avg_ping_ms_;
    }
    if (cached_has_bits & 0x00000004u) {
      stddev_ping_ms_x10_ = from.stddev_ping_ms_x10_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerPingSample_Sample::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGameServerPingSample.Sample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerPingSample_Sample::CopyFrom(const CMsgGameServerPingSample_Sample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGameServerPingSample.Sample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerPingSample_Sample::IsInitialized() const {
  return true;
}

void CMsgGameServerPingSample_Sample::Swap(CMsgGameServerPingSample_Sample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerPingSample_Sample::InternalSwap(CMsgGameServerPingSample_Sample* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ip_, other->ip_);
  swap(avg_ping_ms_, other->avg_ping_ms_);
  swap(stddev_ping_ms_x10_, other->stddev_ping_ms_x10_);
}

::google::protobuf::Metadata CMsgGameServerPingSample_Sample::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgGameServerPingSample::InitAsDefaultInstance() {
}
class CMsgGameServerPingSample::HasBitSetters {
 public:
  static void set_has_my_ip(CMsgGameServerPingSample* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_gs_app_id(CMsgGameServerPingSample* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerPingSample::kMyIpFieldNumber;
const int CMsgGameServerPingSample::kGsAppIdFieldNumber;
const int CMsgGameServerPingSample::kGsSamplesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerPingSample::CMsgGameServerPingSample()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGameServerPingSample)
}
CMsgGameServerPingSample::CMsgGameServerPingSample(const CMsgGameServerPingSample& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      gs_samples_(from.gs_samples_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&my_ip_, &from.my_ip_,
    static_cast<size_t>(reinterpret_cast<char*>(&gs_app_id_) -
    reinterpret_cast<char*>(&my_ip_)) + sizeof(gs_app_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGameServerPingSample)
}

void CMsgGameServerPingSample::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgGameServerPingSample_steammessages_5fclientserver_5f2_2eproto.base);
  ::memset(&my_ip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gs_app_id_) -
      reinterpret_cast<char*>(&my_ip_)) + sizeof(gs_app_id_));
}

CMsgGameServerPingSample::~CMsgGameServerPingSample() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGameServerPingSample)
  SharedDtor();
}

void CMsgGameServerPingSample::SharedDtor() {
}

void CMsgGameServerPingSample::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgGameServerPingSample& CMsgGameServerPingSample::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgGameServerPingSample_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgGameServerPingSample::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGameServerPingSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gs_samples_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&my_ip_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gs_app_id_) -
        reinterpret_cast<char*>(&my_ip_)) + sizeof(gs_app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgGameServerPingSample::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgGameServerPingSample*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed32 my_ip = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_my_ip(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint32>(ptr));
        ptr += sizeof(::google::protobuf::uint32);
        break;
      }
      // optional int32 gs_app_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_gs_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgGameServerPingSample.Sample gs_samples = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgGameServerPingSample_Sample::_InternalParse;
          object = msg->add_gs_samples();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgGameServerPingSample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGameServerPingSample)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 my_ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {
          HasBitSetters::set_has_my_ip(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &my_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gs_app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_gs_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gs_app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgGameServerPingSample.Sample gs_samples = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gs_samples()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGameServerPingSample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGameServerPingSample)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgGameServerPingSample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGameServerPingSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 my_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->my_ip(), output);
  }

  // optional int32 gs_app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gs_app_id(), output);
  }

  // repeated .proto.steam.CMsgGameServerPingSample.Sample gs_samples = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gs_samples_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->gs_samples(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGameServerPingSample)
}

::google::protobuf::uint8* CMsgGameServerPingSample::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGameServerPingSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 my_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->my_ip(), target);
  }

  // optional int32 gs_app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gs_app_id(), target);
  }

  // repeated .proto.steam.CMsgGameServerPingSample.Sample gs_samples = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gs_samples_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->gs_samples(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGameServerPingSample)
  return target;
}

size_t CMsgGameServerPingSample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGameServerPingSample)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgGameServerPingSample.Sample gs_samples = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->gs_samples_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gs_samples(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed32 my_ip = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional int32 gs_app_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gs_app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGameServerPingSample::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGameServerPingSample)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerPingSample* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgGameServerPingSample>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGameServerPingSample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGameServerPingSample)
    MergeFrom(*source);
  }
}

void CMsgGameServerPingSample::MergeFrom(const CMsgGameServerPingSample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGameServerPingSample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gs_samples_.MergeFrom(from.gs_samples_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      my_ip_ = from.my_ip_;
    }
    if (cached_has_bits & 0x00000002u) {
      gs_app_id_ = from.gs_app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerPingSample::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGameServerPingSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerPingSample::CopyFrom(const CMsgGameServerPingSample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGameServerPingSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerPingSample::IsInitialized() const {
  return true;
}

void CMsgGameServerPingSample::Swap(CMsgGameServerPingSample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerPingSample::InternalSwap(CMsgGameServerPingSample* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&gs_samples_)->InternalSwap(CastToBase(&other->gs_samples_));
  swap(my_ip_, other->my_ip_);
  swap(gs_app_id_, other->gs_app_id_);
}

::google::protobuf::Metadata CMsgGameServerPingSample::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgFSGetFollowerCount::InitAsDefaultInstance() {
}
class CMsgFSGetFollowerCount::HasBitSetters {
 public:
  static void set_has_steam_id(CMsgFSGetFollowerCount* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSGetFollowerCount::kSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSGetFollowerCount::CMsgFSGetFollowerCount()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgFSGetFollowerCount)
}
CMsgFSGetFollowerCount::CMsgFSGetFollowerCount(const CMsgFSGetFollowerCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_ = from.steam_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgFSGetFollowerCount)
}

void CMsgFSGetFollowerCount::SharedCtor() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgFSGetFollowerCount::~CMsgFSGetFollowerCount() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgFSGetFollowerCount)
  SharedDtor();
}

void CMsgFSGetFollowerCount::SharedDtor() {
}

void CMsgFSGetFollowerCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgFSGetFollowerCount& CMsgFSGetFollowerCount::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgFSGetFollowerCount_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgFSGetFollowerCount::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgFSGetFollowerCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgFSGetFollowerCount::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgFSGetFollowerCount*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_steam_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgFSGetFollowerCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgFSGetFollowerCount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_steam_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgFSGetFollowerCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgFSGetFollowerCount)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgFSGetFollowerCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgFSGetFollowerCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgFSGetFollowerCount)
}

::google::protobuf::uint8* CMsgFSGetFollowerCount::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgFSGetFollowerCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgFSGetFollowerCount)
  return target;
}

size_t CMsgFSGetFollowerCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgFSGetFollowerCount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 steam_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFSGetFollowerCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgFSGetFollowerCount)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSGetFollowerCount* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgFSGetFollowerCount>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgFSGetFollowerCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgFSGetFollowerCount)
    MergeFrom(*source);
  }
}

void CMsgFSGetFollowerCount::MergeFrom(const CMsgFSGetFollowerCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgFSGetFollowerCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id()) {
    set_steam_id(from.steam_id());
  }
}

void CMsgFSGetFollowerCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgFSGetFollowerCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSGetFollowerCount::CopyFrom(const CMsgFSGetFollowerCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgFSGetFollowerCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSGetFollowerCount::IsInitialized() const {
  return true;
}

void CMsgFSGetFollowerCount::Swap(CMsgFSGetFollowerCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSGetFollowerCount::InternalSwap(CMsgFSGetFollowerCount* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(steam_id_, other->steam_id_);
}

::google::protobuf::Metadata CMsgFSGetFollowerCount::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgFSGetFollowerCountResponse::InitAsDefaultInstance() {
}
class CMsgFSGetFollowerCountResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgFSGetFollowerCountResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_count(CMsgFSGetFollowerCountResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSGetFollowerCountResponse::kEresultFieldNumber;
const int CMsgFSGetFollowerCountResponse::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSGetFollowerCountResponse::CMsgFSGetFollowerCountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgFSGetFollowerCountResponse)
}
CMsgFSGetFollowerCountResponse::CMsgFSGetFollowerCountResponse(const CMsgFSGetFollowerCountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&count_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgFSGetFollowerCountResponse)
}

void CMsgFSGetFollowerCountResponse::SharedCtor() {
  count_ = 0;
  eresult_ = 2;
}

CMsgFSGetFollowerCountResponse::~CMsgFSGetFollowerCountResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgFSGetFollowerCountResponse)
  SharedDtor();
}

void CMsgFSGetFollowerCountResponse::SharedDtor() {
}

void CMsgFSGetFollowerCountResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgFSGetFollowerCountResponse& CMsgFSGetFollowerCountResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgFSGetFollowerCountResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgFSGetFollowerCountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgFSGetFollowerCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    count_ = 0;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgFSGetFollowerCountResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgFSGetFollowerCountResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 count = 2 [default = 0];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgFSGetFollowerCountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgFSGetFollowerCountResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 count = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgFSGetFollowerCountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgFSGetFollowerCountResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgFSGetFollowerCountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgFSGetFollowerCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 count = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgFSGetFollowerCountResponse)
}

::google::protobuf::uint8* CMsgFSGetFollowerCountResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgFSGetFollowerCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 count = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgFSGetFollowerCountResponse)
  return target;
}

size_t CMsgFSGetFollowerCountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgFSGetFollowerCountResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 count = 2 [default = 0];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFSGetFollowerCountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgFSGetFollowerCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSGetFollowerCountResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgFSGetFollowerCountResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgFSGetFollowerCountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgFSGetFollowerCountResponse)
    MergeFrom(*source);
  }
}

void CMsgFSGetFollowerCountResponse::MergeFrom(const CMsgFSGetFollowerCountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgFSGetFollowerCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgFSGetFollowerCountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgFSGetFollowerCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSGetFollowerCountResponse::CopyFrom(const CMsgFSGetFollowerCountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgFSGetFollowerCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSGetFollowerCountResponse::IsInitialized() const {
  return true;
}

void CMsgFSGetFollowerCountResponse::Swap(CMsgFSGetFollowerCountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSGetFollowerCountResponse::InternalSwap(CMsgFSGetFollowerCountResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(count_, other->count_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgFSGetFollowerCountResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgFSGetIsFollowing::InitAsDefaultInstance() {
}
class CMsgFSGetIsFollowing::HasBitSetters {
 public:
  static void set_has_steam_id(CMsgFSGetIsFollowing* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSGetIsFollowing::kSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSGetIsFollowing::CMsgFSGetIsFollowing()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgFSGetIsFollowing)
}
CMsgFSGetIsFollowing::CMsgFSGetIsFollowing(const CMsgFSGetIsFollowing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_ = from.steam_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgFSGetIsFollowing)
}

void CMsgFSGetIsFollowing::SharedCtor() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgFSGetIsFollowing::~CMsgFSGetIsFollowing() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgFSGetIsFollowing)
  SharedDtor();
}

void CMsgFSGetIsFollowing::SharedDtor() {
}

void CMsgFSGetIsFollowing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgFSGetIsFollowing& CMsgFSGetIsFollowing::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgFSGetIsFollowing_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgFSGetIsFollowing::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgFSGetIsFollowing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgFSGetIsFollowing::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgFSGetIsFollowing*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_steam_id(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgFSGetIsFollowing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgFSGetIsFollowing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_steam_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgFSGetIsFollowing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgFSGetIsFollowing)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgFSGetIsFollowing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgFSGetIsFollowing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgFSGetIsFollowing)
}

::google::protobuf::uint8* CMsgFSGetIsFollowing::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgFSGetIsFollowing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgFSGetIsFollowing)
  return target;
}

size_t CMsgFSGetIsFollowing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgFSGetIsFollowing)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 steam_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFSGetIsFollowing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgFSGetIsFollowing)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSGetIsFollowing* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgFSGetIsFollowing>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgFSGetIsFollowing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgFSGetIsFollowing)
    MergeFrom(*source);
  }
}

void CMsgFSGetIsFollowing::MergeFrom(const CMsgFSGetIsFollowing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgFSGetIsFollowing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id()) {
    set_steam_id(from.steam_id());
  }
}

void CMsgFSGetIsFollowing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgFSGetIsFollowing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSGetIsFollowing::CopyFrom(const CMsgFSGetIsFollowing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgFSGetIsFollowing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSGetIsFollowing::IsInitialized() const {
  return true;
}

void CMsgFSGetIsFollowing::Swap(CMsgFSGetIsFollowing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSGetIsFollowing::InternalSwap(CMsgFSGetIsFollowing* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(steam_id_, other->steam_id_);
}

::google::protobuf::Metadata CMsgFSGetIsFollowing::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgFSGetIsFollowingResponse::InitAsDefaultInstance() {
}
class CMsgFSGetIsFollowingResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgFSGetIsFollowingResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_is_following(CMsgFSGetIsFollowingResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSGetIsFollowingResponse::kEresultFieldNumber;
const int CMsgFSGetIsFollowingResponse::kIsFollowingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSGetIsFollowingResponse::CMsgFSGetIsFollowingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgFSGetIsFollowingResponse)
}
CMsgFSGetIsFollowingResponse::CMsgFSGetIsFollowingResponse(const CMsgFSGetIsFollowingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_following_, &from.is_following_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&is_following_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgFSGetIsFollowingResponse)
}

void CMsgFSGetIsFollowingResponse::SharedCtor() {
  is_following_ = false;
  eresult_ = 2;
}

CMsgFSGetIsFollowingResponse::~CMsgFSGetIsFollowingResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgFSGetIsFollowingResponse)
  SharedDtor();
}

void CMsgFSGetIsFollowingResponse::SharedDtor() {
}

void CMsgFSGetIsFollowingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgFSGetIsFollowingResponse& CMsgFSGetIsFollowingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgFSGetIsFollowingResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgFSGetIsFollowingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgFSGetIsFollowingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    is_following_ = false;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgFSGetIsFollowingResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgFSGetIsFollowingResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool is_following = 2 [default = false];
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_is_following(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgFSGetIsFollowingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgFSGetIsFollowingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_following = 2 [default = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_is_following(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_following_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgFSGetIsFollowingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgFSGetIsFollowingResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgFSGetIsFollowingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgFSGetIsFollowingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional bool is_following = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_following(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgFSGetIsFollowingResponse)
}

::google::protobuf::uint8* CMsgFSGetIsFollowingResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgFSGetIsFollowingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional bool is_following = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_following(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgFSGetIsFollowingResponse)
  return target;
}

size_t CMsgFSGetIsFollowingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgFSGetIsFollowingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool is_following = 2 [default = false];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFSGetIsFollowingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgFSGetIsFollowingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSGetIsFollowingResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgFSGetIsFollowingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgFSGetIsFollowingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgFSGetIsFollowingResponse)
    MergeFrom(*source);
  }
}

void CMsgFSGetIsFollowingResponse::MergeFrom(const CMsgFSGetIsFollowingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgFSGetIsFollowingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      is_following_ = from.is_following_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgFSGetIsFollowingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgFSGetIsFollowingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSGetIsFollowingResponse::CopyFrom(const CMsgFSGetIsFollowingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgFSGetIsFollowingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSGetIsFollowingResponse::IsInitialized() const {
  return true;
}

void CMsgFSGetIsFollowingResponse::Swap(CMsgFSGetIsFollowingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSGetIsFollowingResponse::InternalSwap(CMsgFSGetIsFollowingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(is_following_, other->is_following_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgFSGetIsFollowingResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgFSEnumerateFollowingList::InitAsDefaultInstance() {
}
class CMsgFSEnumerateFollowingList::HasBitSetters {
 public:
  static void set_has_start_index(CMsgFSEnumerateFollowingList* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSEnumerateFollowingList::kStartIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSEnumerateFollowingList::CMsgFSEnumerateFollowingList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgFSEnumerateFollowingList)
}
CMsgFSEnumerateFollowingList::CMsgFSEnumerateFollowingList(const CMsgFSEnumerateFollowingList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_index_ = from.start_index_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgFSEnumerateFollowingList)
}

void CMsgFSEnumerateFollowingList::SharedCtor() {
  start_index_ = 0u;
}

CMsgFSEnumerateFollowingList::~CMsgFSEnumerateFollowingList() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgFSEnumerateFollowingList)
  SharedDtor();
}

void CMsgFSEnumerateFollowingList::SharedDtor() {
}

void CMsgFSEnumerateFollowingList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgFSEnumerateFollowingList& CMsgFSEnumerateFollowingList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgFSEnumerateFollowingList_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgFSEnumerateFollowingList::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgFSEnumerateFollowingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgFSEnumerateFollowingList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgFSEnumerateFollowingList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 start_index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_start_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgFSEnumerateFollowingList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgFSEnumerateFollowingList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 start_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_start_index(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgFSEnumerateFollowingList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgFSEnumerateFollowingList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgFSEnumerateFollowingList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgFSEnumerateFollowingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 start_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->start_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgFSEnumerateFollowingList)
}

::google::protobuf::uint8* CMsgFSEnumerateFollowingList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgFSEnumerateFollowingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 start_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->start_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgFSEnumerateFollowingList)
  return target;
}

size_t CMsgFSEnumerateFollowingList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgFSEnumerateFollowingList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 start_index = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFSEnumerateFollowingList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgFSEnumerateFollowingList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSEnumerateFollowingList* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgFSEnumerateFollowingList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgFSEnumerateFollowingList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgFSEnumerateFollowingList)
    MergeFrom(*source);
  }
}

void CMsgFSEnumerateFollowingList::MergeFrom(const CMsgFSEnumerateFollowingList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgFSEnumerateFollowingList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start_index()) {
    set_start_index(from.start_index());
  }
}

void CMsgFSEnumerateFollowingList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgFSEnumerateFollowingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSEnumerateFollowingList::CopyFrom(const CMsgFSEnumerateFollowingList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgFSEnumerateFollowingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSEnumerateFollowingList::IsInitialized() const {
  return true;
}

void CMsgFSEnumerateFollowingList::Swap(CMsgFSEnumerateFollowingList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSEnumerateFollowingList::InternalSwap(CMsgFSEnumerateFollowingList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(start_index_, other->start_index_);
}

::google::protobuf::Metadata CMsgFSEnumerateFollowingList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgFSEnumerateFollowingListResponse::InitAsDefaultInstance() {
}
class CMsgFSEnumerateFollowingListResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgFSEnumerateFollowingListResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_total_results(CMsgFSEnumerateFollowingListResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSEnumerateFollowingListResponse::kEresultFieldNumber;
const int CMsgFSEnumerateFollowingListResponse::kTotalResultsFieldNumber;
const int CMsgFSEnumerateFollowingListResponse::kSteamIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSEnumerateFollowingListResponse::CMsgFSEnumerateFollowingListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgFSEnumerateFollowingListResponse)
}
CMsgFSEnumerateFollowingListResponse::CMsgFSEnumerateFollowingListResponse(const CMsgFSEnumerateFollowingListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      steam_ids_(from.steam_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgFSEnumerateFollowingListResponse)
}

void CMsgFSEnumerateFollowingListResponse::SharedCtor() {
  total_results_ = 0;
  eresult_ = 2;
}

CMsgFSEnumerateFollowingListResponse::~CMsgFSEnumerateFollowingListResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgFSEnumerateFollowingListResponse)
  SharedDtor();
}

void CMsgFSEnumerateFollowingListResponse::SharedDtor() {
}

void CMsgFSEnumerateFollowingListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgFSEnumerateFollowingListResponse& CMsgFSEnumerateFollowingListResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgFSEnumerateFollowingListResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgFSEnumerateFollowingListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_ids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    total_results_ = 0;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgFSEnumerateFollowingListResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgFSEnumerateFollowingListResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 total_results = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_total_results(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated fixed64 steam_ids = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 25) {
          do {
            msg->add_steam_ids(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
            ptr += sizeof(::google::protobuf::uint64);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 25 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedFixed64Parser;
        object = msg->mutable_steam_ids();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgFSEnumerateFollowingListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 total_results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_total_results(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 steam_ids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 25u, input, this->mutable_steam_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steam_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgFSEnumerateFollowingListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgFSEnumerateFollowingListResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgFSEnumerateFollowingListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 total_results = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_results(), output);
  }

  // repeated fixed64 steam_ids = 3;
  for (int i = 0, n = this->steam_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      3, this->steam_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgFSEnumerateFollowingListResponse)
}

::google::protobuf::uint8* CMsgFSEnumerateFollowingListResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 total_results = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_results(), target);
  }

  // repeated fixed64 steam_ids = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(3, this->steam_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgFSEnumerateFollowingListResponse)
  return target;
}

size_t CMsgFSEnumerateFollowingListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed64 steam_ids = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->steam_ids_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steam_ids_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 total_results = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFSEnumerateFollowingListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSEnumerateFollowingListResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgFSEnumerateFollowingListResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgFSEnumerateFollowingListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgFSEnumerateFollowingListResponse)
    MergeFrom(*source);
  }
}

void CMsgFSEnumerateFollowingListResponse::MergeFrom(const CMsgFSEnumerateFollowingListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steam_ids_.MergeFrom(from.steam_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgFSEnumerateFollowingListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSEnumerateFollowingListResponse::CopyFrom(const CMsgFSEnumerateFollowingListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSEnumerateFollowingListResponse::IsInitialized() const {
  return true;
}

void CMsgFSEnumerateFollowingListResponse::Swap(CMsgFSEnumerateFollowingListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSEnumerateFollowingListResponse::InternalSwap(CMsgFSEnumerateFollowingListResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  steam_ids_.InternalSwap(&other->steam_ids_);
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgFSEnumerateFollowingListResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDPGetNumberOfCurrentPlayers::InitAsDefaultInstance() {
}
class CMsgDPGetNumberOfCurrentPlayers::HasBitSetters {
 public:
  static void set_has_appid(CMsgDPGetNumberOfCurrentPlayers* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDPGetNumberOfCurrentPlayers::kAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDPGetNumberOfCurrentPlayers::CMsgDPGetNumberOfCurrentPlayers()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
}
CMsgDPGetNumberOfCurrentPlayers::CMsgDPGetNumberOfCurrentPlayers(const CMsgDPGetNumberOfCurrentPlayers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
}

void CMsgDPGetNumberOfCurrentPlayers::SharedCtor() {
  appid_ = 0u;
}

CMsgDPGetNumberOfCurrentPlayers::~CMsgDPGetNumberOfCurrentPlayers() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  SharedDtor();
}

void CMsgDPGetNumberOfCurrentPlayers::SharedDtor() {
}

void CMsgDPGetNumberOfCurrentPlayers::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDPGetNumberOfCurrentPlayers& CMsgDPGetNumberOfCurrentPlayers::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDPGetNumberOfCurrentPlayers_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgDPGetNumberOfCurrentPlayers::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDPGetNumberOfCurrentPlayers::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDPGetNumberOfCurrentPlayers*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_appid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDPGetNumberOfCurrentPlayers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_appid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDPGetNumberOfCurrentPlayers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
}

::google::protobuf::uint8* CMsgDPGetNumberOfCurrentPlayers::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  return target;
}

size_t CMsgDPGetNumberOfCurrentPlayers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 appid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDPGetNumberOfCurrentPlayers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDPGetNumberOfCurrentPlayers* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDPGetNumberOfCurrentPlayers>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
    MergeFrom(*source);
  }
}

void CMsgDPGetNumberOfCurrentPlayers::MergeFrom(const CMsgDPGetNumberOfCurrentPlayers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_appid()) {
    set_appid(from.appid());
  }
}

void CMsgDPGetNumberOfCurrentPlayers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDPGetNumberOfCurrentPlayers::CopyFrom(const CMsgDPGetNumberOfCurrentPlayers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDPGetNumberOfCurrentPlayers::IsInitialized() const {
  return true;
}

void CMsgDPGetNumberOfCurrentPlayers::Swap(CMsgDPGetNumberOfCurrentPlayers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDPGetNumberOfCurrentPlayers::InternalSwap(CMsgDPGetNumberOfCurrentPlayers* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(appid_, other->appid_);
}

::google::protobuf::Metadata CMsgDPGetNumberOfCurrentPlayers::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgDPGetNumberOfCurrentPlayersResponse::InitAsDefaultInstance() {
}
class CMsgDPGetNumberOfCurrentPlayersResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgDPGetNumberOfCurrentPlayersResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_player_count(CMsgDPGetNumberOfCurrentPlayersResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDPGetNumberOfCurrentPlayersResponse::kEresultFieldNumber;
const int CMsgDPGetNumberOfCurrentPlayersResponse::kPlayerCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDPGetNumberOfCurrentPlayersResponse::CMsgDPGetNumberOfCurrentPlayersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
}
CMsgDPGetNumberOfCurrentPlayersResponse::CMsgDPGetNumberOfCurrentPlayersResponse(const CMsgDPGetNumberOfCurrentPlayersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_count_, &from.player_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&player_count_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
}

void CMsgDPGetNumberOfCurrentPlayersResponse::SharedCtor() {
  player_count_ = 0;
  eresult_ = 2;
}

CMsgDPGetNumberOfCurrentPlayersResponse::~CMsgDPGetNumberOfCurrentPlayersResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  SharedDtor();
}

void CMsgDPGetNumberOfCurrentPlayersResponse::SharedDtor() {
}

void CMsgDPGetNumberOfCurrentPlayersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgDPGetNumberOfCurrentPlayersResponse& CMsgDPGetNumberOfCurrentPlayersResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgDPGetNumberOfCurrentPlayersResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgDPGetNumberOfCurrentPlayersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    player_count_ = 0;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgDPGetNumberOfCurrentPlayersResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgDPGetNumberOfCurrentPlayersResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 player_count = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_player_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgDPGetNumberOfCurrentPlayersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 player_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_player_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgDPGetNumberOfCurrentPlayersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 player_count = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->player_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
}

::google::protobuf::uint8* CMsgDPGetNumberOfCurrentPlayersResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 player_count = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->player_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  return target;
}

size_t CMsgDPGetNumberOfCurrentPlayersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 player_count = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_count());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgDPGetNumberOfCurrentPlayersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDPGetNumberOfCurrentPlayersResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgDPGetNumberOfCurrentPlayersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
    MergeFrom(*source);
  }
}

void CMsgDPGetNumberOfCurrentPlayersResponse::MergeFrom(const CMsgDPGetNumberOfCurrentPlayersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      player_count_ = from.player_count_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDPGetNumberOfCurrentPlayersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDPGetNumberOfCurrentPlayersResponse::CopyFrom(const CMsgDPGetNumberOfCurrentPlayersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDPGetNumberOfCurrentPlayersResponse::IsInitialized() const {
  return true;
}

void CMsgDPGetNumberOfCurrentPlayersResponse::Swap(CMsgDPGetNumberOfCurrentPlayersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDPGetNumberOfCurrentPlayersResponse::InternalSwap(CMsgDPGetNumberOfCurrentPlayersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(player_count_, other->player_count_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgDPGetNumberOfCurrentPlayersResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientFriendUserStatusPublished::InitAsDefaultInstance() {
}
class CMsgClientFriendUserStatusPublished::HasBitSetters {
 public:
  static void set_has_friend_steamid(CMsgClientFriendUserStatusPublished* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_appid(CMsgClientFriendUserStatusPublished* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_status_text(CMsgClientFriendUserStatusPublished* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFriendUserStatusPublished::kFriendSteamidFieldNumber;
const int CMsgClientFriendUserStatusPublished::kAppidFieldNumber;
const int CMsgClientFriendUserStatusPublished::kStatusTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFriendUserStatusPublished::CMsgClientFriendUserStatusPublished()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientFriendUserStatusPublished)
}
CMsgClientFriendUserStatusPublished::CMsgClientFriendUserStatusPublished(const CMsgClientFriendUserStatusPublished& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_status_text()) {
    status_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_text_);
  }
  ::memcpy(&friend_steamid_, &from.friend_steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&friend_steamid_)) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientFriendUserStatusPublished)
}

void CMsgClientFriendUserStatusPublished::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientFriendUserStatusPublished_steammessages_5fclientserver_5f2_2eproto.base);
  status_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&friend_steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&appid_) -
      reinterpret_cast<char*>(&friend_steamid_)) + sizeof(appid_));
}

CMsgClientFriendUserStatusPublished::~CMsgClientFriendUserStatusPublished() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientFriendUserStatusPublished)
  SharedDtor();
}

void CMsgClientFriendUserStatusPublished::SharedDtor() {
  status_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientFriendUserStatusPublished::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientFriendUserStatusPublished& CMsgClientFriendUserStatusPublished::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientFriendUserStatusPublished_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientFriendUserStatusPublished::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientFriendUserStatusPublished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    status_text_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&friend_steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&appid_) -
        reinterpret_cast<char*>(&friend_steamid_)) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientFriendUserStatusPublished::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientFriendUserStatusPublished*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 friend_steamid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_friend_steamid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 appid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_appid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string status_text = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientFriendUserStatusPublished.status_text");
        object = msg->mutable_status_text();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientFriendUserStatusPublished::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientFriendUserStatusPublished)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 friend_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_friend_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &friend_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_appid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string status_text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status_text().data(), static_cast<int>(this->status_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientFriendUserStatusPublished.status_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientFriendUserStatusPublished)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientFriendUserStatusPublished)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientFriendUserStatusPublished::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientFriendUserStatusPublished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 friend_steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->friend_steamid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional string status_text = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status_text().data(), static_cast<int>(this->status_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientFriendUserStatusPublished.status_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->status_text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientFriendUserStatusPublished)
}

::google::protobuf::uint8* CMsgClientFriendUserStatusPublished::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientFriendUserStatusPublished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 friend_steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->friend_steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional string status_text = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status_text().data(), static_cast<int>(this->status_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientFriendUserStatusPublished.status_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->status_text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientFriendUserStatusPublished)
  return target;
}

size_t CMsgClientFriendUserStatusPublished::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientFriendUserStatusPublished)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string status_text = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->status_text());
    }

    // optional fixed64 friend_steamid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientFriendUserStatusPublished::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientFriendUserStatusPublished)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFriendUserStatusPublished* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientFriendUserStatusPublished>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientFriendUserStatusPublished)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientFriendUserStatusPublished)
    MergeFrom(*source);
  }
}

void CMsgClientFriendUserStatusPublished::MergeFrom(const CMsgClientFriendUserStatusPublished& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientFriendUserStatusPublished)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      status_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_text_);
    }
    if (cached_has_bits & 0x00000002u) {
      friend_steamid_ = from.friend_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientFriendUserStatusPublished::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientFriendUserStatusPublished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFriendUserStatusPublished::CopyFrom(const CMsgClientFriendUserStatusPublished& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientFriendUserStatusPublished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFriendUserStatusPublished::IsInitialized() const {
  return true;
}

void CMsgClientFriendUserStatusPublished::Swap(CMsgClientFriendUserStatusPublished* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFriendUserStatusPublished::InternalSwap(CMsgClientFriendUserStatusPublished* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  status_text_.Swap(&other->status_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(friend_steamid_, other->friend_steamid_);
  swap(appid_, other->appid_);
}

::google::protobuf::Metadata CMsgClientFriendUserStatusPublished::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientServiceMethod::InitAsDefaultInstance() {
}
class CMsgClientServiceMethod::HasBitSetters {
 public:
  static void set_has_method_name(CMsgClientServiceMethod* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_serialized_method(CMsgClientServiceMethod* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_is_notification(CMsgClientServiceMethod* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServiceMethod::kMethodNameFieldNumber;
const int CMsgClientServiceMethod::kSerializedMethodFieldNumber;
const int CMsgClientServiceMethod::kIsNotificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServiceMethod::CMsgClientServiceMethod()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientServiceMethod)
}
CMsgClientServiceMethod::CMsgClientServiceMethod(const CMsgClientServiceMethod& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_method_name()) {
    method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
  }
  serialized_method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialized_method()) {
    serialized_method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_method_);
  }
  is_notification_ = from.is_notification_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientServiceMethod)
}

void CMsgClientServiceMethod::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientServiceMethod_steammessages_5fclientserver_5f2_2eproto.base);
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_notification_ = false;
}

CMsgClientServiceMethod::~CMsgClientServiceMethod() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientServiceMethod)
  SharedDtor();
}

void CMsgClientServiceMethod::SharedDtor() {
  method_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientServiceMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientServiceMethod& CMsgClientServiceMethod::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientServiceMethod_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientServiceMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientServiceMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      method_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      serialized_method_.ClearNonDefaultToEmptyNoArena();
    }
  }
  is_notification_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientServiceMethod::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientServiceMethod*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string method_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientServiceMethod.method_name");
        object = msg->mutable_method_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes serialized_method = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_serialized_method();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool is_notification = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_is_notification(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientServiceMethod::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientServiceMethod)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string method_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method_name().data(), static_cast<int>(this->method_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientServiceMethod.method_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes serialized_method = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_method()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_notification = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_is_notification(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_notification_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientServiceMethod)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientServiceMethod)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientServiceMethod::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientServiceMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string method_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientServiceMethod.method_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method_name(), output);
  }

  // optional bytes serialized_method = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->serialized_method(), output);
  }

  // optional bool is_notification = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_notification(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientServiceMethod)
}

::google::protobuf::uint8* CMsgClientServiceMethod::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientServiceMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string method_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientServiceMethod.method_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method_name(), target);
  }

  // optional bytes serialized_method = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->serialized_method(), target);
  }

  // optional bool is_notification = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_notification(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientServiceMethod)
  return target;
}

size_t CMsgClientServiceMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientServiceMethod)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string method_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method_name());
    }

    // optional bytes serialized_method = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serialized_method());
    }

    // optional bool is_notification = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientServiceMethod::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientServiceMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServiceMethod* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientServiceMethod>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientServiceMethod)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientServiceMethod)
    MergeFrom(*source);
  }
}

void CMsgClientServiceMethod::MergeFrom(const CMsgClientServiceMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientServiceMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      serialized_method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_method_);
    }
    if (cached_has_bits & 0x00000004u) {
      is_notification_ = from.is_notification_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientServiceMethod::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientServiceMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServiceMethod::CopyFrom(const CMsgClientServiceMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientServiceMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServiceMethod::IsInitialized() const {
  return true;
}

void CMsgClientServiceMethod::Swap(CMsgClientServiceMethod* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServiceMethod::InternalSwap(CMsgClientServiceMethod* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  method_name_.Swap(&other->method_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  serialized_method_.Swap(&other->serialized_method_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_notification_, other->is_notification_);
}

::google::protobuf::Metadata CMsgClientServiceMethod::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientServiceMethodResponse::InitAsDefaultInstance() {
}
class CMsgClientServiceMethodResponse::HasBitSetters {
 public:
  static void set_has_method_name(CMsgClientServiceMethodResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_serialized_method_response(CMsgClientServiceMethodResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServiceMethodResponse::kMethodNameFieldNumber;
const int CMsgClientServiceMethodResponse::kSerializedMethodResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServiceMethodResponse::CMsgClientServiceMethodResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientServiceMethodResponse)
}
CMsgClientServiceMethodResponse::CMsgClientServiceMethodResponse(const CMsgClientServiceMethodResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_method_name()) {
    method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
  }
  serialized_method_response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialized_method_response()) {
    serialized_method_response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_method_response_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientServiceMethodResponse)
}

void CMsgClientServiceMethodResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientServiceMethodResponse_steammessages_5fclientserver_5f2_2eproto.base);
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_method_response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientServiceMethodResponse::~CMsgClientServiceMethodResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientServiceMethodResponse)
  SharedDtor();
}

void CMsgClientServiceMethodResponse::SharedDtor() {
  method_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_method_response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientServiceMethodResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientServiceMethodResponse& CMsgClientServiceMethodResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientServiceMethodResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientServiceMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientServiceMethodResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      method_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      serialized_method_response_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientServiceMethodResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientServiceMethodResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string method_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientServiceMethodResponse.method_name");
        object = msg->mutable_method_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes serialized_method_response = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_serialized_method_response();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientServiceMethodResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientServiceMethodResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string method_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method_name().data(), static_cast<int>(this->method_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientServiceMethodResponse.method_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes serialized_method_response = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_method_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientServiceMethodResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientServiceMethodResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientServiceMethodResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientServiceMethodResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string method_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientServiceMethodResponse.method_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method_name(), output);
  }

  // optional bytes serialized_method_response = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->serialized_method_response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientServiceMethodResponse)
}

::google::protobuf::uint8* CMsgClientServiceMethodResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientServiceMethodResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string method_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientServiceMethodResponse.method_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method_name(), target);
  }

  // optional bytes serialized_method_response = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->serialized_method_response(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientServiceMethodResponse)
  return target;
}

size_t CMsgClientServiceMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientServiceMethodResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string method_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method_name());
    }

    // optional bytes serialized_method_response = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serialized_method_response());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientServiceMethodResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientServiceMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServiceMethodResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientServiceMethodResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientServiceMethodResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientServiceMethodResponse)
    MergeFrom(*source);
  }
}

void CMsgClientServiceMethodResponse::MergeFrom(const CMsgClientServiceMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientServiceMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      serialized_method_response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_method_response_);
    }
  }
}

void CMsgClientServiceMethodResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientServiceMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServiceMethodResponse::CopyFrom(const CMsgClientServiceMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientServiceMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServiceMethodResponse::IsInitialized() const {
  return true;
}

void CMsgClientServiceMethodResponse::Swap(CMsgClientServiceMethodResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServiceMethodResponse::InternalSwap(CMsgClientServiceMethodResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  method_name_.Swap(&other->method_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  serialized_method_response_.Swap(&other->serialized_method_response_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CMsgClientServiceMethodResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUIMode::InitAsDefaultInstance() {
}
class CMsgClientUIMode::HasBitSetters {
 public:
  static void set_has_uimode(CMsgClientUIMode* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_chat_mode(CMsgClientUIMode* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUIMode::kUimodeFieldNumber;
const int CMsgClientUIMode::kChatModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUIMode::CMsgClientUIMode()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUIMode)
}
CMsgClientUIMode::CMsgClientUIMode(const CMsgClientUIMode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uimode_, &from.uimode_,
    static_cast<size_t>(reinterpret_cast<char*>(&chat_mode_) -
    reinterpret_cast<char*>(&uimode_)) + sizeof(chat_mode_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUIMode)
}

void CMsgClientUIMode::SharedCtor() {
  ::memset(&uimode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chat_mode_) -
      reinterpret_cast<char*>(&uimode_)) + sizeof(chat_mode_));
}

CMsgClientUIMode::~CMsgClientUIMode() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUIMode)
  SharedDtor();
}

void CMsgClientUIMode::SharedDtor() {
}

void CMsgClientUIMode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUIMode& CMsgClientUIMode::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUIMode_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUIMode::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUIMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&uimode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&chat_mode_) -
        reinterpret_cast<char*>(&uimode_)) + sizeof(chat_mode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUIMode::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUIMode*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 uimode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_uimode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 chat_mode = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_chat_mode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUIMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUIMode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 uimode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_uimode(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uimode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 chat_mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_chat_mode(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chat_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUIMode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUIMode)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUIMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUIMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 uimode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uimode(), output);
  }

  // optional uint32 chat_mode = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->chat_mode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUIMode)
}

::google::protobuf::uint8* CMsgClientUIMode::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUIMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 uimode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uimode(), target);
  }

  // optional uint32 chat_mode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->chat_mode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUIMode)
  return target;
}

size_t CMsgClientUIMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUIMode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 uimode = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uimode());
    }

    // optional uint32 chat_mode = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->chat_mode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUIMode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUIMode)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUIMode* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUIMode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUIMode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUIMode)
    MergeFrom(*source);
  }
}

void CMsgClientUIMode::MergeFrom(const CMsgClientUIMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUIMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      uimode_ = from.uimode_;
    }
    if (cached_has_bits & 0x00000002u) {
      chat_mode_ = from.chat_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUIMode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUIMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUIMode::CopyFrom(const CMsgClientUIMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUIMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUIMode::IsInitialized() const {
  return true;
}

void CMsgClientUIMode::Swap(CMsgClientUIMode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUIMode::InternalSwap(CMsgClientUIMode* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(uimode_, other->uimode_);
  swap(chat_mode_, other->chat_mode_);
}

::google::protobuf::Metadata CMsgClientUIMode::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientVanityURLChangedNotification::InitAsDefaultInstance() {
}
class CMsgClientVanityURLChangedNotification::HasBitSetters {
 public:
  static void set_has_vanity_url(CMsgClientVanityURLChangedNotification* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientVanityURLChangedNotification::kVanityUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientVanityURLChangedNotification::CMsgClientVanityURLChangedNotification()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientVanityURLChangedNotification)
}
CMsgClientVanityURLChangedNotification::CMsgClientVanityURLChangedNotification(const CMsgClientVanityURLChangedNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vanity_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vanity_url()) {
    vanity_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vanity_url_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientVanityURLChangedNotification)
}

void CMsgClientVanityURLChangedNotification::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientVanityURLChangedNotification_steammessages_5fclientserver_5f2_2eproto.base);
  vanity_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientVanityURLChangedNotification::~CMsgClientVanityURLChangedNotification() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientVanityURLChangedNotification)
  SharedDtor();
}

void CMsgClientVanityURLChangedNotification::SharedDtor() {
  vanity_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientVanityURLChangedNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientVanityURLChangedNotification& CMsgClientVanityURLChangedNotification::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientVanityURLChangedNotification_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientVanityURLChangedNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientVanityURLChangedNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    vanity_url_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientVanityURLChangedNotification::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientVanityURLChangedNotification*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string vanity_url = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientVanityURLChangedNotification.vanity_url");
        object = msg->mutable_vanity_url();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientVanityURLChangedNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientVanityURLChangedNotification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string vanity_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vanity_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vanity_url().data(), static_cast<int>(this->vanity_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientVanityURLChangedNotification.vanity_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientVanityURLChangedNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientVanityURLChangedNotification)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientVanityURLChangedNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientVanityURLChangedNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string vanity_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vanity_url().data(), static_cast<int>(this->vanity_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientVanityURLChangedNotification.vanity_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vanity_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientVanityURLChangedNotification)
}

::google::protobuf::uint8* CMsgClientVanityURLChangedNotification::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientVanityURLChangedNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string vanity_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vanity_url().data(), static_cast<int>(this->vanity_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientVanityURLChangedNotification.vanity_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vanity_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientVanityURLChangedNotification)
  return target;
}

size_t CMsgClientVanityURLChangedNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientVanityURLChangedNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string vanity_url = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vanity_url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientVanityURLChangedNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientVanityURLChangedNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientVanityURLChangedNotification* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientVanityURLChangedNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientVanityURLChangedNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientVanityURLChangedNotification)
    MergeFrom(*source);
  }
}

void CMsgClientVanityURLChangedNotification::MergeFrom(const CMsgClientVanityURLChangedNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientVanityURLChangedNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_vanity_url()) {
    _has_bits_[0] |= 0x00000001u;
    vanity_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vanity_url_);
  }
}

void CMsgClientVanityURLChangedNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientVanityURLChangedNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientVanityURLChangedNotification::CopyFrom(const CMsgClientVanityURLChangedNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientVanityURLChangedNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientVanityURLChangedNotification::IsInitialized() const {
  return true;
}

void CMsgClientVanityURLChangedNotification::Swap(CMsgClientVanityURLChangedNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientVanityURLChangedNotification::InternalSwap(CMsgClientVanityURLChangedNotification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  vanity_url_.Swap(&other->vanity_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CMsgClientVanityURLChangedNotification::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAuthorizeLocalDeviceRequest::InitAsDefaultInstance() {
}
class CMsgClientAuthorizeLocalDeviceRequest::HasBitSetters {
 public:
  static void set_has_device_description(CMsgClientAuthorizeLocalDeviceRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_owner_account_id(CMsgClientAuthorizeLocalDeviceRequest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_local_device_token(CMsgClientAuthorizeLocalDeviceRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAuthorizeLocalDeviceRequest::kDeviceDescriptionFieldNumber;
const int CMsgClientAuthorizeLocalDeviceRequest::kOwnerAccountIdFieldNumber;
const int CMsgClientAuthorizeLocalDeviceRequest::kLocalDeviceTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAuthorizeLocalDeviceRequest::CMsgClientAuthorizeLocalDeviceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
}
CMsgClientAuthorizeLocalDeviceRequest::CMsgClientAuthorizeLocalDeviceRequest(const CMsgClientAuthorizeLocalDeviceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_description()) {
    device_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_description_);
  }
  ::memcpy(&local_device_token_, &from.local_device_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&owner_account_id_) -
    reinterpret_cast<char*>(&local_device_token_)) + sizeof(owner_account_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
}

void CMsgClientAuthorizeLocalDeviceRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientAuthorizeLocalDeviceRequest_steammessages_5fclientserver_5f2_2eproto.base);
  device_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&local_device_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_account_id_) -
      reinterpret_cast<char*>(&local_device_token_)) + sizeof(owner_account_id_));
}

CMsgClientAuthorizeLocalDeviceRequest::~CMsgClientAuthorizeLocalDeviceRequest() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  SharedDtor();
}

void CMsgClientAuthorizeLocalDeviceRequest::SharedDtor() {
  device_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientAuthorizeLocalDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientAuthorizeLocalDeviceRequest& CMsgClientAuthorizeLocalDeviceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientAuthorizeLocalDeviceRequest_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientAuthorizeLocalDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    device_description_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&local_device_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_account_id_) -
        reinterpret_cast<char*>(&local_device_token_)) + sizeof(owner_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientAuthorizeLocalDeviceRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientAuthorizeLocalDeviceRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string device_description = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientAuthorizeLocalDeviceRequest.device_description");
        object = msg->mutable_device_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 owner_account_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_owner_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 local_device_token = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_local_device_token(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientAuthorizeLocalDeviceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string device_description = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_description().data(), static_cast<int>(this->device_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientAuthorizeLocalDeviceRequest.device_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 owner_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_owner_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 local_device_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_local_device_token(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &local_device_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientAuthorizeLocalDeviceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string device_description = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_description().data(), static_cast<int>(this->device_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientAuthorizeLocalDeviceRequest.device_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->device_description(), output);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owner_account_id(), output);
  }

  // optional uint64 local_device_token = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->local_device_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
}

::google::protobuf::uint8* CMsgClientAuthorizeLocalDeviceRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string device_description = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_description().data(), static_cast<int>(this->device_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientAuthorizeLocalDeviceRequest.device_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->device_description(), target);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owner_account_id(), target);
  }

  // optional uint64 local_device_token = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->local_device_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  return target;
}

size_t CMsgClientAuthorizeLocalDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string device_description = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->device_description());
    }

    // optional uint64 local_device_token = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->local_device_token());
    }

    // optional uint32 owner_account_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAuthorizeLocalDeviceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAuthorizeLocalDeviceRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientAuthorizeLocalDeviceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
    MergeFrom(*source);
  }
}

void CMsgClientAuthorizeLocalDeviceRequest::MergeFrom(const CMsgClientAuthorizeLocalDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      device_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_description_);
    }
    if (cached_has_bits & 0x00000002u) {
      local_device_token_ = from.local_device_token_;
    }
    if (cached_has_bits & 0x00000004u) {
      owner_account_id_ = from.owner_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAuthorizeLocalDeviceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAuthorizeLocalDeviceRequest::CopyFrom(const CMsgClientAuthorizeLocalDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAuthorizeLocalDeviceRequest::IsInitialized() const {
  return true;
}

void CMsgClientAuthorizeLocalDeviceRequest::Swap(CMsgClientAuthorizeLocalDeviceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAuthorizeLocalDeviceRequest::InternalSwap(CMsgClientAuthorizeLocalDeviceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  device_description_.Swap(&other->device_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(local_device_token_, other->local_device_token_);
  swap(owner_account_id_, other->owner_account_id_);
}

::google::protobuf::Metadata CMsgClientAuthorizeLocalDeviceRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAuthorizeLocalDevice::InitAsDefaultInstance() {
}
class CMsgClientAuthorizeLocalDevice::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientAuthorizeLocalDevice* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_owner_account_id(CMsgClientAuthorizeLocalDevice* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_authed_device_token(CMsgClientAuthorizeLocalDevice* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAuthorizeLocalDevice::kEresultFieldNumber;
const int CMsgClientAuthorizeLocalDevice::kOwnerAccountIdFieldNumber;
const int CMsgClientAuthorizeLocalDevice::kAuthedDeviceTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAuthorizeLocalDevice::CMsgClientAuthorizeLocalDevice()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientAuthorizeLocalDevice)
}
CMsgClientAuthorizeLocalDevice::CMsgClientAuthorizeLocalDevice(const CMsgClientAuthorizeLocalDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&authed_device_token_, &from.authed_device_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&authed_device_token_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientAuthorizeLocalDevice)
}

void CMsgClientAuthorizeLocalDevice::SharedCtor() {
  ::memset(&authed_device_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_account_id_) -
      reinterpret_cast<char*>(&authed_device_token_)) + sizeof(owner_account_id_));
  eresult_ = 2;
}

CMsgClientAuthorizeLocalDevice::~CMsgClientAuthorizeLocalDevice() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientAuthorizeLocalDevice)
  SharedDtor();
}

void CMsgClientAuthorizeLocalDevice::SharedDtor() {
}

void CMsgClientAuthorizeLocalDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientAuthorizeLocalDevice& CMsgClientAuthorizeLocalDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientAuthorizeLocalDevice_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientAuthorizeLocalDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&authed_device_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_account_id_) -
        reinterpret_cast<char*>(&authed_device_token_)) + sizeof(owner_account_id_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientAuthorizeLocalDevice::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientAuthorizeLocalDevice*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 owner_account_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_owner_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 authed_device_token = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_authed_device_token(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientAuthorizeLocalDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 owner_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_owner_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 authed_device_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_authed_device_token(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &authed_device_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientAuthorizeLocalDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientAuthorizeLocalDevice)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientAuthorizeLocalDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owner_account_id(), output);
  }

  // optional uint64 authed_device_token = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->authed_device_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientAuthorizeLocalDevice)
}

::google::protobuf::uint8* CMsgClientAuthorizeLocalDevice::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owner_account_id(), target);
  }

  // optional uint64 authed_device_token = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->authed_device_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientAuthorizeLocalDevice)
  return target;
}

size_t CMsgClientAuthorizeLocalDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 authed_device_token = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->authed_device_token());
    }

    // optional uint32 owner_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAuthorizeLocalDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAuthorizeLocalDevice* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientAuthorizeLocalDevice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientAuthorizeLocalDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientAuthorizeLocalDevice)
    MergeFrom(*source);
  }
}

void CMsgClientAuthorizeLocalDevice::MergeFrom(const CMsgClientAuthorizeLocalDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      authed_device_token_ = from.authed_device_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      owner_account_id_ = from.owner_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAuthorizeLocalDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAuthorizeLocalDevice::CopyFrom(const CMsgClientAuthorizeLocalDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAuthorizeLocalDevice::IsInitialized() const {
  return true;
}

void CMsgClientAuthorizeLocalDevice::Swap(CMsgClientAuthorizeLocalDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAuthorizeLocalDevice::InternalSwap(CMsgClientAuthorizeLocalDevice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(authed_device_token_, other->authed_device_token_);
  swap(owner_account_id_, other->owner_account_id_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientAuthorizeLocalDevice::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientAuthorizeLocalDeviceNotification::InitAsDefaultInstance() {
}
class CMsgClientAuthorizeLocalDeviceNotification::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientAuthorizeLocalDeviceNotification* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_owner_account_id(CMsgClientAuthorizeLocalDeviceNotification* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_local_device_token(CMsgClientAuthorizeLocalDeviceNotification* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAuthorizeLocalDeviceNotification::kEresultFieldNumber;
const int CMsgClientAuthorizeLocalDeviceNotification::kOwnerAccountIdFieldNumber;
const int CMsgClientAuthorizeLocalDeviceNotification::kLocalDeviceTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAuthorizeLocalDeviceNotification::CMsgClientAuthorizeLocalDeviceNotification()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
}
CMsgClientAuthorizeLocalDeviceNotification::CMsgClientAuthorizeLocalDeviceNotification(const CMsgClientAuthorizeLocalDeviceNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&local_device_token_, &from.local_device_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&local_device_token_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
}

void CMsgClientAuthorizeLocalDeviceNotification::SharedCtor() {
  ::memset(&local_device_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_account_id_) -
      reinterpret_cast<char*>(&local_device_token_)) + sizeof(owner_account_id_));
  eresult_ = 2;
}

CMsgClientAuthorizeLocalDeviceNotification::~CMsgClientAuthorizeLocalDeviceNotification() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  SharedDtor();
}

void CMsgClientAuthorizeLocalDeviceNotification::SharedDtor() {
}

void CMsgClientAuthorizeLocalDeviceNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientAuthorizeLocalDeviceNotification& CMsgClientAuthorizeLocalDeviceNotification::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientAuthorizeLocalDeviceNotification_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientAuthorizeLocalDeviceNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&local_device_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_account_id_) -
        reinterpret_cast<char*>(&local_device_token_)) + sizeof(owner_account_id_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientAuthorizeLocalDeviceNotification::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientAuthorizeLocalDeviceNotification*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 owner_account_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_owner_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 local_device_token = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_local_device_token(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientAuthorizeLocalDeviceNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 owner_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_owner_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 local_device_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_local_device_token(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &local_device_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientAuthorizeLocalDeviceNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owner_account_id(), output);
  }

  // optional uint64 local_device_token = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->local_device_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
}

::google::protobuf::uint8* CMsgClientAuthorizeLocalDeviceNotification::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owner_account_id(), target);
  }

  // optional uint64 local_device_token = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->local_device_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  return target;
}

size_t CMsgClientAuthorizeLocalDeviceNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 local_device_token = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->local_device_token());
    }

    // optional uint32 owner_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientAuthorizeLocalDeviceNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAuthorizeLocalDeviceNotification* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientAuthorizeLocalDeviceNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
    MergeFrom(*source);
  }
}

void CMsgClientAuthorizeLocalDeviceNotification::MergeFrom(const CMsgClientAuthorizeLocalDeviceNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      local_device_token_ = from.local_device_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      owner_account_id_ = from.owner_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAuthorizeLocalDeviceNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAuthorizeLocalDeviceNotification::CopyFrom(const CMsgClientAuthorizeLocalDeviceNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAuthorizeLocalDeviceNotification::IsInitialized() const {
  return true;
}

void CMsgClientAuthorizeLocalDeviceNotification::Swap(CMsgClientAuthorizeLocalDeviceNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAuthorizeLocalDeviceNotification::InternalSwap(CMsgClientAuthorizeLocalDeviceNotification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(local_device_token_, other->local_device_token_);
  swap(owner_account_id_, other->owner_account_id_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientAuthorizeLocalDeviceNotification::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDeauthorizeDeviceRequest::InitAsDefaultInstance() {
}
class CMsgClientDeauthorizeDeviceRequest::HasBitSetters {
 public:
  static void set_has_deauthorization_account_id(CMsgClientDeauthorizeDeviceRequest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_deauthorization_device_token(CMsgClientDeauthorizeDeviceRequest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDeauthorizeDeviceRequest::kDeauthorizationAccountIdFieldNumber;
const int CMsgClientDeauthorizeDeviceRequest::kDeauthorizationDeviceTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDeauthorizeDeviceRequest::CMsgClientDeauthorizeDeviceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientDeauthorizeDeviceRequest)
}
CMsgClientDeauthorizeDeviceRequest::CMsgClientDeauthorizeDeviceRequest(const CMsgClientDeauthorizeDeviceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&deauthorization_device_token_, &from.deauthorization_device_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&deauthorization_account_id_) -
    reinterpret_cast<char*>(&deauthorization_device_token_)) + sizeof(deauthorization_account_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientDeauthorizeDeviceRequest)
}

void CMsgClientDeauthorizeDeviceRequest::SharedCtor() {
  ::memset(&deauthorization_device_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deauthorization_account_id_) -
      reinterpret_cast<char*>(&deauthorization_device_token_)) + sizeof(deauthorization_account_id_));
}

CMsgClientDeauthorizeDeviceRequest::~CMsgClientDeauthorizeDeviceRequest() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  SharedDtor();
}

void CMsgClientDeauthorizeDeviceRequest::SharedDtor() {
}

void CMsgClientDeauthorizeDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientDeauthorizeDeviceRequest& CMsgClientDeauthorizeDeviceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientDeauthorizeDeviceRequest_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientDeauthorizeDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&deauthorization_device_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&deauthorization_account_id_) -
        reinterpret_cast<char*>(&deauthorization_device_token_)) + sizeof(deauthorization_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientDeauthorizeDeviceRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientDeauthorizeDeviceRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 deauthorization_account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_deauthorization_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 deauthorization_device_token = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_deauthorization_device_token(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientDeauthorizeDeviceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 deauthorization_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_deauthorization_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deauthorization_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 deauthorization_device_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_deauthorization_device_token(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deauthorization_device_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientDeauthorizeDeviceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 deauthorization_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->deauthorization_account_id(), output);
  }

  // optional uint64 deauthorization_device_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->deauthorization_device_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientDeauthorizeDeviceRequest)
}

::google::protobuf::uint8* CMsgClientDeauthorizeDeviceRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 deauthorization_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->deauthorization_account_id(), target);
  }

  // optional uint64 deauthorization_device_token = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->deauthorization_device_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  return target;
}

size_t CMsgClientDeauthorizeDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 deauthorization_device_token = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->deauthorization_device_token());
    }

    // optional uint32 deauthorization_account_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deauthorization_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDeauthorizeDeviceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDeauthorizeDeviceRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientDeauthorizeDeviceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientDeauthorizeDeviceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientDeauthorizeDeviceRequest)
    MergeFrom(*source);
  }
}

void CMsgClientDeauthorizeDeviceRequest::MergeFrom(const CMsgClientDeauthorizeDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      deauthorization_device_token_ = from.deauthorization_device_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      deauthorization_account_id_ = from.deauthorization_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDeauthorizeDeviceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDeauthorizeDeviceRequest::CopyFrom(const CMsgClientDeauthorizeDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDeauthorizeDeviceRequest::IsInitialized() const {
  return true;
}

void CMsgClientDeauthorizeDeviceRequest::Swap(CMsgClientDeauthorizeDeviceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDeauthorizeDeviceRequest::InternalSwap(CMsgClientDeauthorizeDeviceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(deauthorization_device_token_, other->deauthorization_device_token_);
  swap(deauthorization_account_id_, other->deauthorization_account_id_);
}

::google::protobuf::Metadata CMsgClientDeauthorizeDeviceRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientDeauthorizeDevice::InitAsDefaultInstance() {
}
class CMsgClientDeauthorizeDevice::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientDeauthorizeDevice* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_deauthorization_account_id(CMsgClientDeauthorizeDevice* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDeauthorizeDevice::kEresultFieldNumber;
const int CMsgClientDeauthorizeDevice::kDeauthorizationAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDeauthorizeDevice::CMsgClientDeauthorizeDevice()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientDeauthorizeDevice)
}
CMsgClientDeauthorizeDevice::CMsgClientDeauthorizeDevice(const CMsgClientDeauthorizeDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&deauthorization_account_id_, &from.deauthorization_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&deauthorization_account_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientDeauthorizeDevice)
}

void CMsgClientDeauthorizeDevice::SharedCtor() {
  deauthorization_account_id_ = 0u;
  eresult_ = 2;
}

CMsgClientDeauthorizeDevice::~CMsgClientDeauthorizeDevice() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientDeauthorizeDevice)
  SharedDtor();
}

void CMsgClientDeauthorizeDevice::SharedDtor() {
}

void CMsgClientDeauthorizeDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientDeauthorizeDevice& CMsgClientDeauthorizeDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientDeauthorizeDevice_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientDeauthorizeDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientDeauthorizeDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    deauthorization_account_id_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientDeauthorizeDevice::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientDeauthorizeDevice*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 deauthorization_account_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_deauthorization_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientDeauthorizeDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientDeauthorizeDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 deauthorization_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_deauthorization_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deauthorization_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientDeauthorizeDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientDeauthorizeDevice)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientDeauthorizeDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientDeauthorizeDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 deauthorization_account_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->deauthorization_account_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientDeauthorizeDevice)
}

::google::protobuf::uint8* CMsgClientDeauthorizeDevice::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientDeauthorizeDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 deauthorization_account_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->deauthorization_account_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientDeauthorizeDevice)
  return target;
}

size_t CMsgClientDeauthorizeDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientDeauthorizeDevice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 deauthorization_account_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deauthorization_account_id());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientDeauthorizeDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientDeauthorizeDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDeauthorizeDevice* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientDeauthorizeDevice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientDeauthorizeDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientDeauthorizeDevice)
    MergeFrom(*source);
  }
}

void CMsgClientDeauthorizeDevice::MergeFrom(const CMsgClientDeauthorizeDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientDeauthorizeDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      deauthorization_account_id_ = from.deauthorization_account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDeauthorizeDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientDeauthorizeDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDeauthorizeDevice::CopyFrom(const CMsgClientDeauthorizeDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientDeauthorizeDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDeauthorizeDevice::IsInitialized() const {
  return true;
}

void CMsgClientDeauthorizeDevice::Swap(CMsgClientDeauthorizeDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDeauthorizeDevice::InternalSwap(CMsgClientDeauthorizeDevice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(deauthorization_account_id_, other->deauthorization_account_id_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientDeauthorizeDevice::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::InitAsDefaultInstance() {
}
class CMsgClientUseLocalDeviceAuthorizations_DeviceToken::HasBitSetters {
 public:
  static void set_has_owner_account_id(CMsgClientUseLocalDeviceAuthorizations_DeviceToken* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_token_id(CMsgClientUseLocalDeviceAuthorizations_DeviceToken* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUseLocalDeviceAuthorizations_DeviceToken::kOwnerAccountIdFieldNumber;
const int CMsgClientUseLocalDeviceAuthorizations_DeviceToken::kTokenIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUseLocalDeviceAuthorizations_DeviceToken::CMsgClientUseLocalDeviceAuthorizations_DeviceToken()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
}
CMsgClientUseLocalDeviceAuthorizations_DeviceToken::CMsgClientUseLocalDeviceAuthorizations_DeviceToken(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&token_id_, &from.token_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&owner_account_id_) -
    reinterpret_cast<char*>(&token_id_)) + sizeof(owner_account_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::SharedCtor() {
  ::memset(&token_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_account_id_) -
      reinterpret_cast<char*>(&token_id_)) + sizeof(owner_account_id_));
}

CMsgClientUseLocalDeviceAuthorizations_DeviceToken::~CMsgClientUseLocalDeviceAuthorizations_DeviceToken() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  SharedDtor();
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::SharedDtor() {
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& CMsgClientUseLocalDeviceAuthorizations_DeviceToken::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUseLocalDeviceAuthorizations_DeviceToken_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&token_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_account_id_) -
        reinterpret_cast<char*>(&token_id_)) + sizeof(owner_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUseLocalDeviceAuthorizations_DeviceToken::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUseLocalDeviceAuthorizations_DeviceToken*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 owner_account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_owner_account_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint64 token_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_token_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUseLocalDeviceAuthorizations_DeviceToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 owner_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_owner_account_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 token_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_token_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &token_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->owner_account_id(), output);
  }

  // optional uint64 token_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->token_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
}

::google::protobuf::uint8* CMsgClientUseLocalDeviceAuthorizations_DeviceToken::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->owner_account_id(), target);
  }

  // optional uint64 token_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->token_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  return target;
}

size_t CMsgClientUseLocalDeviceAuthorizations_DeviceToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 token_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->token_id());
    }

    // optional uint32 owner_account_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUseLocalDeviceAuthorizations_DeviceToken* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUseLocalDeviceAuthorizations_DeviceToken>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
    MergeFrom(*source);
  }
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::MergeFrom(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      token_id_ = from.token_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      owner_account_id_ = from.owner_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::CopyFrom(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUseLocalDeviceAuthorizations_DeviceToken::IsInitialized() const {
  return true;
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::Swap(CMsgClientUseLocalDeviceAuthorizations_DeviceToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::InternalSwap(CMsgClientUseLocalDeviceAuthorizations_DeviceToken* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(token_id_, other->token_id_);
  swap(owner_account_id_, other->owner_account_id_);
}

::google::protobuf::Metadata CMsgClientUseLocalDeviceAuthorizations_DeviceToken::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientUseLocalDeviceAuthorizations::InitAsDefaultInstance() {
}
class CMsgClientUseLocalDeviceAuthorizations::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUseLocalDeviceAuthorizations::kAuthorizationAccountIdFieldNumber;
const int CMsgClientUseLocalDeviceAuthorizations::kDeviceTokensFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUseLocalDeviceAuthorizations::CMsgClientUseLocalDeviceAuthorizations()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
}
CMsgClientUseLocalDeviceAuthorizations::CMsgClientUseLocalDeviceAuthorizations(const CMsgClientUseLocalDeviceAuthorizations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      authorization_account_id_(from.authorization_account_id_),
      device_tokens_(from.device_tokens_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
}

void CMsgClientUseLocalDeviceAuthorizations::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientUseLocalDeviceAuthorizations_steammessages_5fclientserver_5f2_2eproto.base);
}

CMsgClientUseLocalDeviceAuthorizations::~CMsgClientUseLocalDeviceAuthorizations() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  SharedDtor();
}

void CMsgClientUseLocalDeviceAuthorizations::SharedDtor() {
}

void CMsgClientUseLocalDeviceAuthorizations::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientUseLocalDeviceAuthorizations& CMsgClientUseLocalDeviceAuthorizations::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientUseLocalDeviceAuthorizations_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientUseLocalDeviceAuthorizations::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorization_account_id_.Clear();
  device_tokens_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientUseLocalDeviceAuthorizations::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientUseLocalDeviceAuthorizations*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 authorization_account_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_authorization_account_id(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_authorization_account_id();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // repeated .proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken::_InternalParse;
          object = msg->add_device_tokens();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientUseLocalDeviceAuthorizations::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 authorization_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_authorization_account_id())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_authorization_account_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_device_tokens()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientUseLocalDeviceAuthorizations::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 authorization_account_id = 1;
  for (int i = 0, n = this->authorization_account_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->authorization_account_id(i), output);
  }

  // repeated .proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_tokens_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->device_tokens(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
}

::google::protobuf::uint8* CMsgClientUseLocalDeviceAuthorizations::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 authorization_account_id = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->authorization_account_id_, target);

  // repeated .proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->device_tokens_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->device_tokens(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  return target;
}

size_t CMsgClientUseLocalDeviceAuthorizations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 authorization_account_id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->authorization_account_id_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->authorization_account_id_size());
    total_size += data_size;
  }

  // repeated .proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->device_tokens_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->device_tokens(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUseLocalDeviceAuthorizations::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUseLocalDeviceAuthorizations* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientUseLocalDeviceAuthorizations>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
    MergeFrom(*source);
  }
}

void CMsgClientUseLocalDeviceAuthorizations::MergeFrom(const CMsgClientUseLocalDeviceAuthorizations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  authorization_account_id_.MergeFrom(from.authorization_account_id_);
  device_tokens_.MergeFrom(from.device_tokens_);
}

void CMsgClientUseLocalDeviceAuthorizations::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUseLocalDeviceAuthorizations::CopyFrom(const CMsgClientUseLocalDeviceAuthorizations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUseLocalDeviceAuthorizations::IsInitialized() const {
  return true;
}

void CMsgClientUseLocalDeviceAuthorizations::Swap(CMsgClientUseLocalDeviceAuthorizations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUseLocalDeviceAuthorizations::InternalSwap(CMsgClientUseLocalDeviceAuthorizations* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  authorization_account_id_.InternalSwap(&other->authorization_account_id_);
  CastToBase(&device_tokens_)->InternalSwap(CastToBase(&other->device_tokens_));
}

::google::protobuf::Metadata CMsgClientUseLocalDeviceAuthorizations::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetAuthorizedDevices::InitAsDefaultInstance() {
}
class CMsgClientGetAuthorizedDevices::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetAuthorizedDevices::CMsgClientGetAuthorizedDevices()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetAuthorizedDevices)
}
CMsgClientGetAuthorizedDevices::CMsgClientGetAuthorizedDevices(const CMsgClientGetAuthorizedDevices& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetAuthorizedDevices)
}

void CMsgClientGetAuthorizedDevices::SharedCtor() {
}

CMsgClientGetAuthorizedDevices::~CMsgClientGetAuthorizedDevices() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetAuthorizedDevices)
  SharedDtor();
}

void CMsgClientGetAuthorizedDevices::SharedDtor() {
}

void CMsgClientGetAuthorizedDevices::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientGetAuthorizedDevices& CMsgClientGetAuthorizedDevices::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientGetAuthorizedDevices_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientGetAuthorizedDevices::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetAuthorizedDevices)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientGetAuthorizedDevices::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientGetAuthorizedDevices*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientGetAuthorizedDevices::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetAuthorizedDevices)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetAuthorizedDevices)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetAuthorizedDevices)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientGetAuthorizedDevices::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetAuthorizedDevices)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetAuthorizedDevices)
}

::google::protobuf::uint8* CMsgClientGetAuthorizedDevices::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetAuthorizedDevices)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetAuthorizedDevices)
  return target;
}

size_t CMsgClientGetAuthorizedDevices::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetAuthorizedDevices)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetAuthorizedDevices::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetAuthorizedDevices)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetAuthorizedDevices* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientGetAuthorizedDevices>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetAuthorizedDevices)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetAuthorizedDevices)
    MergeFrom(*source);
  }
}

void CMsgClientGetAuthorizedDevices::MergeFrom(const CMsgClientGetAuthorizedDevices& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetAuthorizedDevices)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientGetAuthorizedDevices::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetAuthorizedDevices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetAuthorizedDevices::CopyFrom(const CMsgClientGetAuthorizedDevices& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetAuthorizedDevices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetAuthorizedDevices::IsInitialized() const {
  return true;
}

void CMsgClientGetAuthorizedDevices::Swap(CMsgClientGetAuthorizedDevices* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetAuthorizedDevices::InternalSwap(CMsgClientGetAuthorizedDevices* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CMsgClientGetAuthorizedDevices::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::InitAsDefaultInstance() {
}
class CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::HasBitSetters {
 public:
  static void set_has_auth_device_token(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_device_name(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_last_access_time(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_borrower_id(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_is_pending(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_app_played(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kAuthDeviceTokenFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kDeviceNameFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kLastAccessTimeFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kBorrowerIdFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kIsPendingFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kAppPlayedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
}
CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_name()) {
    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  ::memcpy(&auth_device_token_, &from.auth_device_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_played_) -
    reinterpret_cast<char*>(&auth_device_token_)) + sizeof(app_played_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_steammessages_5fclientserver_5f2_2eproto.base);
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&auth_device_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_played_) -
      reinterpret_cast<char*>(&auth_device_token_)) + sizeof(app_played_));
}

CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::~CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  SharedDtor();
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::SharedDtor() {
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    device_name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&auth_device_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_played_) -
        reinterpret_cast<char*>(&auth_device_token_)) + sizeof(app_played_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint64 auth_device_token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_auth_device_token(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string device_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name");
        object = msg->mutable_device_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 last_access_time = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_last_access_time(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 borrower_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_borrower_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool is_pending = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_is_pending(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 app_played = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_app_played(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 auth_device_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_auth_device_token(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &auth_device_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string device_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_name().data(), static_cast<int>(this->device_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_access_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_last_access_time(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_access_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 borrower_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_borrower_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &borrower_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_pending = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_is_pending(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_pending_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_played = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_app_played(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_played_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 auth_device_token = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->auth_device_token(), output);
  }

  // optional string device_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->device_name(), output);
  }

  // optional uint32 last_access_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->last_access_time(), output);
  }

  // optional uint32 borrower_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->borrower_id(), output);
  }

  // optional bool is_pending = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_pending(), output);
  }

  // optional uint32 app_played = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->app_played(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
}

::google::protobuf::uint8* CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 auth_device_token = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->auth_device_token(), target);
  }

  // optional string device_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_name().data(), static_cast<int>(this->device_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->device_name(), target);
  }

  // optional uint32 last_access_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->last_access_time(), target);
  }

  // optional uint32 borrower_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->borrower_id(), target);
  }

  // optional bool is_pending = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_pending(), target);
  }

  // optional uint32 app_played = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->app_played(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  return target;
}

size_t CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string device_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->device_name());
    }

    // optional uint64 auth_device_token = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->auth_device_token());
    }

    // optional uint32 last_access_time = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_access_time());
    }

    // optional uint32 borrower_id = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->borrower_id());
    }

    // optional bool is_pending = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional uint32 app_played = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_played());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
    MergeFrom(*source);
  }
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::MergeFrom(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      auth_device_token_ = from.auth_device_token_;
    }
    if (cached_has_bits & 0x00000004u) {
      last_access_time_ = from.last_access_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      borrower_id_ = from.borrower_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_pending_ = from.is_pending_;
    }
    if (cached_has_bits & 0x00000020u) {
      app_played_ = from.app_played_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::CopyFrom(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::IsInitialized() const {
  return true;
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::Swap(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::InternalSwap(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  device_name_.Swap(&other->device_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(auth_device_token_, other->auth_device_token_);
  swap(last_access_time_, other->last_access_time_);
  swap(borrower_id_, other->borrower_id_);
  swap(is_pending_, other->is_pending_);
  swap(app_played_, other->app_played_);
}

::google::protobuf::Metadata CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientGetAuthorizedDevicesResponse::InitAsDefaultInstance() {
}
class CMsgClientGetAuthorizedDevicesResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgClientGetAuthorizedDevicesResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetAuthorizedDevicesResponse::kEresultFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse::kAuthorizedDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetAuthorizedDevicesResponse::CMsgClientGetAuthorizedDevicesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
}
CMsgClientGetAuthorizedDevicesResponse::CMsgClientGetAuthorizedDevicesResponse(const CMsgClientGetAuthorizedDevicesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      authorized_device_(from.authorized_device_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
}

void CMsgClientGetAuthorizedDevicesResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientGetAuthorizedDevicesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  eresult_ = 2;
}

CMsgClientGetAuthorizedDevicesResponse::~CMsgClientGetAuthorizedDevicesResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  SharedDtor();
}

void CMsgClientGetAuthorizedDevicesResponse::SharedDtor() {
}

void CMsgClientGetAuthorizedDevicesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientGetAuthorizedDevicesResponse& CMsgClientGetAuthorizedDevicesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientGetAuthorizedDevicesResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientGetAuthorizedDevicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  authorized_device_.Clear();
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientGetAuthorizedDevicesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientGetAuthorizedDevicesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_InternalParse;
          object = msg->add_authorized_device();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientGetAuthorizedDevicesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_authorized_device()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientGetAuthorizedDevicesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->authorized_device_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->authorized_device(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
}

::google::protobuf::uint8* CMsgClientGetAuthorizedDevicesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->authorized_device_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->authorized_device(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  return target;
}

size_t CMsgClientGetAuthorizedDevicesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->authorized_device_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->authorized_device(static_cast<int>(i)));
    }
  }

  // optional int32 eresult = 1 [default = 2];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientGetAuthorizedDevicesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetAuthorizedDevicesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientGetAuthorizedDevicesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetAuthorizedDevicesResponse::MergeFrom(const CMsgClientGetAuthorizedDevicesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  authorized_device_.MergeFrom(from.authorized_device_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientGetAuthorizedDevicesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetAuthorizedDevicesResponse::CopyFrom(const CMsgClientGetAuthorizedDevicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetAuthorizedDevicesResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetAuthorizedDevicesResponse::Swap(CMsgClientGetAuthorizedDevicesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetAuthorizedDevicesResponse::InternalSwap(CMsgClientGetAuthorizedDevicesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&authorized_device_)->InternalSwap(CastToBase(&other->authorized_device_));
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientGetAuthorizedDevicesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientSharedLibraryLockStatus_LockedLibrary::InitAsDefaultInstance() {
}
class CMsgClientSharedLibraryLockStatus_LockedLibrary::HasBitSetters {
 public:
  static void set_has_owner_id(CMsgClientSharedLibraryLockStatus_LockedLibrary* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_locked_by(CMsgClientSharedLibraryLockStatus_LockedLibrary* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSharedLibraryLockStatus_LockedLibrary::kOwnerIdFieldNumber;
const int CMsgClientSharedLibraryLockStatus_LockedLibrary::kLockedByFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSharedLibraryLockStatus_LockedLibrary::CMsgClientSharedLibraryLockStatus_LockedLibrary()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
}
CMsgClientSharedLibraryLockStatus_LockedLibrary::CMsgClientSharedLibraryLockStatus_LockedLibrary(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&owner_id_, &from.owner_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&locked_by_) -
    reinterpret_cast<char*>(&owner_id_)) + sizeof(locked_by_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::SharedCtor() {
  ::memset(&owner_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&locked_by_) -
      reinterpret_cast<char*>(&owner_id_)) + sizeof(locked_by_));
}

CMsgClientSharedLibraryLockStatus_LockedLibrary::~CMsgClientSharedLibraryLockStatus_LockedLibrary() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  SharedDtor();
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::SharedDtor() {
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientSharedLibraryLockStatus_LockedLibrary& CMsgClientSharedLibraryLockStatus_LockedLibrary::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientSharedLibraryLockStatus_LockedLibrary_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientSharedLibraryLockStatus_LockedLibrary::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&owner_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&locked_by_) -
        reinterpret_cast<char*>(&owner_id_)) + sizeof(locked_by_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientSharedLibraryLockStatus_LockedLibrary::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientSharedLibraryLockStatus_LockedLibrary*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 owner_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_owner_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 locked_by = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_locked_by(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientSharedLibraryLockStatus_LockedLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 owner_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_owner_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 locked_by = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_locked_by(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &locked_by_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientSharedLibraryLockStatus_LockedLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->owner_id(), output);
  }

  // optional uint32 locked_by = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->locked_by(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
}

::google::protobuf::uint8* CMsgClientSharedLibraryLockStatus_LockedLibrary::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->owner_id(), target);
  }

  // optional uint32 locked_by = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->locked_by(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  return target;
}

size_t CMsgClientSharedLibraryLockStatus_LockedLibrary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 owner_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_id());
    }

    // optional uint32 locked_by = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->locked_by());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSharedLibraryLockStatus_LockedLibrary* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientSharedLibraryLockStatus_LockedLibrary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
    MergeFrom(*source);
  }
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::MergeFrom(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      owner_id_ = from.owner_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      locked_by_ = from.locked_by_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::CopyFrom(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSharedLibraryLockStatus_LockedLibrary::IsInitialized() const {
  return true;
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::Swap(CMsgClientSharedLibraryLockStatus_LockedLibrary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSharedLibraryLockStatus_LockedLibrary::InternalSwap(CMsgClientSharedLibraryLockStatus_LockedLibrary* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(owner_id_, other->owner_id_);
  swap(locked_by_, other->locked_by_);
}

::google::protobuf::Metadata CMsgClientSharedLibraryLockStatus_LockedLibrary::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientSharedLibraryLockStatus::InitAsDefaultInstance() {
}
class CMsgClientSharedLibraryLockStatus::HasBitSetters {
 public:
  static void set_has_own_library_locked_by(CMsgClientSharedLibraryLockStatus* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSharedLibraryLockStatus::kLockedLibraryFieldNumber;
const int CMsgClientSharedLibraryLockStatus::kOwnLibraryLockedByFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSharedLibraryLockStatus::CMsgClientSharedLibraryLockStatus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientSharedLibraryLockStatus)
}
CMsgClientSharedLibraryLockStatus::CMsgClientSharedLibraryLockStatus(const CMsgClientSharedLibraryLockStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      locked_library_(from.locked_library_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  own_library_locked_by_ = from.own_library_locked_by_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientSharedLibraryLockStatus)
}

void CMsgClientSharedLibraryLockStatus::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientSharedLibraryLockStatus_steammessages_5fclientserver_5f2_2eproto.base);
  own_library_locked_by_ = 0u;
}

CMsgClientSharedLibraryLockStatus::~CMsgClientSharedLibraryLockStatus() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientSharedLibraryLockStatus)
  SharedDtor();
}

void CMsgClientSharedLibraryLockStatus::SharedDtor() {
}

void CMsgClientSharedLibraryLockStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientSharedLibraryLockStatus& CMsgClientSharedLibraryLockStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientSharedLibraryLockStatus_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientSharedLibraryLockStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locked_library_.Clear();
  own_library_locked_by_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientSharedLibraryLockStatus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientSharedLibraryLockStatus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary::_InternalParse;
          object = msg->add_locked_library();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // optional uint32 own_library_locked_by = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_own_library_locked_by(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientSharedLibraryLockStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_locked_library()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 own_library_locked_by = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_own_library_locked_by(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &own_library_locked_by_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientSharedLibraryLockStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientSharedLibraryLockStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientSharedLibraryLockStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locked_library_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->locked_library(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 own_library_locked_by = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->own_library_locked_by(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientSharedLibraryLockStatus)
}

::google::protobuf::uint8* CMsgClientSharedLibraryLockStatus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locked_library_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->locked_library(static_cast<int>(i)), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 own_library_locked_by = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->own_library_locked_by(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientSharedLibraryLockStatus)
  return target;
}

size_t CMsgClientSharedLibraryLockStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->locked_library_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->locked_library(static_cast<int>(i)));
    }
  }

  // optional uint32 own_library_locked_by = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->own_library_locked_by());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientSharedLibraryLockStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSharedLibraryLockStatus* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientSharedLibraryLockStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientSharedLibraryLockStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientSharedLibraryLockStatus)
    MergeFrom(*source);
  }
}

void CMsgClientSharedLibraryLockStatus::MergeFrom(const CMsgClientSharedLibraryLockStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locked_library_.MergeFrom(from.locked_library_);
  if (from.has_own_library_locked_by()) {
    set_own_library_locked_by(from.own_library_locked_by());
  }
}

void CMsgClientSharedLibraryLockStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSharedLibraryLockStatus::CopyFrom(const CMsgClientSharedLibraryLockStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSharedLibraryLockStatus::IsInitialized() const {
  return true;
}

void CMsgClientSharedLibraryLockStatus::Swap(CMsgClientSharedLibraryLockStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSharedLibraryLockStatus::InternalSwap(CMsgClientSharedLibraryLockStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&locked_library_)->InternalSwap(CastToBase(&other->locked_library_));
  swap(own_library_locked_by_, other->own_library_locked_by_);
}

::google::protobuf::Metadata CMsgClientSharedLibraryLockStatus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientSharedLibraryStopPlaying_StopApp::InitAsDefaultInstance() {
}
class CMsgClientSharedLibraryStopPlaying_StopApp::HasBitSetters {
 public:
  static void set_has_app_id(CMsgClientSharedLibraryStopPlaying_StopApp* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_owner_id(CMsgClientSharedLibraryStopPlaying_StopApp* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSharedLibraryStopPlaying_StopApp::kAppIdFieldNumber;
const int CMsgClientSharedLibraryStopPlaying_StopApp::kOwnerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSharedLibraryStopPlaying_StopApp::CMsgClientSharedLibraryStopPlaying_StopApp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
}
CMsgClientSharedLibraryStopPlaying_StopApp::CMsgClientSharedLibraryStopPlaying_StopApp(const CMsgClientSharedLibraryStopPlaying_StopApp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&owner_id_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(owner_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
}

void CMsgClientSharedLibraryStopPlaying_StopApp::SharedCtor() {
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_id_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(owner_id_));
}

CMsgClientSharedLibraryStopPlaying_StopApp::~CMsgClientSharedLibraryStopPlaying_StopApp() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  SharedDtor();
}

void CMsgClientSharedLibraryStopPlaying_StopApp::SharedDtor() {
}

void CMsgClientSharedLibraryStopPlaying_StopApp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientSharedLibraryStopPlaying_StopApp& CMsgClientSharedLibraryStopPlaying_StopApp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientSharedLibraryStopPlaying_StopApp_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientSharedLibraryStopPlaying_StopApp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_id_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(owner_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientSharedLibraryStopPlaying_StopApp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientSharedLibraryStopPlaying_StopApp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_app_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 owner_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_owner_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientSharedLibraryStopPlaying_StopApp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_app_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 owner_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_owner_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientSharedLibraryStopPlaying_StopApp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 owner_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owner_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
}

::google::protobuf::uint8* CMsgClientSharedLibraryStopPlaying_StopApp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 owner_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owner_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  return target;
}

size_t CMsgClientSharedLibraryStopPlaying_StopApp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 owner_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientSharedLibraryStopPlaying_StopApp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSharedLibraryStopPlaying_StopApp* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientSharedLibraryStopPlaying_StopApp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
    MergeFrom(*source);
  }
}

void CMsgClientSharedLibraryStopPlaying_StopApp::MergeFrom(const CMsgClientSharedLibraryStopPlaying_StopApp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      owner_id_ = from.owner_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientSharedLibraryStopPlaying_StopApp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSharedLibraryStopPlaying_StopApp::CopyFrom(const CMsgClientSharedLibraryStopPlaying_StopApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSharedLibraryStopPlaying_StopApp::IsInitialized() const {
  return true;
}

void CMsgClientSharedLibraryStopPlaying_StopApp::Swap(CMsgClientSharedLibraryStopPlaying_StopApp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSharedLibraryStopPlaying_StopApp::InternalSwap(CMsgClientSharedLibraryStopPlaying_StopApp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(app_id_, other->app_id_);
  swap(owner_id_, other->owner_id_);
}

::google::protobuf::Metadata CMsgClientSharedLibraryStopPlaying_StopApp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientSharedLibraryStopPlaying::InitAsDefaultInstance() {
}
class CMsgClientSharedLibraryStopPlaying::HasBitSetters {
 public:
  static void set_has_seconds_left(CMsgClientSharedLibraryStopPlaying* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSharedLibraryStopPlaying::kSecondsLeftFieldNumber;
const int CMsgClientSharedLibraryStopPlaying::kStopAppsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSharedLibraryStopPlaying::CMsgClientSharedLibraryStopPlaying()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientSharedLibraryStopPlaying)
}
CMsgClientSharedLibraryStopPlaying::CMsgClientSharedLibraryStopPlaying(const CMsgClientSharedLibraryStopPlaying& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      stop_apps_(from.stop_apps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seconds_left_ = from.seconds_left_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientSharedLibraryStopPlaying)
}

void CMsgClientSharedLibraryStopPlaying::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientSharedLibraryStopPlaying_steammessages_5fclientserver_5f2_2eproto.base);
  seconds_left_ = 0;
}

CMsgClientSharedLibraryStopPlaying::~CMsgClientSharedLibraryStopPlaying() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientSharedLibraryStopPlaying)
  SharedDtor();
}

void CMsgClientSharedLibraryStopPlaying::SharedDtor() {
}

void CMsgClientSharedLibraryStopPlaying::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientSharedLibraryStopPlaying& CMsgClientSharedLibraryStopPlaying::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientSharedLibraryStopPlaying_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientSharedLibraryStopPlaying::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stop_apps_.Clear();
  seconds_left_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientSharedLibraryStopPlaying::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientSharedLibraryStopPlaying*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 seconds_left = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_seconds_left(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp::_InternalParse;
          object = msg->add_stop_apps();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientSharedLibraryStopPlaying::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 seconds_left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_seconds_left(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seconds_left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stop_apps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientSharedLibraryStopPlaying)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientSharedLibraryStopPlaying)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientSharedLibraryStopPlaying::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 seconds_left = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->seconds_left(), output);
  }

  // repeated .proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stop_apps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->stop_apps(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientSharedLibraryStopPlaying)
}

::google::protobuf::uint8* CMsgClientSharedLibraryStopPlaying::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 seconds_left = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->seconds_left(), target);
  }

  // repeated .proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stop_apps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->stop_apps(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientSharedLibraryStopPlaying)
  return target;
}

size_t CMsgClientSharedLibraryStopPlaying::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->stop_apps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stop_apps(static_cast<int>(i)));
    }
  }

  // optional int32 seconds_left = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seconds_left());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientSharedLibraryStopPlaying::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSharedLibraryStopPlaying* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientSharedLibraryStopPlaying>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientSharedLibraryStopPlaying)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientSharedLibraryStopPlaying)
    MergeFrom(*source);
  }
}

void CMsgClientSharedLibraryStopPlaying::MergeFrom(const CMsgClientSharedLibraryStopPlaying& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stop_apps_.MergeFrom(from.stop_apps_);
  if (from.has_seconds_left()) {
    set_seconds_left(from.seconds_left());
  }
}

void CMsgClientSharedLibraryStopPlaying::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSharedLibraryStopPlaying::CopyFrom(const CMsgClientSharedLibraryStopPlaying& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSharedLibraryStopPlaying::IsInitialized() const {
  return true;
}

void CMsgClientSharedLibraryStopPlaying::Swap(CMsgClientSharedLibraryStopPlaying* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSharedLibraryStopPlaying::InternalSwap(CMsgClientSharedLibraryStopPlaying* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&stop_apps_)->InternalSwap(CastToBase(&other->stop_apps_));
  swap(seconds_left_, other->seconds_left_);
}

::google::protobuf::Metadata CMsgClientSharedLibraryStopPlaying::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientServiceCall::InitAsDefaultInstance() {
}
class CMsgClientServiceCall::HasBitSetters {
 public:
  static void set_has_sysid_routing(CMsgClientServiceCall* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_call_handle(CMsgClientServiceCall* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_module_crc(CMsgClientServiceCall* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_module_hash(CMsgClientServiceCall* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_function_id(CMsgClientServiceCall* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_cub_output_max(CMsgClientServiceCall* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_flags(CMsgClientServiceCall* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_callparameter(CMsgClientServiceCall* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_ping_only(CMsgClientServiceCall* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_max_outstanding_calls(CMsgClientServiceCall* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServiceCall::kSysidRoutingFieldNumber;
const int CMsgClientServiceCall::kCallHandleFieldNumber;
const int CMsgClientServiceCall::kModuleCrcFieldNumber;
const int CMsgClientServiceCall::kModuleHashFieldNumber;
const int CMsgClientServiceCall::kFunctionIdFieldNumber;
const int CMsgClientServiceCall::kCubOutputMaxFieldNumber;
const int CMsgClientServiceCall::kFlagsFieldNumber;
const int CMsgClientServiceCall::kCallparameterFieldNumber;
const int CMsgClientServiceCall::kPingOnlyFieldNumber;
const int CMsgClientServiceCall::kMaxOutstandingCallsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServiceCall::CMsgClientServiceCall()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientServiceCall)
}
CMsgClientServiceCall::CMsgClientServiceCall(const CMsgClientServiceCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sysid_routing()) {
    sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sysid_routing_);
  }
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_hash()) {
    module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
  }
  callparameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_callparameter()) {
    callparameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callparameter_);
  }
  ::memcpy(&call_handle_, &from.call_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_outstanding_calls_) -
    reinterpret_cast<char*>(&call_handle_)) + sizeof(max_outstanding_calls_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientServiceCall)
}

void CMsgClientServiceCall::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientServiceCall_steammessages_5fclientserver_5f2_2eproto.base);
  sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callparameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_outstanding_calls_) -
      reinterpret_cast<char*>(&call_handle_)) + sizeof(max_outstanding_calls_));
}

CMsgClientServiceCall::~CMsgClientServiceCall() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientServiceCall)
  SharedDtor();
}

void CMsgClientServiceCall::SharedDtor() {
  sysid_routing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callparameter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientServiceCall::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientServiceCall& CMsgClientServiceCall::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientServiceCall_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientServiceCall::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientServiceCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      sysid_routing_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      module_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      callparameter_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&call_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&call_handle_)) + sizeof(flags_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&ping_only_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_outstanding_calls_) -
        reinterpret_cast<char*>(&ping_only_)) + sizeof(max_outstanding_calls_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientServiceCall::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientServiceCall*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes sysid_routing = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_sysid_routing();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 call_handle = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_call_handle(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 module_crc = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_module_crc(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes module_hash = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_module_hash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 function_id = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_function_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 cub_output_max = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_cub_output_max(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 flags = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes callparameter = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_callparameter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool ping_only = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_ping_only(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 max_outstanding_calls = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_max_outstanding_calls(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientServiceCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientServiceCall)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sysid_routing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sysid_routing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 call_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_call_handle(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &call_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 module_crc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_module_crc(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes module_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_module_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 function_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_function_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &function_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cub_output_max = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_cub_output_max(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cub_output_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_flags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes callparameter = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_callparameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ping_only = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_ping_only(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ping_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 max_outstanding_calls = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          HasBitSetters::set_has_max_outstanding_calls(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_outstanding_calls_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientServiceCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientServiceCall)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientServiceCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientServiceCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sysid_routing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sysid_routing(), output);
  }

  // optional uint32 call_handle = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->call_handle(), output);
  }

  // optional uint32 module_crc = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->module_crc(), output);
  }

  // optional bytes module_hash = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->module_hash(), output);
  }

  // optional uint32 function_id = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->function_id(), output);
  }

  // optional uint32 cub_output_max = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->cub_output_max(), output);
  }

  // optional uint32 flags = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->flags(), output);
  }

  // optional bytes callparameter = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->callparameter(), output);
  }

  // optional bool ping_only = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->ping_only(), output);
  }

  // optional uint32 max_outstanding_calls = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->max_outstanding_calls(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientServiceCall)
}

::google::protobuf::uint8* CMsgClientServiceCall::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientServiceCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sysid_routing = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sysid_routing(), target);
  }

  // optional uint32 call_handle = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->call_handle(), target);
  }

  // optional uint32 module_crc = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->module_crc(), target);
  }

  // optional bytes module_hash = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->module_hash(), target);
  }

  // optional uint32 function_id = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->function_id(), target);
  }

  // optional uint32 cub_output_max = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->cub_output_max(), target);
  }

  // optional uint32 flags = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->flags(), target);
  }

  // optional bytes callparameter = 8;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->callparameter(), target);
  }

  // optional bool ping_only = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->ping_only(), target);
  }

  // optional uint32 max_outstanding_calls = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->max_outstanding_calls(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientServiceCall)
  return target;
}

size_t CMsgClientServiceCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientServiceCall)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes sysid_routing = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sysid_routing());
    }

    // optional bytes module_hash = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->module_hash());
    }

    // optional bytes callparameter = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->callparameter());
    }

    // optional uint32 call_handle = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->call_handle());
    }

    // optional uint32 module_crc = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->module_crc());
    }

    // optional uint32 function_id = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->function_id());
    }

    // optional uint32 cub_output_max = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cub_output_max());
    }

    // optional uint32 flags = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional bool ping_only = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 1;
    }

    // optional uint32 max_outstanding_calls = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_outstanding_calls());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientServiceCall::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientServiceCall)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServiceCall* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientServiceCall>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientServiceCall)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientServiceCall)
    MergeFrom(*source);
  }
}

void CMsgClientServiceCall::MergeFrom(const CMsgClientServiceCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientServiceCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sysid_routing_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      callparameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callparameter_);
    }
    if (cached_has_bits & 0x00000008u) {
      call_handle_ = from.call_handle_;
    }
    if (cached_has_bits & 0x00000010u) {
      module_crc_ = from.module_crc_;
    }
    if (cached_has_bits & 0x00000020u) {
      function_id_ = from.function_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      cub_output_max_ = from.cub_output_max_;
    }
    if (cached_has_bits & 0x00000080u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      ping_only_ = from.ping_only_;
    }
    if (cached_has_bits & 0x00000200u) {
      max_outstanding_calls_ = from.max_outstanding_calls_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientServiceCall::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientServiceCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServiceCall::CopyFrom(const CMsgClientServiceCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientServiceCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServiceCall::IsInitialized() const {
  return true;
}

void CMsgClientServiceCall::Swap(CMsgClientServiceCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServiceCall::InternalSwap(CMsgClientServiceCall* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  sysid_routing_.Swap(&other->sysid_routing_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  module_hash_.Swap(&other->module_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  callparameter_.Swap(&other->callparameter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(call_handle_, other->call_handle_);
  swap(module_crc_, other->module_crc_);
  swap(function_id_, other->function_id_);
  swap(cub_output_max_, other->cub_output_max_);
  swap(flags_, other->flags_);
  swap(ping_only_, other->ping_only_);
  swap(max_outstanding_calls_, other->max_outstanding_calls_);
}

::google::protobuf::Metadata CMsgClientServiceCall::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientServiceModule::InitAsDefaultInstance() {
}
class CMsgClientServiceModule::HasBitSetters {
 public:
  static void set_has_module_crc(CMsgClientServiceModule* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_module_hash(CMsgClientServiceModule* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_module_content(CMsgClientServiceModule* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServiceModule::kModuleCrcFieldNumber;
const int CMsgClientServiceModule::kModuleHashFieldNumber;
const int CMsgClientServiceModule::kModuleContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServiceModule::CMsgClientServiceModule()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientServiceModule)
}
CMsgClientServiceModule::CMsgClientServiceModule(const CMsgClientServiceModule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_hash()) {
    module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
  }
  module_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_content()) {
    module_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_content_);
  }
  module_crc_ = from.module_crc_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientServiceModule)
}

void CMsgClientServiceModule::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientServiceModule_steammessages_5fclientserver_5f2_2eproto.base);
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_crc_ = 0u;
}

CMsgClientServiceModule::~CMsgClientServiceModule() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientServiceModule)
  SharedDtor();
}

void CMsgClientServiceModule::SharedDtor() {
  module_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientServiceModule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientServiceModule& CMsgClientServiceModule::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientServiceModule_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientServiceModule::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientServiceModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      module_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      module_content_.ClearNonDefaultToEmptyNoArena();
    }
  }
  module_crc_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientServiceModule::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientServiceModule*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 module_crc = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_module_crc(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes module_hash = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_module_hash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes module_content = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_module_content();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientServiceModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientServiceModule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 module_crc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_module_crc(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes module_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_module_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes module_content = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_module_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientServiceModule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientServiceModule)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientServiceModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientServiceModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 module_crc = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->module_crc(), output);
  }

  // optional bytes module_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->module_hash(), output);
  }

  // optional bytes module_content = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->module_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientServiceModule)
}

::google::protobuf::uint8* CMsgClientServiceModule::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientServiceModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 module_crc = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->module_crc(), target);
  }

  // optional bytes module_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->module_hash(), target);
  }

  // optional bytes module_content = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->module_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientServiceModule)
  return target;
}

size_t CMsgClientServiceModule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientServiceModule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes module_hash = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->module_hash());
    }

    // optional bytes module_content = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->module_content());
    }

    // optional uint32 module_crc = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->module_crc());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientServiceModule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientServiceModule)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServiceModule* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientServiceModule>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientServiceModule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientServiceModule)
    MergeFrom(*source);
  }
}

void CMsgClientServiceModule::MergeFrom(const CMsgClientServiceModule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientServiceModule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      module_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_content_);
    }
    if (cached_has_bits & 0x00000004u) {
      module_crc_ = from.module_crc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientServiceModule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientServiceModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServiceModule::CopyFrom(const CMsgClientServiceModule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientServiceModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServiceModule::IsInitialized() const {
  return true;
}

void CMsgClientServiceModule::Swap(CMsgClientServiceModule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServiceModule::InternalSwap(CMsgClientServiceModule* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  module_hash_.Swap(&other->module_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  module_content_.Swap(&other->module_content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(module_crc_, other->module_crc_);
}

::google::protobuf::Metadata CMsgClientServiceModule::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientServiceCallResponse::InitAsDefaultInstance() {
}
class CMsgClientServiceCallResponse::HasBitSetters {
 public:
  static void set_has_sysid_routing(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_call_handle(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
  static void set_has_module_crc(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00000400u;
  }
  static void set_has_module_hash(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ecallresult(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00001000u;
  }
  static void set_has_result_content(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_os_version_info(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_system_info(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_load_address(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00000800u;
  }
  static void set_has_exception_record(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_portable_os_version_info(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_portable_system_info(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_was_converted(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00002000u;
  }
  static void set_has_internal_result(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00004000u;
  }
  static void set_has_current_count(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00008000u;
  }
  static void set_has_last_call_handle(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00010000u;
  }
  static void set_has_last_call_module_crc(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00020000u;
  }
  static void set_has_last_call_sysid_routing(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_last_ecallresult(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00040000u;
  }
  static void set_has_last_callissue_delta(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00080000u;
  }
  static void set_has_last_callcomplete_delta(CMsgClientServiceCallResponse* msg) {
    msg->_has_bits_[0] |= 0x00100000u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServiceCallResponse::kSysidRoutingFieldNumber;
const int CMsgClientServiceCallResponse::kCallHandleFieldNumber;
const int CMsgClientServiceCallResponse::kModuleCrcFieldNumber;
const int CMsgClientServiceCallResponse::kModuleHashFieldNumber;
const int CMsgClientServiceCallResponse::kEcallresultFieldNumber;
const int CMsgClientServiceCallResponse::kResultContentFieldNumber;
const int CMsgClientServiceCallResponse::kOsVersionInfoFieldNumber;
const int CMsgClientServiceCallResponse::kSystemInfoFieldNumber;
const int CMsgClientServiceCallResponse::kLoadAddressFieldNumber;
const int CMsgClientServiceCallResponse::kExceptionRecordFieldNumber;
const int CMsgClientServiceCallResponse::kPortableOsVersionInfoFieldNumber;
const int CMsgClientServiceCallResponse::kPortableSystemInfoFieldNumber;
const int CMsgClientServiceCallResponse::kWasConvertedFieldNumber;
const int CMsgClientServiceCallResponse::kInternalResultFieldNumber;
const int CMsgClientServiceCallResponse::kCurrentCountFieldNumber;
const int CMsgClientServiceCallResponse::kLastCallHandleFieldNumber;
const int CMsgClientServiceCallResponse::kLastCallModuleCrcFieldNumber;
const int CMsgClientServiceCallResponse::kLastCallSysidRoutingFieldNumber;
const int CMsgClientServiceCallResponse::kLastEcallresultFieldNumber;
const int CMsgClientServiceCallResponse::kLastCallissueDeltaFieldNumber;
const int CMsgClientServiceCallResponse::kLastCallcompleteDeltaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServiceCallResponse::CMsgClientServiceCallResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientServiceCallResponse)
}
CMsgClientServiceCallResponse::CMsgClientServiceCallResponse(const CMsgClientServiceCallResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sysid_routing()) {
    sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sysid_routing_);
  }
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_hash()) {
    module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
  }
  result_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_result_content()) {
    result_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_content_);
  }
  os_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_os_version_info()) {
    os_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_version_info_);
  }
  system_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_system_info()) {
    system_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_info_);
  }
  exception_record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_exception_record()) {
    exception_record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exception_record_);
  }
  portable_os_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_portable_os_version_info()) {
    portable_os_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portable_os_version_info_);
  }
  portable_system_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_portable_system_info()) {
    portable_system_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portable_system_info_);
  }
  last_call_sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_last_call_sysid_routing()) {
    last_call_sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_call_sysid_routing_);
  }
  ::memcpy(&call_handle_, &from.call_handle_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_callcomplete_delta_) -
    reinterpret_cast<char*>(&call_handle_)) + sizeof(last_callcomplete_delta_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientServiceCallResponse)
}

void CMsgClientServiceCallResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgClientServiceCallResponse_steammessages_5fclientserver_5f2_2eproto.base);
  sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exception_record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portable_os_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portable_system_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_call_sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_handle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_callcomplete_delta_) -
      reinterpret_cast<char*>(&call_handle_)) + sizeof(last_callcomplete_delta_));
}

CMsgClientServiceCallResponse::~CMsgClientServiceCallResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientServiceCallResponse)
  SharedDtor();
}

void CMsgClientServiceCallResponse::SharedDtor() {
  sysid_routing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exception_record_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portable_os_version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portable_system_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_call_sysid_routing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientServiceCallResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientServiceCallResponse& CMsgClientServiceCallResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientServiceCallResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientServiceCallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientServiceCallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      sysid_routing_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      module_hash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      result_content_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      os_version_info_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      system_info_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      exception_record_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      portable_os_version_info_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      portable_system_info_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    last_call_sysid_routing_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000fe00u) {
    ::memset(&call_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&current_count_) -
        reinterpret_cast<char*>(&call_handle_)) + sizeof(current_count_));
  }
  if (cached_has_bits & 0x001f0000u) {
    ::memset(&last_call_handle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&last_callcomplete_delta_) -
        reinterpret_cast<char*>(&last_call_handle_)) + sizeof(last_callcomplete_delta_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientServiceCallResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientServiceCallResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes sysid_routing = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_sysid_routing();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 call_handle = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_call_handle(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 module_crc = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_module_crc(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes module_hash = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_module_hash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 ecallresult = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_ecallresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes result_content = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_result_content();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes os_version_info = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_os_version_info();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes system_info = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_system_info();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional fixed64 load_address = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 73) goto handle_unusual;
        msg->set_load_address(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional bytes exception_record = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_exception_record();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes portable_os_version_info = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_portable_os_version_info();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes portable_system_info = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_portable_system_info();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool was_converted = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_was_converted(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 internal_result = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 112) goto handle_unusual;
        msg->set_internal_result(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 current_count = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 120) goto handle_unusual;
        msg->set_current_count(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 last_call_handle = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 128) goto handle_unusual;
        msg->set_last_call_handle(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 last_call_module_crc = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 136) goto handle_unusual;
        msg->set_last_call_module_crc(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes last_call_sysid_routing = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_last_call_sysid_routing();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 last_ecallresult = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 152) goto handle_unusual;
        msg->set_last_ecallresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 last_callissue_delta = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 160) goto handle_unusual;
        msg->set_last_callissue_delta(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 last_callcomplete_delta = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 168) goto handle_unusual;
        msg->set_last_callcomplete_delta(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientServiceCallResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientServiceCallResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sysid_routing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sysid_routing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 call_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_call_handle(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &call_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 module_crc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_module_crc(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes module_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_module_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ecallresult = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_ecallresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ecallresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes result_content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_result_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes os_version_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_os_version_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes system_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_system_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 load_address = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (73 & 0xFF)) {
          HasBitSetters::set_has_load_address(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &load_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes exception_record = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_exception_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes portable_os_version_info = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_portable_os_version_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes portable_system_info = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_portable_system_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool was_converted = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {
          HasBitSetters::set_has_was_converted(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &was_converted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 internal_result = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (112 & 0xFF)) {
          HasBitSetters::set_has_internal_result(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &internal_result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 current_count = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (120 & 0xFF)) {
          HasBitSetters::set_has_current_count(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &current_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_call_handle = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (128 & 0xFF)) {
          HasBitSetters::set_has_last_call_handle(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_call_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_call_module_crc = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (136 & 0xFF)) {
          HasBitSetters::set_has_last_call_module_crc(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_call_module_crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes last_call_sysid_routing = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_last_call_sysid_routing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_ecallresult = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (152 & 0xFF)) {
          HasBitSetters::set_has_last_ecallresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_ecallresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_callissue_delta = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (160 & 0xFF)) {
          HasBitSetters::set_has_last_callissue_delta(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_callissue_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_callcomplete_delta = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (168 & 0xFF)) {
          HasBitSetters::set_has_last_callcomplete_delta(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_callcomplete_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientServiceCallResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientServiceCallResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientServiceCallResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientServiceCallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sysid_routing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sysid_routing(), output);
  }

  // optional uint32 call_handle = 2;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->call_handle(), output);
  }

  // optional uint32 module_crc = 3;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->module_crc(), output);
  }

  // optional bytes module_hash = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->module_hash(), output);
  }

  // optional uint32 ecallresult = 5;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ecallresult(), output);
  }

  // optional bytes result_content = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->result_content(), output);
  }

  // optional bytes os_version_info = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->os_version_info(), output);
  }

  // optional bytes system_info = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->system_info(), output);
  }

  // optional fixed64 load_address = 9;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(9, this->load_address(), output);
  }

  // optional bytes exception_record = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->exception_record(), output);
  }

  // optional bytes portable_os_version_info = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->portable_os_version_info(), output);
  }

  // optional bytes portable_system_info = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->portable_system_info(), output);
  }

  // optional bool was_converted = 13;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->was_converted(), output);
  }

  // optional uint32 internal_result = 14;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->internal_result(), output);
  }

  // optional uint32 current_count = 15;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->current_count(), output);
  }

  // optional uint32 last_call_handle = 16;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->last_call_handle(), output);
  }

  // optional uint32 last_call_module_crc = 17;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->last_call_module_crc(), output);
  }

  // optional bytes last_call_sysid_routing = 18;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      18, this->last_call_sysid_routing(), output);
  }

  // optional uint32 last_ecallresult = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->last_ecallresult(), output);
  }

  // optional uint32 last_callissue_delta = 20;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->last_callissue_delta(), output);
  }

  // optional uint32 last_callcomplete_delta = 21;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->last_callcomplete_delta(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientServiceCallResponse)
}

::google::protobuf::uint8* CMsgClientServiceCallResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientServiceCallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sysid_routing = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sysid_routing(), target);
  }

  // optional uint32 call_handle = 2;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->call_handle(), target);
  }

  // optional uint32 module_crc = 3;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->module_crc(), target);
  }

  // optional bytes module_hash = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->module_hash(), target);
  }

  // optional uint32 ecallresult = 5;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ecallresult(), target);
  }

  // optional bytes result_content = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->result_content(), target);
  }

  // optional bytes os_version_info = 7;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->os_version_info(), target);
  }

  // optional bytes system_info = 8;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->system_info(), target);
  }

  // optional fixed64 load_address = 9;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(9, this->load_address(), target);
  }

  // optional bytes exception_record = 10;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->exception_record(), target);
  }

  // optional bytes portable_os_version_info = 11;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->portable_os_version_info(), target);
  }

  // optional bytes portable_system_info = 12;
  if (cached_has_bits & 0x00000080u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->portable_system_info(), target);
  }

  // optional bool was_converted = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->was_converted(), target);
  }

  // optional uint32 internal_result = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->internal_result(), target);
  }

  // optional uint32 current_count = 15;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->current_count(), target);
  }

  // optional uint32 last_call_handle = 16;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->last_call_handle(), target);
  }

  // optional uint32 last_call_module_crc = 17;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->last_call_module_crc(), target);
  }

  // optional bytes last_call_sysid_routing = 18;
  if (cached_has_bits & 0x00000100u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        18, this->last_call_sysid_routing(), target);
  }

  // optional uint32 last_ecallresult = 19;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->last_ecallresult(), target);
  }

  // optional uint32 last_callissue_delta = 20;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->last_callissue_delta(), target);
  }

  // optional uint32 last_callcomplete_delta = 21;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->last_callcomplete_delta(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientServiceCallResponse)
  return target;
}

size_t CMsgClientServiceCallResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientServiceCallResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes sysid_routing = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sysid_routing());
    }

    // optional bytes module_hash = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->module_hash());
    }

    // optional bytes result_content = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->result_content());
    }

    // optional bytes os_version_info = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->os_version_info());
    }

    // optional bytes system_info = 8;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->system_info());
    }

    // optional bytes exception_record = 10;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->exception_record());
    }

    // optional bytes portable_os_version_info = 11;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->portable_os_version_info());
    }

    // optional bytes portable_system_info = 12;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->portable_system_info());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bytes last_call_sysid_routing = 18;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->last_call_sysid_routing());
    }

    // optional uint32 call_handle = 2;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->call_handle());
    }

    // optional uint32 module_crc = 3;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->module_crc());
    }

    // optional fixed64 load_address = 9;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 8;
    }

    // optional uint32 ecallresult = 5;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ecallresult());
    }

    // optional bool was_converted = 13;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

    // optional uint32 internal_result = 14;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->internal_result());
    }

    // optional uint32 current_count = 15;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->current_count());
    }

  }
  if (cached_has_bits & 0x001f0000u) {
    // optional uint32 last_call_handle = 16;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_call_handle());
    }

    // optional uint32 last_call_module_crc = 17;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_call_module_crc());
    }

    // optional uint32 last_ecallresult = 19;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_ecallresult());
    }

    // optional uint32 last_callissue_delta = 20;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_callissue_delta());
    }

    // optional uint32 last_callcomplete_delta = 21;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_callcomplete_delta());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientServiceCallResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientServiceCallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServiceCallResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientServiceCallResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientServiceCallResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientServiceCallResponse)
    MergeFrom(*source);
  }
}

void CMsgClientServiceCallResponse::MergeFrom(const CMsgClientServiceCallResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientServiceCallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sysid_routing_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      result_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_content_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      os_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_version_info_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      system_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_info_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      exception_record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exception_record_);
    }
    if (cached_has_bits & 0x00000040u) {
      _has_bits_[0] |= 0x00000040u;
      portable_os_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portable_os_version_info_);
    }
    if (cached_has_bits & 0x00000080u) {
      _has_bits_[0] |= 0x00000080u;
      portable_system_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portable_system_info_);
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _has_bits_[0] |= 0x00000100u;
      last_call_sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_call_sysid_routing_);
    }
    if (cached_has_bits & 0x00000200u) {
      call_handle_ = from.call_handle_;
    }
    if (cached_has_bits & 0x00000400u) {
      module_crc_ = from.module_crc_;
    }
    if (cached_has_bits & 0x00000800u) {
      load_address_ = from.load_address_;
    }
    if (cached_has_bits & 0x00001000u) {
      ecallresult_ = from.ecallresult_;
    }
    if (cached_has_bits & 0x00002000u) {
      was_converted_ = from.was_converted_;
    }
    if (cached_has_bits & 0x00004000u) {
      internal_result_ = from.internal_result_;
    }
    if (cached_has_bits & 0x00008000u) {
      current_count_ = from.current_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x001f0000u) {
    if (cached_has_bits & 0x00010000u) {
      last_call_handle_ = from.last_call_handle_;
    }
    if (cached_has_bits & 0x00020000u) {
      last_call_module_crc_ = from.last_call_module_crc_;
    }
    if (cached_has_bits & 0x00040000u) {
      last_ecallresult_ = from.last_ecallresult_;
    }
    if (cached_has_bits & 0x00080000u) {
      last_callissue_delta_ = from.last_callissue_delta_;
    }
    if (cached_has_bits & 0x00100000u) {
      last_callcomplete_delta_ = from.last_callcomplete_delta_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientServiceCallResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientServiceCallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServiceCallResponse::CopyFrom(const CMsgClientServiceCallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientServiceCallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServiceCallResponse::IsInitialized() const {
  return true;
}

void CMsgClientServiceCallResponse::Swap(CMsgClientServiceCallResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServiceCallResponse::InternalSwap(CMsgClientServiceCallResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  sysid_routing_.Swap(&other->sysid_routing_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  module_hash_.Swap(&other->module_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  result_content_.Swap(&other->result_content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  os_version_info_.Swap(&other->os_version_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  system_info_.Swap(&other->system_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exception_record_.Swap(&other->exception_record_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portable_os_version_info_.Swap(&other->portable_os_version_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portable_system_info_.Swap(&other->portable_system_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  last_call_sysid_routing_.Swap(&other->last_call_sysid_routing_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(call_handle_, other->call_handle_);
  swap(module_crc_, other->module_crc_);
  swap(load_address_, other->load_address_);
  swap(ecallresult_, other->ecallresult_);
  swap(was_converted_, other->was_converted_);
  swap(internal_result_, other->internal_result_);
  swap(current_count_, other->current_count_);
  swap(last_call_handle_, other->last_call_handle_);
  swap(last_call_module_crc_, other->last_call_module_crc_);
  swap(last_ecallresult_, other->last_ecallresult_);
  swap(last_callissue_delta_, other->last_callissue_delta_);
  swap(last_callcomplete_delta_, other->last_callcomplete_delta_);
}

::google::protobuf::Metadata CMsgClientServiceCallResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMUnlockStreaming::InitAsDefaultInstance() {
}
class CMsgAMUnlockStreaming::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMUnlockStreaming::CMsgAMUnlockStreaming()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgAMUnlockStreaming)
}
CMsgAMUnlockStreaming::CMsgAMUnlockStreaming(const CMsgAMUnlockStreaming& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgAMUnlockStreaming)
}

void CMsgAMUnlockStreaming::SharedCtor() {
}

CMsgAMUnlockStreaming::~CMsgAMUnlockStreaming() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgAMUnlockStreaming)
  SharedDtor();
}

void CMsgAMUnlockStreaming::SharedDtor() {
}

void CMsgAMUnlockStreaming::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgAMUnlockStreaming& CMsgAMUnlockStreaming::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgAMUnlockStreaming_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgAMUnlockStreaming::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgAMUnlockStreaming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgAMUnlockStreaming::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgAMUnlockStreaming*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgAMUnlockStreaming::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgAMUnlockStreaming)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgAMUnlockStreaming)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgAMUnlockStreaming)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgAMUnlockStreaming::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgAMUnlockStreaming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgAMUnlockStreaming)
}

::google::protobuf::uint8* CMsgAMUnlockStreaming::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgAMUnlockStreaming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgAMUnlockStreaming)
  return target;
}

size_t CMsgAMUnlockStreaming::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgAMUnlockStreaming)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAMUnlockStreaming::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgAMUnlockStreaming)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMUnlockStreaming* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgAMUnlockStreaming>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgAMUnlockStreaming)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgAMUnlockStreaming)
    MergeFrom(*source);
  }
}

void CMsgAMUnlockStreaming::MergeFrom(const CMsgAMUnlockStreaming& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgAMUnlockStreaming)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgAMUnlockStreaming::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgAMUnlockStreaming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMUnlockStreaming::CopyFrom(const CMsgAMUnlockStreaming& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgAMUnlockStreaming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMUnlockStreaming::IsInitialized() const {
  return true;
}

void CMsgAMUnlockStreaming::Swap(CMsgAMUnlockStreaming* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMUnlockStreaming::InternalSwap(CMsgAMUnlockStreaming* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CMsgAMUnlockStreaming::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMUnlockStreamingResponse::InitAsDefaultInstance() {
}
class CMsgAMUnlockStreamingResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgAMUnlockStreamingResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_encryption_key(CMsgAMUnlockStreamingResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMUnlockStreamingResponse::kEresultFieldNumber;
const int CMsgAMUnlockStreamingResponse::kEncryptionKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMUnlockStreamingResponse::CMsgAMUnlockStreamingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgAMUnlockStreamingResponse)
}
CMsgAMUnlockStreamingResponse::CMsgAMUnlockStreamingResponse(const CMsgAMUnlockStreamingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  encryption_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_encryption_key()) {
    encryption_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encryption_key_);
  }
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgAMUnlockStreamingResponse)
}

void CMsgAMUnlockStreamingResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CMsgAMUnlockStreamingResponse_steammessages_5fclientserver_5f2_2eproto.base);
  encryption_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eresult_ = 2;
}

CMsgAMUnlockStreamingResponse::~CMsgAMUnlockStreamingResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgAMUnlockStreamingResponse)
  SharedDtor();
}

void CMsgAMUnlockStreamingResponse::SharedDtor() {
  encryption_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgAMUnlockStreamingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgAMUnlockStreamingResponse& CMsgAMUnlockStreamingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgAMUnlockStreamingResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgAMUnlockStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgAMUnlockStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      encryption_key_.ClearNonDefaultToEmptyNoArena();
    }
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgAMUnlockStreamingResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgAMUnlockStreamingResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes encryption_key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_encryption_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgAMUnlockStreamingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgAMUnlockStreamingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes encryption_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_encryption_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgAMUnlockStreamingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgAMUnlockStreamingResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgAMUnlockStreamingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgAMUnlockStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional bytes encryption_key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->encryption_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgAMUnlockStreamingResponse)
}

::google::protobuf::uint8* CMsgAMUnlockStreamingResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgAMUnlockStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional bytes encryption_key = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->encryption_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgAMUnlockStreamingResponse)
  return target;
}

size_t CMsgAMUnlockStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgAMUnlockStreamingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes encryption_key = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->encryption_key());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAMUnlockStreamingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgAMUnlockStreamingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMUnlockStreamingResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgAMUnlockStreamingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgAMUnlockStreamingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgAMUnlockStreamingResponse)
    MergeFrom(*source);
  }
}

void CMsgAMUnlockStreamingResponse::MergeFrom(const CMsgAMUnlockStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgAMUnlockStreamingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      encryption_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encryption_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAMUnlockStreamingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgAMUnlockStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMUnlockStreamingResponse::CopyFrom(const CMsgAMUnlockStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgAMUnlockStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMUnlockStreamingResponse::IsInitialized() const {
  return true;
}

void CMsgAMUnlockStreamingResponse::Swap(CMsgAMUnlockStreamingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMUnlockStreamingResponse::InternalSwap(CMsgAMUnlockStreamingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  encryption_key_.Swap(&other->encryption_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgAMUnlockStreamingResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMUnlockHEVC::InitAsDefaultInstance() {
}
class CMsgAMUnlockHEVC::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMUnlockHEVC::CMsgAMUnlockHEVC()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgAMUnlockHEVC)
}
CMsgAMUnlockHEVC::CMsgAMUnlockHEVC(const CMsgAMUnlockHEVC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgAMUnlockHEVC)
}

void CMsgAMUnlockHEVC::SharedCtor() {
}

CMsgAMUnlockHEVC::~CMsgAMUnlockHEVC() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgAMUnlockHEVC)
  SharedDtor();
}

void CMsgAMUnlockHEVC::SharedDtor() {
}

void CMsgAMUnlockHEVC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgAMUnlockHEVC& CMsgAMUnlockHEVC::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgAMUnlockHEVC_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgAMUnlockHEVC::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgAMUnlockHEVC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgAMUnlockHEVC::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgAMUnlockHEVC*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgAMUnlockHEVC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgAMUnlockHEVC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgAMUnlockHEVC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgAMUnlockHEVC)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgAMUnlockHEVC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgAMUnlockHEVC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgAMUnlockHEVC)
}

::google::protobuf::uint8* CMsgAMUnlockHEVC::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgAMUnlockHEVC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgAMUnlockHEVC)
  return target;
}

size_t CMsgAMUnlockHEVC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgAMUnlockHEVC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAMUnlockHEVC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgAMUnlockHEVC)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMUnlockHEVC* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgAMUnlockHEVC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgAMUnlockHEVC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgAMUnlockHEVC)
    MergeFrom(*source);
  }
}

void CMsgAMUnlockHEVC::MergeFrom(const CMsgAMUnlockHEVC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgAMUnlockHEVC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgAMUnlockHEVC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgAMUnlockHEVC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMUnlockHEVC::CopyFrom(const CMsgAMUnlockHEVC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgAMUnlockHEVC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMUnlockHEVC::IsInitialized() const {
  return true;
}

void CMsgAMUnlockHEVC::Swap(CMsgAMUnlockHEVC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMUnlockHEVC::InternalSwap(CMsgAMUnlockHEVC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CMsgAMUnlockHEVC::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMUnlockHEVCResponse::InitAsDefaultInstance() {
}
class CMsgAMUnlockHEVCResponse::HasBitSetters {
 public:
  static void set_has_eresult(CMsgAMUnlockHEVCResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMUnlockHEVCResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMUnlockHEVCResponse::CMsgAMUnlockHEVCResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgAMUnlockHEVCResponse)
}
CMsgAMUnlockHEVCResponse::CMsgAMUnlockHEVCResponse(const CMsgAMUnlockHEVCResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgAMUnlockHEVCResponse)
}

void CMsgAMUnlockHEVCResponse::SharedCtor() {
  eresult_ = 2;
}

CMsgAMUnlockHEVCResponse::~CMsgAMUnlockHEVCResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgAMUnlockHEVCResponse)
  SharedDtor();
}

void CMsgAMUnlockHEVCResponse::SharedDtor() {
}

void CMsgAMUnlockHEVCResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgAMUnlockHEVCResponse& CMsgAMUnlockHEVCResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgAMUnlockHEVCResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgAMUnlockHEVCResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgAMUnlockHEVCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgAMUnlockHEVCResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgAMUnlockHEVCResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgAMUnlockHEVCResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgAMUnlockHEVCResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgAMUnlockHEVCResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgAMUnlockHEVCResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgAMUnlockHEVCResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgAMUnlockHEVCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgAMUnlockHEVCResponse)
}

::google::protobuf::uint8* CMsgAMUnlockHEVCResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgAMUnlockHEVCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgAMUnlockHEVCResponse)
  return target;
}

size_t CMsgAMUnlockHEVCResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgAMUnlockHEVCResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 eresult = 1 [default = 2];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAMUnlockHEVCResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgAMUnlockHEVCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMUnlockHEVCResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgAMUnlockHEVCResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgAMUnlockHEVCResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgAMUnlockHEVCResponse)
    MergeFrom(*source);
  }
}

void CMsgAMUnlockHEVCResponse::MergeFrom(const CMsgAMUnlockHEVCResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgAMUnlockHEVCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgAMUnlockHEVCResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgAMUnlockHEVCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMUnlockHEVCResponse::CopyFrom(const CMsgAMUnlockHEVCResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgAMUnlockHEVCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMUnlockHEVCResponse::IsInitialized() const {
  return true;
}

void CMsgAMUnlockHEVCResponse::Swap(CMsgAMUnlockHEVCResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMUnlockHEVCResponse::InternalSwap(CMsgAMUnlockHEVCResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgAMUnlockHEVCResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientPlayingSessionState::InitAsDefaultInstance() {
}
class CMsgClientPlayingSessionState::HasBitSetters {
 public:
  static void set_has_playing_blocked(CMsgClientPlayingSessionState* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_playing_app(CMsgClientPlayingSessionState* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPlayingSessionState::kPlayingBlockedFieldNumber;
const int CMsgClientPlayingSessionState::kPlayingAppFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPlayingSessionState::CMsgClientPlayingSessionState()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientPlayingSessionState)
}
CMsgClientPlayingSessionState::CMsgClientPlayingSessionState(const CMsgClientPlayingSessionState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playing_blocked_, &from.playing_blocked_,
    static_cast<size_t>(reinterpret_cast<char*>(&playing_app_) -
    reinterpret_cast<char*>(&playing_blocked_)) + sizeof(playing_app_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientPlayingSessionState)
}

void CMsgClientPlayingSessionState::SharedCtor() {
  ::memset(&playing_blocked_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playing_app_) -
      reinterpret_cast<char*>(&playing_blocked_)) + sizeof(playing_app_));
}

CMsgClientPlayingSessionState::~CMsgClientPlayingSessionState() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientPlayingSessionState)
  SharedDtor();
}

void CMsgClientPlayingSessionState::SharedDtor() {
}

void CMsgClientPlayingSessionState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientPlayingSessionState& CMsgClientPlayingSessionState::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientPlayingSessionState_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientPlayingSessionState::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientPlayingSessionState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&playing_blocked_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&playing_app_) -
        reinterpret_cast<char*>(&playing_blocked_)) + sizeof(playing_app_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientPlayingSessionState::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientPlayingSessionState*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool playing_blocked = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_playing_blocked(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 playing_app = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_playing_app(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientPlayingSessionState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientPlayingSessionState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool playing_blocked = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_playing_blocked(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &playing_blocked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 playing_app = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_playing_app(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playing_app_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientPlayingSessionState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientPlayingSessionState)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientPlayingSessionState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientPlayingSessionState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool playing_blocked = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->playing_blocked(), output);
  }

  // optional uint32 playing_app = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->playing_app(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientPlayingSessionState)
}

::google::protobuf::uint8* CMsgClientPlayingSessionState::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientPlayingSessionState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool playing_blocked = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->playing_blocked(), target);
  }

  // optional uint32 playing_app = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->playing_app(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientPlayingSessionState)
  return target;
}

size_t CMsgClientPlayingSessionState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientPlayingSessionState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool playing_blocked = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional uint32 playing_app = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->playing_app());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientPlayingSessionState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientPlayingSessionState)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPlayingSessionState* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientPlayingSessionState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientPlayingSessionState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientPlayingSessionState)
    MergeFrom(*source);
  }
}

void CMsgClientPlayingSessionState::MergeFrom(const CMsgClientPlayingSessionState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientPlayingSessionState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      playing_blocked_ = from.playing_blocked_;
    }
    if (cached_has_bits & 0x00000002u) {
      playing_app_ = from.playing_app_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPlayingSessionState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientPlayingSessionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPlayingSessionState::CopyFrom(const CMsgClientPlayingSessionState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientPlayingSessionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPlayingSessionState::IsInitialized() const {
  return true;
}

void CMsgClientPlayingSessionState::Swap(CMsgClientPlayingSessionState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPlayingSessionState::InternalSwap(CMsgClientPlayingSessionState* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(playing_blocked_, other->playing_blocked_);
  swap(playing_app_, other->playing_app_);
}

::google::protobuf::Metadata CMsgClientPlayingSessionState::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientKickPlayingSession::InitAsDefaultInstance() {
}
class CMsgClientKickPlayingSession::HasBitSetters {
 public:
  static void set_has_only_stop_game(CMsgClientKickPlayingSession* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientKickPlayingSession::kOnlyStopGameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientKickPlayingSession::CMsgClientKickPlayingSession()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientKickPlayingSession)
}
CMsgClientKickPlayingSession::CMsgClientKickPlayingSession(const CMsgClientKickPlayingSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  only_stop_game_ = from.only_stop_game_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientKickPlayingSession)
}

void CMsgClientKickPlayingSession::SharedCtor() {
  only_stop_game_ = false;
}

CMsgClientKickPlayingSession::~CMsgClientKickPlayingSession() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientKickPlayingSession)
  SharedDtor();
}

void CMsgClientKickPlayingSession::SharedDtor() {
}

void CMsgClientKickPlayingSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientKickPlayingSession& CMsgClientKickPlayingSession::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientKickPlayingSession_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientKickPlayingSession::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientKickPlayingSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  only_stop_game_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientKickPlayingSession::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientKickPlayingSession*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bool only_stop_game = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_only_stop_game(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientKickPlayingSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientKickPlayingSession)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool only_stop_game = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_only_stop_game(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &only_stop_game_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientKickPlayingSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientKickPlayingSession)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientKickPlayingSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientKickPlayingSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool only_stop_game = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->only_stop_game(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientKickPlayingSession)
}

::google::protobuf::uint8* CMsgClientKickPlayingSession::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientKickPlayingSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool only_stop_game = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->only_stop_game(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientKickPlayingSession)
  return target;
}

size_t CMsgClientKickPlayingSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientKickPlayingSession)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool only_stop_game = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientKickPlayingSession::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientKickPlayingSession)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientKickPlayingSession* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientKickPlayingSession>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientKickPlayingSession)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientKickPlayingSession)
    MergeFrom(*source);
  }
}

void CMsgClientKickPlayingSession::MergeFrom(const CMsgClientKickPlayingSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientKickPlayingSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_only_stop_game()) {
    set_only_stop_game(from.only_stop_game());
  }
}

void CMsgClientKickPlayingSession::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientKickPlayingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientKickPlayingSession::CopyFrom(const CMsgClientKickPlayingSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientKickPlayingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientKickPlayingSession::IsInitialized() const {
  return true;
}

void CMsgClientKickPlayingSession::Swap(CMsgClientKickPlayingSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientKickPlayingSession::InternalSwap(CMsgClientKickPlayingSession* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(only_stop_game_, other->only_stop_game_);
}

::google::protobuf::Metadata CMsgClientKickPlayingSession::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientVoiceCallPreAuthorize::InitAsDefaultInstance() {
}
class CMsgClientVoiceCallPreAuthorize::HasBitSetters {
 public:
  static void set_has_caller_steamid(CMsgClientVoiceCallPreAuthorize* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_receiver_steamid(CMsgClientVoiceCallPreAuthorize* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_caller_id(CMsgClientVoiceCallPreAuthorize* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_hangup(CMsgClientVoiceCallPreAuthorize* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientVoiceCallPreAuthorize::kCallerSteamidFieldNumber;
const int CMsgClientVoiceCallPreAuthorize::kReceiverSteamidFieldNumber;
const int CMsgClientVoiceCallPreAuthorize::kCallerIdFieldNumber;
const int CMsgClientVoiceCallPreAuthorize::kHangupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientVoiceCallPreAuthorize::CMsgClientVoiceCallPreAuthorize()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientVoiceCallPreAuthorize)
}
CMsgClientVoiceCallPreAuthorize::CMsgClientVoiceCallPreAuthorize(const CMsgClientVoiceCallPreAuthorize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&caller_steamid_, &from.caller_steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&hangup_) -
    reinterpret_cast<char*>(&caller_steamid_)) + sizeof(hangup_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientVoiceCallPreAuthorize)
}

void CMsgClientVoiceCallPreAuthorize::SharedCtor() {
  ::memset(&caller_steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hangup_) -
      reinterpret_cast<char*>(&caller_steamid_)) + sizeof(hangup_));
}

CMsgClientVoiceCallPreAuthorize::~CMsgClientVoiceCallPreAuthorize() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientVoiceCallPreAuthorize)
  SharedDtor();
}

void CMsgClientVoiceCallPreAuthorize::SharedDtor() {
}

void CMsgClientVoiceCallPreAuthorize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientVoiceCallPreAuthorize& CMsgClientVoiceCallPreAuthorize::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientVoiceCallPreAuthorize_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientVoiceCallPreAuthorize::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&caller_steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hangup_) -
        reinterpret_cast<char*>(&caller_steamid_)) + sizeof(hangup_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientVoiceCallPreAuthorize::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientVoiceCallPreAuthorize*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 caller_steamid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_caller_steamid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional fixed64 receiver_steamid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_receiver_steamid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional int32 caller_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_caller_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool hangup = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_hangup(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientVoiceCallPreAuthorize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 caller_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_caller_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &caller_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 receiver_steamid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {
          HasBitSetters::set_has_receiver_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &receiver_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 caller_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_caller_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caller_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool hangup = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_hangup(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hangup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientVoiceCallPreAuthorize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientVoiceCallPreAuthorize)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientVoiceCallPreAuthorize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 caller_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->caller_steamid(), output);
  }

  // optional fixed64 receiver_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->receiver_steamid(), output);
  }

  // optional int32 caller_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->caller_id(), output);
  }

  // optional bool hangup = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->hangup(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientVoiceCallPreAuthorize)
}

::google::protobuf::uint8* CMsgClientVoiceCallPreAuthorize::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 caller_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->caller_steamid(), target);
  }

  // optional fixed64 receiver_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->receiver_steamid(), target);
  }

  // optional int32 caller_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->caller_id(), target);
  }

  // optional bool hangup = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->hangup(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientVoiceCallPreAuthorize)
  return target;
}

size_t CMsgClientVoiceCallPreAuthorize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional fixed64 caller_steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional fixed64 receiver_steamid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional int32 caller_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caller_id());
    }

    // optional bool hangup = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientVoiceCallPreAuthorize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientVoiceCallPreAuthorize* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientVoiceCallPreAuthorize>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientVoiceCallPreAuthorize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientVoiceCallPreAuthorize)
    MergeFrom(*source);
  }
}

void CMsgClientVoiceCallPreAuthorize::MergeFrom(const CMsgClientVoiceCallPreAuthorize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      caller_steamid_ = from.caller_steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      receiver_steamid_ = from.receiver_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      caller_id_ = from.caller_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      hangup_ = from.hangup_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientVoiceCallPreAuthorize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientVoiceCallPreAuthorize::CopyFrom(const CMsgClientVoiceCallPreAuthorize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientVoiceCallPreAuthorize::IsInitialized() const {
  return true;
}

void CMsgClientVoiceCallPreAuthorize::Swap(CMsgClientVoiceCallPreAuthorize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientVoiceCallPreAuthorize::InternalSwap(CMsgClientVoiceCallPreAuthorize* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(caller_steamid_, other->caller_steamid_);
  swap(receiver_steamid_, other->receiver_steamid_);
  swap(caller_id_, other->caller_id_);
  swap(hangup_, other->hangup_);
}

::google::protobuf::Metadata CMsgClientVoiceCallPreAuthorize::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CMsgClientVoiceCallPreAuthorizeResponse::InitAsDefaultInstance() {
}
class CMsgClientVoiceCallPreAuthorizeResponse::HasBitSetters {
 public:
  static void set_has_caller_steamid(CMsgClientVoiceCallPreAuthorizeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_receiver_steamid(CMsgClientVoiceCallPreAuthorizeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_eresult(CMsgClientVoiceCallPreAuthorizeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_caller_id(CMsgClientVoiceCallPreAuthorizeResponse* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientVoiceCallPreAuthorizeResponse::kCallerSteamidFieldNumber;
const int CMsgClientVoiceCallPreAuthorizeResponse::kReceiverSteamidFieldNumber;
const int CMsgClientVoiceCallPreAuthorizeResponse::kEresultFieldNumber;
const int CMsgClientVoiceCallPreAuthorizeResponse::kCallerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientVoiceCallPreAuthorizeResponse::CMsgClientVoiceCallPreAuthorizeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
}
CMsgClientVoiceCallPreAuthorizeResponse::CMsgClientVoiceCallPreAuthorizeResponse(const CMsgClientVoiceCallPreAuthorizeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&caller_steamid_, &from.caller_steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&caller_steamid_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
}

void CMsgClientVoiceCallPreAuthorizeResponse::SharedCtor() {
  ::memset(&caller_steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&caller_id_) -
      reinterpret_cast<char*>(&caller_steamid_)) + sizeof(caller_id_));
  eresult_ = 2;
}

CMsgClientVoiceCallPreAuthorizeResponse::~CMsgClientVoiceCallPreAuthorizeResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  SharedDtor();
}

void CMsgClientVoiceCallPreAuthorizeResponse::SharedDtor() {
}

void CMsgClientVoiceCallPreAuthorizeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CMsgClientVoiceCallPreAuthorizeResponse& CMsgClientVoiceCallPreAuthorizeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CMsgClientVoiceCallPreAuthorizeResponse_steammessages_5fclientserver_5f2_2eproto.base);
  return *internal_default_instance();
}


void CMsgClientVoiceCallPreAuthorizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&caller_steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&caller_id_) -
        reinterpret_cast<char*>(&caller_steamid_)) + sizeof(caller_id_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CMsgClientVoiceCallPreAuthorizeResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CMsgClientVoiceCallPreAuthorizeResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 caller_steamid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_caller_steamid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional fixed64 receiver_steamid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_receiver_steamid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional int32 eresult = 3 [default = 2];
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_eresult(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional int32 caller_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_caller_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CMsgClientVoiceCallPreAuthorizeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 caller_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_caller_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &caller_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 receiver_steamid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {
          HasBitSetters::set_has_receiver_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &receiver_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eresult = 3 [default = 2];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_eresult(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 caller_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_caller_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caller_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CMsgClientVoiceCallPreAuthorizeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 caller_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->caller_steamid(), output);
  }

  // optional fixed64 receiver_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->receiver_steamid(), output);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->eresult(), output);
  }

  // optional int32 caller_id = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caller_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
}

::google::protobuf::uint8* CMsgClientVoiceCallPreAuthorizeResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 caller_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->caller_steamid(), target);
  }

  // optional fixed64 receiver_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->receiver_steamid(), target);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->eresult(), target);
  }

  // optional int32 caller_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caller_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  return target;
}

size_t CMsgClientVoiceCallPreAuthorizeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional fixed64 caller_steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional fixed64 receiver_steamid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional int32 caller_id = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caller_id());
    }

    // optional int32 eresult = 3 [default = 2];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientVoiceCallPreAuthorizeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientVoiceCallPreAuthorizeResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CMsgClientVoiceCallPreAuthorizeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
    MergeFrom(*source);
  }
}

void CMsgClientVoiceCallPreAuthorizeResponse::MergeFrom(const CMsgClientVoiceCallPreAuthorizeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      caller_steamid_ = from.caller_steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      receiver_steamid_ = from.receiver_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      caller_id_ = from.caller_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientVoiceCallPreAuthorizeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientVoiceCallPreAuthorizeResponse::CopyFrom(const CMsgClientVoiceCallPreAuthorizeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientVoiceCallPreAuthorizeResponse::IsInitialized() const {
  return true;
}

void CMsgClientVoiceCallPreAuthorizeResponse::Swap(CMsgClientVoiceCallPreAuthorizeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientVoiceCallPreAuthorizeResponse::InternalSwap(CMsgClientVoiceCallPreAuthorizeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(caller_steamid_, other->caller_steamid_);
  swap(receiver_steamid_, other->receiver_steamid_);
  swap(caller_id_, other->caller_id_);
  swap(eresult_, other->eresult_);
}

::google::protobuf::Metadata CMsgClientVoiceCallPreAuthorizeResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fclientserver_5f2_2eproto);
  return ::file_level_metadata_steammessages_5fclientserver_5f2_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace steam
}  // namespace proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMAddScreenshot_Tag* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMAddScreenshot_Tag >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMAddScreenshot_Tag >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMAddScreenshot* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMAddScreenshot >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMAddScreenshot >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMAddScreenshotResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMAddScreenshotResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMAddScreenshotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMDeleteScreenshot* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMDeleteScreenshot >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMDeleteScreenshot >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMDeleteScreenshotResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMDeleteScreenshotResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMDeleteScreenshotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMPublishFile* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMPublishFile >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMPublishFile >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMPublishFileResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMPublishFileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMPublishFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMUpdatePublishedFile* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMUpdatePublishedFile >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMUpdatePublishedFile >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMUpdatePublishedFileResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMUpdatePublishedFileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMUpdatePublishedFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMDeletePublishedFile* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMDeletePublishedFile >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMDeletePublishedFile >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMDeletePublishedFileResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMDeletePublishedFileResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMDeletePublishedFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMEnumerateUserPublishedFiles* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMEnumerateUserPublishedFiles >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMEnumerateUserPublishedFiles >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFiles* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFiles >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFiles >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMPublishedFileSubscribed* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMPublishedFileSubscribed >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMPublishedFileSubscribed >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMPublishedFileUnsubscribed* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMPublishedFileUnsubscribed >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMPublishedFileUnsubscribed >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMPublishedFileDeleted* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMPublishedFileDeleted >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMPublishedFileDeleted >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMPublishedFileUpdated* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMPublishedFileUpdated >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMPublishedFileUpdated >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientWorkshopItemChangesRequest* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientWorkshopItemChangesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientWorkshopItemChangesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientWorkshopItemChangesResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientWorkshopItemChangesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientWorkshopItemChangesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientWorkshopItemInfoRequest* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientWorkshopItemInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientWorkshopItemInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientWorkshopItemInfoResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientWorkshopItemInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientWorkshopItemInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMGetPublishedFilesForUser* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMGetPublishedFilesForUser >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMGetPublishedFilesForUser >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMSetUserPublishedFileAction* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMSetUserPublishedFileAction >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMSetUserPublishedFileAction >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMSetUserPublishedFileActionResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMSetUserPublishedFileActionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMSetUserPublishedFileActionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserAction* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserAction >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserAction >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientScreenshotsChanged* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientScreenshotsChanged >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientScreenshotsChanged >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUpdateUserGameInfo* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUpdateUserGameInfo >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUpdateUserGameInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRichPresenceUpload* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRichPresenceUpload >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRichPresenceUpload >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRichPresenceRequest* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRichPresenceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRichPresenceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRichPresenceInfo_RichPresence* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRichPresenceInfo_RichPresence >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRichPresenceInfo_RichPresence >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRichPresenceInfo* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRichPresenceInfo >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRichPresenceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientCheckFileSignature* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientCheckFileSignature >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientCheckFileSignature >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientCheckFileSignatureResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientCheckFileSignatureResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientCheckFileSignatureResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientReadMachineAuth* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientReadMachineAuth >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientReadMachineAuth >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientReadMachineAuthResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientReadMachineAuthResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientReadMachineAuthResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUpdateMachineAuth* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUpdateMachineAuth >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUpdateMachineAuth >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUpdateMachineAuthResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUpdateMachineAuthResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUpdateMachineAuthResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRequestMachineAuth* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRequestMachineAuth >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRequestMachineAuth >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRequestMachineAuthResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRequestMachineAuthResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRequestMachineAuthResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRegisterKey* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRegisterKey >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRegisterKey >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientPurchaseResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientPurchaseResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientPurchaseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientActivateOEMLicense* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientActivateOEMLicense >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientActivateOEMLicense >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRegisterOEMMachine* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRegisterOEMMachine >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRegisterOEMMachine >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRegisterOEMMachineResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRegisterOEMMachineResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRegisterOEMMachineResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientPurchaseWithMachineID* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientPurchaseWithMachineID >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientPurchaseWithMachineID >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgTrading_InitiateTradeRequest* Arena::CreateMaybeMessage< ::proto::steam::CMsgTrading_InitiateTradeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgTrading_InitiateTradeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgTrading_InitiateTradeResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgTrading_InitiateTradeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgTrading_InitiateTradeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgTrading_CancelTradeRequest* Arena::CreateMaybeMessage< ::proto::steam::CMsgTrading_CancelTradeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgTrading_CancelTradeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgTrading_StartSession* Arena::CreateMaybeMessage< ::proto::steam::CMsgTrading_StartSession >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgTrading_StartSession >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientGetCDNAuthToken* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientGetCDNAuthToken >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientGetCDNAuthToken >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientGetDepotDecryptionKey* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientGetDepotDecryptionKey >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientGetDepotDecryptionKey >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientGetDepotDecryptionKeyResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientGetDepotDecryptionKeyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientGetDepotDecryptionKeyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientCheckAppBetaPassword* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientCheckAppBetaPassword >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientCheckAppBetaPassword >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientCheckAppBetaPasswordResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientCheckAppBetaPasswordResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientCheckAppBetaPasswordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUpdateAppJobReport* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUpdateAppJobReport >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUpdateAppJobReport >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientDPContentStatsReport* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientDPContentStatsReport >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientDPContentStatsReport >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientGetCDNAuthTokenResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientGetCDNAuthTokenResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientGetCDNAuthTokenResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgDownloadRateStatistics_StatsInfo* Arena::CreateMaybeMessage< ::proto::steam::CMsgDownloadRateStatistics_StatsInfo >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgDownloadRateStatistics_StatsInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgDownloadRateStatistics* Arena::CreateMaybeMessage< ::proto::steam::CMsgDownloadRateStatistics >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgDownloadRateStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRequestAccountData* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRequestAccountData >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRequestAccountData >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRequestAccountDataResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRequestAccountDataResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRequestAccountDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUGSGetGlobalStats* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUGSGetGlobalStats >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUGSGetGlobalStats >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUGSGetGlobalStatsResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUGSGetGlobalStatsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUGSGetGlobalStatsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgGameServerData_Player* Arena::CreateMaybeMessage< ::proto::steam::CMsgGameServerData_Player >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgGameServerData_Player >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgGameServerData* Arena::CreateMaybeMessage< ::proto::steam::CMsgGameServerData >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgGameServerData >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgGameServerRemove* Arena::CreateMaybeMessage< ::proto::steam::CMsgGameServerRemove >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgGameServerRemove >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientGMSServerQuery* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientGMSServerQuery >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientGMSServerQuery >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgGMSClientServerQueryResponse_Server* Arena::CreateMaybeMessage< ::proto::steam::CMsgGMSClientServerQueryResponse_Server >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgGMSClientServerQueryResponse_Server >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgGMSClientServerQueryResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgGMSClientServerQueryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgGMSClientServerQueryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgGameServerOutOfDate* Arena::CreateMaybeMessage< ::proto::steam::CMsgGameServerOutOfDate >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgGameServerOutOfDate >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRedeemGuestPass* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRedeemGuestPass >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRedeemGuestPass >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRedeemGuestPassResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRedeemGuestPassResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRedeemGuestPassResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientGetClanActivityCounts* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientGetClanActivityCounts >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientGetClanActivityCounts >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientGetClanActivityCountsResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientGetClanActivityCountsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientGetClanActivityCountsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientOGSReportString* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientOGSReportString >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientOGSReportString >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientOGSReportBug* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientOGSReportBug >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientOGSReportBug >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgGSAssociateWithClan* Arena::CreateMaybeMessage< ::proto::steam::CMsgGSAssociateWithClan >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgGSAssociateWithClan >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgGSAssociateWithClanResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgGSAssociateWithClanResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgGSAssociateWithClanResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgGSComputeNewPlayerCompatibility* Arena::CreateMaybeMessage< ::proto::steam::CMsgGSComputeNewPlayerCompatibility >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgGSComputeNewPlayerCompatibility >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgGSComputeNewPlayerCompatibilityResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgGSComputeNewPlayerCompatibilityResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgGSComputeNewPlayerCompatibilityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientSentLogs* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientSentLogs >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientSentLogs >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgGCClient* Arena::CreateMaybeMessage< ::proto::steam::CMsgGCClient >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgGCClient >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRequestFreeLicense* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRequestFreeLicense >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRequestFreeLicense >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRequestFreeLicenseResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRequestFreeLicenseResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRequestFreeLicenseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgDRMDownloadRequestWithCrashData* Arena::CreateMaybeMessage< ::proto::steam::CMsgDRMDownloadRequestWithCrashData >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgDRMDownloadRequestWithCrashData >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgDRMDownloadResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgDRMDownloadResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgDRMDownloadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgDRMFinalResult* Arena::CreateMaybeMessage< ::proto::steam::CMsgDRMFinalResult >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgDRMFinalResult >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientDPCheckSpecialSurvey* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientDPCheckSpecialSurvey >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientDPCheckSpecialSurvey >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientDPCheckSpecialSurveyResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientDPCheckSpecialSurveyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientDPCheckSpecialSurveyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientDPSendSpecialSurveyResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientDPSendSpecialSurveyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientDPSendSpecialSurveyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientDPSendSpecialSurveyResponseReply* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientDPSendSpecialSurveyResponseReply >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientDPSendSpecialSurveyResponseReply >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRequestForgottenPasswordEmail* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRequestForgottenPasswordEmail >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRequestForgottenPasswordEmail >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRequestForgottenPasswordEmailResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRequestForgottenPasswordEmailResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRequestForgottenPasswordEmailResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientItemAnnouncements* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientItemAnnouncements >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientItemAnnouncements >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRequestItemAnnouncements* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRequestItemAnnouncements >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRequestItemAnnouncements >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUserNotifications_Notification* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUserNotifications_Notification >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUserNotifications_Notification >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUserNotifications* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUserNotifications >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUserNotifications >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientCommentNotifications* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientCommentNotifications >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientCommentNotifications >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRequestCommentNotifications* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRequestCommentNotifications >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRequestCommentNotifications >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientOfflineMessageNotification* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientOfflineMessageNotification >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientOfflineMessageNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientRequestOfflineMessageCount* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientRequestOfflineMessageCount >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientRequestOfflineMessageCount >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientChatGetFriendMessageHistory* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientChatGetFriendMessageHistory >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientChatGetFriendMessageHistory >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientChatGetFriendMessageHistoryForOfflineMessages* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientChatGetFriendMessageHistoryForOfflineMessages >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientChatGetFriendMessageHistoryForOfflineMessages >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientFSGetFriendsSteamLevels* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientFSGetFriendsSteamLevels >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientFSGetFriendsSteamLevels >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientEmailAddrInfo* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientEmailAddrInfo >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientEmailAddrInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgCREEnumeratePublishedFiles* Arena::CreateMaybeMessage< ::proto::steam::CMsgCREEnumeratePublishedFiles >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgCREEnumeratePublishedFiles >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* Arena::CreateMaybeMessage< ::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgCREEnumeratePublishedFilesResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgCREEnumeratePublishedFilesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgCREEnumeratePublishedFilesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgCREItemVoteSummary_PublishedFileId* Arena::CreateMaybeMessage< ::proto::steam::CMsgCREItemVoteSummary_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgCREItemVoteSummary_PublishedFileId >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgCREItemVoteSummary* Arena::CreateMaybeMessage< ::proto::steam::CMsgCREItemVoteSummary >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgCREItemVoteSummary >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary* Arena::CreateMaybeMessage< ::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgCREItemVoteSummaryResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgCREItemVoteSummaryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgCREItemVoteSummaryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgCREUpdateUserPublishedItemVote* Arena::CreateMaybeMessage< ::proto::steam::CMsgCREUpdateUserPublishedItemVote >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgCREUpdateUserPublishedItemVote >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgCREUpdateUserPublishedItemVoteResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgCREUpdateUserPublishedItemVoteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgCREUpdateUserPublishedItemVoteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* Arena::CreateMaybeMessage< ::proto::steam::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgCREGetUserPublishedItemVoteDetails* Arena::CreateMaybeMessage< ::proto::steam::CMsgCREGetUserPublishedItemVoteDetails >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgCREGetUserPublishedItemVoteDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* Arena::CreateMaybeMessage< ::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgGameServerPingSample_Sample* Arena::CreateMaybeMessage< ::proto::steam::CMsgGameServerPingSample_Sample >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgGameServerPingSample_Sample >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgGameServerPingSample* Arena::CreateMaybeMessage< ::proto::steam::CMsgGameServerPingSample >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgGameServerPingSample >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgFSGetFollowerCount* Arena::CreateMaybeMessage< ::proto::steam::CMsgFSGetFollowerCount >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgFSGetFollowerCount >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgFSGetFollowerCountResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgFSGetFollowerCountResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgFSGetFollowerCountResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgFSGetIsFollowing* Arena::CreateMaybeMessage< ::proto::steam::CMsgFSGetIsFollowing >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgFSGetIsFollowing >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgFSGetIsFollowingResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgFSGetIsFollowingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgFSGetIsFollowingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgFSEnumerateFollowingList* Arena::CreateMaybeMessage< ::proto::steam::CMsgFSEnumerateFollowingList >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgFSEnumerateFollowingList >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgFSEnumerateFollowingListResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgFSEnumerateFollowingListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgFSEnumerateFollowingListResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgDPGetNumberOfCurrentPlayers* Arena::CreateMaybeMessage< ::proto::steam::CMsgDPGetNumberOfCurrentPlayers >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgDPGetNumberOfCurrentPlayers >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgDPGetNumberOfCurrentPlayersResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgDPGetNumberOfCurrentPlayersResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgDPGetNumberOfCurrentPlayersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientFriendUserStatusPublished* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientFriendUserStatusPublished >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientFriendUserStatusPublished >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientServiceMethod* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientServiceMethod >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientServiceMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientServiceMethodResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientServiceMethodResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientServiceMethodResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUIMode* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUIMode >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUIMode >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientVanityURLChangedNotification* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientVanityURLChangedNotification >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientVanityURLChangedNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientAuthorizeLocalDeviceRequest* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientAuthorizeLocalDeviceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientAuthorizeLocalDeviceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientAuthorizeLocalDevice* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientAuthorizeLocalDevice >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientAuthorizeLocalDevice >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientAuthorizeLocalDeviceNotification* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientAuthorizeLocalDeviceNotification >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientAuthorizeLocalDeviceNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientDeauthorizeDeviceRequest* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientDeauthorizeDeviceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientDeauthorizeDeviceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientDeauthorizeDevice* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientDeauthorizeDevice >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientDeauthorizeDevice >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientUseLocalDeviceAuthorizations* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientUseLocalDeviceAuthorizations >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientUseLocalDeviceAuthorizations >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientGetAuthorizedDevices* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientGetAuthorizedDevices >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientGetAuthorizedDevices >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientGetAuthorizedDevicesResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientGetAuthorizedDevicesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientGetAuthorizedDevicesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientSharedLibraryLockStatus* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientSharedLibraryLockStatus >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientSharedLibraryLockStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientSharedLibraryStopPlaying* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientSharedLibraryStopPlaying >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientSharedLibraryStopPlaying >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientServiceCall* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientServiceCall >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientServiceCall >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientServiceModule* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientServiceModule >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientServiceModule >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientServiceCallResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientServiceCallResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientServiceCallResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgAMUnlockStreaming* Arena::CreateMaybeMessage< ::proto::steam::CMsgAMUnlockStreaming >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgAMUnlockStreaming >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgAMUnlockStreamingResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgAMUnlockStreamingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgAMUnlockStreamingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgAMUnlockHEVC* Arena::CreateMaybeMessage< ::proto::steam::CMsgAMUnlockHEVC >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgAMUnlockHEVC >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgAMUnlockHEVCResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgAMUnlockHEVCResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgAMUnlockHEVCResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientPlayingSessionState* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientPlayingSessionState >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientPlayingSessionState >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientKickPlayingSession* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientKickPlayingSession >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientKickPlayingSession >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientVoiceCallPreAuthorize* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientVoiceCallPreAuthorize >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientVoiceCallPreAuthorize >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CMsgClientVoiceCallPreAuthorizeResponse* Arena::CreateMaybeMessage< ::proto::steam::CMsgClientVoiceCallPreAuthorizeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CMsgClientVoiceCallPreAuthorizeResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
