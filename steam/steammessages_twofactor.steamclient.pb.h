// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_twofactor.steamclient.proto

#ifndef PROTOBUF_INCLUDED_steammessages_5ftwofactor_2esteamclient_2eproto
#define PROTOBUF_INCLUDED_steammessages_5ftwofactor_2esteamclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5ftwofactor_2esteamclient_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[16]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_steammessages_5ftwofactor_2esteamclient_2eproto();
namespace proto {
namespace steam {
class CTwoFactor_AddAuthenticator_Request;
class CTwoFactor_AddAuthenticator_RequestDefaultTypeInternal;
extern CTwoFactor_AddAuthenticator_RequestDefaultTypeInternal _CTwoFactor_AddAuthenticator_Request_default_instance_;
class CTwoFactor_AddAuthenticator_Response;
class CTwoFactor_AddAuthenticator_ResponseDefaultTypeInternal;
extern CTwoFactor_AddAuthenticator_ResponseDefaultTypeInternal _CTwoFactor_AddAuthenticator_Response_default_instance_;
class CTwoFactor_CreateEmergencyCodes_Request;
class CTwoFactor_CreateEmergencyCodes_RequestDefaultTypeInternal;
extern CTwoFactor_CreateEmergencyCodes_RequestDefaultTypeInternal _CTwoFactor_CreateEmergencyCodes_Request_default_instance_;
class CTwoFactor_CreateEmergencyCodes_Response;
class CTwoFactor_CreateEmergencyCodes_ResponseDefaultTypeInternal;
extern CTwoFactor_CreateEmergencyCodes_ResponseDefaultTypeInternal _CTwoFactor_CreateEmergencyCodes_Response_default_instance_;
class CTwoFactor_DestroyEmergencyCodes_Request;
class CTwoFactor_DestroyEmergencyCodes_RequestDefaultTypeInternal;
extern CTwoFactor_DestroyEmergencyCodes_RequestDefaultTypeInternal _CTwoFactor_DestroyEmergencyCodes_Request_default_instance_;
class CTwoFactor_DestroyEmergencyCodes_Response;
class CTwoFactor_DestroyEmergencyCodes_ResponseDefaultTypeInternal;
extern CTwoFactor_DestroyEmergencyCodes_ResponseDefaultTypeInternal _CTwoFactor_DestroyEmergencyCodes_Response_default_instance_;
class CTwoFactor_FinalizeAddAuthenticator_Request;
class CTwoFactor_FinalizeAddAuthenticator_RequestDefaultTypeInternal;
extern CTwoFactor_FinalizeAddAuthenticator_RequestDefaultTypeInternal _CTwoFactor_FinalizeAddAuthenticator_Request_default_instance_;
class CTwoFactor_FinalizeAddAuthenticator_Response;
class CTwoFactor_FinalizeAddAuthenticator_ResponseDefaultTypeInternal;
extern CTwoFactor_FinalizeAddAuthenticator_ResponseDefaultTypeInternal _CTwoFactor_FinalizeAddAuthenticator_Response_default_instance_;
class CTwoFactor_RemoveAuthenticator_Request;
class CTwoFactor_RemoveAuthenticator_RequestDefaultTypeInternal;
extern CTwoFactor_RemoveAuthenticator_RequestDefaultTypeInternal _CTwoFactor_RemoveAuthenticator_Request_default_instance_;
class CTwoFactor_RemoveAuthenticator_Response;
class CTwoFactor_RemoveAuthenticator_ResponseDefaultTypeInternal;
extern CTwoFactor_RemoveAuthenticator_ResponseDefaultTypeInternal _CTwoFactor_RemoveAuthenticator_Response_default_instance_;
class CTwoFactor_SendEmail_Request;
class CTwoFactor_SendEmail_RequestDefaultTypeInternal;
extern CTwoFactor_SendEmail_RequestDefaultTypeInternal _CTwoFactor_SendEmail_Request_default_instance_;
class CTwoFactor_SendEmail_Response;
class CTwoFactor_SendEmail_ResponseDefaultTypeInternal;
extern CTwoFactor_SendEmail_ResponseDefaultTypeInternal _CTwoFactor_SendEmail_Response_default_instance_;
class CTwoFactor_Status_Request;
class CTwoFactor_Status_RequestDefaultTypeInternal;
extern CTwoFactor_Status_RequestDefaultTypeInternal _CTwoFactor_Status_Request_default_instance_;
class CTwoFactor_Status_Response;
class CTwoFactor_Status_ResponseDefaultTypeInternal;
extern CTwoFactor_Status_ResponseDefaultTypeInternal _CTwoFactor_Status_Response_default_instance_;
class CTwoFactor_ValidateToken_Request;
class CTwoFactor_ValidateToken_RequestDefaultTypeInternal;
extern CTwoFactor_ValidateToken_RequestDefaultTypeInternal _CTwoFactor_ValidateToken_Request_default_instance_;
class CTwoFactor_ValidateToken_Response;
class CTwoFactor_ValidateToken_ResponseDefaultTypeInternal;
extern CTwoFactor_ValidateToken_ResponseDefaultTypeInternal _CTwoFactor_ValidateToken_Response_default_instance_;
}  // namespace steam
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::steam::CTwoFactor_AddAuthenticator_Request* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_AddAuthenticator_Request>(Arena*);
template<> ::proto::steam::CTwoFactor_AddAuthenticator_Response* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_AddAuthenticator_Response>(Arena*);
template<> ::proto::steam::CTwoFactor_CreateEmergencyCodes_Request* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_CreateEmergencyCodes_Request>(Arena*);
template<> ::proto::steam::CTwoFactor_CreateEmergencyCodes_Response* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_CreateEmergencyCodes_Response>(Arena*);
template<> ::proto::steam::CTwoFactor_DestroyEmergencyCodes_Request* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_DestroyEmergencyCodes_Request>(Arena*);
template<> ::proto::steam::CTwoFactor_DestroyEmergencyCodes_Response* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_DestroyEmergencyCodes_Response>(Arena*);
template<> ::proto::steam::CTwoFactor_FinalizeAddAuthenticator_Request* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_FinalizeAddAuthenticator_Request>(Arena*);
template<> ::proto::steam::CTwoFactor_FinalizeAddAuthenticator_Response* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_FinalizeAddAuthenticator_Response>(Arena*);
template<> ::proto::steam::CTwoFactor_RemoveAuthenticator_Request* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_RemoveAuthenticator_Request>(Arena*);
template<> ::proto::steam::CTwoFactor_RemoveAuthenticator_Response* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_RemoveAuthenticator_Response>(Arena*);
template<> ::proto::steam::CTwoFactor_SendEmail_Request* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_SendEmail_Request>(Arena*);
template<> ::proto::steam::CTwoFactor_SendEmail_Response* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_SendEmail_Response>(Arena*);
template<> ::proto::steam::CTwoFactor_Status_Request* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_Status_Request>(Arena*);
template<> ::proto::steam::CTwoFactor_Status_Response* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_Status_Response>(Arena*);
template<> ::proto::steam::CTwoFactor_ValidateToken_Request* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_ValidateToken_Request>(Arena*);
template<> ::proto::steam::CTwoFactor_ValidateToken_Response* Arena::CreateMaybeMessage<::proto::steam::CTwoFactor_ValidateToken_Response>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace steam {

// ===================================================================

class CTwoFactor_Status_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_Status_Request) */ {
 public:
  CTwoFactor_Status_Request();
  virtual ~CTwoFactor_Status_Request();

  CTwoFactor_Status_Request(const CTwoFactor_Status_Request& from);

  inline CTwoFactor_Status_Request& operator=(const CTwoFactor_Status_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_Status_Request(CTwoFactor_Status_Request&& from) noexcept
    : CTwoFactor_Status_Request() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_Status_Request& operator=(CTwoFactor_Status_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_Status_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_Status_Request* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_Status_Request*>(
               &_CTwoFactor_Status_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CTwoFactor_Status_Request* other);
  friend void swap(CTwoFactor_Status_Request& a, CTwoFactor_Status_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_Status_Request* New() const final {
    return CreateMaybeMessage<CTwoFactor_Status_Request>(nullptr);
  }

  CTwoFactor_Status_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_Status_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_Status_Request& from);
  void MergeFrom(const CTwoFactor_Status_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_Status_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1 [(.proto.steam.description) = "steamid to use"];
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_Status_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CTwoFactor_Status_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_Status_Response) */ {
 public:
  CTwoFactor_Status_Response();
  virtual ~CTwoFactor_Status_Response();

  CTwoFactor_Status_Response(const CTwoFactor_Status_Response& from);

  inline CTwoFactor_Status_Response& operator=(const CTwoFactor_Status_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_Status_Response(CTwoFactor_Status_Response&& from) noexcept
    : CTwoFactor_Status_Response() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_Status_Response& operator=(CTwoFactor_Status_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_Status_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_Status_Response* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_Status_Response*>(
               &_CTwoFactor_Status_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CTwoFactor_Status_Response* other);
  friend void swap(CTwoFactor_Status_Response& a, CTwoFactor_Status_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_Status_Response* New() const final {
    return CreateMaybeMessage<CTwoFactor_Status_Response>(nullptr);
  }

  CTwoFactor_Status_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_Status_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_Status_Response& from);
  void MergeFrom(const CTwoFactor_Status_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_Status_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string token_gid = 6 [(.proto.steam.description) = "String rep of token GID assigned by server"];
  bool has_token_gid() const;
  void clear_token_gid();
  static const int kTokenGidFieldNumber = 6;
  const ::std::string& token_gid() const;
  void set_token_gid(const ::std::string& value);
  #if LANG_CXX11
  void set_token_gid(::std::string&& value);
  #endif
  void set_token_gid(const char* value);
  void set_token_gid(const char* value, size_t size);
  ::std::string* mutable_token_gid();
  ::std::string* release_token_gid();
  void set_allocated_token_gid(::std::string* token_gid);

  // optional string device_identifier = 8 [(.proto.steam.description) = "Authenticator (phone) identifier"];
  bool has_device_identifier() const;
  void clear_device_identifier();
  static const int kDeviceIdentifierFieldNumber = 8;
  const ::std::string& device_identifier() const;
  void set_device_identifier(const ::std::string& value);
  #if LANG_CXX11
  void set_device_identifier(::std::string&& value);
  #endif
  void set_device_identifier(const char* value);
  void set_device_identifier(const char* value, size_t size);
  ::std::string* mutable_device_identifier();
  ::std::string* release_device_identifier();
  void set_allocated_device_identifier(::std::string* device_identifier);

  // optional string classified_agent = 11 [(.proto.steam.description) = "Agent that added the authenticator (e.g., ios / android / other)"];
  bool has_classified_agent() const;
  void clear_classified_agent();
  static const int kClassifiedAgentFieldNumber = 11;
  const ::std::string& classified_agent() const;
  void set_classified_agent(const ::std::string& value);
  #if LANG_CXX11
  void set_classified_agent(::std::string&& value);
  #endif
  void set_classified_agent(const char* value);
  void set_classified_agent(const char* value, size_t size);
  ::std::string* mutable_classified_agent();
  ::std::string* release_classified_agent();
  void set_allocated_classified_agent(::std::string* classified_agent);

  // optional uint32 state = 1 [(.proto.steam.description) = "Authenticator state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // optional uint32 inactivation_reason = 2 [(.proto.steam.description) = "Inactivation reason (if any)"];
  bool has_inactivation_reason() const;
  void clear_inactivation_reason();
  static const int kInactivationReasonFieldNumber = 2;
  ::google::protobuf::uint32 inactivation_reason() const;
  void set_inactivation_reason(::google::protobuf::uint32 value);

  // optional uint32 authenticator_type = 3 [(.proto.steam.description) = "Type of authenticator"];
  bool has_authenticator_type() const;
  void clear_authenticator_type();
  static const int kAuthenticatorTypeFieldNumber = 3;
  ::google::protobuf::uint32 authenticator_type() const;
  void set_authenticator_type(::google::protobuf::uint32 value);

  // optional uint32 steamguard_scheme = 5 [(.proto.steam.description) = "Steam Guard scheme in effect"];
  bool has_steamguard_scheme() const;
  void clear_steamguard_scheme();
  static const int kSteamguardSchemeFieldNumber = 5;
  ::google::protobuf::uint32 steamguard_scheme() const;
  void set_steamguard_scheme(::google::protobuf::uint32 value);

  // optional bool authenticator_allowed = 4 [(.proto.steam.description) = "Account allowed to have an authenticator?"];
  bool has_authenticator_allowed() const;
  void clear_authenticator_allowed();
  static const int kAuthenticatorAllowedFieldNumber = 4;
  bool authenticator_allowed() const;
  void set_authenticator_allowed(bool value);

  // optional bool email_validated = 7 [(.proto.steam.description) = "Account has verified email capability"];
  bool has_email_validated() const;
  void clear_email_validated();
  static const int kEmailValidatedFieldNumber = 7;
  bool email_validated() const;
  void set_email_validated(bool value);

  // optional bool allow_external_authenticator = 12 [(.proto.steam.description) = "Allow a third-party authenticator (in addition to two-factor)"];
  bool has_allow_external_authenticator() const;
  void clear_allow_external_authenticator();
  static const int kAllowExternalAuthenticatorFieldNumber = 12;
  bool allow_external_authenticator() const;
  void set_allow_external_authenticator(bool value);

  // optional uint32 time_created = 9 [(.proto.steam.description) = "When the token was created"];
  bool has_time_created() const;
  void clear_time_created();
  static const int kTimeCreatedFieldNumber = 9;
  ::google::protobuf::uint32 time_created() const;
  void set_time_created(::google::protobuf::uint32 value);

  // optional uint32 revocation_attempts_remaining = 10 [(.proto.steam.description) = "Number of revocation code attempts remaining"];
  bool has_revocation_attempts_remaining() const;
  void clear_revocation_attempts_remaining();
  static const int kRevocationAttemptsRemainingFieldNumber = 10;
  ::google::protobuf::uint32 revocation_attempts_remaining() const;
  void set_revocation_attempts_remaining(::google::protobuf::uint32 value);

  // optional uint32 time_transferred = 13 [(.proto.steam.description) = "When the token was transferred from another device, if applicable"];
  bool has_time_transferred() const;
  void clear_time_transferred();
  static const int kTimeTransferredFieldNumber = 13;
  ::google::protobuf::uint32 time_transferred() const;
  void set_time_transferred(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_Status_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_gid_;
  ::google::protobuf::internal::ArenaStringPtr device_identifier_;
  ::google::protobuf::internal::ArenaStringPtr classified_agent_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 inactivation_reason_;
  ::google::protobuf::uint32 authenticator_type_;
  ::google::protobuf::uint32 steamguard_scheme_;
  bool authenticator_allowed_;
  bool email_validated_;
  bool allow_external_authenticator_;
  ::google::protobuf::uint32 time_created_;
  ::google::protobuf::uint32 revocation_attempts_remaining_;
  ::google::protobuf::uint32 time_transferred_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CTwoFactor_AddAuthenticator_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_AddAuthenticator_Request) */ {
 public:
  CTwoFactor_AddAuthenticator_Request();
  virtual ~CTwoFactor_AddAuthenticator_Request();

  CTwoFactor_AddAuthenticator_Request(const CTwoFactor_AddAuthenticator_Request& from);

  inline CTwoFactor_AddAuthenticator_Request& operator=(const CTwoFactor_AddAuthenticator_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_AddAuthenticator_Request(CTwoFactor_AddAuthenticator_Request&& from) noexcept
    : CTwoFactor_AddAuthenticator_Request() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_AddAuthenticator_Request& operator=(CTwoFactor_AddAuthenticator_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_AddAuthenticator_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_AddAuthenticator_Request* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_AddAuthenticator_Request*>(
               &_CTwoFactor_AddAuthenticator_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CTwoFactor_AddAuthenticator_Request* other);
  friend void swap(CTwoFactor_AddAuthenticator_Request& a, CTwoFactor_AddAuthenticator_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_AddAuthenticator_Request* New() const final {
    return CreateMaybeMessage<CTwoFactor_AddAuthenticator_Request>(nullptr);
  }

  CTwoFactor_AddAuthenticator_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_AddAuthenticator_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_AddAuthenticator_Request& from);
  void MergeFrom(const CTwoFactor_AddAuthenticator_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_AddAuthenticator_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string http_headers = 7 [(.proto.steam.description) = "HTTP headers alternating by K/V"];
  int http_headers_size() const;
  void clear_http_headers();
  static const int kHttpHeadersFieldNumber = 7;
  const ::std::string& http_headers(int index) const;
  ::std::string* mutable_http_headers(int index);
  void set_http_headers(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_http_headers(int index, ::std::string&& value);
  #endif
  void set_http_headers(int index, const char* value);
  void set_http_headers(int index, const char* value, size_t size);
  ::std::string* add_http_headers();
  void add_http_headers(const ::std::string& value);
  #if LANG_CXX11
  void add_http_headers(::std::string&& value);
  #endif
  void add_http_headers(const char* value);
  void add_http_headers(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& http_headers() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_http_headers();

  // optional string device_identifier = 5 [(.proto.steam.description) = "Authenticator identifier"];
  bool has_device_identifier() const;
  void clear_device_identifier();
  static const int kDeviceIdentifierFieldNumber = 5;
  const ::std::string& device_identifier() const;
  void set_device_identifier(const ::std::string& value);
  #if LANG_CXX11
  void set_device_identifier(::std::string&& value);
  #endif
  void set_device_identifier(const char* value);
  void set_device_identifier(const char* value, size_t size);
  ::std::string* mutable_device_identifier();
  ::std::string* release_device_identifier();
  void set_allocated_device_identifier(::std::string* device_identifier);

  // optional string sms_phone_id = 6 [(.proto.steam.description) = "ID of phone to use for SMS verification"];
  bool has_sms_phone_id() const;
  void clear_sms_phone_id();
  static const int kSmsPhoneIdFieldNumber = 6;
  const ::std::string& sms_phone_id() const;
  void set_sms_phone_id(const ::std::string& value);
  #if LANG_CXX11
  void set_sms_phone_id(::std::string&& value);
  #endif
  void set_sms_phone_id(const char* value);
  void set_sms_phone_id(const char* value, size_t size);
  ::std::string* mutable_sms_phone_id();
  ::std::string* release_sms_phone_id();
  void set_allocated_sms_phone_id(::std::string* sms_phone_id);

  // optional fixed64 steamid = 1 [(.proto.steam.description) = "steamid to use"];
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint64 authenticator_time = 2 [(.proto.steam.description) = "Current authenticator time"];
  bool has_authenticator_time() const;
  void clear_authenticator_time();
  static const int kAuthenticatorTimeFieldNumber = 2;
  ::google::protobuf::uint64 authenticator_time() const;
  void set_authenticator_time(::google::protobuf::uint64 value);

  // optional fixed64 serial_number = 3 [(.proto.steam.description) = "locally computed serial (deprecated)"];
  bool has_serial_number() const;
  void clear_serial_number();
  static const int kSerialNumberFieldNumber = 3;
  ::google::protobuf::uint64 serial_number() const;
  void set_serial_number(::google::protobuf::uint64 value);

  // optional uint32 authenticator_type = 4 [(.proto.steam.description) = "Authenticator type"];
  bool has_authenticator_type() const;
  void clear_authenticator_type();
  static const int kAuthenticatorTypeFieldNumber = 4;
  ::google::protobuf::uint32 authenticator_type() const;
  void set_authenticator_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_AddAuthenticator_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> http_headers_;
  ::google::protobuf::internal::ArenaStringPtr device_identifier_;
  ::google::protobuf::internal::ArenaStringPtr sms_phone_id_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 authenticator_time_;
  ::google::protobuf::uint64 serial_number_;
  ::google::protobuf::uint32 authenticator_type_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CTwoFactor_AddAuthenticator_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_AddAuthenticator_Response) */ {
 public:
  CTwoFactor_AddAuthenticator_Response();
  virtual ~CTwoFactor_AddAuthenticator_Response();

  CTwoFactor_AddAuthenticator_Response(const CTwoFactor_AddAuthenticator_Response& from);

  inline CTwoFactor_AddAuthenticator_Response& operator=(const CTwoFactor_AddAuthenticator_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_AddAuthenticator_Response(CTwoFactor_AddAuthenticator_Response&& from) noexcept
    : CTwoFactor_AddAuthenticator_Response() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_AddAuthenticator_Response& operator=(CTwoFactor_AddAuthenticator_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_AddAuthenticator_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_AddAuthenticator_Response* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_AddAuthenticator_Response*>(
               &_CTwoFactor_AddAuthenticator_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CTwoFactor_AddAuthenticator_Response* other);
  friend void swap(CTwoFactor_AddAuthenticator_Response& a, CTwoFactor_AddAuthenticator_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_AddAuthenticator_Response* New() const final {
    return CreateMaybeMessage<CTwoFactor_AddAuthenticator_Response>(nullptr);
  }

  CTwoFactor_AddAuthenticator_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_AddAuthenticator_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_AddAuthenticator_Response& from);
  void MergeFrom(const CTwoFactor_AddAuthenticator_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_AddAuthenticator_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes shared_secret = 1 [(.proto.steam.description) = "Shared secret between server and authenticator"];
  bool has_shared_secret() const;
  void clear_shared_secret();
  static const int kSharedSecretFieldNumber = 1;
  const ::std::string& shared_secret() const;
  void set_shared_secret(const ::std::string& value);
  #if LANG_CXX11
  void set_shared_secret(::std::string&& value);
  #endif
  void set_shared_secret(const char* value);
  void set_shared_secret(const void* value, size_t size);
  ::std::string* mutable_shared_secret();
  ::std::string* release_shared_secret();
  void set_allocated_shared_secret(::std::string* shared_secret);

  // optional string revocation_code = 3 [(.proto.steam.description) = "code used to revoke authenticator"];
  bool has_revocation_code() const;
  void clear_revocation_code();
  static const int kRevocationCodeFieldNumber = 3;
  const ::std::string& revocation_code() const;
  void set_revocation_code(const ::std::string& value);
  #if LANG_CXX11
  void set_revocation_code(::std::string&& value);
  #endif
  void set_revocation_code(const char* value);
  void set_revocation_code(const char* value, size_t size);
  ::std::string* mutable_revocation_code();
  ::std::string* release_revocation_code();
  void set_allocated_revocation_code(::std::string* revocation_code);

  // optional string uri = 4 [(.proto.steam.description) = "URI for QR code generation"];
  bool has_uri() const;
  void clear_uri();
  static const int kUriFieldNumber = 4;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // optional string account_name = 6 [(.proto.steam.description) = "Account name to display on token client"];
  bool has_account_name() const;
  void clear_account_name();
  static const int kAccountNameFieldNumber = 6;
  const ::std::string& account_name() const;
  void set_account_name(const ::std::string& value);
  #if LANG_CXX11
  void set_account_name(::std::string&& value);
  #endif
  void set_account_name(const char* value);
  void set_account_name(const char* value, size_t size);
  ::std::string* mutable_account_name();
  ::std::string* release_account_name();
  void set_allocated_account_name(::std::string* account_name);

  // optional string token_gid = 7 [(.proto.steam.description) = "Token GID assigned by server"];
  bool has_token_gid() const;
  void clear_token_gid();
  static const int kTokenGidFieldNumber = 7;
  const ::std::string& token_gid() const;
  void set_token_gid(const ::std::string& value);
  #if LANG_CXX11
  void set_token_gid(::std::string&& value);
  #endif
  void set_token_gid(const char* value);
  void set_token_gid(const char* value, size_t size);
  ::std::string* mutable_token_gid();
  ::std::string* release_token_gid();
  void set_allocated_token_gid(::std::string* token_gid);

  // optional bytes identity_secret = 8 [(.proto.steam.description) = "Secret used for identity attestation (e.g., for eventing)"];
  bool has_identity_secret() const;
  void clear_identity_secret();
  static const int kIdentitySecretFieldNumber = 8;
  const ::std::string& identity_secret() const;
  void set_identity_secret(const ::std::string& value);
  #if LANG_CXX11
  void set_identity_secret(::std::string&& value);
  #endif
  void set_identity_secret(const char* value);
  void set_identity_secret(const void* value, size_t size);
  ::std::string* mutable_identity_secret();
  ::std::string* release_identity_secret();
  void set_allocated_identity_secret(::std::string* identity_secret);

  // optional bytes secret_1 = 9 [(.proto.steam.description) = "Spare shared secret"];
  bool has_secret_1() const;
  void clear_secret_1();
  static const int kSecret1FieldNumber = 9;
  const ::std::string& secret_1() const;
  void set_secret_1(const ::std::string& value);
  #if LANG_CXX11
  void set_secret_1(::std::string&& value);
  #endif
  void set_secret_1(const char* value);
  void set_secret_1(const void* value, size_t size);
  ::std::string* mutable_secret_1();
  ::std::string* release_secret_1();
  void set_allocated_secret_1(::std::string* secret_1);

  // optional fixed64 serial_number = 2 [(.proto.steam.description) = "Authenticator serial number (unique per token)"];
  bool has_serial_number() const;
  void clear_serial_number();
  static const int kSerialNumberFieldNumber = 2;
  ::google::protobuf::uint64 serial_number() const;
  void set_serial_number(::google::protobuf::uint64 value);

  // optional uint64 server_time = 5 [(.proto.steam.description) = "Current server time"];
  bool has_server_time() const;
  void clear_server_time();
  static const int kServerTimeFieldNumber = 5;
  ::google::protobuf::uint64 server_time() const;
  void set_server_time(::google::protobuf::uint64 value);

  // optional int32 status = 10 [(.proto.steam.description) = "Result code"];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 10;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_AddAuthenticator_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr shared_secret_;
  ::google::protobuf::internal::ArenaStringPtr revocation_code_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr account_name_;
  ::google::protobuf::internal::ArenaStringPtr token_gid_;
  ::google::protobuf::internal::ArenaStringPtr identity_secret_;
  ::google::protobuf::internal::ArenaStringPtr secret_1_;
  ::google::protobuf::uint64 serial_number_;
  ::google::protobuf::uint64 server_time_;
  ::google::protobuf::int32 status_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CTwoFactor_SendEmail_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_SendEmail_Request) */ {
 public:
  CTwoFactor_SendEmail_Request();
  virtual ~CTwoFactor_SendEmail_Request();

  CTwoFactor_SendEmail_Request(const CTwoFactor_SendEmail_Request& from);

  inline CTwoFactor_SendEmail_Request& operator=(const CTwoFactor_SendEmail_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_SendEmail_Request(CTwoFactor_SendEmail_Request&& from) noexcept
    : CTwoFactor_SendEmail_Request() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_SendEmail_Request& operator=(CTwoFactor_SendEmail_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_SendEmail_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_SendEmail_Request* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_SendEmail_Request*>(
               &_CTwoFactor_SendEmail_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CTwoFactor_SendEmail_Request* other);
  friend void swap(CTwoFactor_SendEmail_Request& a, CTwoFactor_SendEmail_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_SendEmail_Request* New() const final {
    return CreateMaybeMessage<CTwoFactor_SendEmail_Request>(nullptr);
  }

  CTwoFactor_SendEmail_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_SendEmail_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_SendEmail_Request& from);
  void MergeFrom(const CTwoFactor_SendEmail_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_SendEmail_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1 [(.proto.steam.description) = "Steamid to use"];
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 email_type = 2 [(.proto.steam.description) = "Type of email to send (ETwoFactorEmailType::*)"];
  bool has_email_type() const;
  void clear_email_type();
  static const int kEmailTypeFieldNumber = 2;
  ::google::protobuf::uint32 email_type() const;
  void set_email_type(::google::protobuf::uint32 value);

  // optional bool include_activation_code = 3 [(.proto.steam.description) = "Include activation code in email parameters"];
  bool has_include_activation_code() const;
  void clear_include_activation_code();
  static const int kIncludeActivationCodeFieldNumber = 3;
  bool include_activation_code() const;
  void set_include_activation_code(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_SendEmail_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 email_type_;
  bool include_activation_code_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CTwoFactor_SendEmail_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_SendEmail_Response) */ {
 public:
  CTwoFactor_SendEmail_Response();
  virtual ~CTwoFactor_SendEmail_Response();

  CTwoFactor_SendEmail_Response(const CTwoFactor_SendEmail_Response& from);

  inline CTwoFactor_SendEmail_Response& operator=(const CTwoFactor_SendEmail_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_SendEmail_Response(CTwoFactor_SendEmail_Response&& from) noexcept
    : CTwoFactor_SendEmail_Response() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_SendEmail_Response& operator=(CTwoFactor_SendEmail_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_SendEmail_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_SendEmail_Response* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_SendEmail_Response*>(
               &_CTwoFactor_SendEmail_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CTwoFactor_SendEmail_Response* other);
  friend void swap(CTwoFactor_SendEmail_Response& a, CTwoFactor_SendEmail_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_SendEmail_Response* New() const final {
    return CreateMaybeMessage<CTwoFactor_SendEmail_Response>(nullptr);
  }

  CTwoFactor_SendEmail_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_SendEmail_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_SendEmail_Response& from);
  void MergeFrom(const CTwoFactor_SendEmail_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_SendEmail_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_SendEmail_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CTwoFactor_FinalizeAddAuthenticator_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request) */ {
 public:
  CTwoFactor_FinalizeAddAuthenticator_Request();
  virtual ~CTwoFactor_FinalizeAddAuthenticator_Request();

  CTwoFactor_FinalizeAddAuthenticator_Request(const CTwoFactor_FinalizeAddAuthenticator_Request& from);

  inline CTwoFactor_FinalizeAddAuthenticator_Request& operator=(const CTwoFactor_FinalizeAddAuthenticator_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_FinalizeAddAuthenticator_Request(CTwoFactor_FinalizeAddAuthenticator_Request&& from) noexcept
    : CTwoFactor_FinalizeAddAuthenticator_Request() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_FinalizeAddAuthenticator_Request& operator=(CTwoFactor_FinalizeAddAuthenticator_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_FinalizeAddAuthenticator_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_FinalizeAddAuthenticator_Request* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_FinalizeAddAuthenticator_Request*>(
               &_CTwoFactor_FinalizeAddAuthenticator_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CTwoFactor_FinalizeAddAuthenticator_Request* other);
  friend void swap(CTwoFactor_FinalizeAddAuthenticator_Request& a, CTwoFactor_FinalizeAddAuthenticator_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_FinalizeAddAuthenticator_Request* New() const final {
    return CreateMaybeMessage<CTwoFactor_FinalizeAddAuthenticator_Request>(nullptr);
  }

  CTwoFactor_FinalizeAddAuthenticator_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_FinalizeAddAuthenticator_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_FinalizeAddAuthenticator_Request& from);
  void MergeFrom(const CTwoFactor_FinalizeAddAuthenticator_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_FinalizeAddAuthenticator_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string http_headers = 5 [(.proto.steam.description) = "HTTP headers alternating by K/V"];
  int http_headers_size() const;
  void clear_http_headers();
  static const int kHttpHeadersFieldNumber = 5;
  const ::std::string& http_headers(int index) const;
  ::std::string* mutable_http_headers(int index);
  void set_http_headers(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_http_headers(int index, ::std::string&& value);
  #endif
  void set_http_headers(int index, const char* value);
  void set_http_headers(int index, const char* value, size_t size);
  ::std::string* add_http_headers();
  void add_http_headers(const ::std::string& value);
  #if LANG_CXX11
  void add_http_headers(::std::string&& value);
  #endif
  void add_http_headers(const char* value);
  void add_http_headers(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& http_headers() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_http_headers();

  // optional string authenticator_code = 2 [(.proto.steam.description) = "Current auth code"];
  bool has_authenticator_code() const;
  void clear_authenticator_code();
  static const int kAuthenticatorCodeFieldNumber = 2;
  const ::std::string& authenticator_code() const;
  void set_authenticator_code(const ::std::string& value);
  #if LANG_CXX11
  void set_authenticator_code(::std::string&& value);
  #endif
  void set_authenticator_code(const char* value);
  void set_authenticator_code(const char* value, size_t size);
  ::std::string* mutable_authenticator_code();
  ::std::string* release_authenticator_code();
  void set_allocated_authenticator_code(::std::string* authenticator_code);

  // optional string activation_code = 4 [(.proto.steam.description) = "Activation code from out-of-band message"];
  bool has_activation_code() const;
  void clear_activation_code();
  static const int kActivationCodeFieldNumber = 4;
  const ::std::string& activation_code() const;
  void set_activation_code(const ::std::string& value);
  #if LANG_CXX11
  void set_activation_code(::std::string&& value);
  #endif
  void set_activation_code(const char* value);
  void set_activation_code(const char* value, size_t size);
  ::std::string* mutable_activation_code();
  ::std::string* release_activation_code();
  void set_allocated_activation_code(::std::string* activation_code);

  // optional fixed64 steamid = 1 [(.proto.steam.description) = "steamid to use"];
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint64 authenticator_time = 3 [(.proto.steam.description) = "Current authenticator time"];
  bool has_authenticator_time() const;
  void clear_authenticator_time();
  static const int kAuthenticatorTimeFieldNumber = 3;
  ::google::protobuf::uint64 authenticator_time() const;
  void set_authenticator_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> http_headers_;
  ::google::protobuf::internal::ArenaStringPtr authenticator_code_;
  ::google::protobuf::internal::ArenaStringPtr activation_code_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 authenticator_time_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CTwoFactor_FinalizeAddAuthenticator_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Response) */ {
 public:
  CTwoFactor_FinalizeAddAuthenticator_Response();
  virtual ~CTwoFactor_FinalizeAddAuthenticator_Response();

  CTwoFactor_FinalizeAddAuthenticator_Response(const CTwoFactor_FinalizeAddAuthenticator_Response& from);

  inline CTwoFactor_FinalizeAddAuthenticator_Response& operator=(const CTwoFactor_FinalizeAddAuthenticator_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_FinalizeAddAuthenticator_Response(CTwoFactor_FinalizeAddAuthenticator_Response&& from) noexcept
    : CTwoFactor_FinalizeAddAuthenticator_Response() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_FinalizeAddAuthenticator_Response& operator=(CTwoFactor_FinalizeAddAuthenticator_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_FinalizeAddAuthenticator_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_FinalizeAddAuthenticator_Response* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_FinalizeAddAuthenticator_Response*>(
               &_CTwoFactor_FinalizeAddAuthenticator_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CTwoFactor_FinalizeAddAuthenticator_Response* other);
  friend void swap(CTwoFactor_FinalizeAddAuthenticator_Response& a, CTwoFactor_FinalizeAddAuthenticator_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_FinalizeAddAuthenticator_Response* New() const final {
    return CreateMaybeMessage<CTwoFactor_FinalizeAddAuthenticator_Response>(nullptr);
  }

  CTwoFactor_FinalizeAddAuthenticator_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_FinalizeAddAuthenticator_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_FinalizeAddAuthenticator_Response& from);
  void MergeFrom(const CTwoFactor_FinalizeAddAuthenticator_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_FinalizeAddAuthenticator_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1 [(.proto.steam.description) = "True if succeeded, or want more tries"];
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // optional bool want_more = 2 [(.proto.steam.description) = "True if want more tries"];
  bool has_want_more() const;
  void clear_want_more();
  static const int kWantMoreFieldNumber = 2;
  bool want_more() const;
  void set_want_more(bool value);

  // optional int32 status = 4 [(.proto.steam.description) = "Result code"];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional uint64 server_time = 3 [(.proto.steam.description) = "Current server time"];
  bool has_server_time() const;
  void clear_server_time();
  static const int kServerTimeFieldNumber = 3;
  ::google::protobuf::uint64 server_time() const;
  void set_server_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool success_;
  bool want_more_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint64 server_time_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CTwoFactor_RemoveAuthenticator_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_RemoveAuthenticator_Request) */ {
 public:
  CTwoFactor_RemoveAuthenticator_Request();
  virtual ~CTwoFactor_RemoveAuthenticator_Request();

  CTwoFactor_RemoveAuthenticator_Request(const CTwoFactor_RemoveAuthenticator_Request& from);

  inline CTwoFactor_RemoveAuthenticator_Request& operator=(const CTwoFactor_RemoveAuthenticator_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_RemoveAuthenticator_Request(CTwoFactor_RemoveAuthenticator_Request&& from) noexcept
    : CTwoFactor_RemoveAuthenticator_Request() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_RemoveAuthenticator_Request& operator=(CTwoFactor_RemoveAuthenticator_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_RemoveAuthenticator_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_RemoveAuthenticator_Request* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_RemoveAuthenticator_Request*>(
               &_CTwoFactor_RemoveAuthenticator_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CTwoFactor_RemoveAuthenticator_Request* other);
  friend void swap(CTwoFactor_RemoveAuthenticator_Request& a, CTwoFactor_RemoveAuthenticator_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_RemoveAuthenticator_Request* New() const final {
    return CreateMaybeMessage<CTwoFactor_RemoveAuthenticator_Request>(nullptr);
  }

  CTwoFactor_RemoveAuthenticator_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_RemoveAuthenticator_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_RemoveAuthenticator_Request& from);
  void MergeFrom(const CTwoFactor_RemoveAuthenticator_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_RemoveAuthenticator_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string revocation_code = 2 [(.proto.steam.description) = "Password needed to remove token"];
  bool has_revocation_code() const;
  void clear_revocation_code();
  static const int kRevocationCodeFieldNumber = 2;
  const ::std::string& revocation_code() const;
  void set_revocation_code(const ::std::string& value);
  #if LANG_CXX11
  void set_revocation_code(::std::string&& value);
  #endif
  void set_revocation_code(const char* value);
  void set_revocation_code(const char* value, size_t size);
  ::std::string* mutable_revocation_code();
  ::std::string* release_revocation_code();
  void set_allocated_revocation_code(::std::string* revocation_code);

  // optional bool remove_all_steamguard_cookies = 7 [(.proto.steam.description) = "Remove all steamguard cookies"];
  bool has_remove_all_steamguard_cookies() const;
  void clear_remove_all_steamguard_cookies();
  static const int kRemoveAllSteamguardCookiesFieldNumber = 7;
  bool remove_all_steamguard_cookies() const;
  void set_remove_all_steamguard_cookies(bool value);

  // optional uint32 revocation_reason = 5 [(.proto.steam.description) = "Reason the authenticator is being removed"];
  bool has_revocation_reason() const;
  void clear_revocation_reason();
  static const int kRevocationReasonFieldNumber = 5;
  ::google::protobuf::uint32 revocation_reason() const;
  void set_revocation_reason(::google::protobuf::uint32 value);

  // optional uint32 steamguard_scheme = 6 [(.proto.steam.description) = "Type of Steam Guard to use once token is removed"];
  bool has_steamguard_scheme() const;
  void clear_steamguard_scheme();
  static const int kSteamguardSchemeFieldNumber = 6;
  ::google::protobuf::uint32 steamguard_scheme() const;
  void set_steamguard_scheme(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_RemoveAuthenticator_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr revocation_code_;
  bool remove_all_steamguard_cookies_;
  ::google::protobuf::uint32 revocation_reason_;
  ::google::protobuf::uint32 steamguard_scheme_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CTwoFactor_RemoveAuthenticator_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_RemoveAuthenticator_Response) */ {
 public:
  CTwoFactor_RemoveAuthenticator_Response();
  virtual ~CTwoFactor_RemoveAuthenticator_Response();

  CTwoFactor_RemoveAuthenticator_Response(const CTwoFactor_RemoveAuthenticator_Response& from);

  inline CTwoFactor_RemoveAuthenticator_Response& operator=(const CTwoFactor_RemoveAuthenticator_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_RemoveAuthenticator_Response(CTwoFactor_RemoveAuthenticator_Response&& from) noexcept
    : CTwoFactor_RemoveAuthenticator_Response() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_RemoveAuthenticator_Response& operator=(CTwoFactor_RemoveAuthenticator_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_RemoveAuthenticator_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_RemoveAuthenticator_Response* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_RemoveAuthenticator_Response*>(
               &_CTwoFactor_RemoveAuthenticator_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CTwoFactor_RemoveAuthenticator_Response* other);
  friend void swap(CTwoFactor_RemoveAuthenticator_Response& a, CTwoFactor_RemoveAuthenticator_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_RemoveAuthenticator_Response* New() const final {
    return CreateMaybeMessage<CTwoFactor_RemoveAuthenticator_Response>(nullptr);
  }

  CTwoFactor_RemoveAuthenticator_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_RemoveAuthenticator_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_RemoveAuthenticator_Response& from);
  void MergeFrom(const CTwoFactor_RemoveAuthenticator_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_RemoveAuthenticator_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 server_time = 3 [(.proto.steam.description) = "Current server time"];
  bool has_server_time() const;
  void clear_server_time();
  static const int kServerTimeFieldNumber = 3;
  ::google::protobuf::uint64 server_time() const;
  void set_server_time(::google::protobuf::uint64 value);

  // optional bool success = 1 [(.proto.steam.description) = "True if request succeeeded. The mobile app checks this."];
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // optional uint32 revocation_attempts_remaining = 5 [(.proto.steam.description) = "Number of revocation code attempts remaining"];
  bool has_revocation_attempts_remaining() const;
  void clear_revocation_attempts_remaining();
  static const int kRevocationAttemptsRemainingFieldNumber = 5;
  ::google::protobuf::uint32 revocation_attempts_remaining() const;
  void set_revocation_attempts_remaining(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_RemoveAuthenticator_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 server_time_;
  bool success_;
  ::google::protobuf::uint32 revocation_attempts_remaining_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CTwoFactor_CreateEmergencyCodes_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_CreateEmergencyCodes_Request) */ {
 public:
  CTwoFactor_CreateEmergencyCodes_Request();
  virtual ~CTwoFactor_CreateEmergencyCodes_Request();

  CTwoFactor_CreateEmergencyCodes_Request(const CTwoFactor_CreateEmergencyCodes_Request& from);

  inline CTwoFactor_CreateEmergencyCodes_Request& operator=(const CTwoFactor_CreateEmergencyCodes_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_CreateEmergencyCodes_Request(CTwoFactor_CreateEmergencyCodes_Request&& from) noexcept
    : CTwoFactor_CreateEmergencyCodes_Request() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_CreateEmergencyCodes_Request& operator=(CTwoFactor_CreateEmergencyCodes_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_CreateEmergencyCodes_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_CreateEmergencyCodes_Request* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_CreateEmergencyCodes_Request*>(
               &_CTwoFactor_CreateEmergencyCodes_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CTwoFactor_CreateEmergencyCodes_Request* other);
  friend void swap(CTwoFactor_CreateEmergencyCodes_Request& a, CTwoFactor_CreateEmergencyCodes_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_CreateEmergencyCodes_Request* New() const final {
    return CreateMaybeMessage<CTwoFactor_CreateEmergencyCodes_Request>(nullptr);
  }

  CTwoFactor_CreateEmergencyCodes_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_CreateEmergencyCodes_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_CreateEmergencyCodes_Request& from);
  void MergeFrom(const CTwoFactor_CreateEmergencyCodes_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_CreateEmergencyCodes_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_CreateEmergencyCodes_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CTwoFactor_CreateEmergencyCodes_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_CreateEmergencyCodes_Response) */ {
 public:
  CTwoFactor_CreateEmergencyCodes_Response();
  virtual ~CTwoFactor_CreateEmergencyCodes_Response();

  CTwoFactor_CreateEmergencyCodes_Response(const CTwoFactor_CreateEmergencyCodes_Response& from);

  inline CTwoFactor_CreateEmergencyCodes_Response& operator=(const CTwoFactor_CreateEmergencyCodes_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_CreateEmergencyCodes_Response(CTwoFactor_CreateEmergencyCodes_Response&& from) noexcept
    : CTwoFactor_CreateEmergencyCodes_Response() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_CreateEmergencyCodes_Response& operator=(CTwoFactor_CreateEmergencyCodes_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_CreateEmergencyCodes_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_CreateEmergencyCodes_Response* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_CreateEmergencyCodes_Response*>(
               &_CTwoFactor_CreateEmergencyCodes_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(CTwoFactor_CreateEmergencyCodes_Response* other);
  friend void swap(CTwoFactor_CreateEmergencyCodes_Response& a, CTwoFactor_CreateEmergencyCodes_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_CreateEmergencyCodes_Response* New() const final {
    return CreateMaybeMessage<CTwoFactor_CreateEmergencyCodes_Response>(nullptr);
  }

  CTwoFactor_CreateEmergencyCodes_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_CreateEmergencyCodes_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_CreateEmergencyCodes_Response& from);
  void MergeFrom(const CTwoFactor_CreateEmergencyCodes_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_CreateEmergencyCodes_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string codes = 1 [(.proto.steam.description) = "Emergency codes"];
  int codes_size() const;
  void clear_codes();
  static const int kCodesFieldNumber = 1;
  const ::std::string& codes(int index) const;
  ::std::string* mutable_codes(int index);
  void set_codes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_codes(int index, ::std::string&& value);
  #endif
  void set_codes(int index, const char* value);
  void set_codes(int index, const char* value, size_t size);
  ::std::string* add_codes();
  void add_codes(const ::std::string& value);
  #if LANG_CXX11
  void add_codes(::std::string&& value);
  #endif
  void add_codes(const char* value);
  void add_codes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& codes() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_codes();

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_CreateEmergencyCodes_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> codes_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CTwoFactor_DestroyEmergencyCodes_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_DestroyEmergencyCodes_Request) */ {
 public:
  CTwoFactor_DestroyEmergencyCodes_Request();
  virtual ~CTwoFactor_DestroyEmergencyCodes_Request();

  CTwoFactor_DestroyEmergencyCodes_Request(const CTwoFactor_DestroyEmergencyCodes_Request& from);

  inline CTwoFactor_DestroyEmergencyCodes_Request& operator=(const CTwoFactor_DestroyEmergencyCodes_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_DestroyEmergencyCodes_Request(CTwoFactor_DestroyEmergencyCodes_Request&& from) noexcept
    : CTwoFactor_DestroyEmergencyCodes_Request() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_DestroyEmergencyCodes_Request& operator=(CTwoFactor_DestroyEmergencyCodes_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_DestroyEmergencyCodes_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_DestroyEmergencyCodes_Request* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_DestroyEmergencyCodes_Request*>(
               &_CTwoFactor_DestroyEmergencyCodes_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CTwoFactor_DestroyEmergencyCodes_Request* other);
  friend void swap(CTwoFactor_DestroyEmergencyCodes_Request& a, CTwoFactor_DestroyEmergencyCodes_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_DestroyEmergencyCodes_Request* New() const final {
    return CreateMaybeMessage<CTwoFactor_DestroyEmergencyCodes_Request>(nullptr);
  }

  CTwoFactor_DestroyEmergencyCodes_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_DestroyEmergencyCodes_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_DestroyEmergencyCodes_Request& from);
  void MergeFrom(const CTwoFactor_DestroyEmergencyCodes_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_DestroyEmergencyCodes_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1 [(.proto.steam.description) = "steamid to use"];
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_DestroyEmergencyCodes_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CTwoFactor_DestroyEmergencyCodes_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_DestroyEmergencyCodes_Response) */ {
 public:
  CTwoFactor_DestroyEmergencyCodes_Response();
  virtual ~CTwoFactor_DestroyEmergencyCodes_Response();

  CTwoFactor_DestroyEmergencyCodes_Response(const CTwoFactor_DestroyEmergencyCodes_Response& from);

  inline CTwoFactor_DestroyEmergencyCodes_Response& operator=(const CTwoFactor_DestroyEmergencyCodes_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_DestroyEmergencyCodes_Response(CTwoFactor_DestroyEmergencyCodes_Response&& from) noexcept
    : CTwoFactor_DestroyEmergencyCodes_Response() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_DestroyEmergencyCodes_Response& operator=(CTwoFactor_DestroyEmergencyCodes_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_DestroyEmergencyCodes_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_DestroyEmergencyCodes_Response* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_DestroyEmergencyCodes_Response*>(
               &_CTwoFactor_DestroyEmergencyCodes_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(CTwoFactor_DestroyEmergencyCodes_Response* other);
  friend void swap(CTwoFactor_DestroyEmergencyCodes_Response& a, CTwoFactor_DestroyEmergencyCodes_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_DestroyEmergencyCodes_Response* New() const final {
    return CreateMaybeMessage<CTwoFactor_DestroyEmergencyCodes_Response>(nullptr);
  }

  CTwoFactor_DestroyEmergencyCodes_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_DestroyEmergencyCodes_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_DestroyEmergencyCodes_Response& from);
  void MergeFrom(const CTwoFactor_DestroyEmergencyCodes_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_DestroyEmergencyCodes_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_DestroyEmergencyCodes_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CTwoFactor_ValidateToken_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_ValidateToken_Request) */ {
 public:
  CTwoFactor_ValidateToken_Request();
  virtual ~CTwoFactor_ValidateToken_Request();

  CTwoFactor_ValidateToken_Request(const CTwoFactor_ValidateToken_Request& from);

  inline CTwoFactor_ValidateToken_Request& operator=(const CTwoFactor_ValidateToken_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_ValidateToken_Request(CTwoFactor_ValidateToken_Request&& from) noexcept
    : CTwoFactor_ValidateToken_Request() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_ValidateToken_Request& operator=(CTwoFactor_ValidateToken_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_ValidateToken_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_ValidateToken_Request* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_ValidateToken_Request*>(
               &_CTwoFactor_ValidateToken_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(CTwoFactor_ValidateToken_Request* other);
  friend void swap(CTwoFactor_ValidateToken_Request& a, CTwoFactor_ValidateToken_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_ValidateToken_Request* New() const final {
    return CreateMaybeMessage<CTwoFactor_ValidateToken_Request>(nullptr);
  }

  CTwoFactor_ValidateToken_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_ValidateToken_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_ValidateToken_Request& from);
  void MergeFrom(const CTwoFactor_ValidateToken_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_ValidateToken_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string code = 1 [(.proto.steam.description) = "code to validate"];
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_ValidateToken_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CTwoFactor_ValidateToken_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CTwoFactor_ValidateToken_Response) */ {
 public:
  CTwoFactor_ValidateToken_Response();
  virtual ~CTwoFactor_ValidateToken_Response();

  CTwoFactor_ValidateToken_Response(const CTwoFactor_ValidateToken_Response& from);

  inline CTwoFactor_ValidateToken_Response& operator=(const CTwoFactor_ValidateToken_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTwoFactor_ValidateToken_Response(CTwoFactor_ValidateToken_Response&& from) noexcept
    : CTwoFactor_ValidateToken_Response() {
    *this = ::std::move(from);
  }

  inline CTwoFactor_ValidateToken_Response& operator=(CTwoFactor_ValidateToken_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CTwoFactor_ValidateToken_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTwoFactor_ValidateToken_Response* internal_default_instance() {
    return reinterpret_cast<const CTwoFactor_ValidateToken_Response*>(
               &_CTwoFactor_ValidateToken_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(CTwoFactor_ValidateToken_Response* other);
  friend void swap(CTwoFactor_ValidateToken_Response& a, CTwoFactor_ValidateToken_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTwoFactor_ValidateToken_Response* New() const final {
    return CreateMaybeMessage<CTwoFactor_ValidateToken_Response>(nullptr);
  }

  CTwoFactor_ValidateToken_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CTwoFactor_ValidateToken_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CTwoFactor_ValidateToken_Response& from);
  void MergeFrom(const CTwoFactor_ValidateToken_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTwoFactor_ValidateToken_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool valid = 1 [(.proto.steam.description) = "result of validation"];
  bool has_valid() const;
  void clear_valid();
  static const int kValidFieldNumber = 1;
  bool valid() const;
  void set_valid(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CTwoFactor_ValidateToken_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool valid_;
  friend struct ::TableStruct_steammessages_5ftwofactor_2esteamclient_2eproto;
};
// ===================================================================

class TwoFactor_Stub;

class TwoFactor : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline TwoFactor() {};
 public:
  virtual ~TwoFactor();

  typedef TwoFactor_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void QueryStatus(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_Status_Request* request,
                       ::proto::steam::CTwoFactor_Status_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void AddAuthenticator(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_AddAuthenticator_Request* request,
                       ::proto::steam::CTwoFactor_AddAuthenticator_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SendEmail(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_SendEmail_Request* request,
                       ::proto::steam::CTwoFactor_SendEmail_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void FinalizeAddAuthenticator(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_FinalizeAddAuthenticator_Request* request,
                       ::proto::steam::CTwoFactor_FinalizeAddAuthenticator_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RemoveAuthenticator(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_RemoveAuthenticator_Request* request,
                       ::proto::steam::CTwoFactor_RemoveAuthenticator_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void CreateEmergencyCodes(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_CreateEmergencyCodes_Request* request,
                       ::proto::steam::CTwoFactor_CreateEmergencyCodes_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DestroyEmergencyCodes(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_DestroyEmergencyCodes_Request* request,
                       ::proto::steam::CTwoFactor_DestroyEmergencyCodes_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ValidateToken(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_ValidateToken_Request* request,
                       ::proto::steam::CTwoFactor_ValidateToken_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(TwoFactor);
};

class TwoFactor_Stub : public TwoFactor {
 public:
  TwoFactor_Stub(::google::protobuf::RpcChannel* channel);
  TwoFactor_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~TwoFactor_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements TwoFactor ------------------------------------------

  void QueryStatus(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_Status_Request* request,
                       ::proto::steam::CTwoFactor_Status_Response* response,
                       ::google::protobuf::Closure* done);
  void AddAuthenticator(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_AddAuthenticator_Request* request,
                       ::proto::steam::CTwoFactor_AddAuthenticator_Response* response,
                       ::google::protobuf::Closure* done);
  void SendEmail(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_SendEmail_Request* request,
                       ::proto::steam::CTwoFactor_SendEmail_Response* response,
                       ::google::protobuf::Closure* done);
  void FinalizeAddAuthenticator(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_FinalizeAddAuthenticator_Request* request,
                       ::proto::steam::CTwoFactor_FinalizeAddAuthenticator_Response* response,
                       ::google::protobuf::Closure* done);
  void RemoveAuthenticator(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_RemoveAuthenticator_Request* request,
                       ::proto::steam::CTwoFactor_RemoveAuthenticator_Response* response,
                       ::google::protobuf::Closure* done);
  void CreateEmergencyCodes(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_CreateEmergencyCodes_Request* request,
                       ::proto::steam::CTwoFactor_CreateEmergencyCodes_Response* response,
                       ::google::protobuf::Closure* done);
  void DestroyEmergencyCodes(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_DestroyEmergencyCodes_Request* request,
                       ::proto::steam::CTwoFactor_DestroyEmergencyCodes_Response* response,
                       ::google::protobuf::Closure* done);
  void ValidateToken(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CTwoFactor_ValidateToken_Request* request,
                       ::proto::steam::CTwoFactor_ValidateToken_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(TwoFactor_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CTwoFactor_Status_Request

// optional fixed64 steamid = 1 [(.proto.steam.description) = "steamid to use"];
inline bool CTwoFactor_Status_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTwoFactor_Status_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CTwoFactor_Status_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_Status_Request.steamid)
  return steamid_;
}
inline void CTwoFactor_Status_Request::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_Status_Request.steamid)
}

// -------------------------------------------------------------------

// CTwoFactor_Status_Response

// optional uint32 state = 1 [(.proto.steam.description) = "Authenticator state"];
inline bool CTwoFactor_Status_Response::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTwoFactor_Status_Response::clear_state() {
  state_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CTwoFactor_Status_Response::state() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_Status_Response.state)
  return state_;
}
inline void CTwoFactor_Status_Response::set_state(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_Status_Response.state)
}

// optional uint32 inactivation_reason = 2 [(.proto.steam.description) = "Inactivation reason (if any)"];
inline bool CTwoFactor_Status_Response::has_inactivation_reason() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CTwoFactor_Status_Response::clear_inactivation_reason() {
  inactivation_reason_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint32 CTwoFactor_Status_Response::inactivation_reason() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_Status_Response.inactivation_reason)
  return inactivation_reason_;
}
inline void CTwoFactor_Status_Response::set_inactivation_reason(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  inactivation_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_Status_Response.inactivation_reason)
}

// optional uint32 authenticator_type = 3 [(.proto.steam.description) = "Type of authenticator"];
inline bool CTwoFactor_Status_Response::has_authenticator_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CTwoFactor_Status_Response::clear_authenticator_type() {
  authenticator_type_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CTwoFactor_Status_Response::authenticator_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_Status_Response.authenticator_type)
  return authenticator_type_;
}
inline void CTwoFactor_Status_Response::set_authenticator_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  authenticator_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_Status_Response.authenticator_type)
}

// optional bool authenticator_allowed = 4 [(.proto.steam.description) = "Account allowed to have an authenticator?"];
inline bool CTwoFactor_Status_Response::has_authenticator_allowed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CTwoFactor_Status_Response::clear_authenticator_allowed() {
  authenticator_allowed_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CTwoFactor_Status_Response::authenticator_allowed() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_Status_Response.authenticator_allowed)
  return authenticator_allowed_;
}
inline void CTwoFactor_Status_Response::set_authenticator_allowed(bool value) {
  _has_bits_[0] |= 0x00000080u;
  authenticator_allowed_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_Status_Response.authenticator_allowed)
}

// optional uint32 steamguard_scheme = 5 [(.proto.steam.description) = "Steam Guard scheme in effect"];
inline bool CTwoFactor_Status_Response::has_steamguard_scheme() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CTwoFactor_Status_Response::clear_steamguard_scheme() {
  steamguard_scheme_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CTwoFactor_Status_Response::steamguard_scheme() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_Status_Response.steamguard_scheme)
  return steamguard_scheme_;
}
inline void CTwoFactor_Status_Response::set_steamguard_scheme(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  steamguard_scheme_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_Status_Response.steamguard_scheme)
}

// optional string token_gid = 6 [(.proto.steam.description) = "String rep of token GID assigned by server"];
inline bool CTwoFactor_Status_Response::has_token_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTwoFactor_Status_Response::clear_token_gid() {
  token_gid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CTwoFactor_Status_Response::token_gid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_Status_Response.token_gid)
  return token_gid_.GetNoArena();
}
inline void CTwoFactor_Status_Response::set_token_gid(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_Status_Response.token_gid)
}
#if LANG_CXX11
inline void CTwoFactor_Status_Response::set_token_gid(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_gid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_Status_Response.token_gid)
}
#endif
inline void CTwoFactor_Status_Response::set_token_gid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_Status_Response.token_gid)
}
inline void CTwoFactor_Status_Response::set_token_gid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_Status_Response.token_gid)
}
inline ::std::string* CTwoFactor_Status_Response::mutable_token_gid() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_Status_Response.token_gid)
  return token_gid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_Status_Response::release_token_gid() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_Status_Response.token_gid)
  if (!has_token_gid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_gid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_Status_Response::set_allocated_token_gid(::std::string* token_gid) {
  if (token_gid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_gid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token_gid);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_Status_Response.token_gid)
}

// optional bool email_validated = 7 [(.proto.steam.description) = "Account has verified email capability"];
inline bool CTwoFactor_Status_Response::has_email_validated() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CTwoFactor_Status_Response::clear_email_validated() {
  email_validated_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CTwoFactor_Status_Response::email_validated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_Status_Response.email_validated)
  return email_validated_;
}
inline void CTwoFactor_Status_Response::set_email_validated(bool value) {
  _has_bits_[0] |= 0x00000100u;
  email_validated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_Status_Response.email_validated)
}

// optional string device_identifier = 8 [(.proto.steam.description) = "Authenticator (phone) identifier"];
inline bool CTwoFactor_Status_Response::has_device_identifier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTwoFactor_Status_Response::clear_device_identifier() {
  device_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CTwoFactor_Status_Response::device_identifier() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_Status_Response.device_identifier)
  return device_identifier_.GetNoArena();
}
inline void CTwoFactor_Status_Response::set_device_identifier(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  device_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_Status_Response.device_identifier)
}
#if LANG_CXX11
inline void CTwoFactor_Status_Response::set_device_identifier(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  device_identifier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_Status_Response.device_identifier)
}
#endif
inline void CTwoFactor_Status_Response::set_device_identifier(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  device_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_Status_Response.device_identifier)
}
inline void CTwoFactor_Status_Response::set_device_identifier(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  device_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_Status_Response.device_identifier)
}
inline ::std::string* CTwoFactor_Status_Response::mutable_device_identifier() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_Status_Response.device_identifier)
  return device_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_Status_Response::release_device_identifier() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_Status_Response.device_identifier)
  if (!has_device_identifier()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return device_identifier_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_Status_Response::set_allocated_device_identifier(::std::string* device_identifier) {
  if (device_identifier != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  device_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_identifier);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_Status_Response.device_identifier)
}

// optional uint32 time_created = 9 [(.proto.steam.description) = "When the token was created"];
inline bool CTwoFactor_Status_Response::has_time_created() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CTwoFactor_Status_Response::clear_time_created() {
  time_created_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CTwoFactor_Status_Response::time_created() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_Status_Response.time_created)
  return time_created_;
}
inline void CTwoFactor_Status_Response::set_time_created(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  time_created_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_Status_Response.time_created)
}

// optional uint32 revocation_attempts_remaining = 10 [(.proto.steam.description) = "Number of revocation code attempts remaining"];
inline bool CTwoFactor_Status_Response::has_revocation_attempts_remaining() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CTwoFactor_Status_Response::clear_revocation_attempts_remaining() {
  revocation_attempts_remaining_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::uint32 CTwoFactor_Status_Response::revocation_attempts_remaining() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_Status_Response.revocation_attempts_remaining)
  return revocation_attempts_remaining_;
}
inline void CTwoFactor_Status_Response::set_revocation_attempts_remaining(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  revocation_attempts_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_Status_Response.revocation_attempts_remaining)
}

// optional string classified_agent = 11 [(.proto.steam.description) = "Agent that added the authenticator (e.g., ios / android / other)"];
inline bool CTwoFactor_Status_Response::has_classified_agent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTwoFactor_Status_Response::clear_classified_agent() {
  classified_agent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CTwoFactor_Status_Response::classified_agent() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_Status_Response.classified_agent)
  return classified_agent_.GetNoArena();
}
inline void CTwoFactor_Status_Response::set_classified_agent(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  classified_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_Status_Response.classified_agent)
}
#if LANG_CXX11
inline void CTwoFactor_Status_Response::set_classified_agent(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  classified_agent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_Status_Response.classified_agent)
}
#endif
inline void CTwoFactor_Status_Response::set_classified_agent(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  classified_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_Status_Response.classified_agent)
}
inline void CTwoFactor_Status_Response::set_classified_agent(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  classified_agent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_Status_Response.classified_agent)
}
inline ::std::string* CTwoFactor_Status_Response::mutable_classified_agent() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_Status_Response.classified_agent)
  return classified_agent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_Status_Response::release_classified_agent() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_Status_Response.classified_agent)
  if (!has_classified_agent()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return classified_agent_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_Status_Response::set_allocated_classified_agent(::std::string* classified_agent) {
  if (classified_agent != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  classified_agent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), classified_agent);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_Status_Response.classified_agent)
}

// optional bool allow_external_authenticator = 12 [(.proto.steam.description) = "Allow a third-party authenticator (in addition to two-factor)"];
inline bool CTwoFactor_Status_Response::has_allow_external_authenticator() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CTwoFactor_Status_Response::clear_allow_external_authenticator() {
  allow_external_authenticator_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CTwoFactor_Status_Response::allow_external_authenticator() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_Status_Response.allow_external_authenticator)
  return allow_external_authenticator_;
}
inline void CTwoFactor_Status_Response::set_allow_external_authenticator(bool value) {
  _has_bits_[0] |= 0x00000200u;
  allow_external_authenticator_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_Status_Response.allow_external_authenticator)
}

// optional uint32 time_transferred = 13 [(.proto.steam.description) = "When the token was transferred from another device, if applicable"];
inline bool CTwoFactor_Status_Response::has_time_transferred() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CTwoFactor_Status_Response::clear_time_transferred() {
  time_transferred_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::google::protobuf::uint32 CTwoFactor_Status_Response::time_transferred() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_Status_Response.time_transferred)
  return time_transferred_;
}
inline void CTwoFactor_Status_Response::set_time_transferred(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  time_transferred_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_Status_Response.time_transferred)
}

// -------------------------------------------------------------------

// CTwoFactor_AddAuthenticator_Request

// optional fixed64 steamid = 1 [(.proto.steam.description) = "steamid to use"];
inline bool CTwoFactor_AddAuthenticator_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CTwoFactor_AddAuthenticator_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Request.steamid)
  return steamid_;
}
inline void CTwoFactor_AddAuthenticator_Request::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Request.steamid)
}

// optional uint64 authenticator_time = 2 [(.proto.steam.description) = "Current authenticator time"];
inline bool CTwoFactor_AddAuthenticator_Request::has_authenticator_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Request::clear_authenticator_time() {
  authenticator_time_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 CTwoFactor_AddAuthenticator_Request::authenticator_time() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Request.authenticator_time)
  return authenticator_time_;
}
inline void CTwoFactor_AddAuthenticator_Request::set_authenticator_time(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  authenticator_time_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Request.authenticator_time)
}

// optional fixed64 serial_number = 3 [(.proto.steam.description) = "locally computed serial (deprecated)"];
inline bool CTwoFactor_AddAuthenticator_Request::has_serial_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Request::clear_serial_number() {
  serial_number_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 CTwoFactor_AddAuthenticator_Request::serial_number() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Request.serial_number)
  return serial_number_;
}
inline void CTwoFactor_AddAuthenticator_Request::set_serial_number(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  serial_number_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Request.serial_number)
}

// optional uint32 authenticator_type = 4 [(.proto.steam.description) = "Authenticator type"];
inline bool CTwoFactor_AddAuthenticator_Request::has_authenticator_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Request::clear_authenticator_type() {
  authenticator_type_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CTwoFactor_AddAuthenticator_Request::authenticator_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Request.authenticator_type)
  return authenticator_type_;
}
inline void CTwoFactor_AddAuthenticator_Request::set_authenticator_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  authenticator_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Request.authenticator_type)
}

// optional string device_identifier = 5 [(.proto.steam.description) = "Authenticator identifier"];
inline bool CTwoFactor_AddAuthenticator_Request::has_device_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Request::clear_device_identifier() {
  device_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CTwoFactor_AddAuthenticator_Request::device_identifier() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Request.device_identifier)
  return device_identifier_.GetNoArena();
}
inline void CTwoFactor_AddAuthenticator_Request::set_device_identifier(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  device_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Request.device_identifier)
}
#if LANG_CXX11
inline void CTwoFactor_AddAuthenticator_Request::set_device_identifier(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  device_identifier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_AddAuthenticator_Request.device_identifier)
}
#endif
inline void CTwoFactor_AddAuthenticator_Request::set_device_identifier(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  device_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_AddAuthenticator_Request.device_identifier)
}
inline void CTwoFactor_AddAuthenticator_Request::set_device_identifier(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  device_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_AddAuthenticator_Request.device_identifier)
}
inline ::std::string* CTwoFactor_AddAuthenticator_Request::mutable_device_identifier() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_AddAuthenticator_Request.device_identifier)
  return device_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_AddAuthenticator_Request::release_device_identifier() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_AddAuthenticator_Request.device_identifier)
  if (!has_device_identifier()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return device_identifier_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_AddAuthenticator_Request::set_allocated_device_identifier(::std::string* device_identifier) {
  if (device_identifier != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  device_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_identifier);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_AddAuthenticator_Request.device_identifier)
}

// optional string sms_phone_id = 6 [(.proto.steam.description) = "ID of phone to use for SMS verification"];
inline bool CTwoFactor_AddAuthenticator_Request::has_sms_phone_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Request::clear_sms_phone_id() {
  sms_phone_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CTwoFactor_AddAuthenticator_Request::sms_phone_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Request.sms_phone_id)
  return sms_phone_id_.GetNoArena();
}
inline void CTwoFactor_AddAuthenticator_Request::set_sms_phone_id(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  sms_phone_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Request.sms_phone_id)
}
#if LANG_CXX11
inline void CTwoFactor_AddAuthenticator_Request::set_sms_phone_id(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  sms_phone_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_AddAuthenticator_Request.sms_phone_id)
}
#endif
inline void CTwoFactor_AddAuthenticator_Request::set_sms_phone_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  sms_phone_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_AddAuthenticator_Request.sms_phone_id)
}
inline void CTwoFactor_AddAuthenticator_Request::set_sms_phone_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  sms_phone_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_AddAuthenticator_Request.sms_phone_id)
}
inline ::std::string* CTwoFactor_AddAuthenticator_Request::mutable_sms_phone_id() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_AddAuthenticator_Request.sms_phone_id)
  return sms_phone_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_AddAuthenticator_Request::release_sms_phone_id() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_AddAuthenticator_Request.sms_phone_id)
  if (!has_sms_phone_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return sms_phone_id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_AddAuthenticator_Request::set_allocated_sms_phone_id(::std::string* sms_phone_id) {
  if (sms_phone_id != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sms_phone_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sms_phone_id);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_AddAuthenticator_Request.sms_phone_id)
}

// repeated string http_headers = 7 [(.proto.steam.description) = "HTTP headers alternating by K/V"];
inline int CTwoFactor_AddAuthenticator_Request::http_headers_size() const {
  return http_headers_.size();
}
inline void CTwoFactor_AddAuthenticator_Request::clear_http_headers() {
  http_headers_.Clear();
}
inline const ::std::string& CTwoFactor_AddAuthenticator_Request::http_headers(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Request.http_headers)
  return http_headers_.Get(index);
}
inline ::std::string* CTwoFactor_AddAuthenticator_Request::mutable_http_headers(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_AddAuthenticator_Request.http_headers)
  return http_headers_.Mutable(index);
}
inline void CTwoFactor_AddAuthenticator_Request::set_http_headers(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Request.http_headers)
  http_headers_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CTwoFactor_AddAuthenticator_Request::set_http_headers(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Request.http_headers)
  http_headers_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CTwoFactor_AddAuthenticator_Request::set_http_headers(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  http_headers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_AddAuthenticator_Request.http_headers)
}
inline void CTwoFactor_AddAuthenticator_Request::set_http_headers(int index, const char* value, size_t size) {
  http_headers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_AddAuthenticator_Request.http_headers)
}
inline ::std::string* CTwoFactor_AddAuthenticator_Request::add_http_headers() {
  // @@protoc_insertion_point(field_add_mutable:proto.steam.CTwoFactor_AddAuthenticator_Request.http_headers)
  return http_headers_.Add();
}
inline void CTwoFactor_AddAuthenticator_Request::add_http_headers(const ::std::string& value) {
  http_headers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.steam.CTwoFactor_AddAuthenticator_Request.http_headers)
}
#if LANG_CXX11
inline void CTwoFactor_AddAuthenticator_Request::add_http_headers(::std::string&& value) {
  http_headers_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.steam.CTwoFactor_AddAuthenticator_Request.http_headers)
}
#endif
inline void CTwoFactor_AddAuthenticator_Request::add_http_headers(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  http_headers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.steam.CTwoFactor_AddAuthenticator_Request.http_headers)
}
inline void CTwoFactor_AddAuthenticator_Request::add_http_headers(const char* value, size_t size) {
  http_headers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.steam.CTwoFactor_AddAuthenticator_Request.http_headers)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CTwoFactor_AddAuthenticator_Request::http_headers() const {
  // @@protoc_insertion_point(field_list:proto.steam.CTwoFactor_AddAuthenticator_Request.http_headers)
  return http_headers_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CTwoFactor_AddAuthenticator_Request::mutable_http_headers() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CTwoFactor_AddAuthenticator_Request.http_headers)
  return &http_headers_;
}

// -------------------------------------------------------------------

// CTwoFactor_AddAuthenticator_Response

// optional bytes shared_secret = 1 [(.proto.steam.description) = "Shared secret between server and authenticator"];
inline bool CTwoFactor_AddAuthenticator_Response::has_shared_secret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Response::clear_shared_secret() {
  shared_secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CTwoFactor_AddAuthenticator_Response::shared_secret() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Response.shared_secret)
  return shared_secret_.GetNoArena();
}
inline void CTwoFactor_AddAuthenticator_Response::set_shared_secret(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  shared_secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Response.shared_secret)
}
#if LANG_CXX11
inline void CTwoFactor_AddAuthenticator_Response::set_shared_secret(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  shared_secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_AddAuthenticator_Response.shared_secret)
}
#endif
inline void CTwoFactor_AddAuthenticator_Response::set_shared_secret(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  shared_secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_AddAuthenticator_Response.shared_secret)
}
inline void CTwoFactor_AddAuthenticator_Response::set_shared_secret(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  shared_secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_AddAuthenticator_Response.shared_secret)
}
inline ::std::string* CTwoFactor_AddAuthenticator_Response::mutable_shared_secret() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_AddAuthenticator_Response.shared_secret)
  return shared_secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_AddAuthenticator_Response::release_shared_secret() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_AddAuthenticator_Response.shared_secret)
  if (!has_shared_secret()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return shared_secret_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_AddAuthenticator_Response::set_allocated_shared_secret(::std::string* shared_secret) {
  if (shared_secret != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  shared_secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shared_secret);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_AddAuthenticator_Response.shared_secret)
}

// optional fixed64 serial_number = 2 [(.proto.steam.description) = "Authenticator serial number (unique per token)"];
inline bool CTwoFactor_AddAuthenticator_Response::has_serial_number() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Response::clear_serial_number() {
  serial_number_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint64 CTwoFactor_AddAuthenticator_Response::serial_number() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Response.serial_number)
  return serial_number_;
}
inline void CTwoFactor_AddAuthenticator_Response::set_serial_number(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000080u;
  serial_number_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Response.serial_number)
}

// optional string revocation_code = 3 [(.proto.steam.description) = "code used to revoke authenticator"];
inline bool CTwoFactor_AddAuthenticator_Response::has_revocation_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Response::clear_revocation_code() {
  revocation_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CTwoFactor_AddAuthenticator_Response::revocation_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Response.revocation_code)
  return revocation_code_.GetNoArena();
}
inline void CTwoFactor_AddAuthenticator_Response::set_revocation_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  revocation_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Response.revocation_code)
}
#if LANG_CXX11
inline void CTwoFactor_AddAuthenticator_Response::set_revocation_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  revocation_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_AddAuthenticator_Response.revocation_code)
}
#endif
inline void CTwoFactor_AddAuthenticator_Response::set_revocation_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  revocation_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_AddAuthenticator_Response.revocation_code)
}
inline void CTwoFactor_AddAuthenticator_Response::set_revocation_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  revocation_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_AddAuthenticator_Response.revocation_code)
}
inline ::std::string* CTwoFactor_AddAuthenticator_Response::mutable_revocation_code() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_AddAuthenticator_Response.revocation_code)
  return revocation_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_AddAuthenticator_Response::release_revocation_code() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_AddAuthenticator_Response.revocation_code)
  if (!has_revocation_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return revocation_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_AddAuthenticator_Response::set_allocated_revocation_code(::std::string* revocation_code) {
  if (revocation_code != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  revocation_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), revocation_code);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_AddAuthenticator_Response.revocation_code)
}

// optional string uri = 4 [(.proto.steam.description) = "URI for QR code generation"];
inline bool CTwoFactor_AddAuthenticator_Response::has_uri() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Response::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CTwoFactor_AddAuthenticator_Response::uri() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Response.uri)
  return uri_.GetNoArena();
}
inline void CTwoFactor_AddAuthenticator_Response::set_uri(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Response.uri)
}
#if LANG_CXX11
inline void CTwoFactor_AddAuthenticator_Response::set_uri(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_AddAuthenticator_Response.uri)
}
#endif
inline void CTwoFactor_AddAuthenticator_Response::set_uri(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_AddAuthenticator_Response.uri)
}
inline void CTwoFactor_AddAuthenticator_Response::set_uri(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_AddAuthenticator_Response.uri)
}
inline ::std::string* CTwoFactor_AddAuthenticator_Response::mutable_uri() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_AddAuthenticator_Response.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_AddAuthenticator_Response::release_uri() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_AddAuthenticator_Response.uri)
  if (!has_uri()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return uri_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_AddAuthenticator_Response::set_allocated_uri(::std::string* uri) {
  if (uri != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_AddAuthenticator_Response.uri)
}

// optional uint64 server_time = 5 [(.proto.steam.description) = "Current server time"];
inline bool CTwoFactor_AddAuthenticator_Response::has_server_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Response::clear_server_time() {
  server_time_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint64 CTwoFactor_AddAuthenticator_Response::server_time() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Response.server_time)
  return server_time_;
}
inline void CTwoFactor_AddAuthenticator_Response::set_server_time(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000100u;
  server_time_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Response.server_time)
}

// optional string account_name = 6 [(.proto.steam.description) = "Account name to display on token client"];
inline bool CTwoFactor_AddAuthenticator_Response::has_account_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Response::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& CTwoFactor_AddAuthenticator_Response::account_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Response.account_name)
  return account_name_.GetNoArena();
}
inline void CTwoFactor_AddAuthenticator_Response::set_account_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Response.account_name)
}
#if LANG_CXX11
inline void CTwoFactor_AddAuthenticator_Response::set_account_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_AddAuthenticator_Response.account_name)
}
#endif
inline void CTwoFactor_AddAuthenticator_Response::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_AddAuthenticator_Response.account_name)
}
inline void CTwoFactor_AddAuthenticator_Response::set_account_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_AddAuthenticator_Response.account_name)
}
inline ::std::string* CTwoFactor_AddAuthenticator_Response::mutable_account_name() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_AddAuthenticator_Response.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_AddAuthenticator_Response::release_account_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_AddAuthenticator_Response.account_name)
  if (!has_account_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return account_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_AddAuthenticator_Response::set_allocated_account_name(::std::string* account_name) {
  if (account_name != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_AddAuthenticator_Response.account_name)
}

// optional string token_gid = 7 [(.proto.steam.description) = "Token GID assigned by server"];
inline bool CTwoFactor_AddAuthenticator_Response::has_token_gid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Response::clear_token_gid() {
  token_gid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& CTwoFactor_AddAuthenticator_Response::token_gid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Response.token_gid)
  return token_gid_.GetNoArena();
}
inline void CTwoFactor_AddAuthenticator_Response::set_token_gid(const ::std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  token_gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Response.token_gid)
}
#if LANG_CXX11
inline void CTwoFactor_AddAuthenticator_Response::set_token_gid(::std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  token_gid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_AddAuthenticator_Response.token_gid)
}
#endif
inline void CTwoFactor_AddAuthenticator_Response::set_token_gid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  token_gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_AddAuthenticator_Response.token_gid)
}
inline void CTwoFactor_AddAuthenticator_Response::set_token_gid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  token_gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_AddAuthenticator_Response.token_gid)
}
inline ::std::string* CTwoFactor_AddAuthenticator_Response::mutable_token_gid() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_AddAuthenticator_Response.token_gid)
  return token_gid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_AddAuthenticator_Response::release_token_gid() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_AddAuthenticator_Response.token_gid)
  if (!has_token_gid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return token_gid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_AddAuthenticator_Response::set_allocated_token_gid(::std::string* token_gid) {
  if (token_gid != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  token_gid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token_gid);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_AddAuthenticator_Response.token_gid)
}

// optional bytes identity_secret = 8 [(.proto.steam.description) = "Secret used for identity attestation (e.g., for eventing)"];
inline bool CTwoFactor_AddAuthenticator_Response::has_identity_secret() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Response::clear_identity_secret() {
  identity_secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::std::string& CTwoFactor_AddAuthenticator_Response::identity_secret() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Response.identity_secret)
  return identity_secret_.GetNoArena();
}
inline void CTwoFactor_AddAuthenticator_Response::set_identity_secret(const ::std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  identity_secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Response.identity_secret)
}
#if LANG_CXX11
inline void CTwoFactor_AddAuthenticator_Response::set_identity_secret(::std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  identity_secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_AddAuthenticator_Response.identity_secret)
}
#endif
inline void CTwoFactor_AddAuthenticator_Response::set_identity_secret(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  identity_secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_AddAuthenticator_Response.identity_secret)
}
inline void CTwoFactor_AddAuthenticator_Response::set_identity_secret(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  identity_secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_AddAuthenticator_Response.identity_secret)
}
inline ::std::string* CTwoFactor_AddAuthenticator_Response::mutable_identity_secret() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_AddAuthenticator_Response.identity_secret)
  return identity_secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_AddAuthenticator_Response::release_identity_secret() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_AddAuthenticator_Response.identity_secret)
  if (!has_identity_secret()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return identity_secret_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_AddAuthenticator_Response::set_allocated_identity_secret(::std::string* identity_secret) {
  if (identity_secret != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  identity_secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identity_secret);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_AddAuthenticator_Response.identity_secret)
}

// optional bytes secret_1 = 9 [(.proto.steam.description) = "Spare shared secret"];
inline bool CTwoFactor_AddAuthenticator_Response::has_secret_1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Response::clear_secret_1() {
  secret_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::std::string& CTwoFactor_AddAuthenticator_Response::secret_1() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Response.secret_1)
  return secret_1_.GetNoArena();
}
inline void CTwoFactor_AddAuthenticator_Response::set_secret_1(const ::std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  secret_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Response.secret_1)
}
#if LANG_CXX11
inline void CTwoFactor_AddAuthenticator_Response::set_secret_1(::std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  secret_1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_AddAuthenticator_Response.secret_1)
}
#endif
inline void CTwoFactor_AddAuthenticator_Response::set_secret_1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  secret_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_AddAuthenticator_Response.secret_1)
}
inline void CTwoFactor_AddAuthenticator_Response::set_secret_1(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000040u;
  secret_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_AddAuthenticator_Response.secret_1)
}
inline ::std::string* CTwoFactor_AddAuthenticator_Response::mutable_secret_1() {
  _has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_AddAuthenticator_Response.secret_1)
  return secret_1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_AddAuthenticator_Response::release_secret_1() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_AddAuthenticator_Response.secret_1)
  if (!has_secret_1()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return secret_1_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_AddAuthenticator_Response::set_allocated_secret_1(::std::string* secret_1) {
  if (secret_1 != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  secret_1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret_1);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_AddAuthenticator_Response.secret_1)
}

// optional int32 status = 10 [(.proto.steam.description) = "Result code"];
inline bool CTwoFactor_AddAuthenticator_Response::has_status() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CTwoFactor_AddAuthenticator_Response::clear_status() {
  status_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::int32 CTwoFactor_AddAuthenticator_Response::status() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_AddAuthenticator_Response.status)
  return status_;
}
inline void CTwoFactor_AddAuthenticator_Response::set_status(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  status_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_AddAuthenticator_Response.status)
}

// -------------------------------------------------------------------

// CTwoFactor_SendEmail_Request

// optional fixed64 steamid = 1 [(.proto.steam.description) = "Steamid to use"];
inline bool CTwoFactor_SendEmail_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTwoFactor_SendEmail_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CTwoFactor_SendEmail_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_SendEmail_Request.steamid)
  return steamid_;
}
inline void CTwoFactor_SendEmail_Request::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_SendEmail_Request.steamid)
}

// optional uint32 email_type = 2 [(.proto.steam.description) = "Type of email to send (ETwoFactorEmailType::*)"];
inline bool CTwoFactor_SendEmail_Request::has_email_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTwoFactor_SendEmail_Request::clear_email_type() {
  email_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CTwoFactor_SendEmail_Request::email_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_SendEmail_Request.email_type)
  return email_type_;
}
inline void CTwoFactor_SendEmail_Request::set_email_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  email_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_SendEmail_Request.email_type)
}

// optional bool include_activation_code = 3 [(.proto.steam.description) = "Include activation code in email parameters"];
inline bool CTwoFactor_SendEmail_Request::has_include_activation_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTwoFactor_SendEmail_Request::clear_include_activation_code() {
  include_activation_code_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CTwoFactor_SendEmail_Request::include_activation_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_SendEmail_Request.include_activation_code)
  return include_activation_code_;
}
inline void CTwoFactor_SendEmail_Request::set_include_activation_code(bool value) {
  _has_bits_[0] |= 0x00000004u;
  include_activation_code_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_SendEmail_Request.include_activation_code)
}

// -------------------------------------------------------------------

// CTwoFactor_SendEmail_Response

// -------------------------------------------------------------------

// CTwoFactor_FinalizeAddAuthenticator_Request

// optional fixed64 steamid = 1 [(.proto.steam.description) = "steamid to use"];
inline bool CTwoFactor_FinalizeAddAuthenticator_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 CTwoFactor_FinalizeAddAuthenticator_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.steamid)
  return steamid_;
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.steamid)
}

// optional string authenticator_code = 2 [(.proto.steam.description) = "Current auth code"];
inline bool CTwoFactor_FinalizeAddAuthenticator_Request::has_authenticator_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::clear_authenticator_code() {
  authenticator_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CTwoFactor_FinalizeAddAuthenticator_Request::authenticator_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.authenticator_code)
  return authenticator_code_.GetNoArena();
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_authenticator_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  authenticator_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.authenticator_code)
}
#if LANG_CXX11
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_authenticator_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  authenticator_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.authenticator_code)
}
#endif
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_authenticator_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  authenticator_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.authenticator_code)
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_authenticator_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  authenticator_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.authenticator_code)
}
inline ::std::string* CTwoFactor_FinalizeAddAuthenticator_Request::mutable_authenticator_code() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.authenticator_code)
  return authenticator_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_FinalizeAddAuthenticator_Request::release_authenticator_code() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.authenticator_code)
  if (!has_authenticator_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return authenticator_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_allocated_authenticator_code(::std::string* authenticator_code) {
  if (authenticator_code != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  authenticator_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authenticator_code);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.authenticator_code)
}

// optional uint64 authenticator_time = 3 [(.proto.steam.description) = "Current authenticator time"];
inline bool CTwoFactor_FinalizeAddAuthenticator_Request::has_authenticator_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::clear_authenticator_time() {
  authenticator_time_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 CTwoFactor_FinalizeAddAuthenticator_Request::authenticator_time() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.authenticator_time)
  return authenticator_time_;
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_authenticator_time(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  authenticator_time_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.authenticator_time)
}

// optional string activation_code = 4 [(.proto.steam.description) = "Activation code from out-of-band message"];
inline bool CTwoFactor_FinalizeAddAuthenticator_Request::has_activation_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::clear_activation_code() {
  activation_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CTwoFactor_FinalizeAddAuthenticator_Request::activation_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.activation_code)
  return activation_code_.GetNoArena();
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_activation_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  activation_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.activation_code)
}
#if LANG_CXX11
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_activation_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  activation_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.activation_code)
}
#endif
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_activation_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  activation_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.activation_code)
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_activation_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  activation_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.activation_code)
}
inline ::std::string* CTwoFactor_FinalizeAddAuthenticator_Request::mutable_activation_code() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.activation_code)
  return activation_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_FinalizeAddAuthenticator_Request::release_activation_code() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.activation_code)
  if (!has_activation_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return activation_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_allocated_activation_code(::std::string* activation_code) {
  if (activation_code != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  activation_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), activation_code);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.activation_code)
}

// repeated string http_headers = 5 [(.proto.steam.description) = "HTTP headers alternating by K/V"];
inline int CTwoFactor_FinalizeAddAuthenticator_Request::http_headers_size() const {
  return http_headers_.size();
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::clear_http_headers() {
  http_headers_.Clear();
}
inline const ::std::string& CTwoFactor_FinalizeAddAuthenticator_Request::http_headers(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.http_headers)
  return http_headers_.Get(index);
}
inline ::std::string* CTwoFactor_FinalizeAddAuthenticator_Request::mutable_http_headers(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.http_headers)
  return http_headers_.Mutable(index);
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_http_headers(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.http_headers)
  http_headers_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_http_headers(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.http_headers)
  http_headers_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_http_headers(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  http_headers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.http_headers)
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::set_http_headers(int index, const char* value, size_t size) {
  http_headers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.http_headers)
}
inline ::std::string* CTwoFactor_FinalizeAddAuthenticator_Request::add_http_headers() {
  // @@protoc_insertion_point(field_add_mutable:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.http_headers)
  return http_headers_.Add();
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::add_http_headers(const ::std::string& value) {
  http_headers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.http_headers)
}
#if LANG_CXX11
inline void CTwoFactor_FinalizeAddAuthenticator_Request::add_http_headers(::std::string&& value) {
  http_headers_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.http_headers)
}
#endif
inline void CTwoFactor_FinalizeAddAuthenticator_Request::add_http_headers(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  http_headers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.http_headers)
}
inline void CTwoFactor_FinalizeAddAuthenticator_Request::add_http_headers(const char* value, size_t size) {
  http_headers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.http_headers)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CTwoFactor_FinalizeAddAuthenticator_Request::http_headers() const {
  // @@protoc_insertion_point(field_list:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.http_headers)
  return http_headers_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CTwoFactor_FinalizeAddAuthenticator_Request::mutable_http_headers() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Request.http_headers)
  return &http_headers_;
}

// -------------------------------------------------------------------

// CTwoFactor_FinalizeAddAuthenticator_Response

// optional bool success = 1 [(.proto.steam.description) = "True if succeeded, or want more tries"];
inline bool CTwoFactor_FinalizeAddAuthenticator_Response::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTwoFactor_FinalizeAddAuthenticator_Response::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CTwoFactor_FinalizeAddAuthenticator_Response::success() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Response.success)
  return success_;
}
inline void CTwoFactor_FinalizeAddAuthenticator_Response::set_success(bool value) {
  _has_bits_[0] |= 0x00000001u;
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Response.success)
}

// optional bool want_more = 2 [(.proto.steam.description) = "True if want more tries"];
inline bool CTwoFactor_FinalizeAddAuthenticator_Response::has_want_more() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTwoFactor_FinalizeAddAuthenticator_Response::clear_want_more() {
  want_more_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CTwoFactor_FinalizeAddAuthenticator_Response::want_more() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Response.want_more)
  return want_more_;
}
inline void CTwoFactor_FinalizeAddAuthenticator_Response::set_want_more(bool value) {
  _has_bits_[0] |= 0x00000002u;
  want_more_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Response.want_more)
}

// optional uint64 server_time = 3 [(.proto.steam.description) = "Current server time"];
inline bool CTwoFactor_FinalizeAddAuthenticator_Response::has_server_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTwoFactor_FinalizeAddAuthenticator_Response::clear_server_time() {
  server_time_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 CTwoFactor_FinalizeAddAuthenticator_Response::server_time() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Response.server_time)
  return server_time_;
}
inline void CTwoFactor_FinalizeAddAuthenticator_Response::set_server_time(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  server_time_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Response.server_time)
}

// optional int32 status = 4 [(.proto.steam.description) = "Result code"];
inline bool CTwoFactor_FinalizeAddAuthenticator_Response::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTwoFactor_FinalizeAddAuthenticator_Response::clear_status() {
  status_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 CTwoFactor_FinalizeAddAuthenticator_Response::status() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Response.status)
  return status_;
}
inline void CTwoFactor_FinalizeAddAuthenticator_Response::set_status(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  status_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_FinalizeAddAuthenticator_Response.status)
}

// -------------------------------------------------------------------

// CTwoFactor_RemoveAuthenticator_Request

// optional string revocation_code = 2 [(.proto.steam.description) = "Password needed to remove token"];
inline bool CTwoFactor_RemoveAuthenticator_Request::has_revocation_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTwoFactor_RemoveAuthenticator_Request::clear_revocation_code() {
  revocation_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CTwoFactor_RemoveAuthenticator_Request::revocation_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_RemoveAuthenticator_Request.revocation_code)
  return revocation_code_.GetNoArena();
}
inline void CTwoFactor_RemoveAuthenticator_Request::set_revocation_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  revocation_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_RemoveAuthenticator_Request.revocation_code)
}
#if LANG_CXX11
inline void CTwoFactor_RemoveAuthenticator_Request::set_revocation_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  revocation_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_RemoveAuthenticator_Request.revocation_code)
}
#endif
inline void CTwoFactor_RemoveAuthenticator_Request::set_revocation_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  revocation_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_RemoveAuthenticator_Request.revocation_code)
}
inline void CTwoFactor_RemoveAuthenticator_Request::set_revocation_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  revocation_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_RemoveAuthenticator_Request.revocation_code)
}
inline ::std::string* CTwoFactor_RemoveAuthenticator_Request::mutable_revocation_code() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_RemoveAuthenticator_Request.revocation_code)
  return revocation_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_RemoveAuthenticator_Request::release_revocation_code() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_RemoveAuthenticator_Request.revocation_code)
  if (!has_revocation_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return revocation_code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_RemoveAuthenticator_Request::set_allocated_revocation_code(::std::string* revocation_code) {
  if (revocation_code != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  revocation_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), revocation_code);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_RemoveAuthenticator_Request.revocation_code)
}

// optional uint32 revocation_reason = 5 [(.proto.steam.description) = "Reason the authenticator is being removed"];
inline bool CTwoFactor_RemoveAuthenticator_Request::has_revocation_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTwoFactor_RemoveAuthenticator_Request::clear_revocation_reason() {
  revocation_reason_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CTwoFactor_RemoveAuthenticator_Request::revocation_reason() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_RemoveAuthenticator_Request.revocation_reason)
  return revocation_reason_;
}
inline void CTwoFactor_RemoveAuthenticator_Request::set_revocation_reason(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  revocation_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_RemoveAuthenticator_Request.revocation_reason)
}

// optional uint32 steamguard_scheme = 6 [(.proto.steam.description) = "Type of Steam Guard to use once token is removed"];
inline bool CTwoFactor_RemoveAuthenticator_Request::has_steamguard_scheme() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTwoFactor_RemoveAuthenticator_Request::clear_steamguard_scheme() {
  steamguard_scheme_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CTwoFactor_RemoveAuthenticator_Request::steamguard_scheme() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_RemoveAuthenticator_Request.steamguard_scheme)
  return steamguard_scheme_;
}
inline void CTwoFactor_RemoveAuthenticator_Request::set_steamguard_scheme(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  steamguard_scheme_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_RemoveAuthenticator_Request.steamguard_scheme)
}

// optional bool remove_all_steamguard_cookies = 7 [(.proto.steam.description) = "Remove all steamguard cookies"];
inline bool CTwoFactor_RemoveAuthenticator_Request::has_remove_all_steamguard_cookies() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTwoFactor_RemoveAuthenticator_Request::clear_remove_all_steamguard_cookies() {
  remove_all_steamguard_cookies_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CTwoFactor_RemoveAuthenticator_Request::remove_all_steamguard_cookies() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_RemoveAuthenticator_Request.remove_all_steamguard_cookies)
  return remove_all_steamguard_cookies_;
}
inline void CTwoFactor_RemoveAuthenticator_Request::set_remove_all_steamguard_cookies(bool value) {
  _has_bits_[0] |= 0x00000002u;
  remove_all_steamguard_cookies_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_RemoveAuthenticator_Request.remove_all_steamguard_cookies)
}

// -------------------------------------------------------------------

// CTwoFactor_RemoveAuthenticator_Response

// optional bool success = 1 [(.proto.steam.description) = "True if request succeeeded. The mobile app checks this."];
inline bool CTwoFactor_RemoveAuthenticator_Response::has_success() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTwoFactor_RemoveAuthenticator_Response::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CTwoFactor_RemoveAuthenticator_Response::success() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_RemoveAuthenticator_Response.success)
  return success_;
}
inline void CTwoFactor_RemoveAuthenticator_Response::set_success(bool value) {
  _has_bits_[0] |= 0x00000002u;
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_RemoveAuthenticator_Response.success)
}

// optional uint64 server_time = 3 [(.proto.steam.description) = "Current server time"];
inline bool CTwoFactor_RemoveAuthenticator_Response::has_server_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTwoFactor_RemoveAuthenticator_Response::clear_server_time() {
  server_time_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CTwoFactor_RemoveAuthenticator_Response::server_time() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_RemoveAuthenticator_Response.server_time)
  return server_time_;
}
inline void CTwoFactor_RemoveAuthenticator_Response::set_server_time(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  server_time_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_RemoveAuthenticator_Response.server_time)
}

// optional uint32 revocation_attempts_remaining = 5 [(.proto.steam.description) = "Number of revocation code attempts remaining"];
inline bool CTwoFactor_RemoveAuthenticator_Response::has_revocation_attempts_remaining() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTwoFactor_RemoveAuthenticator_Response::clear_revocation_attempts_remaining() {
  revocation_attempts_remaining_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CTwoFactor_RemoveAuthenticator_Response::revocation_attempts_remaining() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_RemoveAuthenticator_Response.revocation_attempts_remaining)
  return revocation_attempts_remaining_;
}
inline void CTwoFactor_RemoveAuthenticator_Response::set_revocation_attempts_remaining(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  revocation_attempts_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_RemoveAuthenticator_Response.revocation_attempts_remaining)
}

// -------------------------------------------------------------------

// CTwoFactor_CreateEmergencyCodes_Request

// -------------------------------------------------------------------

// CTwoFactor_CreateEmergencyCodes_Response

// repeated string codes = 1 [(.proto.steam.description) = "Emergency codes"];
inline int CTwoFactor_CreateEmergencyCodes_Response::codes_size() const {
  return codes_.size();
}
inline void CTwoFactor_CreateEmergencyCodes_Response::clear_codes() {
  codes_.Clear();
}
inline const ::std::string& CTwoFactor_CreateEmergencyCodes_Response::codes(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_CreateEmergencyCodes_Response.codes)
  return codes_.Get(index);
}
inline ::std::string* CTwoFactor_CreateEmergencyCodes_Response::mutable_codes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_CreateEmergencyCodes_Response.codes)
  return codes_.Mutable(index);
}
inline void CTwoFactor_CreateEmergencyCodes_Response::set_codes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_CreateEmergencyCodes_Response.codes)
  codes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CTwoFactor_CreateEmergencyCodes_Response::set_codes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_CreateEmergencyCodes_Response.codes)
  codes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CTwoFactor_CreateEmergencyCodes_Response::set_codes(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  codes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_CreateEmergencyCodes_Response.codes)
}
inline void CTwoFactor_CreateEmergencyCodes_Response::set_codes(int index, const char* value, size_t size) {
  codes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_CreateEmergencyCodes_Response.codes)
}
inline ::std::string* CTwoFactor_CreateEmergencyCodes_Response::add_codes() {
  // @@protoc_insertion_point(field_add_mutable:proto.steam.CTwoFactor_CreateEmergencyCodes_Response.codes)
  return codes_.Add();
}
inline void CTwoFactor_CreateEmergencyCodes_Response::add_codes(const ::std::string& value) {
  codes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.steam.CTwoFactor_CreateEmergencyCodes_Response.codes)
}
#if LANG_CXX11
inline void CTwoFactor_CreateEmergencyCodes_Response::add_codes(::std::string&& value) {
  codes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.steam.CTwoFactor_CreateEmergencyCodes_Response.codes)
}
#endif
inline void CTwoFactor_CreateEmergencyCodes_Response::add_codes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  codes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.steam.CTwoFactor_CreateEmergencyCodes_Response.codes)
}
inline void CTwoFactor_CreateEmergencyCodes_Response::add_codes(const char* value, size_t size) {
  codes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.steam.CTwoFactor_CreateEmergencyCodes_Response.codes)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CTwoFactor_CreateEmergencyCodes_Response::codes() const {
  // @@protoc_insertion_point(field_list:proto.steam.CTwoFactor_CreateEmergencyCodes_Response.codes)
  return codes_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
CTwoFactor_CreateEmergencyCodes_Response::mutable_codes() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CTwoFactor_CreateEmergencyCodes_Response.codes)
  return &codes_;
}

// -------------------------------------------------------------------

// CTwoFactor_DestroyEmergencyCodes_Request

// optional fixed64 steamid = 1 [(.proto.steam.description) = "steamid to use"];
inline bool CTwoFactor_DestroyEmergencyCodes_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTwoFactor_DestroyEmergencyCodes_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CTwoFactor_DestroyEmergencyCodes_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_DestroyEmergencyCodes_Request.steamid)
  return steamid_;
}
inline void CTwoFactor_DestroyEmergencyCodes_Request::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_DestroyEmergencyCodes_Request.steamid)
}

// -------------------------------------------------------------------

// CTwoFactor_DestroyEmergencyCodes_Response

// -------------------------------------------------------------------

// CTwoFactor_ValidateToken_Request

// optional string code = 1 [(.proto.steam.description) = "code to validate"];
inline bool CTwoFactor_ValidateToken_Request::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTwoFactor_ValidateToken_Request::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CTwoFactor_ValidateToken_Request::code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_ValidateToken_Request.code)
  return code_.GetNoArena();
}
inline void CTwoFactor_ValidateToken_Request::set_code(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_ValidateToken_Request.code)
}
#if LANG_CXX11
inline void CTwoFactor_ValidateToken_Request::set_code(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CTwoFactor_ValidateToken_Request.code)
}
#endif
inline void CTwoFactor_ValidateToken_Request::set_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CTwoFactor_ValidateToken_Request.code)
}
inline void CTwoFactor_ValidateToken_Request::set_code(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CTwoFactor_ValidateToken_Request.code)
}
inline ::std::string* CTwoFactor_ValidateToken_Request::mutable_code() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CTwoFactor_ValidateToken_Request.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTwoFactor_ValidateToken_Request::release_code() {
  // @@protoc_insertion_point(field_release:proto.steam.CTwoFactor_ValidateToken_Request.code)
  if (!has_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return code_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTwoFactor_ValidateToken_Request::set_allocated_code(::std::string* code) {
  if (code != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CTwoFactor_ValidateToken_Request.code)
}

// -------------------------------------------------------------------

// CTwoFactor_ValidateToken_Response

// optional bool valid = 1 [(.proto.steam.description) = "result of validation"];
inline bool CTwoFactor_ValidateToken_Response::has_valid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTwoFactor_ValidateToken_Response::clear_valid() {
  valid_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CTwoFactor_ValidateToken_Response::valid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CTwoFactor_ValidateToken_Response.valid)
  return valid_;
}
inline void CTwoFactor_ValidateToken_Response::set_valid(bool value) {
  _has_bits_[0] |= 0x00000001u;
  valid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CTwoFactor_ValidateToken_Response.valid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_steammessages_5ftwofactor_2esteamclient_2eproto
