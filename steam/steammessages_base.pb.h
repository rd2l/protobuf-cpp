// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_base.proto

#ifndef PROTOBUF_INCLUDED_steammessages_5fbase_2eproto
#define PROTOBUF_INCLUDED_steammessages_5fbase_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fbase_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fbase_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_steammessages_5fbase_2eproto();
namespace proto {
namespace steam {
class CCDDBAppDetailCommon;
class CCDDBAppDetailCommonDefaultTypeInternal;
extern CCDDBAppDetailCommonDefaultTypeInternal _CCDDBAppDetailCommon_default_instance_;
class CCuratorPreferences;
class CCuratorPreferencesDefaultTypeInternal;
extern CCuratorPreferencesDefaultTypeInternal _CCuratorPreferences_default_instance_;
class CLocalizationToken;
class CLocalizationTokenDefaultTypeInternal;
extern CLocalizationTokenDefaultTypeInternal _CLocalizationToken_default_instance_;
class CMsgAppRights;
class CMsgAppRightsDefaultTypeInternal;
extern CMsgAppRightsDefaultTypeInternal _CMsgAppRights_default_instance_;
class CMsgAuthTicket;
class CMsgAuthTicketDefaultTypeInternal;
extern CMsgAuthTicketDefaultTypeInternal _CMsgAuthTicket_default_instance_;
class CMsgIPAddress;
class CMsgIPAddressDefaultTypeInternal;
extern CMsgIPAddressDefaultTypeInternal _CMsgIPAddress_default_instance_;
class CMsgMulti;
class CMsgMultiDefaultTypeInternal;
extern CMsgMultiDefaultTypeInternal _CMsgMulti_default_instance_;
class CMsgProtoBufHeader;
class CMsgProtoBufHeaderDefaultTypeInternal;
extern CMsgProtoBufHeaderDefaultTypeInternal _CMsgProtoBufHeader_default_instance_;
class CMsgProtobufWrapped;
class CMsgProtobufWrappedDefaultTypeInternal;
extern CMsgProtobufWrappedDefaultTypeInternal _CMsgProtobufWrapped_default_instance_;
}  // namespace steam
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::steam::CCDDBAppDetailCommon* Arena::CreateMaybeMessage<::proto::steam::CCDDBAppDetailCommon>(Arena*);
template<> ::proto::steam::CCuratorPreferences* Arena::CreateMaybeMessage<::proto::steam::CCuratorPreferences>(Arena*);
template<> ::proto::steam::CLocalizationToken* Arena::CreateMaybeMessage<::proto::steam::CLocalizationToken>(Arena*);
template<> ::proto::steam::CMsgAppRights* Arena::CreateMaybeMessage<::proto::steam::CMsgAppRights>(Arena*);
template<> ::proto::steam::CMsgAuthTicket* Arena::CreateMaybeMessage<::proto::steam::CMsgAuthTicket>(Arena*);
template<> ::proto::steam::CMsgIPAddress* Arena::CreateMaybeMessage<::proto::steam::CMsgIPAddress>(Arena*);
template<> ::proto::steam::CMsgMulti* Arena::CreateMaybeMessage<::proto::steam::CMsgMulti>(Arena*);
template<> ::proto::steam::CMsgProtoBufHeader* Arena::CreateMaybeMessage<::proto::steam::CMsgProtoBufHeader>(Arena*);
template<> ::proto::steam::CMsgProtobufWrapped* Arena::CreateMaybeMessage<::proto::steam::CMsgProtobufWrapped>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace steam {

// ===================================================================

class CMsgIPAddress final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgIPAddress) */ {
 public:
  CMsgIPAddress();
  virtual ~CMsgIPAddress();

  CMsgIPAddress(const CMsgIPAddress& from);

  inline CMsgIPAddress& operator=(const CMsgIPAddress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgIPAddress(CMsgIPAddress&& from) noexcept
    : CMsgIPAddress() {
    *this = ::std::move(from);
  }

  inline CMsgIPAddress& operator=(CMsgIPAddress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgIPAddress& default_instance();

  enum IpCase {
    kV4 = 1,
    kV6 = 2,
    IP_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgIPAddress* internal_default_instance() {
    return reinterpret_cast<const CMsgIPAddress*>(
               &_CMsgIPAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CMsgIPAddress* other);
  friend void swap(CMsgIPAddress& a, CMsgIPAddress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgIPAddress* New() const final {
    return CreateMaybeMessage<CMsgIPAddress>(nullptr);
  }

  CMsgIPAddress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgIPAddress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgIPAddress& from);
  void MergeFrom(const CMsgIPAddress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgIPAddress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 v4 = 1;
  bool has_v4() const;
  void clear_v4();
  static const int kV4FieldNumber = 1;
  ::google::protobuf::uint32 v4() const;
  void set_v4(::google::protobuf::uint32 value);

  // optional bytes v6 = 2;
  bool has_v6() const;
  void clear_v6();
  static const int kV6FieldNumber = 2;
  const ::std::string& v6() const;
  void set_v6(const ::std::string& value);
  #if LANG_CXX11
  void set_v6(::std::string&& value);
  #endif
  void set_v6(const char* value);
  void set_v6(const void* value, size_t size);
  ::std::string* mutable_v6();
  ::std::string* release_v6();
  void set_allocated_v6(::std::string* v6);

  void clear_ip();
  IpCase ip_case() const;
  // @@protoc_insertion_point(class_scope:proto.steam.CMsgIPAddress)
 private:
  class HasBitSetters;
  void set_has_v4();
  void set_has_v6();

  inline bool has_ip() const;
  inline void clear_has_ip();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  union IpUnion {
    IpUnion() {}
    ::google::protobuf::uint32 v4_;
    ::google::protobuf::internal::ArenaStringPtr v6_;
  } ip_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_steammessages_5fbase_2eproto;
};
// -------------------------------------------------------------------

class CMsgProtoBufHeader final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgProtoBufHeader) */ {
 public:
  CMsgProtoBufHeader();
  virtual ~CMsgProtoBufHeader();

  CMsgProtoBufHeader(const CMsgProtoBufHeader& from);

  inline CMsgProtoBufHeader& operator=(const CMsgProtoBufHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgProtoBufHeader(CMsgProtoBufHeader&& from) noexcept
    : CMsgProtoBufHeader() {
    *this = ::std::move(from);
  }

  inline CMsgProtoBufHeader& operator=(CMsgProtoBufHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgProtoBufHeader& default_instance();

  enum IpAddrCase {
    kIp = 15,
    kIpV6 = 29,
    IP_ADDR_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgProtoBufHeader* internal_default_instance() {
    return reinterpret_cast<const CMsgProtoBufHeader*>(
               &_CMsgProtoBufHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CMsgProtoBufHeader* other);
  friend void swap(CMsgProtoBufHeader& a, CMsgProtoBufHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgProtoBufHeader* New() const final {
    return CreateMaybeMessage<CMsgProtoBufHeader>(nullptr);
  }

  CMsgProtoBufHeader* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgProtoBufHeader>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgProtoBufHeader& from);
  void MergeFrom(const CMsgProtoBufHeader& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgProtoBufHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 forward_to_sysid = 27;
  int forward_to_sysid_size() const;
  void clear_forward_to_sysid();
  static const int kForwardToSysidFieldNumber = 27;
  ::google::protobuf::uint32 forward_to_sysid(int index) const;
  void set_forward_to_sysid(int index, ::google::protobuf::uint32 value);
  void add_forward_to_sysid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      forward_to_sysid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_forward_to_sysid();

  // optional string target_job_name = 12;
  bool has_target_job_name() const;
  void clear_target_job_name();
  static const int kTargetJobNameFieldNumber = 12;
  const ::std::string& target_job_name() const;
  void set_target_job_name(const ::std::string& value);
  #if LANG_CXX11
  void set_target_job_name(::std::string&& value);
  #endif
  void set_target_job_name(const char* value);
  void set_target_job_name(const char* value, size_t size);
  ::std::string* mutable_target_job_name();
  ::std::string* release_target_job_name();
  void set_allocated_target_job_name(::std::string* target_job_name);

  // optional string error_message = 14;
  bool has_error_message() const;
  void clear_error_message();
  static const int kErrorMessageFieldNumber = 14;
  const ::std::string& error_message() const;
  void set_error_message(const ::std::string& value);
  #if LANG_CXX11
  void set_error_message(::std::string&& value);
  #endif
  void set_error_message(const char* value);
  void set_error_message(const char* value, size_t size);
  ::std::string* mutable_error_message();
  ::std::string* release_error_message();
  void set_allocated_error_message(::std::string* error_message);

  // optional string wg_token = 30;
  bool has_wg_token() const;
  void clear_wg_token();
  static const int kWgTokenFieldNumber = 30;
  const ::std::string& wg_token() const;
  void set_wg_token(const ::std::string& value);
  #if LANG_CXX11
  void set_wg_token(::std::string&& value);
  #endif
  void set_wg_token(const char* value);
  void set_wg_token(const char* value, size_t size);
  ::std::string* mutable_wg_token();
  ::std::string* release_wg_token();
  void set_allocated_wg_token(::std::string* wg_token);

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional int32 client_sessionid = 2;
  bool has_client_sessionid() const;
  void clear_client_sessionid();
  static const int kClientSessionidFieldNumber = 2;
  ::google::protobuf::int32 client_sessionid() const;
  void set_client_sessionid(::google::protobuf::int32 value);

  // optional uint32 routing_appid = 3;
  bool has_routing_appid() const;
  void clear_routing_appid();
  static const int kRoutingAppidFieldNumber = 3;
  ::google::protobuf::uint32 routing_appid() const;
  void set_routing_appid(::google::protobuf::uint32 value);

  // optional uint32 auth_account_flags = 16;
  bool has_auth_account_flags() const;
  void clear_auth_account_flags();
  static const int kAuthAccountFlagsFieldNumber = 16;
  ::google::protobuf::uint32 auth_account_flags() const;
  void set_auth_account_flags(::google::protobuf::uint32 value);

  // optional uint32 publisher_group_id = 19;
  bool has_publisher_group_id() const;
  void clear_publisher_group_id();
  static const int kPublisherGroupIdFieldNumber = 19;
  ::google::protobuf::uint32 publisher_group_id() const;
  void set_publisher_group_id(::google::protobuf::uint32 value);

  // optional uint64 trace_tag = 21;
  bool has_trace_tag() const;
  void clear_trace_tag();
  static const int kTraceTagFieldNumber = 21;
  ::google::protobuf::uint64 trace_tag() const;
  void set_trace_tag(::google::protobuf::uint64 value);

  // optional uint32 sysid = 20;
  bool has_sysid() const;
  void clear_sysid();
  static const int kSysidFieldNumber = 20;
  ::google::protobuf::uint32 sysid() const;
  void set_sysid(::google::protobuf::uint32 value);

  // optional uint32 token_source = 22;
  bool has_token_source() const;
  void clear_token_source();
  static const int kTokenSourceFieldNumber = 22;
  ::google::protobuf::uint32 token_source() const;
  void set_token_source(::google::protobuf::uint32 value);

  // optional int32 seq_num = 24;
  bool has_seq_num() const;
  void clear_seq_num();
  static const int kSeqNumFieldNumber = 24;
  ::google::protobuf::int32 seq_num() const;
  void set_seq_num(::google::protobuf::int32 value);

  // optional bool admin_spoofing_user = 23;
  bool has_admin_spoofing_user() const;
  void clear_admin_spoofing_user();
  static const int kAdminSpoofingUserFieldNumber = 23;
  bool admin_spoofing_user() const;
  void set_admin_spoofing_user(bool value);

  // optional bool is_from_external_source = 26;
  bool has_is_from_external_source() const;
  void clear_is_from_external_source();
  static const int kIsFromExternalSourceFieldNumber = 26;
  bool is_from_external_source() const;
  void set_is_from_external_source(bool value);

  // optional uint32 webapi_key_id = 25;
  bool has_webapi_key_id() const;
  void clear_webapi_key_id();
  static const int kWebapiKeyIdFieldNumber = 25;
  ::google::protobuf::uint32 webapi_key_id() const;
  void set_webapi_key_id(::google::protobuf::uint32 value);

  // optional uint32 cm_sysid = 28;
  bool has_cm_sysid() const;
  void clear_cm_sysid();
  static const int kCmSysidFieldNumber = 28;
  ::google::protobuf::uint32 cm_sysid() const;
  void set_cm_sysid(::google::protobuf::uint32 value);

  // optional fixed64 jobid_source = 10 [default = 18446744073709551615];
  bool has_jobid_source() const;
  void clear_jobid_source();
  static const int kJobidSourceFieldNumber = 10;
  ::google::protobuf::uint64 jobid_source() const;
  void set_jobid_source(::google::protobuf::uint64 value);

  // optional fixed64 jobid_target = 11 [default = 18446744073709551615];
  bool has_jobid_target() const;
  void clear_jobid_target();
  static const int kJobidTargetFieldNumber = 11;
  ::google::protobuf::uint64 jobid_target() const;
  void set_jobid_target(::google::protobuf::uint64 value);

  // optional int32 eresult = 13 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 13;
  ::google::protobuf::int32 eresult() const;
  void set_eresult(::google::protobuf::int32 value);

  // optional int32 transport_error = 17 [default = 1];
  bool has_transport_error() const;
  void clear_transport_error();
  static const int kTransportErrorFieldNumber = 17;
  ::google::protobuf::int32 transport_error() const;
  void set_transport_error(::google::protobuf::int32 value);

  // optional uint64 messageid = 18 [default = 18446744073709551615];
  bool has_messageid() const;
  void clear_messageid();
  static const int kMessageidFieldNumber = 18;
  ::google::protobuf::uint64 messageid() const;
  void set_messageid(::google::protobuf::uint64 value);

  // optional uint32 ip = 15;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 15;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // optional bytes ip_v6 = 29;
  bool has_ip_v6() const;
  void clear_ip_v6();
  static const int kIpV6FieldNumber = 29;
  const ::std::string& ip_v6() const;
  void set_ip_v6(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_v6(::std::string&& value);
  #endif
  void set_ip_v6(const char* value);
  void set_ip_v6(const void* value, size_t size);
  ::std::string* mutable_ip_v6();
  ::std::string* release_ip_v6();
  void set_allocated_ip_v6(::std::string* ip_v6);

  void clear_ip_addr();
  IpAddrCase ip_addr_case() const;
  // @@protoc_insertion_point(class_scope:proto.steam.CMsgProtoBufHeader)
 private:
  class HasBitSetters;
  void set_has_ip();
  void set_has_ip_v6();

  inline bool has_ip_addr() const;
  inline void clear_has_ip_addr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > forward_to_sysid_;
  ::google::protobuf::internal::ArenaStringPtr target_job_name_;
  ::google::protobuf::internal::ArenaStringPtr error_message_;
  ::google::protobuf::internal::ArenaStringPtr wg_token_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::int32 client_sessionid_;
  ::google::protobuf::uint32 routing_appid_;
  ::google::protobuf::uint32 auth_account_flags_;
  ::google::protobuf::uint32 publisher_group_id_;
  ::google::protobuf::uint64 trace_tag_;
  ::google::protobuf::uint32 sysid_;
  ::google::protobuf::uint32 token_source_;
  ::google::protobuf::int32 seq_num_;
  bool admin_spoofing_user_;
  bool is_from_external_source_;
  ::google::protobuf::uint32 webapi_key_id_;
  ::google::protobuf::uint32 cm_sysid_;
  ::google::protobuf::uint64 jobid_source_;
  ::google::protobuf::uint64 jobid_target_;
  ::google::protobuf::int32 eresult_;
  ::google::protobuf::int32 transport_error_;
  ::google::protobuf::uint64 messageid_;
  union IpAddrUnion {
    IpAddrUnion() {}
    ::google::protobuf::uint32 ip_;
    ::google::protobuf::internal::ArenaStringPtr ip_v6_;
  } ip_addr_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_steammessages_5fbase_2eproto;
};
// -------------------------------------------------------------------

class CMsgMulti final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgMulti) */ {
 public:
  CMsgMulti();
  virtual ~CMsgMulti();

  CMsgMulti(const CMsgMulti& from);

  inline CMsgMulti& operator=(const CMsgMulti& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMulti(CMsgMulti&& from) noexcept
    : CMsgMulti() {
    *this = ::std::move(from);
  }

  inline CMsgMulti& operator=(CMsgMulti&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgMulti& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMulti* internal_default_instance() {
    return reinterpret_cast<const CMsgMulti*>(
               &_CMsgMulti_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CMsgMulti* other);
  friend void swap(CMsgMulti& a, CMsgMulti& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMulti* New() const final {
    return CreateMaybeMessage<CMsgMulti>(nullptr);
  }

  CMsgMulti* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgMulti>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgMulti& from);
  void MergeFrom(const CMsgMulti& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgMulti* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes message_body = 2;
  bool has_message_body() const;
  void clear_message_body();
  static const int kMessageBodyFieldNumber = 2;
  const ::std::string& message_body() const;
  void set_message_body(const ::std::string& value);
  #if LANG_CXX11
  void set_message_body(::std::string&& value);
  #endif
  void set_message_body(const char* value);
  void set_message_body(const void* value, size_t size);
  ::std::string* mutable_message_body();
  ::std::string* release_message_body();
  void set_allocated_message_body(::std::string* message_body);

  // optional uint32 size_unzipped = 1;
  bool has_size_unzipped() const;
  void clear_size_unzipped();
  static const int kSizeUnzippedFieldNumber = 1;
  ::google::protobuf::uint32 size_unzipped() const;
  void set_size_unzipped(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgMulti)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_body_;
  ::google::protobuf::uint32 size_unzipped_;
  friend struct ::TableStruct_steammessages_5fbase_2eproto;
};
// -------------------------------------------------------------------

class CMsgProtobufWrapped final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgProtobufWrapped) */ {
 public:
  CMsgProtobufWrapped();
  virtual ~CMsgProtobufWrapped();

  CMsgProtobufWrapped(const CMsgProtobufWrapped& from);

  inline CMsgProtobufWrapped& operator=(const CMsgProtobufWrapped& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgProtobufWrapped(CMsgProtobufWrapped&& from) noexcept
    : CMsgProtobufWrapped() {
    *this = ::std::move(from);
  }

  inline CMsgProtobufWrapped& operator=(CMsgProtobufWrapped&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgProtobufWrapped& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgProtobufWrapped* internal_default_instance() {
    return reinterpret_cast<const CMsgProtobufWrapped*>(
               &_CMsgProtobufWrapped_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CMsgProtobufWrapped* other);
  friend void swap(CMsgProtobufWrapped& a, CMsgProtobufWrapped& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgProtobufWrapped* New() const final {
    return CreateMaybeMessage<CMsgProtobufWrapped>(nullptr);
  }

  CMsgProtobufWrapped* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgProtobufWrapped>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgProtobufWrapped& from);
  void MergeFrom(const CMsgProtobufWrapped& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgProtobufWrapped* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes message_body = 1;
  bool has_message_body() const;
  void clear_message_body();
  static const int kMessageBodyFieldNumber = 1;
  const ::std::string& message_body() const;
  void set_message_body(const ::std::string& value);
  #if LANG_CXX11
  void set_message_body(::std::string&& value);
  #endif
  void set_message_body(const char* value);
  void set_message_body(const void* value, size_t size);
  ::std::string* mutable_message_body();
  ::std::string* release_message_body();
  void set_allocated_message_body(::std::string* message_body);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgProtobufWrapped)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_body_;
  friend struct ::TableStruct_steammessages_5fbase_2eproto;
};
// -------------------------------------------------------------------

class CMsgAuthTicket final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgAuthTicket) */ {
 public:
  CMsgAuthTicket();
  virtual ~CMsgAuthTicket();

  CMsgAuthTicket(const CMsgAuthTicket& from);

  inline CMsgAuthTicket& operator=(const CMsgAuthTicket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAuthTicket(CMsgAuthTicket&& from) noexcept
    : CMsgAuthTicket() {
    *this = ::std::move(from);
  }

  inline CMsgAuthTicket& operator=(CMsgAuthTicket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAuthTicket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAuthTicket* internal_default_instance() {
    return reinterpret_cast<const CMsgAuthTicket*>(
               &_CMsgAuthTicket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CMsgAuthTicket* other);
  friend void swap(CMsgAuthTicket& a, CMsgAuthTicket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAuthTicket* New() const final {
    return CreateMaybeMessage<CMsgAuthTicket>(nullptr);
  }

  CMsgAuthTicket* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAuthTicket>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAuthTicket& from);
  void MergeFrom(const CMsgAuthTicket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAuthTicket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes ticket = 7;
  bool has_ticket() const;
  void clear_ticket();
  static const int kTicketFieldNumber = 7;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const void* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // optional fixed64 steamid = 3;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 3;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 estate = 1;
  bool has_estate() const;
  void clear_estate();
  static const int kEstateFieldNumber = 1;
  ::google::protobuf::uint32 estate() const;
  void set_estate(::google::protobuf::uint32 value);

  // optional uint32 h_steam_pipe = 5;
  bool has_h_steam_pipe() const;
  void clear_h_steam_pipe();
  static const int kHSteamPipeFieldNumber = 5;
  ::google::protobuf::uint32 h_steam_pipe() const;
  void set_h_steam_pipe(::google::protobuf::uint32 value);

  // optional fixed64 gameid = 4;
  bool has_gameid() const;
  void clear_gameid();
  static const int kGameidFieldNumber = 4;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // optional uint32 ticket_crc = 6;
  bool has_ticket_crc() const;
  void clear_ticket_crc();
  static const int kTicketCrcFieldNumber = 6;
  ::google::protobuf::uint32 ticket_crc() const;
  void set_ticket_crc(::google::protobuf::uint32 value);

  // optional uint32 eresult = 2 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 2;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgAuthTicket)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 estate_;
  ::google::protobuf::uint32 h_steam_pipe_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::uint32 ticket_crc_;
  ::google::protobuf::uint32 eresult_;
  friend struct ::TableStruct_steammessages_5fbase_2eproto;
};
// -------------------------------------------------------------------

class CCDDBAppDetailCommon final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCDDBAppDetailCommon) */ {
 public:
  CCDDBAppDetailCommon();
  virtual ~CCDDBAppDetailCommon();

  CCDDBAppDetailCommon(const CCDDBAppDetailCommon& from);

  inline CCDDBAppDetailCommon& operator=(const CCDDBAppDetailCommon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCDDBAppDetailCommon(CCDDBAppDetailCommon&& from) noexcept
    : CCDDBAppDetailCommon() {
    *this = ::std::move(from);
  }

  inline CCDDBAppDetailCommon& operator=(CCDDBAppDetailCommon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCDDBAppDetailCommon& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCDDBAppDetailCommon* internal_default_instance() {
    return reinterpret_cast<const CCDDBAppDetailCommon*>(
               &_CCDDBAppDetailCommon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CCDDBAppDetailCommon* other);
  friend void swap(CCDDBAppDetailCommon& a, CCDDBAppDetailCommon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCDDBAppDetailCommon* New() const final {
    return CreateMaybeMessage<CCDDBAppDetailCommon>(nullptr);
  }

  CCDDBAppDetailCommon* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCDDBAppDetailCommon>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCDDBAppDetailCommon& from);
  void MergeFrom(const CCDDBAppDetailCommon& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCDDBAppDetailCommon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string icon = 3;
  bool has_icon() const;
  void clear_icon();
  static const int kIconFieldNumber = 3;
  const ::std::string& icon() const;
  void set_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_icon(::std::string&& value);
  #endif
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  ::std::string* mutable_icon();
  ::std::string* release_icon();
  void set_allocated_icon(::std::string* icon);

  // optional string logo = 4;
  bool has_logo() const;
  void clear_logo();
  static const int kLogoFieldNumber = 4;
  const ::std::string& logo() const;
  void set_logo(const ::std::string& value);
  #if LANG_CXX11
  void set_logo(::std::string&& value);
  #endif
  void set_logo(const char* value);
  void set_logo(const char* value, size_t size);
  ::std::string* mutable_logo();
  ::std::string* release_logo();
  void set_allocated_logo(::std::string* logo);

  // optional string logo_small = 5;
  bool has_logo_small() const;
  void clear_logo_small();
  static const int kLogoSmallFieldNumber = 5;
  const ::std::string& logo_small() const;
  void set_logo_small(const ::std::string& value);
  #if LANG_CXX11
  void set_logo_small(::std::string&& value);
  #endif
  void set_logo_small(const char* value);
  void set_logo_small(const char* value, size_t size);
  ::std::string* mutable_logo_small();
  ::std::string* release_logo_small();
  void set_allocated_logo_small(::std::string* logo_small);

  // optional string friendly_name = 10;
  bool has_friendly_name() const;
  void clear_friendly_name();
  static const int kFriendlyNameFieldNumber = 10;
  const ::std::string& friendly_name() const;
  void set_friendly_name(const ::std::string& value);
  #if LANG_CXX11
  void set_friendly_name(::std::string&& value);
  #endif
  void set_friendly_name(const char* value);
  void set_friendly_name(const char* value, size_t size);
  ::std::string* mutable_friendly_name();
  ::std::string* release_friendly_name();
  void set_allocated_friendly_name(::std::string* friendly_name);

  // optional string propagation = 11;
  bool has_propagation() const;
  void clear_propagation();
  static const int kPropagationFieldNumber = 11;
  const ::std::string& propagation() const;
  void set_propagation(const ::std::string& value);
  #if LANG_CXX11
  void set_propagation(::std::string&& value);
  #endif
  void set_propagation(const char* value);
  void set_propagation(const char* value, size_t size);
  ::std::string* mutable_propagation();
  ::std::string* release_propagation();
  void set_allocated_propagation(::std::string* propagation);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional bool tool = 6;
  bool has_tool() const;
  void clear_tool();
  static const int kToolFieldNumber = 6;
  bool tool() const;
  void set_tool(bool value);

  // optional bool demo = 7;
  bool has_demo() const;
  void clear_demo();
  static const int kDemoFieldNumber = 7;
  bool demo() const;
  void set_demo(bool value);

  // optional bool media = 8;
  bool has_media() const;
  void clear_media();
  static const int kMediaFieldNumber = 8;
  bool media() const;
  void set_media(bool value);

  // optional bool community_visible_stats = 9;
  bool has_community_visible_stats() const;
  void clear_community_visible_stats();
  static const int kCommunityVisibleStatsFieldNumber = 9;
  bool community_visible_stats() const;
  void set_community_visible_stats(bool value);

  // optional bool has_adult_content = 12;
  bool has_has_adult_content() const;
  void clear_has_adult_content();
  static const int kHasAdultContentFieldNumber = 12;
  bool has_adult_content() const;
  void set_has_adult_content(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CCDDBAppDetailCommon)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr icon_;
  ::google::protobuf::internal::ArenaStringPtr logo_;
  ::google::protobuf::internal::ArenaStringPtr logo_small_;
  ::google::protobuf::internal::ArenaStringPtr friendly_name_;
  ::google::protobuf::internal::ArenaStringPtr propagation_;
  ::google::protobuf::uint32 appid_;
  bool tool_;
  bool demo_;
  bool media_;
  bool community_visible_stats_;
  bool has_adult_content_;
  friend struct ::TableStruct_steammessages_5fbase_2eproto;
};
// -------------------------------------------------------------------

class CMsgAppRights final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgAppRights) */ {
 public:
  CMsgAppRights();
  virtual ~CMsgAppRights();

  CMsgAppRights(const CMsgAppRights& from);

  inline CMsgAppRights& operator=(const CMsgAppRights& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAppRights(CMsgAppRights&& from) noexcept
    : CMsgAppRights() {
    *this = ::std::move(from);
  }

  inline CMsgAppRights& operator=(CMsgAppRights&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CMsgAppRights& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAppRights* internal_default_instance() {
    return reinterpret_cast<const CMsgAppRights*>(
               &_CMsgAppRights_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CMsgAppRights* other);
  friend void swap(CMsgAppRights& a, CMsgAppRights& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAppRights* New() const final {
    return CreateMaybeMessage<CMsgAppRights>(nullptr);
  }

  CMsgAppRights* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAppRights>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CMsgAppRights& from);
  void MergeFrom(const CMsgAppRights& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAppRights* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool edit_info = 1;
  bool has_edit_info() const;
  void clear_edit_info();
  static const int kEditInfoFieldNumber = 1;
  bool edit_info() const;
  void set_edit_info(bool value);

  // optional bool publish = 2;
  bool has_publish() const;
  void clear_publish();
  static const int kPublishFieldNumber = 2;
  bool publish() const;
  void set_publish(bool value);

  // optional bool view_error_data = 3;
  bool has_view_error_data() const;
  void clear_view_error_data();
  static const int kViewErrorDataFieldNumber = 3;
  bool view_error_data() const;
  void set_view_error_data(bool value);

  // optional bool download = 4;
  bool has_download() const;
  void clear_download();
  static const int kDownloadFieldNumber = 4;
  bool download() const;
  void set_download(bool value);

  // optional bool upload_cdkeys = 5;
  bool has_upload_cdkeys() const;
  void clear_upload_cdkeys();
  static const int kUploadCdkeysFieldNumber = 5;
  bool upload_cdkeys() const;
  void set_upload_cdkeys(bool value);

  // optional bool generate_cdkeys = 6;
  bool has_generate_cdkeys() const;
  void clear_generate_cdkeys();
  static const int kGenerateCdkeysFieldNumber = 6;
  bool generate_cdkeys() const;
  void set_generate_cdkeys(bool value);

  // optional bool view_financials = 7;
  bool has_view_financials() const;
  void clear_view_financials();
  static const int kViewFinancialsFieldNumber = 7;
  bool view_financials() const;
  void set_view_financials(bool value);

  // optional bool manage_ceg = 8;
  bool has_manage_ceg() const;
  void clear_manage_ceg();
  static const int kManageCegFieldNumber = 8;
  bool manage_ceg() const;
  void set_manage_ceg(bool value);

  // optional bool manage_signing = 9;
  bool has_manage_signing() const;
  void clear_manage_signing();
  static const int kManageSigningFieldNumber = 9;
  bool manage_signing() const;
  void set_manage_signing(bool value);

  // optional bool manage_cdkeys = 10;
  bool has_manage_cdkeys() const;
  void clear_manage_cdkeys();
  static const int kManageCdkeysFieldNumber = 10;
  bool manage_cdkeys() const;
  void set_manage_cdkeys(bool value);

  // optional bool edit_marketing = 11;
  bool has_edit_marketing() const;
  void clear_edit_marketing();
  static const int kEditMarketingFieldNumber = 11;
  bool edit_marketing() const;
  void set_edit_marketing(bool value);

  // optional bool economy_support = 12;
  bool has_economy_support() const;
  void clear_economy_support();
  static const int kEconomySupportFieldNumber = 12;
  bool economy_support() const;
  void set_economy_support(bool value);

  // optional bool economy_support_supervisor = 13;
  bool has_economy_support_supervisor() const;
  void clear_economy_support_supervisor();
  static const int kEconomySupportSupervisorFieldNumber = 13;
  bool economy_support_supervisor() const;
  void set_economy_support_supervisor(bool value);

  // optional bool manage_pricing = 14;
  bool has_manage_pricing() const;
  void clear_manage_pricing();
  static const int kManagePricingFieldNumber = 14;
  bool manage_pricing() const;
  void set_manage_pricing(bool value);

  // optional bool broadcast_live = 15;
  bool has_broadcast_live() const;
  void clear_broadcast_live();
  static const int kBroadcastLiveFieldNumber = 15;
  bool broadcast_live() const;
  void set_broadcast_live(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgAppRights)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool edit_info_;
  bool publish_;
  bool view_error_data_;
  bool download_;
  bool upload_cdkeys_;
  bool generate_cdkeys_;
  bool view_financials_;
  bool manage_ceg_;
  bool manage_signing_;
  bool manage_cdkeys_;
  bool edit_marketing_;
  bool economy_support_;
  bool economy_support_supervisor_;
  bool manage_pricing_;
  bool broadcast_live_;
  friend struct ::TableStruct_steammessages_5fbase_2eproto;
};
// -------------------------------------------------------------------

class CCuratorPreferences final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCuratorPreferences) */ {
 public:
  CCuratorPreferences();
  virtual ~CCuratorPreferences();

  CCuratorPreferences(const CCuratorPreferences& from);

  inline CCuratorPreferences& operator=(const CCuratorPreferences& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CCuratorPreferences(CCuratorPreferences&& from) noexcept
    : CCuratorPreferences() {
    *this = ::std::move(from);
  }

  inline CCuratorPreferences& operator=(CCuratorPreferences&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CCuratorPreferences& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CCuratorPreferences* internal_default_instance() {
    return reinterpret_cast<const CCuratorPreferences*>(
               &_CCuratorPreferences_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CCuratorPreferences* other);
  friend void swap(CCuratorPreferences& a, CCuratorPreferences& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CCuratorPreferences* New() const final {
    return CreateMaybeMessage<CCuratorPreferences>(nullptr);
  }

  CCuratorPreferences* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CCuratorPreferences>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CCuratorPreferences& from);
  void MergeFrom(const CCuratorPreferences& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCuratorPreferences* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 tagids_curated = 9;
  int tagids_curated_size() const;
  void clear_tagids_curated();
  static const int kTagidsCuratedFieldNumber = 9;
  ::google::protobuf::uint32 tagids_curated(int index) const;
  void set_tagids_curated(int index, ::google::protobuf::uint32 value);
  void add_tagids_curated(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tagids_curated() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tagids_curated();

  // repeated uint32 tagids_filtered = 10;
  int tagids_filtered_size() const;
  void clear_tagids_filtered();
  static const int kTagidsFilteredFieldNumber = 10;
  ::google::protobuf::uint32 tagids_filtered(int index) const;
  void set_tagids_filtered(int index, ::google::protobuf::uint32 value);
  void add_tagids_filtered(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tagids_filtered() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tagids_filtered();

  // optional string website_title = 11;
  bool has_website_title() const;
  void clear_website_title();
  static const int kWebsiteTitleFieldNumber = 11;
  const ::std::string& website_title() const;
  void set_website_title(const ::std::string& value);
  #if LANG_CXX11
  void set_website_title(::std::string&& value);
  #endif
  void set_website_title(const char* value);
  void set_website_title(const char* value, size_t size);
  ::std::string* mutable_website_title();
  ::std::string* release_website_title();
  void set_allocated_website_title(::std::string* website_title);

  // optional string website_url = 12;
  bool has_website_url() const;
  void clear_website_url();
  static const int kWebsiteUrlFieldNumber = 12;
  const ::std::string& website_url() const;
  void set_website_url(const ::std::string& value);
  #if LANG_CXX11
  void set_website_url(::std::string&& value);
  #endif
  void set_website_url(const char* value);
  void set_website_url(const char* value, size_t size);
  ::std::string* mutable_website_url();
  ::std::string* release_website_url();
  void set_allocated_website_url(::std::string* website_url);

  // optional string discussion_url = 13;
  bool has_discussion_url() const;
  void clear_discussion_url();
  static const int kDiscussionUrlFieldNumber = 13;
  const ::std::string& discussion_url() const;
  void set_discussion_url(const ::std::string& value);
  #if LANG_CXX11
  void set_discussion_url(::std::string&& value);
  #endif
  void set_discussion_url(const char* value);
  void set_discussion_url(const char* value, size_t size);
  ::std::string* mutable_discussion_url();
  ::std::string* release_discussion_url();
  void set_allocated_discussion_url(::std::string* discussion_url);

  // optional uint32 supported_languages = 1;
  bool has_supported_languages() const;
  void clear_supported_languages();
  static const int kSupportedLanguagesFieldNumber = 1;
  ::google::protobuf::uint32 supported_languages() const;
  void set_supported_languages(::google::protobuf::uint32 value);

  // optional bool platform_windows = 2;
  bool has_platform_windows() const;
  void clear_platform_windows();
  static const int kPlatformWindowsFieldNumber = 2;
  bool platform_windows() const;
  void set_platform_windows(bool value);

  // optional bool platform_mac = 3;
  bool has_platform_mac() const;
  void clear_platform_mac();
  static const int kPlatformMacFieldNumber = 3;
  bool platform_mac() const;
  void set_platform_mac(bool value);

  // optional bool platform_linux = 4;
  bool has_platform_linux() const;
  void clear_platform_linux();
  static const int kPlatformLinuxFieldNumber = 4;
  bool platform_linux() const;
  void set_platform_linux(bool value);

  // optional bool vr_content = 5;
  bool has_vr_content() const;
  void clear_vr_content();
  static const int kVrContentFieldNumber = 5;
  bool vr_content() const;
  void set_vr_content(bool value);

  // optional uint32 timestamp_updated = 8;
  bool has_timestamp_updated() const;
  void clear_timestamp_updated();
  static const int kTimestampUpdatedFieldNumber = 8;
  ::google::protobuf::uint32 timestamp_updated() const;
  void set_timestamp_updated(::google::protobuf::uint32 value);

  // optional bool adult_content_violence = 6;
  bool has_adult_content_violence() const;
  void clear_adult_content_violence();
  static const int kAdultContentViolenceFieldNumber = 6;
  bool adult_content_violence() const;
  void set_adult_content_violence(bool value);

  // optional bool adult_content_sex = 7;
  bool has_adult_content_sex() const;
  void clear_adult_content_sex();
  static const int kAdultContentSexFieldNumber = 7;
  bool adult_content_sex() const;
  void set_adult_content_sex(bool value);

  // optional bool show_broadcast = 14;
  bool has_show_broadcast() const;
  void clear_show_broadcast();
  static const int kShowBroadcastFieldNumber = 14;
  bool show_broadcast() const;
  void set_show_broadcast(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CCuratorPreferences)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tagids_curated_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tagids_filtered_;
  ::google::protobuf::internal::ArenaStringPtr website_title_;
  ::google::protobuf::internal::ArenaStringPtr website_url_;
  ::google::protobuf::internal::ArenaStringPtr discussion_url_;
  ::google::protobuf::uint32 supported_languages_;
  bool platform_windows_;
  bool platform_mac_;
  bool platform_linux_;
  bool vr_content_;
  ::google::protobuf::uint32 timestamp_updated_;
  bool adult_content_violence_;
  bool adult_content_sex_;
  bool show_broadcast_;
  friend struct ::TableStruct_steammessages_5fbase_2eproto;
};
// -------------------------------------------------------------------

class CLocalizationToken final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CLocalizationToken) */ {
 public:
  CLocalizationToken();
  virtual ~CLocalizationToken();

  CLocalizationToken(const CLocalizationToken& from);

  inline CLocalizationToken& operator=(const CLocalizationToken& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CLocalizationToken(CLocalizationToken&& from) noexcept
    : CLocalizationToken() {
    *this = ::std::move(from);
  }

  inline CLocalizationToken& operator=(CLocalizationToken&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CLocalizationToken& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CLocalizationToken* internal_default_instance() {
    return reinterpret_cast<const CLocalizationToken*>(
               &_CLocalizationToken_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CLocalizationToken* other);
  friend void swap(CLocalizationToken& a, CLocalizationToken& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CLocalizationToken* New() const final {
    return CreateMaybeMessage<CLocalizationToken>(nullptr);
  }

  CLocalizationToken* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CLocalizationToken>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CLocalizationToken& from);
  void MergeFrom(const CLocalizationToken& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CLocalizationToken* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string localized_string = 2;
  bool has_localized_string() const;
  void clear_localized_string();
  static const int kLocalizedStringFieldNumber = 2;
  const ::std::string& localized_string() const;
  void set_localized_string(const ::std::string& value);
  #if LANG_CXX11
  void set_localized_string(::std::string&& value);
  #endif
  void set_localized_string(const char* value);
  void set_localized_string(const char* value, size_t size);
  ::std::string* mutable_localized_string();
  ::std::string* release_localized_string();
  void set_allocated_localized_string(::std::string* localized_string);

  // optional uint32 language = 1;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 1;
  ::google::protobuf::uint32 language() const;
  void set_language(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CLocalizationToken)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr localized_string_;
  ::google::protobuf::uint32 language_;
  friend struct ::TableStruct_steammessages_5fbase_2eproto;
};
// ===================================================================

static const int kMsgpoolSoftLimitFieldNumber = 50000;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  msgpool_soft_limit;
static const int kMsgpoolHardLimitFieldNumber = 50001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  msgpool_hard_limit;
static const int kForcePhpGenerationFieldNumber = 50000;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  force_php_generation;
static const int kPhpOutputAlwaysNumberFieldNumber = 50020;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  php_output_always_number;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgIPAddress

// optional fixed32 v4 = 1;
inline bool CMsgIPAddress::has_v4() const {
  return ip_case() == kV4;
}
inline void CMsgIPAddress::set_has_v4() {
  _oneof_case_[0] = kV4;
}
inline void CMsgIPAddress::clear_v4() {
  if (has_v4()) {
    ip_.v4_ = 0u;
    clear_has_ip();
  }
}
inline ::google::protobuf::uint32 CMsgIPAddress::v4() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgIPAddress.v4)
  if (has_v4()) {
    return ip_.v4_;
  }
  return 0u;
}
inline void CMsgIPAddress::set_v4(::google::protobuf::uint32 value) {
  if (!has_v4()) {
    clear_ip();
    set_has_v4();
  }
  ip_.v4_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgIPAddress.v4)
}

// optional bytes v6 = 2;
inline bool CMsgIPAddress::has_v6() const {
  return ip_case() == kV6;
}
inline void CMsgIPAddress::set_has_v6() {
  _oneof_case_[0] = kV6;
}
inline void CMsgIPAddress::clear_v6() {
  if (has_v6()) {
    ip_.v6_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_ip();
  }
}
inline const ::std::string& CMsgIPAddress::v6() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgIPAddress.v6)
  if (has_v6()) {
    return ip_.v6_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void CMsgIPAddress::set_v6(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgIPAddress.v6)
  if (!has_v6()) {
    clear_ip();
    set_has_v6();
    ip_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ip_.v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgIPAddress.v6)
}
#if LANG_CXX11
inline void CMsgIPAddress::set_v6(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgIPAddress.v6)
  if (!has_v6()) {
    clear_ip();
    set_has_v6();
    ip_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ip_.v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgIPAddress.v6)
}
#endif
inline void CMsgIPAddress::set_v6(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_v6()) {
    clear_ip();
    set_has_v6();
    ip_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ip_.v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgIPAddress.v6)
}
inline void CMsgIPAddress::set_v6(const void* value, size_t size) {
  if (!has_v6()) {
    clear_ip();
    set_has_v6();
    ip_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ip_.v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgIPAddress.v6)
}
inline ::std::string* CMsgIPAddress::mutable_v6() {
  if (!has_v6()) {
    clear_ip();
    set_has_v6();
    ip_.v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgIPAddress.v6)
  return ip_.v6_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgIPAddress::release_v6() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgIPAddress.v6)
  if (has_v6()) {
    clear_has_ip();
    return ip_.v6_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void CMsgIPAddress::set_allocated_v6(::std::string* v6) {
  if (has_ip()) {
    clear_ip();
  }
  if (v6 != nullptr) {
    set_has_v6();
    ip_.v6_.UnsafeSetDefault(v6);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgIPAddress.v6)
}

inline bool CMsgIPAddress::has_ip() const {
  return ip_case() != IP_NOT_SET;
}
inline void CMsgIPAddress::clear_has_ip() {
  _oneof_case_[0] = IP_NOT_SET;
}
inline CMsgIPAddress::IpCase CMsgIPAddress::ip_case() const {
  return CMsgIPAddress::IpCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// CMsgProtoBufHeader

// optional fixed64 steamid = 1;
inline bool CMsgProtoBufHeader::has_steamid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgProtoBufHeader::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.steamid)
  return steamid_;
}
inline void CMsgProtoBufHeader::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.steamid)
}

// optional int32 client_sessionid = 2;
inline bool CMsgProtoBufHeader::has_client_sessionid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgProtoBufHeader::clear_client_sessionid() {
  client_sessionid_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 CMsgProtoBufHeader::client_sessionid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.client_sessionid)
  return client_sessionid_;
}
inline void CMsgProtoBufHeader::set_client_sessionid(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  client_sessionid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.client_sessionid)
}

// optional uint32 routing_appid = 3;
inline bool CMsgProtoBufHeader::has_routing_appid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgProtoBufHeader::clear_routing_appid() {
  routing_appid_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::routing_appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.routing_appid)
  return routing_appid_;
}
inline void CMsgProtoBufHeader::set_routing_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  routing_appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.routing_appid)
}

// optional fixed64 jobid_source = 10 [default = 18446744073709551615];
inline bool CMsgProtoBufHeader::has_jobid_source() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgProtoBufHeader::clear_jobid_source() {
  jobid_source_ = PROTOBUF_ULONGLONG(18446744073709551615);
  _has_bits_[0] &= ~0x00010000u;
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::jobid_source() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.jobid_source)
  return jobid_source_;
}
inline void CMsgProtoBufHeader::set_jobid_source(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00010000u;
  jobid_source_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.jobid_source)
}

// optional fixed64 jobid_target = 11 [default = 18446744073709551615];
inline bool CMsgProtoBufHeader::has_jobid_target() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgProtoBufHeader::clear_jobid_target() {
  jobid_target_ = PROTOBUF_ULONGLONG(18446744073709551615);
  _has_bits_[0] &= ~0x00020000u;
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::jobid_target() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.jobid_target)
  return jobid_target_;
}
inline void CMsgProtoBufHeader::set_jobid_target(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00020000u;
  jobid_target_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.jobid_target)
}

// optional string target_job_name = 12;
inline bool CMsgProtoBufHeader::has_target_job_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgProtoBufHeader::clear_target_job_name() {
  target_job_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgProtoBufHeader::target_job_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.target_job_name)
  return target_job_name_.GetNoArena();
}
inline void CMsgProtoBufHeader::set_target_job_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  target_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.target_job_name)
}
#if LANG_CXX11
inline void CMsgProtoBufHeader::set_target_job_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  target_job_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgProtoBufHeader.target_job_name)
}
#endif
inline void CMsgProtoBufHeader::set_target_job_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  target_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgProtoBufHeader.target_job_name)
}
inline void CMsgProtoBufHeader::set_target_job_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  target_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgProtoBufHeader.target_job_name)
}
inline ::std::string* CMsgProtoBufHeader::mutable_target_job_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgProtoBufHeader.target_job_name)
  return target_job_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgProtoBufHeader::release_target_job_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgProtoBufHeader.target_job_name)
  if (!has_target_job_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return target_job_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgProtoBufHeader::set_allocated_target_job_name(::std::string* target_job_name) {
  if (target_job_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  target_job_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_job_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgProtoBufHeader.target_job_name)
}

// optional int32 seq_num = 24;
inline bool CMsgProtoBufHeader::has_seq_num() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgProtoBufHeader::clear_seq_num() {
  seq_num_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::google::protobuf::int32 CMsgProtoBufHeader::seq_num() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.seq_num)
  return seq_num_;
}
inline void CMsgProtoBufHeader::set_seq_num(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  seq_num_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.seq_num)
}

// optional int32 eresult = 13 [default = 2];
inline bool CMsgProtoBufHeader::has_eresult() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgProtoBufHeader::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::google::protobuf::int32 CMsgProtoBufHeader::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.eresult)
  return eresult_;
}
inline void CMsgProtoBufHeader::set_eresult(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00040000u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.eresult)
}

// optional string error_message = 14;
inline bool CMsgProtoBufHeader::has_error_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgProtoBufHeader::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CMsgProtoBufHeader::error_message() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.error_message)
  return error_message_.GetNoArena();
}
inline void CMsgProtoBufHeader::set_error_message(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.error_message)
}
#if LANG_CXX11
inline void CMsgProtoBufHeader::set_error_message(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  error_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgProtoBufHeader.error_message)
}
#endif
inline void CMsgProtoBufHeader::set_error_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgProtoBufHeader.error_message)
}
inline void CMsgProtoBufHeader::set_error_message(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgProtoBufHeader.error_message)
}
inline ::std::string* CMsgProtoBufHeader::mutable_error_message() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgProtoBufHeader.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgProtoBufHeader::release_error_message() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgProtoBufHeader.error_message)
  if (!has_error_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return error_message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgProtoBufHeader::set_allocated_error_message(::std::string* error_message) {
  if (error_message != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgProtoBufHeader.error_message)
}

// optional uint32 auth_account_flags = 16;
inline bool CMsgProtoBufHeader::has_auth_account_flags() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgProtoBufHeader::clear_auth_account_flags() {
  auth_account_flags_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::auth_account_flags() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.auth_account_flags)
  return auth_account_flags_;
}
inline void CMsgProtoBufHeader::set_auth_account_flags(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  auth_account_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.auth_account_flags)
}

// optional uint32 token_source = 22;
inline bool CMsgProtoBufHeader::has_token_source() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgProtoBufHeader::clear_token_source() {
  token_source_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::token_source() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.token_source)
  return token_source_;
}
inline void CMsgProtoBufHeader::set_token_source(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  token_source_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.token_source)
}

// optional bool admin_spoofing_user = 23;
inline bool CMsgProtoBufHeader::has_admin_spoofing_user() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgProtoBufHeader::clear_admin_spoofing_user() {
  admin_spoofing_user_ = false;
  _has_bits_[0] &= ~0x00001000u;
}
inline bool CMsgProtoBufHeader::admin_spoofing_user() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.admin_spoofing_user)
  return admin_spoofing_user_;
}
inline void CMsgProtoBufHeader::set_admin_spoofing_user(bool value) {
  _has_bits_[0] |= 0x00001000u;
  admin_spoofing_user_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.admin_spoofing_user)
}

// optional int32 transport_error = 17 [default = 1];
inline bool CMsgProtoBufHeader::has_transport_error() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgProtoBufHeader::clear_transport_error() {
  transport_error_ = 1;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::google::protobuf::int32 CMsgProtoBufHeader::transport_error() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.transport_error)
  return transport_error_;
}
inline void CMsgProtoBufHeader::set_transport_error(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00080000u;
  transport_error_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.transport_error)
}

// optional uint64 messageid = 18 [default = 18446744073709551615];
inline bool CMsgProtoBufHeader::has_messageid() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgProtoBufHeader::clear_messageid() {
  messageid_ = PROTOBUF_ULONGLONG(18446744073709551615);
  _has_bits_[0] &= ~0x00100000u;
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::messageid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.messageid)
  return messageid_;
}
inline void CMsgProtoBufHeader::set_messageid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00100000u;
  messageid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.messageid)
}

// optional uint32 publisher_group_id = 19;
inline bool CMsgProtoBufHeader::has_publisher_group_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgProtoBufHeader::clear_publisher_group_id() {
  publisher_group_id_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::publisher_group_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.publisher_group_id)
  return publisher_group_id_;
}
inline void CMsgProtoBufHeader::set_publisher_group_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  publisher_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.publisher_group_id)
}

// optional uint32 sysid = 20;
inline bool CMsgProtoBufHeader::has_sysid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgProtoBufHeader::clear_sysid() {
  sysid_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::sysid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.sysid)
  return sysid_;
}
inline void CMsgProtoBufHeader::set_sysid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  sysid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.sysid)
}

// optional uint64 trace_tag = 21;
inline bool CMsgProtoBufHeader::has_trace_tag() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgProtoBufHeader::clear_trace_tag() {
  trace_tag_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::trace_tag() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.trace_tag)
  return trace_tag_;
}
inline void CMsgProtoBufHeader::set_trace_tag(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000100u;
  trace_tag_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.trace_tag)
}

// optional uint32 webapi_key_id = 25;
inline bool CMsgProtoBufHeader::has_webapi_key_id() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgProtoBufHeader::clear_webapi_key_id() {
  webapi_key_id_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::webapi_key_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.webapi_key_id)
  return webapi_key_id_;
}
inline void CMsgProtoBufHeader::set_webapi_key_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  webapi_key_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.webapi_key_id)
}

// optional bool is_from_external_source = 26;
inline bool CMsgProtoBufHeader::has_is_from_external_source() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgProtoBufHeader::clear_is_from_external_source() {
  is_from_external_source_ = false;
  _has_bits_[0] &= ~0x00002000u;
}
inline bool CMsgProtoBufHeader::is_from_external_source() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.is_from_external_source)
  return is_from_external_source_;
}
inline void CMsgProtoBufHeader::set_is_from_external_source(bool value) {
  _has_bits_[0] |= 0x00002000u;
  is_from_external_source_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.is_from_external_source)
}

// repeated uint32 forward_to_sysid = 27;
inline int CMsgProtoBufHeader::forward_to_sysid_size() const {
  return forward_to_sysid_.size();
}
inline void CMsgProtoBufHeader::clear_forward_to_sysid() {
  forward_to_sysid_.Clear();
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::forward_to_sysid(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.forward_to_sysid)
  return forward_to_sysid_.Get(index);
}
inline void CMsgProtoBufHeader::set_forward_to_sysid(int index, ::google::protobuf::uint32 value) {
  forward_to_sysid_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.forward_to_sysid)
}
inline void CMsgProtoBufHeader::add_forward_to_sysid(::google::protobuf::uint32 value) {
  forward_to_sysid_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgProtoBufHeader.forward_to_sysid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgProtoBufHeader::forward_to_sysid() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgProtoBufHeader.forward_to_sysid)
  return forward_to_sysid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgProtoBufHeader::mutable_forward_to_sysid() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgProtoBufHeader.forward_to_sysid)
  return &forward_to_sysid_;
}

// optional uint32 cm_sysid = 28;
inline bool CMsgProtoBufHeader::has_cm_sysid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgProtoBufHeader::clear_cm_sysid() {
  cm_sysid_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::cm_sysid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.cm_sysid)
  return cm_sysid_;
}
inline void CMsgProtoBufHeader::set_cm_sysid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  cm_sysid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.cm_sysid)
}

// optional string wg_token = 30;
inline bool CMsgProtoBufHeader::has_wg_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgProtoBufHeader::clear_wg_token() {
  wg_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CMsgProtoBufHeader::wg_token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.wg_token)
  return wg_token_.GetNoArena();
}
inline void CMsgProtoBufHeader::set_wg_token(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  wg_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.wg_token)
}
#if LANG_CXX11
inline void CMsgProtoBufHeader::set_wg_token(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  wg_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgProtoBufHeader.wg_token)
}
#endif
inline void CMsgProtoBufHeader::set_wg_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  wg_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgProtoBufHeader.wg_token)
}
inline void CMsgProtoBufHeader::set_wg_token(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  wg_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgProtoBufHeader.wg_token)
}
inline ::std::string* CMsgProtoBufHeader::mutable_wg_token() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgProtoBufHeader.wg_token)
  return wg_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgProtoBufHeader::release_wg_token() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgProtoBufHeader.wg_token)
  if (!has_wg_token()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return wg_token_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgProtoBufHeader::set_allocated_wg_token(::std::string* wg_token) {
  if (wg_token != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  wg_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wg_token);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgProtoBufHeader.wg_token)
}

// optional uint32 ip = 15;
inline bool CMsgProtoBufHeader::has_ip() const {
  return ip_addr_case() == kIp;
}
inline void CMsgProtoBufHeader::set_has_ip() {
  _oneof_case_[0] = kIp;
}
inline void CMsgProtoBufHeader::clear_ip() {
  if (has_ip()) {
    ip_addr_.ip_ = 0u;
    clear_has_ip_addr();
  }
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::ip() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.ip)
  if (has_ip()) {
    return ip_addr_.ip_;
  }
  return 0u;
}
inline void CMsgProtoBufHeader::set_ip(::google::protobuf::uint32 value) {
  if (!has_ip()) {
    clear_ip_addr();
    set_has_ip();
  }
  ip_addr_.ip_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.ip)
}

// optional bytes ip_v6 = 29;
inline bool CMsgProtoBufHeader::has_ip_v6() const {
  return ip_addr_case() == kIpV6;
}
inline void CMsgProtoBufHeader::set_has_ip_v6() {
  _oneof_case_[0] = kIpV6;
}
inline void CMsgProtoBufHeader::clear_ip_v6() {
  if (has_ip_v6()) {
    ip_addr_.ip_v6_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_ip_addr();
  }
}
inline const ::std::string& CMsgProtoBufHeader::ip_v6() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.ip_v6)
  if (has_ip_v6()) {
    return ip_addr_.ip_v6_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void CMsgProtoBufHeader::set_ip_v6(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.ip_v6)
  if (!has_ip_v6()) {
    clear_ip_addr();
    set_has_ip_v6();
    ip_addr_.ip_v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ip_addr_.ip_v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.ip_v6)
}
#if LANG_CXX11
inline void CMsgProtoBufHeader::set_ip_v6(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.ip_v6)
  if (!has_ip_v6()) {
    clear_ip_addr();
    set_has_ip_v6();
    ip_addr_.ip_v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ip_addr_.ip_v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgProtoBufHeader.ip_v6)
}
#endif
inline void CMsgProtoBufHeader::set_ip_v6(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!has_ip_v6()) {
    clear_ip_addr();
    set_has_ip_v6();
    ip_addr_.ip_v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ip_addr_.ip_v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgProtoBufHeader.ip_v6)
}
inline void CMsgProtoBufHeader::set_ip_v6(const void* value, size_t size) {
  if (!has_ip_v6()) {
    clear_ip_addr();
    set_has_ip_v6();
    ip_addr_.ip_v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ip_addr_.ip_v6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgProtoBufHeader.ip_v6)
}
inline ::std::string* CMsgProtoBufHeader::mutable_ip_v6() {
  if (!has_ip_v6()) {
    clear_ip_addr();
    set_has_ip_v6();
    ip_addr_.ip_v6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgProtoBufHeader.ip_v6)
  return ip_addr_.ip_v6_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgProtoBufHeader::release_ip_v6() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgProtoBufHeader.ip_v6)
  if (has_ip_v6()) {
    clear_has_ip_addr();
    return ip_addr_.ip_v6_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return nullptr;
  }
}
inline void CMsgProtoBufHeader::set_allocated_ip_v6(::std::string* ip_v6) {
  if (has_ip_addr()) {
    clear_ip_addr();
  }
  if (ip_v6 != nullptr) {
    set_has_ip_v6();
    ip_addr_.ip_v6_.UnsafeSetDefault(ip_v6);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgProtoBufHeader.ip_v6)
}

inline bool CMsgProtoBufHeader::has_ip_addr() const {
  return ip_addr_case() != IP_ADDR_NOT_SET;
}
inline void CMsgProtoBufHeader::clear_has_ip_addr() {
  _oneof_case_[0] = IP_ADDR_NOT_SET;
}
inline CMsgProtoBufHeader::IpAddrCase CMsgProtoBufHeader::ip_addr_case() const {
  return CMsgProtoBufHeader::IpAddrCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// CMsgMulti

// optional uint32 size_unzipped = 1;
inline bool CMsgMulti::has_size_unzipped() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMulti::clear_size_unzipped() {
  size_unzipped_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CMsgMulti::size_unzipped() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMulti.size_unzipped)
  return size_unzipped_;
}
inline void CMsgMulti::set_size_unzipped(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  size_unzipped_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMulti.size_unzipped)
}

// optional bytes message_body = 2;
inline bool CMsgMulti::has_message_body() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMulti::clear_message_body() {
  message_body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgMulti::message_body() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMulti.message_body)
  return message_body_.GetNoArena();
}
inline void CMsgMulti::set_message_body(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMulti.message_body)
}
#if LANG_CXX11
inline void CMsgMulti::set_message_body(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgMulti.message_body)
}
#endif
inline void CMsgMulti::set_message_body(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgMulti.message_body)
}
inline void CMsgMulti::set_message_body(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgMulti.message_body)
}
inline ::std::string* CMsgMulti::mutable_message_body() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgMulti.message_body)
  return message_body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgMulti::release_message_body() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgMulti.message_body)
  if (!has_message_body()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_body_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgMulti::set_allocated_message_body(::std::string* message_body) {
  if (message_body != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_body);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgMulti.message_body)
}

// -------------------------------------------------------------------

// CMsgProtobufWrapped

// optional bytes message_body = 1;
inline bool CMsgProtobufWrapped::has_message_body() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgProtobufWrapped::clear_message_body() {
  message_body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgProtobufWrapped::message_body() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtobufWrapped.message_body)
  return message_body_.GetNoArena();
}
inline void CMsgProtobufWrapped::set_message_body(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtobufWrapped.message_body)
}
#if LANG_CXX11
inline void CMsgProtobufWrapped::set_message_body(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgProtobufWrapped.message_body)
}
#endif
inline void CMsgProtobufWrapped::set_message_body(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgProtobufWrapped.message_body)
}
inline void CMsgProtobufWrapped::set_message_body(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgProtobufWrapped.message_body)
}
inline ::std::string* CMsgProtobufWrapped::mutable_message_body() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgProtobufWrapped.message_body)
  return message_body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgProtobufWrapped::release_message_body() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgProtobufWrapped.message_body)
  if (!has_message_body()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_body_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgProtobufWrapped::set_allocated_message_body(::std::string* message_body) {
  if (message_body != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_body);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgProtobufWrapped.message_body)
}

// -------------------------------------------------------------------

// CMsgAuthTicket

// optional uint32 estate = 1;
inline bool CMsgAuthTicket::has_estate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAuthTicket::clear_estate() {
  estate_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CMsgAuthTicket::estate() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAuthTicket.estate)
  return estate_;
}
inline void CMsgAuthTicket::set_estate(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  estate_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthTicket.estate)
}

// optional uint32 eresult = 2 [default = 2];
inline bool CMsgAuthTicket::has_eresult() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgAuthTicket::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CMsgAuthTicket::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAuthTicket.eresult)
  return eresult_;
}
inline void CMsgAuthTicket::set_eresult(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthTicket.eresult)
}

// optional fixed64 steamid = 3;
inline bool CMsgAuthTicket::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAuthTicket::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CMsgAuthTicket::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAuthTicket.steamid)
  return steamid_;
}
inline void CMsgAuthTicket::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthTicket.steamid)
}

// optional fixed64 gameid = 4;
inline bool CMsgAuthTicket::has_gameid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgAuthTicket::clear_gameid() {
  gameid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 CMsgAuthTicket::gameid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAuthTicket.gameid)
  return gameid_;
}
inline void CMsgAuthTicket::set_gameid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  gameid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthTicket.gameid)
}

// optional uint32 h_steam_pipe = 5;
inline bool CMsgAuthTicket::has_h_steam_pipe() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgAuthTicket::clear_h_steam_pipe() {
  h_steam_pipe_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CMsgAuthTicket::h_steam_pipe() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAuthTicket.h_steam_pipe)
  return h_steam_pipe_;
}
inline void CMsgAuthTicket::set_h_steam_pipe(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  h_steam_pipe_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthTicket.h_steam_pipe)
}

// optional uint32 ticket_crc = 6;
inline bool CMsgAuthTicket::has_ticket_crc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgAuthTicket::clear_ticket_crc() {
  ticket_crc_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 CMsgAuthTicket::ticket_crc() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAuthTicket.ticket_crc)
  return ticket_crc_;
}
inline void CMsgAuthTicket::set_ticket_crc(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  ticket_crc_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthTicket.ticket_crc)
}

// optional bytes ticket = 7;
inline bool CMsgAuthTicket::has_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAuthTicket::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CMsgAuthTicket::ticket() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAuthTicket.ticket)
  return ticket_.GetNoArena();
}
inline void CMsgAuthTicket::set_ticket(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthTicket.ticket)
}
#if LANG_CXX11
inline void CMsgAuthTicket::set_ticket(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgAuthTicket.ticket)
}
#endif
inline void CMsgAuthTicket::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgAuthTicket.ticket)
}
inline void CMsgAuthTicket::set_ticket(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgAuthTicket.ticket)
}
inline ::std::string* CMsgAuthTicket::mutable_ticket() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgAuthTicket.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgAuthTicket::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgAuthTicket.ticket)
  if (!has_ticket()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return ticket_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgAuthTicket::set_allocated_ticket(::std::string* ticket) {
  if (ticket != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgAuthTicket.ticket)
}

// -------------------------------------------------------------------

// CCDDBAppDetailCommon

// optional uint32 appid = 1;
inline bool CCDDBAppDetailCommon::has_appid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CCDDBAppDetailCommon::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CCDDBAppDetailCommon::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.appid)
  return appid_;
}
inline void CCDDBAppDetailCommon::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.appid)
}

// optional string name = 2;
inline bool CCDDBAppDetailCommon::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCDDBAppDetailCommon::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCDDBAppDetailCommon::name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.name)
  return name_.GetNoArena();
}
inline void CCDDBAppDetailCommon::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.name)
}
#if LANG_CXX11
inline void CCDDBAppDetailCommon::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCDDBAppDetailCommon.name)
}
#endif
inline void CCDDBAppDetailCommon::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCDDBAppDetailCommon.name)
}
inline void CCDDBAppDetailCommon::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCDDBAppDetailCommon.name)
}
inline ::std::string* CCDDBAppDetailCommon::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCDDBAppDetailCommon.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCDDBAppDetailCommon::release_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CCDDBAppDetailCommon.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCDDBAppDetailCommon::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCDDBAppDetailCommon.name)
}

// optional string icon = 3;
inline bool CCDDBAppDetailCommon::has_icon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCDDBAppDetailCommon::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CCDDBAppDetailCommon::icon() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.icon)
  return icon_.GetNoArena();
}
inline void CCDDBAppDetailCommon::set_icon(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.icon)
}
#if LANG_CXX11
inline void CCDDBAppDetailCommon::set_icon(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCDDBAppDetailCommon.icon)
}
#endif
inline void CCDDBAppDetailCommon::set_icon(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCDDBAppDetailCommon.icon)
}
inline void CCDDBAppDetailCommon::set_icon(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCDDBAppDetailCommon.icon)
}
inline ::std::string* CCDDBAppDetailCommon::mutable_icon() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCDDBAppDetailCommon.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCDDBAppDetailCommon::release_icon() {
  // @@protoc_insertion_point(field_release:proto.steam.CCDDBAppDetailCommon.icon)
  if (!has_icon()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return icon_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCDDBAppDetailCommon::set_allocated_icon(::std::string* icon) {
  if (icon != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCDDBAppDetailCommon.icon)
}

// optional string logo = 4;
inline bool CCDDBAppDetailCommon::has_logo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCDDBAppDetailCommon::clear_logo() {
  logo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CCDDBAppDetailCommon::logo() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.logo)
  return logo_.GetNoArena();
}
inline void CCDDBAppDetailCommon::set_logo(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.logo)
}
#if LANG_CXX11
inline void CCDDBAppDetailCommon::set_logo(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  logo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCDDBAppDetailCommon.logo)
}
#endif
inline void CCDDBAppDetailCommon::set_logo(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCDDBAppDetailCommon.logo)
}
inline void CCDDBAppDetailCommon::set_logo(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCDDBAppDetailCommon.logo)
}
inline ::std::string* CCDDBAppDetailCommon::mutable_logo() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCDDBAppDetailCommon.logo)
  return logo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCDDBAppDetailCommon::release_logo() {
  // @@protoc_insertion_point(field_release:proto.steam.CCDDBAppDetailCommon.logo)
  if (!has_logo()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return logo_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCDDBAppDetailCommon::set_allocated_logo(::std::string* logo) {
  if (logo != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  logo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logo);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCDDBAppDetailCommon.logo)
}

// optional string logo_small = 5;
inline bool CCDDBAppDetailCommon::has_logo_small() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCDDBAppDetailCommon::clear_logo_small() {
  logo_small_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& CCDDBAppDetailCommon::logo_small() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.logo_small)
  return logo_small_.GetNoArena();
}
inline void CCDDBAppDetailCommon::set_logo_small(const ::std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  logo_small_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.logo_small)
}
#if LANG_CXX11
inline void CCDDBAppDetailCommon::set_logo_small(::std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  logo_small_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCDDBAppDetailCommon.logo_small)
}
#endif
inline void CCDDBAppDetailCommon::set_logo_small(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  logo_small_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCDDBAppDetailCommon.logo_small)
}
inline void CCDDBAppDetailCommon::set_logo_small(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  logo_small_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCDDBAppDetailCommon.logo_small)
}
inline ::std::string* CCDDBAppDetailCommon::mutable_logo_small() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCDDBAppDetailCommon.logo_small)
  return logo_small_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCDDBAppDetailCommon::release_logo_small() {
  // @@protoc_insertion_point(field_release:proto.steam.CCDDBAppDetailCommon.logo_small)
  if (!has_logo_small()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return logo_small_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCDDBAppDetailCommon::set_allocated_logo_small(::std::string* logo_small) {
  if (logo_small != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  logo_small_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logo_small);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCDDBAppDetailCommon.logo_small)
}

// optional bool tool = 6;
inline bool CCDDBAppDetailCommon::has_tool() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CCDDBAppDetailCommon::clear_tool() {
  tool_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CCDDBAppDetailCommon::tool() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.tool)
  return tool_;
}
inline void CCDDBAppDetailCommon::set_tool(bool value) {
  _has_bits_[0] |= 0x00000080u;
  tool_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.tool)
}

// optional bool demo = 7;
inline bool CCDDBAppDetailCommon::has_demo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CCDDBAppDetailCommon::clear_demo() {
  demo_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CCDDBAppDetailCommon::demo() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.demo)
  return demo_;
}
inline void CCDDBAppDetailCommon::set_demo(bool value) {
  _has_bits_[0] |= 0x00000100u;
  demo_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.demo)
}

// optional bool media = 8;
inline bool CCDDBAppDetailCommon::has_media() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CCDDBAppDetailCommon::clear_media() {
  media_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CCDDBAppDetailCommon::media() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.media)
  return media_;
}
inline void CCDDBAppDetailCommon::set_media(bool value) {
  _has_bits_[0] |= 0x00000200u;
  media_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.media)
}

// optional bool community_visible_stats = 9;
inline bool CCDDBAppDetailCommon::has_community_visible_stats() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CCDDBAppDetailCommon::clear_community_visible_stats() {
  community_visible_stats_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CCDDBAppDetailCommon::community_visible_stats() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.community_visible_stats)
  return community_visible_stats_;
}
inline void CCDDBAppDetailCommon::set_community_visible_stats(bool value) {
  _has_bits_[0] |= 0x00000400u;
  community_visible_stats_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.community_visible_stats)
}

// optional string friendly_name = 10;
inline bool CCDDBAppDetailCommon::has_friendly_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCDDBAppDetailCommon::clear_friendly_name() {
  friendly_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& CCDDBAppDetailCommon::friendly_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.friendly_name)
  return friendly_name_.GetNoArena();
}
inline void CCDDBAppDetailCommon::set_friendly_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  friendly_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.friendly_name)
}
#if LANG_CXX11
inline void CCDDBAppDetailCommon::set_friendly_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  friendly_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCDDBAppDetailCommon.friendly_name)
}
#endif
inline void CCDDBAppDetailCommon::set_friendly_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  friendly_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCDDBAppDetailCommon.friendly_name)
}
inline void CCDDBAppDetailCommon::set_friendly_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000010u;
  friendly_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCDDBAppDetailCommon.friendly_name)
}
inline ::std::string* CCDDBAppDetailCommon::mutable_friendly_name() {
  _has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCDDBAppDetailCommon.friendly_name)
  return friendly_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCDDBAppDetailCommon::release_friendly_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CCDDBAppDetailCommon.friendly_name)
  if (!has_friendly_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return friendly_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCDDBAppDetailCommon::set_allocated_friendly_name(::std::string* friendly_name) {
  if (friendly_name != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  friendly_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), friendly_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCDDBAppDetailCommon.friendly_name)
}

// optional string propagation = 11;
inline bool CCDDBAppDetailCommon::has_propagation() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCDDBAppDetailCommon::clear_propagation() {
  propagation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::std::string& CCDDBAppDetailCommon::propagation() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.propagation)
  return propagation_.GetNoArena();
}
inline void CCDDBAppDetailCommon::set_propagation(const ::std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  propagation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.propagation)
}
#if LANG_CXX11
inline void CCDDBAppDetailCommon::set_propagation(::std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  propagation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCDDBAppDetailCommon.propagation)
}
#endif
inline void CCDDBAppDetailCommon::set_propagation(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  propagation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCDDBAppDetailCommon.propagation)
}
inline void CCDDBAppDetailCommon::set_propagation(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000020u;
  propagation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCDDBAppDetailCommon.propagation)
}
inline ::std::string* CCDDBAppDetailCommon::mutable_propagation() {
  _has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCDDBAppDetailCommon.propagation)
  return propagation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCDDBAppDetailCommon::release_propagation() {
  // @@protoc_insertion_point(field_release:proto.steam.CCDDBAppDetailCommon.propagation)
  if (!has_propagation()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return propagation_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCDDBAppDetailCommon::set_allocated_propagation(::std::string* propagation) {
  if (propagation != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  propagation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), propagation);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCDDBAppDetailCommon.propagation)
}

// optional bool has_adult_content = 12;
inline bool CCDDBAppDetailCommon::has_has_adult_content() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CCDDBAppDetailCommon::clear_has_adult_content() {
  has_adult_content_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool CCDDBAppDetailCommon::has_adult_content() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.has_adult_content)
  return has_adult_content_;
}
inline void CCDDBAppDetailCommon::set_has_adult_content(bool value) {
  _has_bits_[0] |= 0x00000800u;
  has_adult_content_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.has_adult_content)
}

// -------------------------------------------------------------------

// CMsgAppRights

// optional bool edit_info = 1;
inline bool CMsgAppRights::has_edit_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAppRights::clear_edit_info() {
  edit_info_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgAppRights::edit_info() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.edit_info)
  return edit_info_;
}
inline void CMsgAppRights::set_edit_info(bool value) {
  _has_bits_[0] |= 0x00000001u;
  edit_info_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.edit_info)
}

// optional bool publish = 2;
inline bool CMsgAppRights::has_publish() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAppRights::clear_publish() {
  publish_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgAppRights::publish() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.publish)
  return publish_;
}
inline void CMsgAppRights::set_publish(bool value) {
  _has_bits_[0] |= 0x00000002u;
  publish_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.publish)
}

// optional bool view_error_data = 3;
inline bool CMsgAppRights::has_view_error_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAppRights::clear_view_error_data() {
  view_error_data_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgAppRights::view_error_data() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.view_error_data)
  return view_error_data_;
}
inline void CMsgAppRights::set_view_error_data(bool value) {
  _has_bits_[0] |= 0x00000004u;
  view_error_data_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.view_error_data)
}

// optional bool download = 4;
inline bool CMsgAppRights::has_download() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgAppRights::clear_download() {
  download_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgAppRights::download() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.download)
  return download_;
}
inline void CMsgAppRights::set_download(bool value) {
  _has_bits_[0] |= 0x00000008u;
  download_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.download)
}

// optional bool upload_cdkeys = 5;
inline bool CMsgAppRights::has_upload_cdkeys() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgAppRights::clear_upload_cdkeys() {
  upload_cdkeys_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgAppRights::upload_cdkeys() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.upload_cdkeys)
  return upload_cdkeys_;
}
inline void CMsgAppRights::set_upload_cdkeys(bool value) {
  _has_bits_[0] |= 0x00000010u;
  upload_cdkeys_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.upload_cdkeys)
}

// optional bool generate_cdkeys = 6;
inline bool CMsgAppRights::has_generate_cdkeys() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgAppRights::clear_generate_cdkeys() {
  generate_cdkeys_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CMsgAppRights::generate_cdkeys() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.generate_cdkeys)
  return generate_cdkeys_;
}
inline void CMsgAppRights::set_generate_cdkeys(bool value) {
  _has_bits_[0] |= 0x00000020u;
  generate_cdkeys_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.generate_cdkeys)
}

// optional bool view_financials = 7;
inline bool CMsgAppRights::has_view_financials() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgAppRights::clear_view_financials() {
  view_financials_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CMsgAppRights::view_financials() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.view_financials)
  return view_financials_;
}
inline void CMsgAppRights::set_view_financials(bool value) {
  _has_bits_[0] |= 0x00000040u;
  view_financials_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.view_financials)
}

// optional bool manage_ceg = 8;
inline bool CMsgAppRights::has_manage_ceg() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgAppRights::clear_manage_ceg() {
  manage_ceg_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CMsgAppRights::manage_ceg() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.manage_ceg)
  return manage_ceg_;
}
inline void CMsgAppRights::set_manage_ceg(bool value) {
  _has_bits_[0] |= 0x00000080u;
  manage_ceg_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.manage_ceg)
}

// optional bool manage_signing = 9;
inline bool CMsgAppRights::has_manage_signing() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgAppRights::clear_manage_signing() {
  manage_signing_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CMsgAppRights::manage_signing() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.manage_signing)
  return manage_signing_;
}
inline void CMsgAppRights::set_manage_signing(bool value) {
  _has_bits_[0] |= 0x00000100u;
  manage_signing_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.manage_signing)
}

// optional bool manage_cdkeys = 10;
inline bool CMsgAppRights::has_manage_cdkeys() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgAppRights::clear_manage_cdkeys() {
  manage_cdkeys_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CMsgAppRights::manage_cdkeys() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.manage_cdkeys)
  return manage_cdkeys_;
}
inline void CMsgAppRights::set_manage_cdkeys(bool value) {
  _has_bits_[0] |= 0x00000200u;
  manage_cdkeys_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.manage_cdkeys)
}

// optional bool edit_marketing = 11;
inline bool CMsgAppRights::has_edit_marketing() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgAppRights::clear_edit_marketing() {
  edit_marketing_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CMsgAppRights::edit_marketing() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.edit_marketing)
  return edit_marketing_;
}
inline void CMsgAppRights::set_edit_marketing(bool value) {
  _has_bits_[0] |= 0x00000400u;
  edit_marketing_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.edit_marketing)
}

// optional bool economy_support = 12;
inline bool CMsgAppRights::has_economy_support() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgAppRights::clear_economy_support() {
  economy_support_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool CMsgAppRights::economy_support() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.economy_support)
  return economy_support_;
}
inline void CMsgAppRights::set_economy_support(bool value) {
  _has_bits_[0] |= 0x00000800u;
  economy_support_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.economy_support)
}

// optional bool economy_support_supervisor = 13;
inline bool CMsgAppRights::has_economy_support_supervisor() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgAppRights::clear_economy_support_supervisor() {
  economy_support_supervisor_ = false;
  _has_bits_[0] &= ~0x00001000u;
}
inline bool CMsgAppRights::economy_support_supervisor() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.economy_support_supervisor)
  return economy_support_supervisor_;
}
inline void CMsgAppRights::set_economy_support_supervisor(bool value) {
  _has_bits_[0] |= 0x00001000u;
  economy_support_supervisor_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.economy_support_supervisor)
}

// optional bool manage_pricing = 14;
inline bool CMsgAppRights::has_manage_pricing() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgAppRights::clear_manage_pricing() {
  manage_pricing_ = false;
  _has_bits_[0] &= ~0x00002000u;
}
inline bool CMsgAppRights::manage_pricing() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.manage_pricing)
  return manage_pricing_;
}
inline void CMsgAppRights::set_manage_pricing(bool value) {
  _has_bits_[0] |= 0x00002000u;
  manage_pricing_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.manage_pricing)
}

// optional bool broadcast_live = 15;
inline bool CMsgAppRights::has_broadcast_live() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgAppRights::clear_broadcast_live() {
  broadcast_live_ = false;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool CMsgAppRights::broadcast_live() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.broadcast_live)
  return broadcast_live_;
}
inline void CMsgAppRights::set_broadcast_live(bool value) {
  _has_bits_[0] |= 0x00004000u;
  broadcast_live_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.broadcast_live)
}

// -------------------------------------------------------------------

// CCuratorPreferences

// optional uint32 supported_languages = 1;
inline bool CCuratorPreferences::has_supported_languages() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCuratorPreferences::clear_supported_languages() {
  supported_languages_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CCuratorPreferences::supported_languages() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCuratorPreferences.supported_languages)
  return supported_languages_;
}
inline void CCuratorPreferences::set_supported_languages(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  supported_languages_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCuratorPreferences.supported_languages)
}

// optional bool platform_windows = 2;
inline bool CCuratorPreferences::has_platform_windows() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCuratorPreferences::clear_platform_windows() {
  platform_windows_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CCuratorPreferences::platform_windows() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCuratorPreferences.platform_windows)
  return platform_windows_;
}
inline void CCuratorPreferences::set_platform_windows(bool value) {
  _has_bits_[0] |= 0x00000010u;
  platform_windows_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCuratorPreferences.platform_windows)
}

// optional bool platform_mac = 3;
inline bool CCuratorPreferences::has_platform_mac() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCuratorPreferences::clear_platform_mac() {
  platform_mac_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CCuratorPreferences::platform_mac() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCuratorPreferences.platform_mac)
  return platform_mac_;
}
inline void CCuratorPreferences::set_platform_mac(bool value) {
  _has_bits_[0] |= 0x00000020u;
  platform_mac_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCuratorPreferences.platform_mac)
}

// optional bool platform_linux = 4;
inline bool CCuratorPreferences::has_platform_linux() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CCuratorPreferences::clear_platform_linux() {
  platform_linux_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CCuratorPreferences::platform_linux() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCuratorPreferences.platform_linux)
  return platform_linux_;
}
inline void CCuratorPreferences::set_platform_linux(bool value) {
  _has_bits_[0] |= 0x00000040u;
  platform_linux_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCuratorPreferences.platform_linux)
}

// optional bool vr_content = 5;
inline bool CCuratorPreferences::has_vr_content() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CCuratorPreferences::clear_vr_content() {
  vr_content_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CCuratorPreferences::vr_content() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCuratorPreferences.vr_content)
  return vr_content_;
}
inline void CCuratorPreferences::set_vr_content(bool value) {
  _has_bits_[0] |= 0x00000080u;
  vr_content_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCuratorPreferences.vr_content)
}

// optional bool adult_content_violence = 6;
inline bool CCuratorPreferences::has_adult_content_violence() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CCuratorPreferences::clear_adult_content_violence() {
  adult_content_violence_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CCuratorPreferences::adult_content_violence() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCuratorPreferences.adult_content_violence)
  return adult_content_violence_;
}
inline void CCuratorPreferences::set_adult_content_violence(bool value) {
  _has_bits_[0] |= 0x00000200u;
  adult_content_violence_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCuratorPreferences.adult_content_violence)
}

// optional bool adult_content_sex = 7;
inline bool CCuratorPreferences::has_adult_content_sex() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CCuratorPreferences::clear_adult_content_sex() {
  adult_content_sex_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CCuratorPreferences::adult_content_sex() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCuratorPreferences.adult_content_sex)
  return adult_content_sex_;
}
inline void CCuratorPreferences::set_adult_content_sex(bool value) {
  _has_bits_[0] |= 0x00000400u;
  adult_content_sex_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCuratorPreferences.adult_content_sex)
}

// optional uint32 timestamp_updated = 8;
inline bool CCuratorPreferences::has_timestamp_updated() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CCuratorPreferences::clear_timestamp_updated() {
  timestamp_updated_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::google::protobuf::uint32 CCuratorPreferences::timestamp_updated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCuratorPreferences.timestamp_updated)
  return timestamp_updated_;
}
inline void CCuratorPreferences::set_timestamp_updated(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  timestamp_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCuratorPreferences.timestamp_updated)
}

// repeated uint32 tagids_curated = 9;
inline int CCuratorPreferences::tagids_curated_size() const {
  return tagids_curated_.size();
}
inline void CCuratorPreferences::clear_tagids_curated() {
  tagids_curated_.Clear();
}
inline ::google::protobuf::uint32 CCuratorPreferences::tagids_curated(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CCuratorPreferences.tagids_curated)
  return tagids_curated_.Get(index);
}
inline void CCuratorPreferences::set_tagids_curated(int index, ::google::protobuf::uint32 value) {
  tagids_curated_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CCuratorPreferences.tagids_curated)
}
inline void CCuratorPreferences::add_tagids_curated(::google::protobuf::uint32 value) {
  tagids_curated_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CCuratorPreferences.tagids_curated)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CCuratorPreferences::tagids_curated() const {
  // @@protoc_insertion_point(field_list:proto.steam.CCuratorPreferences.tagids_curated)
  return tagids_curated_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CCuratorPreferences::mutable_tagids_curated() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CCuratorPreferences.tagids_curated)
  return &tagids_curated_;
}

// repeated uint32 tagids_filtered = 10;
inline int CCuratorPreferences::tagids_filtered_size() const {
  return tagids_filtered_.size();
}
inline void CCuratorPreferences::clear_tagids_filtered() {
  tagids_filtered_.Clear();
}
inline ::google::protobuf::uint32 CCuratorPreferences::tagids_filtered(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CCuratorPreferences.tagids_filtered)
  return tagids_filtered_.Get(index);
}
inline void CCuratorPreferences::set_tagids_filtered(int index, ::google::protobuf::uint32 value) {
  tagids_filtered_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CCuratorPreferences.tagids_filtered)
}
inline void CCuratorPreferences::add_tagids_filtered(::google::protobuf::uint32 value) {
  tagids_filtered_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CCuratorPreferences.tagids_filtered)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CCuratorPreferences::tagids_filtered() const {
  // @@protoc_insertion_point(field_list:proto.steam.CCuratorPreferences.tagids_filtered)
  return tagids_filtered_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CCuratorPreferences::mutable_tagids_filtered() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CCuratorPreferences.tagids_filtered)
  return &tagids_filtered_;
}

// optional string website_title = 11;
inline bool CCuratorPreferences::has_website_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCuratorPreferences::clear_website_title() {
  website_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CCuratorPreferences::website_title() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCuratorPreferences.website_title)
  return website_title_.GetNoArena();
}
inline void CCuratorPreferences::set_website_title(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  website_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCuratorPreferences.website_title)
}
#if LANG_CXX11
inline void CCuratorPreferences::set_website_title(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  website_title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCuratorPreferences.website_title)
}
#endif
inline void CCuratorPreferences::set_website_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  website_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCuratorPreferences.website_title)
}
inline void CCuratorPreferences::set_website_title(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  website_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCuratorPreferences.website_title)
}
inline ::std::string* CCuratorPreferences::mutable_website_title() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCuratorPreferences.website_title)
  return website_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCuratorPreferences::release_website_title() {
  // @@protoc_insertion_point(field_release:proto.steam.CCuratorPreferences.website_title)
  if (!has_website_title()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return website_title_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCuratorPreferences::set_allocated_website_title(::std::string* website_title) {
  if (website_title != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  website_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), website_title);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCuratorPreferences.website_title)
}

// optional string website_url = 12;
inline bool CCuratorPreferences::has_website_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCuratorPreferences::clear_website_url() {
  website_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CCuratorPreferences::website_url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCuratorPreferences.website_url)
  return website_url_.GetNoArena();
}
inline void CCuratorPreferences::set_website_url(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  website_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCuratorPreferences.website_url)
}
#if LANG_CXX11
inline void CCuratorPreferences::set_website_url(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  website_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCuratorPreferences.website_url)
}
#endif
inline void CCuratorPreferences::set_website_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  website_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCuratorPreferences.website_url)
}
inline void CCuratorPreferences::set_website_url(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  website_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCuratorPreferences.website_url)
}
inline ::std::string* CCuratorPreferences::mutable_website_url() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCuratorPreferences.website_url)
  return website_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCuratorPreferences::release_website_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CCuratorPreferences.website_url)
  if (!has_website_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return website_url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCuratorPreferences::set_allocated_website_url(::std::string* website_url) {
  if (website_url != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  website_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), website_url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCuratorPreferences.website_url)
}

// optional string discussion_url = 13;
inline bool CCuratorPreferences::has_discussion_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCuratorPreferences::clear_discussion_url() {
  discussion_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CCuratorPreferences::discussion_url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCuratorPreferences.discussion_url)
  return discussion_url_.GetNoArena();
}
inline void CCuratorPreferences::set_discussion_url(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  discussion_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCuratorPreferences.discussion_url)
}
#if LANG_CXX11
inline void CCuratorPreferences::set_discussion_url(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  discussion_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCuratorPreferences.discussion_url)
}
#endif
inline void CCuratorPreferences::set_discussion_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  discussion_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCuratorPreferences.discussion_url)
}
inline void CCuratorPreferences::set_discussion_url(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  discussion_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCuratorPreferences.discussion_url)
}
inline ::std::string* CCuratorPreferences::mutable_discussion_url() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CCuratorPreferences.discussion_url)
  return discussion_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCuratorPreferences::release_discussion_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CCuratorPreferences.discussion_url)
  if (!has_discussion_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return discussion_url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCuratorPreferences::set_allocated_discussion_url(::std::string* discussion_url) {
  if (discussion_url != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  discussion_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), discussion_url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCuratorPreferences.discussion_url)
}

// optional bool show_broadcast = 14;
inline bool CCuratorPreferences::has_show_broadcast() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CCuratorPreferences::clear_show_broadcast() {
  show_broadcast_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool CCuratorPreferences::show_broadcast() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCuratorPreferences.show_broadcast)
  return show_broadcast_;
}
inline void CCuratorPreferences::set_show_broadcast(bool value) {
  _has_bits_[0] |= 0x00000800u;
  show_broadcast_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCuratorPreferences.show_broadcast)
}

// -------------------------------------------------------------------

// CLocalizationToken

// optional uint32 language = 1;
inline bool CLocalizationToken::has_language() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CLocalizationToken::clear_language() {
  language_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CLocalizationToken::language() const {
  // @@protoc_insertion_point(field_get:proto.steam.CLocalizationToken.language)
  return language_;
}
inline void CLocalizationToken::set_language(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  language_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CLocalizationToken.language)
}

// optional string localized_string = 2;
inline bool CLocalizationToken::has_localized_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CLocalizationToken::clear_localized_string() {
  localized_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CLocalizationToken::localized_string() const {
  // @@protoc_insertion_point(field_get:proto.steam.CLocalizationToken.localized_string)
  return localized_string_.GetNoArena();
}
inline void CLocalizationToken::set_localized_string(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  localized_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CLocalizationToken.localized_string)
}
#if LANG_CXX11
inline void CLocalizationToken::set_localized_string(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  localized_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CLocalizationToken.localized_string)
}
#endif
inline void CLocalizationToken::set_localized_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  localized_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CLocalizationToken.localized_string)
}
inline void CLocalizationToken::set_localized_string(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  localized_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CLocalizationToken.localized_string)
}
inline ::std::string* CLocalizationToken::mutable_localized_string() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CLocalizationToken.localized_string)
  return localized_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CLocalizationToken::release_localized_string() {
  // @@protoc_insertion_point(field_release:proto.steam.CLocalizationToken.localized_string)
  if (!has_localized_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return localized_string_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CLocalizationToken::set_allocated_localized_string(::std::string* localized_string) {
  if (localized_string != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  localized_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), localized_string);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CLocalizationToken.localized_string)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_steammessages_5fbase_2eproto
