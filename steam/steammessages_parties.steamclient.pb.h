// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_parties.steamclient.proto

#ifndef PROTOBUF_INCLUDED_steammessages_5fparties_2esteamclient_2eproto
#define PROTOBUF_INCLUDED_steammessages_5fparties_2esteamclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fparties_2esteamclient_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fparties_2esteamclient_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_steammessages_5fparties_2esteamclient_2eproto();
namespace proto {
namespace steam {
class CParties_BeaconLocation;
class CParties_BeaconLocationDefaultTypeInternal;
extern CParties_BeaconLocationDefaultTypeInternal _CParties_BeaconLocation_default_instance_;
class CParties_CancelReservation_Request;
class CParties_CancelReservation_RequestDefaultTypeInternal;
extern CParties_CancelReservation_RequestDefaultTypeInternal _CParties_CancelReservation_Request_default_instance_;
class CParties_CancelReservation_Response;
class CParties_CancelReservation_ResponseDefaultTypeInternal;
extern CParties_CancelReservation_ResponseDefaultTypeInternal _CParties_CancelReservation_Response_default_instance_;
class CParties_ChangeNumOpenSlots_Request;
class CParties_ChangeNumOpenSlots_RequestDefaultTypeInternal;
extern CParties_ChangeNumOpenSlots_RequestDefaultTypeInternal _CParties_ChangeNumOpenSlots_Request_default_instance_;
class CParties_ChangeNumOpenSlots_Response;
class CParties_ChangeNumOpenSlots_ResponseDefaultTypeInternal;
extern CParties_ChangeNumOpenSlots_ResponseDefaultTypeInternal _CParties_ChangeNumOpenSlots_Response_default_instance_;
class CParties_CreateBeacon_Request;
class CParties_CreateBeacon_RequestDefaultTypeInternal;
extern CParties_CreateBeacon_RequestDefaultTypeInternal _CParties_CreateBeacon_Request_default_instance_;
class CParties_CreateBeacon_Response;
class CParties_CreateBeacon_ResponseDefaultTypeInternal;
extern CParties_CreateBeacon_ResponseDefaultTypeInternal _CParties_CreateBeacon_Response_default_instance_;
class CParties_DestroyBeacon_Request;
class CParties_DestroyBeacon_RequestDefaultTypeInternal;
extern CParties_DestroyBeacon_RequestDefaultTypeInternal _CParties_DestroyBeacon_Request_default_instance_;
class CParties_DestroyBeacon_Response;
class CParties_DestroyBeacon_ResponseDefaultTypeInternal;
extern CParties_DestroyBeacon_ResponseDefaultTypeInternal _CParties_DestroyBeacon_Response_default_instance_;
class CParties_JoinParty_Request;
class CParties_JoinParty_RequestDefaultTypeInternal;
extern CParties_JoinParty_RequestDefaultTypeInternal _CParties_JoinParty_Request_default_instance_;
class CParties_JoinParty_Response;
class CParties_JoinParty_ResponseDefaultTypeInternal;
extern CParties_JoinParty_ResponseDefaultTypeInternal _CParties_JoinParty_Response_default_instance_;
class CParties_OnReservationCompleted_Request;
class CParties_OnReservationCompleted_RequestDefaultTypeInternal;
extern CParties_OnReservationCompleted_RequestDefaultTypeInternal _CParties_OnReservationCompleted_Request_default_instance_;
class CParties_OnReservationCompleted_Response;
class CParties_OnReservationCompleted_ResponseDefaultTypeInternal;
extern CParties_OnReservationCompleted_ResponseDefaultTypeInternal _CParties_OnReservationCompleted_Response_default_instance_;
}  // namespace steam
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::steam::CParties_BeaconLocation* Arena::CreateMaybeMessage<::proto::steam::CParties_BeaconLocation>(Arena*);
template<> ::proto::steam::CParties_CancelReservation_Request* Arena::CreateMaybeMessage<::proto::steam::CParties_CancelReservation_Request>(Arena*);
template<> ::proto::steam::CParties_CancelReservation_Response* Arena::CreateMaybeMessage<::proto::steam::CParties_CancelReservation_Response>(Arena*);
template<> ::proto::steam::CParties_ChangeNumOpenSlots_Request* Arena::CreateMaybeMessage<::proto::steam::CParties_ChangeNumOpenSlots_Request>(Arena*);
template<> ::proto::steam::CParties_ChangeNumOpenSlots_Response* Arena::CreateMaybeMessage<::proto::steam::CParties_ChangeNumOpenSlots_Response>(Arena*);
template<> ::proto::steam::CParties_CreateBeacon_Request* Arena::CreateMaybeMessage<::proto::steam::CParties_CreateBeacon_Request>(Arena*);
template<> ::proto::steam::CParties_CreateBeacon_Response* Arena::CreateMaybeMessage<::proto::steam::CParties_CreateBeacon_Response>(Arena*);
template<> ::proto::steam::CParties_DestroyBeacon_Request* Arena::CreateMaybeMessage<::proto::steam::CParties_DestroyBeacon_Request>(Arena*);
template<> ::proto::steam::CParties_DestroyBeacon_Response* Arena::CreateMaybeMessage<::proto::steam::CParties_DestroyBeacon_Response>(Arena*);
template<> ::proto::steam::CParties_JoinParty_Request* Arena::CreateMaybeMessage<::proto::steam::CParties_JoinParty_Request>(Arena*);
template<> ::proto::steam::CParties_JoinParty_Response* Arena::CreateMaybeMessage<::proto::steam::CParties_JoinParty_Response>(Arena*);
template<> ::proto::steam::CParties_OnReservationCompleted_Request* Arena::CreateMaybeMessage<::proto::steam::CParties_OnReservationCompleted_Request>(Arena*);
template<> ::proto::steam::CParties_OnReservationCompleted_Response* Arena::CreateMaybeMessage<::proto::steam::CParties_OnReservationCompleted_Response>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace steam {

// ===================================================================

class CParties_JoinParty_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CParties_JoinParty_Request) */ {
 public:
  CParties_JoinParty_Request();
  virtual ~CParties_JoinParty_Request();

  CParties_JoinParty_Request(const CParties_JoinParty_Request& from);

  inline CParties_JoinParty_Request& operator=(const CParties_JoinParty_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CParties_JoinParty_Request(CParties_JoinParty_Request&& from) noexcept
    : CParties_JoinParty_Request() {
    *this = ::std::move(from);
  }

  inline CParties_JoinParty_Request& operator=(CParties_JoinParty_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CParties_JoinParty_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CParties_JoinParty_Request* internal_default_instance() {
    return reinterpret_cast<const CParties_JoinParty_Request*>(
               &_CParties_JoinParty_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CParties_JoinParty_Request* other);
  friend void swap(CParties_JoinParty_Request& a, CParties_JoinParty_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CParties_JoinParty_Request* New() const final {
    return CreateMaybeMessage<CParties_JoinParty_Request>(nullptr);
  }

  CParties_JoinParty_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CParties_JoinParty_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CParties_JoinParty_Request& from);
  void MergeFrom(const CParties_JoinParty_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParties_JoinParty_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint64 beacon_id = 2;
  bool has_beacon_id() const;
  void clear_beacon_id();
  static const int kBeaconIdFieldNumber = 2;
  ::google::protobuf::uint64 beacon_id() const;
  void set_beacon_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CParties_JoinParty_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 beacon_id_;
  friend struct ::TableStruct_steammessages_5fparties_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParties_JoinParty_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CParties_JoinParty_Response) */ {
 public:
  CParties_JoinParty_Response();
  virtual ~CParties_JoinParty_Response();

  CParties_JoinParty_Response(const CParties_JoinParty_Response& from);

  inline CParties_JoinParty_Response& operator=(const CParties_JoinParty_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CParties_JoinParty_Response(CParties_JoinParty_Response&& from) noexcept
    : CParties_JoinParty_Response() {
    *this = ::std::move(from);
  }

  inline CParties_JoinParty_Response& operator=(CParties_JoinParty_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CParties_JoinParty_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CParties_JoinParty_Response* internal_default_instance() {
    return reinterpret_cast<const CParties_JoinParty_Response*>(
               &_CParties_JoinParty_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CParties_JoinParty_Response* other);
  friend void swap(CParties_JoinParty_Response& a, CParties_JoinParty_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CParties_JoinParty_Response* New() const final {
    return CreateMaybeMessage<CParties_JoinParty_Response>(nullptr);
  }

  CParties_JoinParty_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CParties_JoinParty_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CParties_JoinParty_Response& from);
  void MergeFrom(const CParties_JoinParty_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParties_JoinParty_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string connect_string = 2;
  bool has_connect_string() const;
  void clear_connect_string();
  static const int kConnectStringFieldNumber = 2;
  const ::std::string& connect_string() const;
  void set_connect_string(const ::std::string& value);
  #if LANG_CXX11
  void set_connect_string(::std::string&& value);
  #endif
  void set_connect_string(const char* value);
  void set_connect_string(const char* value, size_t size);
  ::std::string* mutable_connect_string();
  ::std::string* release_connect_string();
  void set_allocated_connect_string(::std::string* connect_string);

  // optional uint64 beacon_id = 1;
  bool has_beacon_id() const;
  void clear_beacon_id();
  static const int kBeaconIdFieldNumber = 1;
  ::google::protobuf::uint64 beacon_id() const;
  void set_beacon_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CParties_JoinParty_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr connect_string_;
  ::google::protobuf::uint64 beacon_id_;
  friend struct ::TableStruct_steammessages_5fparties_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParties_BeaconLocation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CParties_BeaconLocation) */ {
 public:
  CParties_BeaconLocation();
  virtual ~CParties_BeaconLocation();

  CParties_BeaconLocation(const CParties_BeaconLocation& from);

  inline CParties_BeaconLocation& operator=(const CParties_BeaconLocation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CParties_BeaconLocation(CParties_BeaconLocation&& from) noexcept
    : CParties_BeaconLocation() {
    *this = ::std::move(from);
  }

  inline CParties_BeaconLocation& operator=(CParties_BeaconLocation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CParties_BeaconLocation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CParties_BeaconLocation* internal_default_instance() {
    return reinterpret_cast<const CParties_BeaconLocation*>(
               &_CParties_BeaconLocation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CParties_BeaconLocation* other);
  friend void swap(CParties_BeaconLocation& a, CParties_BeaconLocation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CParties_BeaconLocation* New() const final {
    return CreateMaybeMessage<CParties_BeaconLocation>(nullptr);
  }

  CParties_BeaconLocation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CParties_BeaconLocation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CParties_BeaconLocation& from);
  void MergeFrom(const CParties_BeaconLocation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParties_BeaconLocation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 location_id = 2;
  bool has_location_id() const;
  void clear_location_id();
  static const int kLocationIdFieldNumber = 2;
  ::google::protobuf::uint64 location_id() const;
  void set_location_id(::google::protobuf::uint64 value);

  // optional uint32 location_type = 1;
  bool has_location_type() const;
  void clear_location_type();
  static const int kLocationTypeFieldNumber = 1;
  ::google::protobuf::uint32 location_type() const;
  void set_location_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CParties_BeaconLocation)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 location_id_;
  ::google::protobuf::uint32 location_type_;
  friend struct ::TableStruct_steammessages_5fparties_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParties_CreateBeacon_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CParties_CreateBeacon_Request) */ {
 public:
  CParties_CreateBeacon_Request();
  virtual ~CParties_CreateBeacon_Request();

  CParties_CreateBeacon_Request(const CParties_CreateBeacon_Request& from);

  inline CParties_CreateBeacon_Request& operator=(const CParties_CreateBeacon_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CParties_CreateBeacon_Request(CParties_CreateBeacon_Request&& from) noexcept
    : CParties_CreateBeacon_Request() {
    *this = ::std::move(from);
  }

  inline CParties_CreateBeacon_Request& operator=(CParties_CreateBeacon_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CParties_CreateBeacon_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CParties_CreateBeacon_Request* internal_default_instance() {
    return reinterpret_cast<const CParties_CreateBeacon_Request*>(
               &_CParties_CreateBeacon_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CParties_CreateBeacon_Request* other);
  friend void swap(CParties_CreateBeacon_Request& a, CParties_CreateBeacon_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CParties_CreateBeacon_Request* New() const final {
    return CreateMaybeMessage<CParties_CreateBeacon_Request>(nullptr);
  }

  CParties_CreateBeacon_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CParties_CreateBeacon_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CParties_CreateBeacon_Request& from);
  void MergeFrom(const CParties_CreateBeacon_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParties_CreateBeacon_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CParties_BeaconLocation locations = 3;
  int locations_size() const;
  void clear_locations();
  static const int kLocationsFieldNumber = 3;
  ::proto::steam::CParties_BeaconLocation* mutable_locations(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CParties_BeaconLocation >*
      mutable_locations();
  const ::proto::steam::CParties_BeaconLocation& locations(int index) const;
  ::proto::steam::CParties_BeaconLocation* add_locations();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CParties_BeaconLocation >&
      locations() const;

  // optional string connect_string = 4;
  bool has_connect_string() const;
  void clear_connect_string();
  static const int kConnectStringFieldNumber = 4;
  const ::std::string& connect_string() const;
  void set_connect_string(const ::std::string& value);
  #if LANG_CXX11
  void set_connect_string(::std::string&& value);
  #endif
  void set_connect_string(const char* value);
  void set_connect_string(const char* value, size_t size);
  ::std::string* mutable_connect_string();
  ::std::string* release_connect_string();
  void set_allocated_connect_string(::std::string* connect_string);

  // optional string metadata = 5;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 5;
  const ::std::string& metadata() const;
  void set_metadata(const ::std::string& value);
  #if LANG_CXX11
  void set_metadata(::std::string&& value);
  #endif
  void set_metadata(const char* value);
  void set_metadata(const char* value, size_t size);
  ::std::string* mutable_metadata();
  ::std::string* release_metadata();
  void set_allocated_metadata(::std::string* metadata);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional uint32 num_open_slots = 2;
  bool has_num_open_slots() const;
  void clear_num_open_slots();
  static const int kNumOpenSlotsFieldNumber = 2;
  ::google::protobuf::uint32 num_open_slots() const;
  void set_num_open_slots(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CParties_CreateBeacon_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CParties_BeaconLocation > locations_;
  ::google::protobuf::internal::ArenaStringPtr connect_string_;
  ::google::protobuf::internal::ArenaStringPtr metadata_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 num_open_slots_;
  friend struct ::TableStruct_steammessages_5fparties_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParties_CreateBeacon_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CParties_CreateBeacon_Response) */ {
 public:
  CParties_CreateBeacon_Response();
  virtual ~CParties_CreateBeacon_Response();

  CParties_CreateBeacon_Response(const CParties_CreateBeacon_Response& from);

  inline CParties_CreateBeacon_Response& operator=(const CParties_CreateBeacon_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CParties_CreateBeacon_Response(CParties_CreateBeacon_Response&& from) noexcept
    : CParties_CreateBeacon_Response() {
    *this = ::std::move(from);
  }

  inline CParties_CreateBeacon_Response& operator=(CParties_CreateBeacon_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CParties_CreateBeacon_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CParties_CreateBeacon_Response* internal_default_instance() {
    return reinterpret_cast<const CParties_CreateBeacon_Response*>(
               &_CParties_CreateBeacon_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CParties_CreateBeacon_Response* other);
  friend void swap(CParties_CreateBeacon_Response& a, CParties_CreateBeacon_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CParties_CreateBeacon_Response* New() const final {
    return CreateMaybeMessage<CParties_CreateBeacon_Response>(nullptr);
  }

  CParties_CreateBeacon_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CParties_CreateBeacon_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CParties_CreateBeacon_Response& from);
  void MergeFrom(const CParties_CreateBeacon_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParties_CreateBeacon_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 beacon_id = 1;
  bool has_beacon_id() const;
  void clear_beacon_id();
  static const int kBeaconIdFieldNumber = 1;
  ::google::protobuf::uint64 beacon_id() const;
  void set_beacon_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CParties_CreateBeacon_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 beacon_id_;
  friend struct ::TableStruct_steammessages_5fparties_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParties_OnReservationCompleted_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CParties_OnReservationCompleted_Request) */ {
 public:
  CParties_OnReservationCompleted_Request();
  virtual ~CParties_OnReservationCompleted_Request();

  CParties_OnReservationCompleted_Request(const CParties_OnReservationCompleted_Request& from);

  inline CParties_OnReservationCompleted_Request& operator=(const CParties_OnReservationCompleted_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CParties_OnReservationCompleted_Request(CParties_OnReservationCompleted_Request&& from) noexcept
    : CParties_OnReservationCompleted_Request() {
    *this = ::std::move(from);
  }

  inline CParties_OnReservationCompleted_Request& operator=(CParties_OnReservationCompleted_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CParties_OnReservationCompleted_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CParties_OnReservationCompleted_Request* internal_default_instance() {
    return reinterpret_cast<const CParties_OnReservationCompleted_Request*>(
               &_CParties_OnReservationCompleted_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CParties_OnReservationCompleted_Request* other);
  friend void swap(CParties_OnReservationCompleted_Request& a, CParties_OnReservationCompleted_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CParties_OnReservationCompleted_Request* New() const final {
    return CreateMaybeMessage<CParties_OnReservationCompleted_Request>(nullptr);
  }

  CParties_OnReservationCompleted_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CParties_OnReservationCompleted_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CParties_OnReservationCompleted_Request& from);
  void MergeFrom(const CParties_OnReservationCompleted_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParties_OnReservationCompleted_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 beacon_id = 1;
  bool has_beacon_id() const;
  void clear_beacon_id();
  static const int kBeaconIdFieldNumber = 1;
  ::google::protobuf::uint64 beacon_id() const;
  void set_beacon_id(::google::protobuf::uint64 value);

  // optional fixed64 user_steamid = 2;
  bool has_user_steamid() const;
  void clear_user_steamid();
  static const int kUserSteamidFieldNumber = 2;
  ::google::protobuf::uint64 user_steamid() const;
  void set_user_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CParties_OnReservationCompleted_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 beacon_id_;
  ::google::protobuf::uint64 user_steamid_;
  friend struct ::TableStruct_steammessages_5fparties_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParties_OnReservationCompleted_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CParties_OnReservationCompleted_Response) */ {
 public:
  CParties_OnReservationCompleted_Response();
  virtual ~CParties_OnReservationCompleted_Response();

  CParties_OnReservationCompleted_Response(const CParties_OnReservationCompleted_Response& from);

  inline CParties_OnReservationCompleted_Response& operator=(const CParties_OnReservationCompleted_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CParties_OnReservationCompleted_Response(CParties_OnReservationCompleted_Response&& from) noexcept
    : CParties_OnReservationCompleted_Response() {
    *this = ::std::move(from);
  }

  inline CParties_OnReservationCompleted_Response& operator=(CParties_OnReservationCompleted_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CParties_OnReservationCompleted_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CParties_OnReservationCompleted_Response* internal_default_instance() {
    return reinterpret_cast<const CParties_OnReservationCompleted_Response*>(
               &_CParties_OnReservationCompleted_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CParties_OnReservationCompleted_Response* other);
  friend void swap(CParties_OnReservationCompleted_Response& a, CParties_OnReservationCompleted_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CParties_OnReservationCompleted_Response* New() const final {
    return CreateMaybeMessage<CParties_OnReservationCompleted_Response>(nullptr);
  }

  CParties_OnReservationCompleted_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CParties_OnReservationCompleted_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CParties_OnReservationCompleted_Response& from);
  void MergeFrom(const CParties_OnReservationCompleted_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParties_OnReservationCompleted_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 beacon_id = 1;
  bool has_beacon_id() const;
  void clear_beacon_id();
  static const int kBeaconIdFieldNumber = 1;
  ::google::protobuf::uint64 beacon_id() const;
  void set_beacon_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CParties_OnReservationCompleted_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 beacon_id_;
  friend struct ::TableStruct_steammessages_5fparties_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParties_CancelReservation_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CParties_CancelReservation_Request) */ {
 public:
  CParties_CancelReservation_Request();
  virtual ~CParties_CancelReservation_Request();

  CParties_CancelReservation_Request(const CParties_CancelReservation_Request& from);

  inline CParties_CancelReservation_Request& operator=(const CParties_CancelReservation_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CParties_CancelReservation_Request(CParties_CancelReservation_Request&& from) noexcept
    : CParties_CancelReservation_Request() {
    *this = ::std::move(from);
  }

  inline CParties_CancelReservation_Request& operator=(CParties_CancelReservation_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CParties_CancelReservation_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CParties_CancelReservation_Request* internal_default_instance() {
    return reinterpret_cast<const CParties_CancelReservation_Request*>(
               &_CParties_CancelReservation_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CParties_CancelReservation_Request* other);
  friend void swap(CParties_CancelReservation_Request& a, CParties_CancelReservation_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CParties_CancelReservation_Request* New() const final {
    return CreateMaybeMessage<CParties_CancelReservation_Request>(nullptr);
  }

  CParties_CancelReservation_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CParties_CancelReservation_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CParties_CancelReservation_Request& from);
  void MergeFrom(const CParties_CancelReservation_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParties_CancelReservation_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 beacon_id = 1;
  bool has_beacon_id() const;
  void clear_beacon_id();
  static const int kBeaconIdFieldNumber = 1;
  ::google::protobuf::uint64 beacon_id() const;
  void set_beacon_id(::google::protobuf::uint64 value);

  // optional fixed64 user_steamid = 2;
  bool has_user_steamid() const;
  void clear_user_steamid();
  static const int kUserSteamidFieldNumber = 2;
  ::google::protobuf::uint64 user_steamid() const;
  void set_user_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CParties_CancelReservation_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 beacon_id_;
  ::google::protobuf::uint64 user_steamid_;
  friend struct ::TableStruct_steammessages_5fparties_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParties_CancelReservation_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CParties_CancelReservation_Response) */ {
 public:
  CParties_CancelReservation_Response();
  virtual ~CParties_CancelReservation_Response();

  CParties_CancelReservation_Response(const CParties_CancelReservation_Response& from);

  inline CParties_CancelReservation_Response& operator=(const CParties_CancelReservation_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CParties_CancelReservation_Response(CParties_CancelReservation_Response&& from) noexcept
    : CParties_CancelReservation_Response() {
    *this = ::std::move(from);
  }

  inline CParties_CancelReservation_Response& operator=(CParties_CancelReservation_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CParties_CancelReservation_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CParties_CancelReservation_Response* internal_default_instance() {
    return reinterpret_cast<const CParties_CancelReservation_Response*>(
               &_CParties_CancelReservation_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CParties_CancelReservation_Response* other);
  friend void swap(CParties_CancelReservation_Response& a, CParties_CancelReservation_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CParties_CancelReservation_Response* New() const final {
    return CreateMaybeMessage<CParties_CancelReservation_Response>(nullptr);
  }

  CParties_CancelReservation_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CParties_CancelReservation_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CParties_CancelReservation_Response& from);
  void MergeFrom(const CParties_CancelReservation_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParties_CancelReservation_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 beacon_id = 1;
  bool has_beacon_id() const;
  void clear_beacon_id();
  static const int kBeaconIdFieldNumber = 1;
  ::google::protobuf::uint64 beacon_id() const;
  void set_beacon_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CParties_CancelReservation_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 beacon_id_;
  friend struct ::TableStruct_steammessages_5fparties_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParties_ChangeNumOpenSlots_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CParties_ChangeNumOpenSlots_Request) */ {
 public:
  CParties_ChangeNumOpenSlots_Request();
  virtual ~CParties_ChangeNumOpenSlots_Request();

  CParties_ChangeNumOpenSlots_Request(const CParties_ChangeNumOpenSlots_Request& from);

  inline CParties_ChangeNumOpenSlots_Request& operator=(const CParties_ChangeNumOpenSlots_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CParties_ChangeNumOpenSlots_Request(CParties_ChangeNumOpenSlots_Request&& from) noexcept
    : CParties_ChangeNumOpenSlots_Request() {
    *this = ::std::move(from);
  }

  inline CParties_ChangeNumOpenSlots_Request& operator=(CParties_ChangeNumOpenSlots_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CParties_ChangeNumOpenSlots_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CParties_ChangeNumOpenSlots_Request* internal_default_instance() {
    return reinterpret_cast<const CParties_ChangeNumOpenSlots_Request*>(
               &_CParties_ChangeNumOpenSlots_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CParties_ChangeNumOpenSlots_Request* other);
  friend void swap(CParties_ChangeNumOpenSlots_Request& a, CParties_ChangeNumOpenSlots_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CParties_ChangeNumOpenSlots_Request* New() const final {
    return CreateMaybeMessage<CParties_ChangeNumOpenSlots_Request>(nullptr);
  }

  CParties_ChangeNumOpenSlots_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CParties_ChangeNumOpenSlots_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CParties_ChangeNumOpenSlots_Request& from);
  void MergeFrom(const CParties_ChangeNumOpenSlots_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParties_ChangeNumOpenSlots_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 beacon_id = 1;
  bool has_beacon_id() const;
  void clear_beacon_id();
  static const int kBeaconIdFieldNumber = 1;
  ::google::protobuf::uint64 beacon_id() const;
  void set_beacon_id(::google::protobuf::uint64 value);

  // optional uint32 num_open_slots = 2;
  bool has_num_open_slots() const;
  void clear_num_open_slots();
  static const int kNumOpenSlotsFieldNumber = 2;
  ::google::protobuf::uint32 num_open_slots() const;
  void set_num_open_slots(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CParties_ChangeNumOpenSlots_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 beacon_id_;
  ::google::protobuf::uint32 num_open_slots_;
  friend struct ::TableStruct_steammessages_5fparties_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParties_ChangeNumOpenSlots_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CParties_ChangeNumOpenSlots_Response) */ {
 public:
  CParties_ChangeNumOpenSlots_Response();
  virtual ~CParties_ChangeNumOpenSlots_Response();

  CParties_ChangeNumOpenSlots_Response(const CParties_ChangeNumOpenSlots_Response& from);

  inline CParties_ChangeNumOpenSlots_Response& operator=(const CParties_ChangeNumOpenSlots_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CParties_ChangeNumOpenSlots_Response(CParties_ChangeNumOpenSlots_Response&& from) noexcept
    : CParties_ChangeNumOpenSlots_Response() {
    *this = ::std::move(from);
  }

  inline CParties_ChangeNumOpenSlots_Response& operator=(CParties_ChangeNumOpenSlots_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CParties_ChangeNumOpenSlots_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CParties_ChangeNumOpenSlots_Response* internal_default_instance() {
    return reinterpret_cast<const CParties_ChangeNumOpenSlots_Response*>(
               &_CParties_ChangeNumOpenSlots_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(CParties_ChangeNumOpenSlots_Response* other);
  friend void swap(CParties_ChangeNumOpenSlots_Response& a, CParties_ChangeNumOpenSlots_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CParties_ChangeNumOpenSlots_Response* New() const final {
    return CreateMaybeMessage<CParties_ChangeNumOpenSlots_Response>(nullptr);
  }

  CParties_ChangeNumOpenSlots_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CParties_ChangeNumOpenSlots_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CParties_ChangeNumOpenSlots_Response& from);
  void MergeFrom(const CParties_ChangeNumOpenSlots_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParties_ChangeNumOpenSlots_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 beacon_id = 1;
  bool has_beacon_id() const;
  void clear_beacon_id();
  static const int kBeaconIdFieldNumber = 1;
  ::google::protobuf::uint64 beacon_id() const;
  void set_beacon_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CParties_ChangeNumOpenSlots_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 beacon_id_;
  friend struct ::TableStruct_steammessages_5fparties_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParties_DestroyBeacon_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CParties_DestroyBeacon_Request) */ {
 public:
  CParties_DestroyBeacon_Request();
  virtual ~CParties_DestroyBeacon_Request();

  CParties_DestroyBeacon_Request(const CParties_DestroyBeacon_Request& from);

  inline CParties_DestroyBeacon_Request& operator=(const CParties_DestroyBeacon_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CParties_DestroyBeacon_Request(CParties_DestroyBeacon_Request&& from) noexcept
    : CParties_DestroyBeacon_Request() {
    *this = ::std::move(from);
  }

  inline CParties_DestroyBeacon_Request& operator=(CParties_DestroyBeacon_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CParties_DestroyBeacon_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CParties_DestroyBeacon_Request* internal_default_instance() {
    return reinterpret_cast<const CParties_DestroyBeacon_Request*>(
               &_CParties_DestroyBeacon_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(CParties_DestroyBeacon_Request* other);
  friend void swap(CParties_DestroyBeacon_Request& a, CParties_DestroyBeacon_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CParties_DestroyBeacon_Request* New() const final {
    return CreateMaybeMessage<CParties_DestroyBeacon_Request>(nullptr);
  }

  CParties_DestroyBeacon_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CParties_DestroyBeacon_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CParties_DestroyBeacon_Request& from);
  void MergeFrom(const CParties_DestroyBeacon_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParties_DestroyBeacon_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 beacon_id = 1;
  bool has_beacon_id() const;
  void clear_beacon_id();
  static const int kBeaconIdFieldNumber = 1;
  ::google::protobuf::uint64 beacon_id() const;
  void set_beacon_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CParties_DestroyBeacon_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 beacon_id_;
  friend struct ::TableStruct_steammessages_5fparties_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParties_DestroyBeacon_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CParties_DestroyBeacon_Response) */ {
 public:
  CParties_DestroyBeacon_Response();
  virtual ~CParties_DestroyBeacon_Response();

  CParties_DestroyBeacon_Response(const CParties_DestroyBeacon_Response& from);

  inline CParties_DestroyBeacon_Response& operator=(const CParties_DestroyBeacon_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CParties_DestroyBeacon_Response(CParties_DestroyBeacon_Response&& from) noexcept
    : CParties_DestroyBeacon_Response() {
    *this = ::std::move(from);
  }

  inline CParties_DestroyBeacon_Response& operator=(CParties_DestroyBeacon_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CParties_DestroyBeacon_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CParties_DestroyBeacon_Response* internal_default_instance() {
    return reinterpret_cast<const CParties_DestroyBeacon_Response*>(
               &_CParties_DestroyBeacon_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CParties_DestroyBeacon_Response* other);
  friend void swap(CParties_DestroyBeacon_Response& a, CParties_DestroyBeacon_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CParties_DestroyBeacon_Response* New() const final {
    return CreateMaybeMessage<CParties_DestroyBeacon_Response>(nullptr);
  }

  CParties_DestroyBeacon_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CParties_DestroyBeacon_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CParties_DestroyBeacon_Response& from);
  void MergeFrom(const CParties_DestroyBeacon_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParties_DestroyBeacon_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 beacon_id = 1;
  bool has_beacon_id() const;
  void clear_beacon_id();
  static const int kBeaconIdFieldNumber = 1;
  ::google::protobuf::uint64 beacon_id() const;
  void set_beacon_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CParties_DestroyBeacon_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 beacon_id_;
  friend struct ::TableStruct_steammessages_5fparties_2esteamclient_2eproto;
};
// ===================================================================

class Parties_Stub;

class Parties : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Parties() {};
 public:
  virtual ~Parties();

  typedef Parties_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void JoinParty(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CParties_JoinParty_Request* request,
                       ::proto::steam::CParties_JoinParty_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void CreateBeacon(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CParties_CreateBeacon_Request* request,
                       ::proto::steam::CParties_CreateBeacon_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void OnReservationCompleted(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CParties_OnReservationCompleted_Request* request,
                       ::proto::steam::CParties_OnReservationCompleted_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void CancelReservation(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CParties_CancelReservation_Request* request,
                       ::proto::steam::CParties_CancelReservation_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ChangeNumOpenSlots(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CParties_ChangeNumOpenSlots_Request* request,
                       ::proto::steam::CParties_ChangeNumOpenSlots_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DestroyBeacon(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CParties_DestroyBeacon_Request* request,
                       ::proto::steam::CParties_DestroyBeacon_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Parties);
};

class Parties_Stub : public Parties {
 public:
  Parties_Stub(::google::protobuf::RpcChannel* channel);
  Parties_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Parties_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Parties ------------------------------------------

  void JoinParty(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CParties_JoinParty_Request* request,
                       ::proto::steam::CParties_JoinParty_Response* response,
                       ::google::protobuf::Closure* done);
  void CreateBeacon(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CParties_CreateBeacon_Request* request,
                       ::proto::steam::CParties_CreateBeacon_Response* response,
                       ::google::protobuf::Closure* done);
  void OnReservationCompleted(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CParties_OnReservationCompleted_Request* request,
                       ::proto::steam::CParties_OnReservationCompleted_Response* response,
                       ::google::protobuf::Closure* done);
  void CancelReservation(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CParties_CancelReservation_Request* request,
                       ::proto::steam::CParties_CancelReservation_Response* response,
                       ::google::protobuf::Closure* done);
  void ChangeNumOpenSlots(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CParties_ChangeNumOpenSlots_Request* request,
                       ::proto::steam::CParties_ChangeNumOpenSlots_Response* response,
                       ::google::protobuf::Closure* done);
  void DestroyBeacon(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CParties_DestroyBeacon_Request* request,
                       ::proto::steam::CParties_DestroyBeacon_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Parties_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CParties_JoinParty_Request

// optional fixed64 steamid = 1;
inline bool CParties_JoinParty_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CParties_JoinParty_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CParties_JoinParty_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_JoinParty_Request.steamid)
  return steamid_;
}
inline void CParties_JoinParty_Request::set_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_JoinParty_Request.steamid)
}

// optional uint64 beacon_id = 2;
inline bool CParties_JoinParty_Request::has_beacon_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CParties_JoinParty_Request::clear_beacon_id() {
  beacon_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CParties_JoinParty_Request::beacon_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_JoinParty_Request.beacon_id)
  return beacon_id_;
}
inline void CParties_JoinParty_Request::set_beacon_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  beacon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_JoinParty_Request.beacon_id)
}

// -------------------------------------------------------------------

// CParties_JoinParty_Response

// optional uint64 beacon_id = 1;
inline bool CParties_JoinParty_Response::has_beacon_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CParties_JoinParty_Response::clear_beacon_id() {
  beacon_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CParties_JoinParty_Response::beacon_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_JoinParty_Response.beacon_id)
  return beacon_id_;
}
inline void CParties_JoinParty_Response::set_beacon_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  beacon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_JoinParty_Response.beacon_id)
}

// optional string connect_string = 2;
inline bool CParties_JoinParty_Response::has_connect_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CParties_JoinParty_Response::clear_connect_string() {
  connect_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CParties_JoinParty_Response::connect_string() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_JoinParty_Response.connect_string)
  return connect_string_.GetNoArena();
}
inline void CParties_JoinParty_Response::set_connect_string(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  connect_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParties_JoinParty_Response.connect_string)
}
#if LANG_CXX11
inline void CParties_JoinParty_Response::set_connect_string(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  connect_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParties_JoinParty_Response.connect_string)
}
#endif
inline void CParties_JoinParty_Response::set_connect_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  connect_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParties_JoinParty_Response.connect_string)
}
inline void CParties_JoinParty_Response::set_connect_string(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  connect_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParties_JoinParty_Response.connect_string)
}
inline ::std::string* CParties_JoinParty_Response::mutable_connect_string() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CParties_JoinParty_Response.connect_string)
  return connect_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CParties_JoinParty_Response::release_connect_string() {
  // @@protoc_insertion_point(field_release:proto.steam.CParties_JoinParty_Response.connect_string)
  if (!has_connect_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return connect_string_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CParties_JoinParty_Response::set_allocated_connect_string(::std::string* connect_string) {
  if (connect_string != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  connect_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), connect_string);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParties_JoinParty_Response.connect_string)
}

// -------------------------------------------------------------------

// CParties_BeaconLocation

// optional uint32 location_type = 1;
inline bool CParties_BeaconLocation::has_location_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CParties_BeaconLocation::clear_location_type() {
  location_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CParties_BeaconLocation::location_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_BeaconLocation.location_type)
  return location_type_;
}
inline void CParties_BeaconLocation::set_location_type(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  location_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_BeaconLocation.location_type)
}

// optional uint64 location_id = 2;
inline bool CParties_BeaconLocation::has_location_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CParties_BeaconLocation::clear_location_id() {
  location_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CParties_BeaconLocation::location_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_BeaconLocation.location_id)
  return location_id_;
}
inline void CParties_BeaconLocation::set_location_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  location_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_BeaconLocation.location_id)
}

// -------------------------------------------------------------------

// CParties_CreateBeacon_Request

// optional uint32 appid = 1;
inline bool CParties_CreateBeacon_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CParties_CreateBeacon_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CParties_CreateBeacon_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_CreateBeacon_Request.appid)
  return appid_;
}
inline void CParties_CreateBeacon_Request::set_appid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_CreateBeacon_Request.appid)
}

// optional uint32 num_open_slots = 2;
inline bool CParties_CreateBeacon_Request::has_num_open_slots() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CParties_CreateBeacon_Request::clear_num_open_slots() {
  num_open_slots_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint32 CParties_CreateBeacon_Request::num_open_slots() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_CreateBeacon_Request.num_open_slots)
  return num_open_slots_;
}
inline void CParties_CreateBeacon_Request::set_num_open_slots(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  num_open_slots_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_CreateBeacon_Request.num_open_slots)
}

// repeated .proto.steam.CParties_BeaconLocation locations = 3;
inline int CParties_CreateBeacon_Request::locations_size() const {
  return locations_.size();
}
inline void CParties_CreateBeacon_Request::clear_locations() {
  locations_.Clear();
}
inline ::proto::steam::CParties_BeaconLocation* CParties_CreateBeacon_Request::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CParties_CreateBeacon_Request.locations)
  return locations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CParties_BeaconLocation >*
CParties_CreateBeacon_Request::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CParties_CreateBeacon_Request.locations)
  return &locations_;
}
inline const ::proto::steam::CParties_BeaconLocation& CParties_CreateBeacon_Request::locations(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_CreateBeacon_Request.locations)
  return locations_.Get(index);
}
inline ::proto::steam::CParties_BeaconLocation* CParties_CreateBeacon_Request::add_locations() {
  // @@protoc_insertion_point(field_add:proto.steam.CParties_CreateBeacon_Request.locations)
  return locations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CParties_BeaconLocation >&
CParties_CreateBeacon_Request::locations() const {
  // @@protoc_insertion_point(field_list:proto.steam.CParties_CreateBeacon_Request.locations)
  return locations_;
}

// optional string connect_string = 4;
inline bool CParties_CreateBeacon_Request::has_connect_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CParties_CreateBeacon_Request::clear_connect_string() {
  connect_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CParties_CreateBeacon_Request::connect_string() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_CreateBeacon_Request.connect_string)
  return connect_string_.GetNoArena();
}
inline void CParties_CreateBeacon_Request::set_connect_string(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  connect_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParties_CreateBeacon_Request.connect_string)
}
#if LANG_CXX11
inline void CParties_CreateBeacon_Request::set_connect_string(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  connect_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParties_CreateBeacon_Request.connect_string)
}
#endif
inline void CParties_CreateBeacon_Request::set_connect_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  connect_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParties_CreateBeacon_Request.connect_string)
}
inline void CParties_CreateBeacon_Request::set_connect_string(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  connect_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParties_CreateBeacon_Request.connect_string)
}
inline ::std::string* CParties_CreateBeacon_Request::mutable_connect_string() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CParties_CreateBeacon_Request.connect_string)
  return connect_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CParties_CreateBeacon_Request::release_connect_string() {
  // @@protoc_insertion_point(field_release:proto.steam.CParties_CreateBeacon_Request.connect_string)
  if (!has_connect_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return connect_string_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CParties_CreateBeacon_Request::set_allocated_connect_string(::std::string* connect_string) {
  if (connect_string != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  connect_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), connect_string);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParties_CreateBeacon_Request.connect_string)
}

// optional string metadata = 5;
inline bool CParties_CreateBeacon_Request::has_metadata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CParties_CreateBeacon_Request::clear_metadata() {
  metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CParties_CreateBeacon_Request::metadata() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_CreateBeacon_Request.metadata)
  return metadata_.GetNoArena();
}
inline void CParties_CreateBeacon_Request::set_metadata(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParties_CreateBeacon_Request.metadata)
}
#if LANG_CXX11
inline void CParties_CreateBeacon_Request::set_metadata(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  metadata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParties_CreateBeacon_Request.metadata)
}
#endif
inline void CParties_CreateBeacon_Request::set_metadata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParties_CreateBeacon_Request.metadata)
}
inline void CParties_CreateBeacon_Request::set_metadata(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParties_CreateBeacon_Request.metadata)
}
inline ::std::string* CParties_CreateBeacon_Request::mutable_metadata() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CParties_CreateBeacon_Request.metadata)
  return metadata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CParties_CreateBeacon_Request::release_metadata() {
  // @@protoc_insertion_point(field_release:proto.steam.CParties_CreateBeacon_Request.metadata)
  if (!has_metadata()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return metadata_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CParties_CreateBeacon_Request::set_allocated_metadata(::std::string* metadata) {
  if (metadata != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  metadata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metadata);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParties_CreateBeacon_Request.metadata)
}

// -------------------------------------------------------------------

// CParties_CreateBeacon_Response

// optional uint64 beacon_id = 1;
inline bool CParties_CreateBeacon_Response::has_beacon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CParties_CreateBeacon_Response::clear_beacon_id() {
  beacon_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CParties_CreateBeacon_Response::beacon_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_CreateBeacon_Response.beacon_id)
  return beacon_id_;
}
inline void CParties_CreateBeacon_Response::set_beacon_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  beacon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_CreateBeacon_Response.beacon_id)
}

// -------------------------------------------------------------------

// CParties_OnReservationCompleted_Request

// optional uint64 beacon_id = 1;
inline bool CParties_OnReservationCompleted_Request::has_beacon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CParties_OnReservationCompleted_Request::clear_beacon_id() {
  beacon_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CParties_OnReservationCompleted_Request::beacon_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_OnReservationCompleted_Request.beacon_id)
  return beacon_id_;
}
inline void CParties_OnReservationCompleted_Request::set_beacon_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  beacon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_OnReservationCompleted_Request.beacon_id)
}

// optional fixed64 user_steamid = 2;
inline bool CParties_OnReservationCompleted_Request::has_user_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CParties_OnReservationCompleted_Request::clear_user_steamid() {
  user_steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CParties_OnReservationCompleted_Request::user_steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_OnReservationCompleted_Request.user_steamid)
  return user_steamid_;
}
inline void CParties_OnReservationCompleted_Request::set_user_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  user_steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_OnReservationCompleted_Request.user_steamid)
}

// -------------------------------------------------------------------

// CParties_OnReservationCompleted_Response

// optional uint64 beacon_id = 1;
inline bool CParties_OnReservationCompleted_Response::has_beacon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CParties_OnReservationCompleted_Response::clear_beacon_id() {
  beacon_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CParties_OnReservationCompleted_Response::beacon_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_OnReservationCompleted_Response.beacon_id)
  return beacon_id_;
}
inline void CParties_OnReservationCompleted_Response::set_beacon_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  beacon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_OnReservationCompleted_Response.beacon_id)
}

// -------------------------------------------------------------------

// CParties_CancelReservation_Request

// optional uint64 beacon_id = 1;
inline bool CParties_CancelReservation_Request::has_beacon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CParties_CancelReservation_Request::clear_beacon_id() {
  beacon_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CParties_CancelReservation_Request::beacon_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_CancelReservation_Request.beacon_id)
  return beacon_id_;
}
inline void CParties_CancelReservation_Request::set_beacon_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  beacon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_CancelReservation_Request.beacon_id)
}

// optional fixed64 user_steamid = 2;
inline bool CParties_CancelReservation_Request::has_user_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CParties_CancelReservation_Request::clear_user_steamid() {
  user_steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CParties_CancelReservation_Request::user_steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_CancelReservation_Request.user_steamid)
  return user_steamid_;
}
inline void CParties_CancelReservation_Request::set_user_steamid(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  user_steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_CancelReservation_Request.user_steamid)
}

// -------------------------------------------------------------------

// CParties_CancelReservation_Response

// optional uint64 beacon_id = 1;
inline bool CParties_CancelReservation_Response::has_beacon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CParties_CancelReservation_Response::clear_beacon_id() {
  beacon_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CParties_CancelReservation_Response::beacon_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_CancelReservation_Response.beacon_id)
  return beacon_id_;
}
inline void CParties_CancelReservation_Response::set_beacon_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  beacon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_CancelReservation_Response.beacon_id)
}

// -------------------------------------------------------------------

// CParties_ChangeNumOpenSlots_Request

// optional uint64 beacon_id = 1;
inline bool CParties_ChangeNumOpenSlots_Request::has_beacon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CParties_ChangeNumOpenSlots_Request::clear_beacon_id() {
  beacon_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CParties_ChangeNumOpenSlots_Request::beacon_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_ChangeNumOpenSlots_Request.beacon_id)
  return beacon_id_;
}
inline void CParties_ChangeNumOpenSlots_Request::set_beacon_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  beacon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_ChangeNumOpenSlots_Request.beacon_id)
}

// optional uint32 num_open_slots = 2;
inline bool CParties_ChangeNumOpenSlots_Request::has_num_open_slots() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CParties_ChangeNumOpenSlots_Request::clear_num_open_slots() {
  num_open_slots_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CParties_ChangeNumOpenSlots_Request::num_open_slots() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_ChangeNumOpenSlots_Request.num_open_slots)
  return num_open_slots_;
}
inline void CParties_ChangeNumOpenSlots_Request::set_num_open_slots(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  num_open_slots_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_ChangeNumOpenSlots_Request.num_open_slots)
}

// -------------------------------------------------------------------

// CParties_ChangeNumOpenSlots_Response

// optional uint64 beacon_id = 1;
inline bool CParties_ChangeNumOpenSlots_Response::has_beacon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CParties_ChangeNumOpenSlots_Response::clear_beacon_id() {
  beacon_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CParties_ChangeNumOpenSlots_Response::beacon_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_ChangeNumOpenSlots_Response.beacon_id)
  return beacon_id_;
}
inline void CParties_ChangeNumOpenSlots_Response::set_beacon_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  beacon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_ChangeNumOpenSlots_Response.beacon_id)
}

// -------------------------------------------------------------------

// CParties_DestroyBeacon_Request

// optional uint64 beacon_id = 1;
inline bool CParties_DestroyBeacon_Request::has_beacon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CParties_DestroyBeacon_Request::clear_beacon_id() {
  beacon_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CParties_DestroyBeacon_Request::beacon_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_DestroyBeacon_Request.beacon_id)
  return beacon_id_;
}
inline void CParties_DestroyBeacon_Request::set_beacon_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  beacon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_DestroyBeacon_Request.beacon_id)
}

// -------------------------------------------------------------------

// CParties_DestroyBeacon_Response

// optional uint64 beacon_id = 1;
inline bool CParties_DestroyBeacon_Response::has_beacon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CParties_DestroyBeacon_Response::clear_beacon_id() {
  beacon_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CParties_DestroyBeacon_Response::beacon_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParties_DestroyBeacon_Response.beacon_id)
  return beacon_id_;
}
inline void CParties_DestroyBeacon_Response::set_beacon_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  beacon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParties_DestroyBeacon_Response.beacon_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_steammessages_5fparties_2esteamclient_2eproto
