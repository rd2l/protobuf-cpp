// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_store.steamclient.proto

#ifndef PROTOBUF_INCLUDED_steammessages_5fstore_2esteamclient_2eproto
#define PROTOBUF_INCLUDED_steammessages_5fstore_2esteamclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fstore_2esteamclient_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fstore_2esteamclient_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_steammessages_5fstore_2esteamclient_2eproto();
namespace proto {
namespace steam {
class CStore_GetLocalizedNameForTags_Request;
class CStore_GetLocalizedNameForTags_RequestDefaultTypeInternal;
extern CStore_GetLocalizedNameForTags_RequestDefaultTypeInternal _CStore_GetLocalizedNameForTags_Request_default_instance_;
class CStore_GetLocalizedNameForTags_Response;
class CStore_GetLocalizedNameForTags_ResponseDefaultTypeInternal;
extern CStore_GetLocalizedNameForTags_ResponseDefaultTypeInternal _CStore_GetLocalizedNameForTags_Response_default_instance_;
class CStore_GetLocalizedNameForTags_Response_Tag;
class CStore_GetLocalizedNameForTags_Response_TagDefaultTypeInternal;
extern CStore_GetLocalizedNameForTags_Response_TagDefaultTypeInternal _CStore_GetLocalizedNameForTags_Response_Tag_default_instance_;
class CStore_GetStorePreferences_Request;
class CStore_GetStorePreferences_RequestDefaultTypeInternal;
extern CStore_GetStorePreferences_RequestDefaultTypeInternal _CStore_GetStorePreferences_Request_default_instance_;
class CStore_GetStorePreferences_Response;
class CStore_GetStorePreferences_ResponseDefaultTypeInternal;
extern CStore_GetStorePreferences_ResponseDefaultTypeInternal _CStore_GetStorePreferences_Response_default_instance_;
class CStore_UserContentDescriptorPreferences;
class CStore_UserContentDescriptorPreferencesDefaultTypeInternal;
extern CStore_UserContentDescriptorPreferencesDefaultTypeInternal _CStore_UserContentDescriptorPreferences_default_instance_;
class CStore_UserContentDescriptorPreferences_ContentDescriptor;
class CStore_UserContentDescriptorPreferences_ContentDescriptorDefaultTypeInternal;
extern CStore_UserContentDescriptorPreferences_ContentDescriptorDefaultTypeInternal _CStore_UserContentDescriptorPreferences_ContentDescriptor_default_instance_;
class CStore_UserPreferences;
class CStore_UserPreferencesDefaultTypeInternal;
extern CStore_UserPreferencesDefaultTypeInternal _CStore_UserPreferences_default_instance_;
class CStore_UserTagPreferences;
class CStore_UserTagPreferencesDefaultTypeInternal;
extern CStore_UserTagPreferencesDefaultTypeInternal _CStore_UserTagPreferences_default_instance_;
class CStore_UserTagPreferences_Tag;
class CStore_UserTagPreferences_TagDefaultTypeInternal;
extern CStore_UserTagPreferences_TagDefaultTypeInternal _CStore_UserTagPreferences_Tag_default_instance_;
}  // namespace steam
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::steam::CStore_GetLocalizedNameForTags_Request* Arena::CreateMaybeMessage<::proto::steam::CStore_GetLocalizedNameForTags_Request>(Arena*);
template<> ::proto::steam::CStore_GetLocalizedNameForTags_Response* Arena::CreateMaybeMessage<::proto::steam::CStore_GetLocalizedNameForTags_Response>(Arena*);
template<> ::proto::steam::CStore_GetLocalizedNameForTags_Response_Tag* Arena::CreateMaybeMessage<::proto::steam::CStore_GetLocalizedNameForTags_Response_Tag>(Arena*);
template<> ::proto::steam::CStore_GetStorePreferences_Request* Arena::CreateMaybeMessage<::proto::steam::CStore_GetStorePreferences_Request>(Arena*);
template<> ::proto::steam::CStore_GetStorePreferences_Response* Arena::CreateMaybeMessage<::proto::steam::CStore_GetStorePreferences_Response>(Arena*);
template<> ::proto::steam::CStore_UserContentDescriptorPreferences* Arena::CreateMaybeMessage<::proto::steam::CStore_UserContentDescriptorPreferences>(Arena*);
template<> ::proto::steam::CStore_UserContentDescriptorPreferences_ContentDescriptor* Arena::CreateMaybeMessage<::proto::steam::CStore_UserContentDescriptorPreferences_ContentDescriptor>(Arena*);
template<> ::proto::steam::CStore_UserPreferences* Arena::CreateMaybeMessage<::proto::steam::CStore_UserPreferences>(Arena*);
template<> ::proto::steam::CStore_UserTagPreferences* Arena::CreateMaybeMessage<::proto::steam::CStore_UserTagPreferences>(Arena*);
template<> ::proto::steam::CStore_UserTagPreferences_Tag* Arena::CreateMaybeMessage<::proto::steam::CStore_UserTagPreferences_Tag>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace steam {

// ===================================================================

class CStore_GetLocalizedNameForTags_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CStore_GetLocalizedNameForTags_Request) */ {
 public:
  CStore_GetLocalizedNameForTags_Request();
  virtual ~CStore_GetLocalizedNameForTags_Request();

  CStore_GetLocalizedNameForTags_Request(const CStore_GetLocalizedNameForTags_Request& from);

  inline CStore_GetLocalizedNameForTags_Request& operator=(const CStore_GetLocalizedNameForTags_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CStore_GetLocalizedNameForTags_Request(CStore_GetLocalizedNameForTags_Request&& from) noexcept
    : CStore_GetLocalizedNameForTags_Request() {
    *this = ::std::move(from);
  }

  inline CStore_GetLocalizedNameForTags_Request& operator=(CStore_GetLocalizedNameForTags_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CStore_GetLocalizedNameForTags_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CStore_GetLocalizedNameForTags_Request* internal_default_instance() {
    return reinterpret_cast<const CStore_GetLocalizedNameForTags_Request*>(
               &_CStore_GetLocalizedNameForTags_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CStore_GetLocalizedNameForTags_Request* other);
  friend void swap(CStore_GetLocalizedNameForTags_Request& a, CStore_GetLocalizedNameForTags_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CStore_GetLocalizedNameForTags_Request* New() const final {
    return CreateMaybeMessage<CStore_GetLocalizedNameForTags_Request>(nullptr);
  }

  CStore_GetLocalizedNameForTags_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CStore_GetLocalizedNameForTags_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CStore_GetLocalizedNameForTags_Request& from);
  void MergeFrom(const CStore_GetLocalizedNameForTags_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CStore_GetLocalizedNameForTags_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 tagids = 2;
  int tagids_size() const;
  void clear_tagids();
  static const int kTagidsFieldNumber = 2;
  ::google::protobuf::uint32 tagids(int index) const;
  void set_tagids(int index, ::google::protobuf::uint32 value);
  void add_tagids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tagids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tagids();

  // optional string language = 1;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 1;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  #if LANG_CXX11
  void set_language(::std::string&& value);
  #endif
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // @@protoc_insertion_point(class_scope:proto.steam.CStore_GetLocalizedNameForTags_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tagids_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  friend struct ::TableStruct_steammessages_5fstore_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CStore_GetLocalizedNameForTags_Response_Tag final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag) */ {
 public:
  CStore_GetLocalizedNameForTags_Response_Tag();
  virtual ~CStore_GetLocalizedNameForTags_Response_Tag();

  CStore_GetLocalizedNameForTags_Response_Tag(const CStore_GetLocalizedNameForTags_Response_Tag& from);

  inline CStore_GetLocalizedNameForTags_Response_Tag& operator=(const CStore_GetLocalizedNameForTags_Response_Tag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CStore_GetLocalizedNameForTags_Response_Tag(CStore_GetLocalizedNameForTags_Response_Tag&& from) noexcept
    : CStore_GetLocalizedNameForTags_Response_Tag() {
    *this = ::std::move(from);
  }

  inline CStore_GetLocalizedNameForTags_Response_Tag& operator=(CStore_GetLocalizedNameForTags_Response_Tag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CStore_GetLocalizedNameForTags_Response_Tag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CStore_GetLocalizedNameForTags_Response_Tag* internal_default_instance() {
    return reinterpret_cast<const CStore_GetLocalizedNameForTags_Response_Tag*>(
               &_CStore_GetLocalizedNameForTags_Response_Tag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CStore_GetLocalizedNameForTags_Response_Tag* other);
  friend void swap(CStore_GetLocalizedNameForTags_Response_Tag& a, CStore_GetLocalizedNameForTags_Response_Tag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CStore_GetLocalizedNameForTags_Response_Tag* New() const final {
    return CreateMaybeMessage<CStore_GetLocalizedNameForTags_Response_Tag>(nullptr);
  }

  CStore_GetLocalizedNameForTags_Response_Tag* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CStore_GetLocalizedNameForTags_Response_Tag>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CStore_GetLocalizedNameForTags_Response_Tag& from);
  void MergeFrom(const CStore_GetLocalizedNameForTags_Response_Tag& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CStore_GetLocalizedNameForTags_Response_Tag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string english_name = 2;
  bool has_english_name() const;
  void clear_english_name();
  static const int kEnglishNameFieldNumber = 2;
  const ::std::string& english_name() const;
  void set_english_name(const ::std::string& value);
  #if LANG_CXX11
  void set_english_name(::std::string&& value);
  #endif
  void set_english_name(const char* value);
  void set_english_name(const char* value, size_t size);
  ::std::string* mutable_english_name();
  ::std::string* release_english_name();
  void set_allocated_english_name(::std::string* english_name);

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 tagid = 1;
  bool has_tagid() const;
  void clear_tagid();
  static const int kTagidFieldNumber = 1;
  ::google::protobuf::uint32 tagid() const;
  void set_tagid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr english_name_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 tagid_;
  friend struct ::TableStruct_steammessages_5fstore_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CStore_GetLocalizedNameForTags_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CStore_GetLocalizedNameForTags_Response) */ {
 public:
  CStore_GetLocalizedNameForTags_Response();
  virtual ~CStore_GetLocalizedNameForTags_Response();

  CStore_GetLocalizedNameForTags_Response(const CStore_GetLocalizedNameForTags_Response& from);

  inline CStore_GetLocalizedNameForTags_Response& operator=(const CStore_GetLocalizedNameForTags_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CStore_GetLocalizedNameForTags_Response(CStore_GetLocalizedNameForTags_Response&& from) noexcept
    : CStore_GetLocalizedNameForTags_Response() {
    *this = ::std::move(from);
  }

  inline CStore_GetLocalizedNameForTags_Response& operator=(CStore_GetLocalizedNameForTags_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CStore_GetLocalizedNameForTags_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CStore_GetLocalizedNameForTags_Response* internal_default_instance() {
    return reinterpret_cast<const CStore_GetLocalizedNameForTags_Response*>(
               &_CStore_GetLocalizedNameForTags_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CStore_GetLocalizedNameForTags_Response* other);
  friend void swap(CStore_GetLocalizedNameForTags_Response& a, CStore_GetLocalizedNameForTags_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CStore_GetLocalizedNameForTags_Response* New() const final {
    return CreateMaybeMessage<CStore_GetLocalizedNameForTags_Response>(nullptr);
  }

  CStore_GetLocalizedNameForTags_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CStore_GetLocalizedNameForTags_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CStore_GetLocalizedNameForTags_Response& from);
  void MergeFrom(const CStore_GetLocalizedNameForTags_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CStore_GetLocalizedNameForTags_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CStore_GetLocalizedNameForTags_Response_Tag Tag;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CStore_GetLocalizedNameForTags_Response.Tag tags = 1;
  int tags_size() const;
  void clear_tags();
  static const int kTagsFieldNumber = 1;
  ::proto::steam::CStore_GetLocalizedNameForTags_Response_Tag* mutable_tags(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CStore_GetLocalizedNameForTags_Response_Tag >*
      mutable_tags();
  const ::proto::steam::CStore_GetLocalizedNameForTags_Response_Tag& tags(int index) const;
  ::proto::steam::CStore_GetLocalizedNameForTags_Response_Tag* add_tags();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CStore_GetLocalizedNameForTags_Response_Tag >&
      tags() const;

  // @@protoc_insertion_point(class_scope:proto.steam.CStore_GetLocalizedNameForTags_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CStore_GetLocalizedNameForTags_Response_Tag > tags_;
  friend struct ::TableStruct_steammessages_5fstore_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CStore_GetStorePreferences_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CStore_GetStorePreferences_Request) */ {
 public:
  CStore_GetStorePreferences_Request();
  virtual ~CStore_GetStorePreferences_Request();

  CStore_GetStorePreferences_Request(const CStore_GetStorePreferences_Request& from);

  inline CStore_GetStorePreferences_Request& operator=(const CStore_GetStorePreferences_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CStore_GetStorePreferences_Request(CStore_GetStorePreferences_Request&& from) noexcept
    : CStore_GetStorePreferences_Request() {
    *this = ::std::move(from);
  }

  inline CStore_GetStorePreferences_Request& operator=(CStore_GetStorePreferences_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CStore_GetStorePreferences_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CStore_GetStorePreferences_Request* internal_default_instance() {
    return reinterpret_cast<const CStore_GetStorePreferences_Request*>(
               &_CStore_GetStorePreferences_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CStore_GetStorePreferences_Request* other);
  friend void swap(CStore_GetStorePreferences_Request& a, CStore_GetStorePreferences_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CStore_GetStorePreferences_Request* New() const final {
    return CreateMaybeMessage<CStore_GetStorePreferences_Request>(nullptr);
  }

  CStore_GetStorePreferences_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CStore_GetStorePreferences_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CStore_GetStorePreferences_Request& from);
  void MergeFrom(const CStore_GetStorePreferences_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CStore_GetStorePreferences_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.CStore_GetStorePreferences_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fstore_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CStore_UserPreferences final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CStore_UserPreferences) */ {
 public:
  CStore_UserPreferences();
  virtual ~CStore_UserPreferences();

  CStore_UserPreferences(const CStore_UserPreferences& from);

  inline CStore_UserPreferences& operator=(const CStore_UserPreferences& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CStore_UserPreferences(CStore_UserPreferences&& from) noexcept
    : CStore_UserPreferences() {
    *this = ::std::move(from);
  }

  inline CStore_UserPreferences& operator=(CStore_UserPreferences&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CStore_UserPreferences& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CStore_UserPreferences* internal_default_instance() {
    return reinterpret_cast<const CStore_UserPreferences*>(
               &_CStore_UserPreferences_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CStore_UserPreferences* other);
  friend void swap(CStore_UserPreferences& a, CStore_UserPreferences& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CStore_UserPreferences* New() const final {
    return CreateMaybeMessage<CStore_UserPreferences>(nullptr);
  }

  CStore_UserPreferences* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CStore_UserPreferences>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CStore_UserPreferences& from);
  void MergeFrom(const CStore_UserPreferences& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CStore_UserPreferences* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 primary_language = 1;
  bool has_primary_language() const;
  void clear_primary_language();
  static const int kPrimaryLanguageFieldNumber = 1;
  ::google::protobuf::uint32 primary_language() const;
  void set_primary_language(::google::protobuf::uint32 value);

  // optional uint32 secondary_languages = 2;
  bool has_secondary_languages() const;
  void clear_secondary_languages();
  static const int kSecondaryLanguagesFieldNumber = 2;
  ::google::protobuf::uint32 secondary_languages() const;
  void set_secondary_languages(::google::protobuf::uint32 value);

  // optional bool platform_windows = 3;
  bool has_platform_windows() const;
  void clear_platform_windows();
  static const int kPlatformWindowsFieldNumber = 3;
  bool platform_windows() const;
  void set_platform_windows(bool value);

  // optional bool platform_mac = 4;
  bool has_platform_mac() const;
  void clear_platform_mac();
  static const int kPlatformMacFieldNumber = 4;
  bool platform_mac() const;
  void set_platform_mac(bool value);

  // optional bool platform_linux = 5;
  bool has_platform_linux() const;
  void clear_platform_linux();
  static const int kPlatformLinuxFieldNumber = 5;
  bool platform_linux() const;
  void set_platform_linux(bool value);

  // optional bool hide_adult_content_violence = 6;
  bool has_hide_adult_content_violence() const;
  void clear_hide_adult_content_violence();
  static const int kHideAdultContentViolenceFieldNumber = 6;
  bool hide_adult_content_violence() const;
  void set_hide_adult_content_violence(bool value);

  // optional uint32 timestamp_updated = 8;
  bool has_timestamp_updated() const;
  void clear_timestamp_updated();
  static const int kTimestampUpdatedFieldNumber = 8;
  ::google::protobuf::uint32 timestamp_updated() const;
  void set_timestamp_updated(::google::protobuf::uint32 value);

  // optional bool hide_adult_content_sex = 7;
  bool has_hide_adult_content_sex() const;
  void clear_hide_adult_content_sex();
  static const int kHideAdultContentSexFieldNumber = 7;
  bool hide_adult_content_sex() const;
  void set_hide_adult_content_sex(bool value);

  // optional bool hide_store_broadcast = 9;
  bool has_hide_store_broadcast() const;
  void clear_hide_store_broadcast();
  static const int kHideStoreBroadcastFieldNumber = 9;
  bool hide_store_broadcast() const;
  void set_hide_store_broadcast(bool value);

  // optional int32 timestamp_content_descriptor_preferences_updated = 10;
  bool has_timestamp_content_descriptor_preferences_updated() const;
  void clear_timestamp_content_descriptor_preferences_updated();
  static const int kTimestampContentDescriptorPreferencesUpdatedFieldNumber = 10;
  ::google::protobuf::int32 timestamp_content_descriptor_preferences_updated() const;
  void set_timestamp_content_descriptor_preferences_updated(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CStore_UserPreferences)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 primary_language_;
  ::google::protobuf::uint32 secondary_languages_;
  bool platform_windows_;
  bool platform_mac_;
  bool platform_linux_;
  bool hide_adult_content_violence_;
  ::google::protobuf::uint32 timestamp_updated_;
  bool hide_adult_content_sex_;
  bool hide_store_broadcast_;
  ::google::protobuf::int32 timestamp_content_descriptor_preferences_updated_;
  friend struct ::TableStruct_steammessages_5fstore_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CStore_UserTagPreferences_Tag final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CStore_UserTagPreferences.Tag) */ {
 public:
  CStore_UserTagPreferences_Tag();
  virtual ~CStore_UserTagPreferences_Tag();

  CStore_UserTagPreferences_Tag(const CStore_UserTagPreferences_Tag& from);

  inline CStore_UserTagPreferences_Tag& operator=(const CStore_UserTagPreferences_Tag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CStore_UserTagPreferences_Tag(CStore_UserTagPreferences_Tag&& from) noexcept
    : CStore_UserTagPreferences_Tag() {
    *this = ::std::move(from);
  }

  inline CStore_UserTagPreferences_Tag& operator=(CStore_UserTagPreferences_Tag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CStore_UserTagPreferences_Tag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CStore_UserTagPreferences_Tag* internal_default_instance() {
    return reinterpret_cast<const CStore_UserTagPreferences_Tag*>(
               &_CStore_UserTagPreferences_Tag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CStore_UserTagPreferences_Tag* other);
  friend void swap(CStore_UserTagPreferences_Tag& a, CStore_UserTagPreferences_Tag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CStore_UserTagPreferences_Tag* New() const final {
    return CreateMaybeMessage<CStore_UserTagPreferences_Tag>(nullptr);
  }

  CStore_UserTagPreferences_Tag* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CStore_UserTagPreferences_Tag>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CStore_UserTagPreferences_Tag& from);
  void MergeFrom(const CStore_UserTagPreferences_Tag& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CStore_UserTagPreferences_Tag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 tagid = 1;
  bool has_tagid() const;
  void clear_tagid();
  static const int kTagidFieldNumber = 1;
  ::google::protobuf::uint32 tagid() const;
  void set_tagid(::google::protobuf::uint32 value);

  // optional uint32 timestamp_added = 3;
  bool has_timestamp_added() const;
  void clear_timestamp_added();
  static const int kTimestampAddedFieldNumber = 3;
  ::google::protobuf::uint32 timestamp_added() const;
  void set_timestamp_added(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CStore_UserTagPreferences.Tag)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 tagid_;
  ::google::protobuf::uint32 timestamp_added_;
  friend struct ::TableStruct_steammessages_5fstore_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CStore_UserTagPreferences final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CStore_UserTagPreferences) */ {
 public:
  CStore_UserTagPreferences();
  virtual ~CStore_UserTagPreferences();

  CStore_UserTagPreferences(const CStore_UserTagPreferences& from);

  inline CStore_UserTagPreferences& operator=(const CStore_UserTagPreferences& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CStore_UserTagPreferences(CStore_UserTagPreferences&& from) noexcept
    : CStore_UserTagPreferences() {
    *this = ::std::move(from);
  }

  inline CStore_UserTagPreferences& operator=(CStore_UserTagPreferences&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CStore_UserTagPreferences& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CStore_UserTagPreferences* internal_default_instance() {
    return reinterpret_cast<const CStore_UserTagPreferences*>(
               &_CStore_UserTagPreferences_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CStore_UserTagPreferences* other);
  friend void swap(CStore_UserTagPreferences& a, CStore_UserTagPreferences& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CStore_UserTagPreferences* New() const final {
    return CreateMaybeMessage<CStore_UserTagPreferences>(nullptr);
  }

  CStore_UserTagPreferences* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CStore_UserTagPreferences>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CStore_UserTagPreferences& from);
  void MergeFrom(const CStore_UserTagPreferences& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CStore_UserTagPreferences* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CStore_UserTagPreferences_Tag Tag;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CStore_UserTagPreferences.Tag tags_to_exclude = 1;
  int tags_to_exclude_size() const;
  void clear_tags_to_exclude();
  static const int kTagsToExcludeFieldNumber = 1;
  ::proto::steam::CStore_UserTagPreferences_Tag* mutable_tags_to_exclude(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CStore_UserTagPreferences_Tag >*
      mutable_tags_to_exclude();
  const ::proto::steam::CStore_UserTagPreferences_Tag& tags_to_exclude(int index) const;
  ::proto::steam::CStore_UserTagPreferences_Tag* add_tags_to_exclude();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CStore_UserTagPreferences_Tag >&
      tags_to_exclude() const;

  // @@protoc_insertion_point(class_scope:proto.steam.CStore_UserTagPreferences)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CStore_UserTagPreferences_Tag > tags_to_exclude_;
  friend struct ::TableStruct_steammessages_5fstore_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CStore_UserContentDescriptorPreferences_ContentDescriptor final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CStore_UserContentDescriptorPreferences.ContentDescriptor) */ {
 public:
  CStore_UserContentDescriptorPreferences_ContentDescriptor();
  virtual ~CStore_UserContentDescriptorPreferences_ContentDescriptor();

  CStore_UserContentDescriptorPreferences_ContentDescriptor(const CStore_UserContentDescriptorPreferences_ContentDescriptor& from);

  inline CStore_UserContentDescriptorPreferences_ContentDescriptor& operator=(const CStore_UserContentDescriptorPreferences_ContentDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CStore_UserContentDescriptorPreferences_ContentDescriptor(CStore_UserContentDescriptorPreferences_ContentDescriptor&& from) noexcept
    : CStore_UserContentDescriptorPreferences_ContentDescriptor() {
    *this = ::std::move(from);
  }

  inline CStore_UserContentDescriptorPreferences_ContentDescriptor& operator=(CStore_UserContentDescriptorPreferences_ContentDescriptor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CStore_UserContentDescriptorPreferences_ContentDescriptor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CStore_UserContentDescriptorPreferences_ContentDescriptor* internal_default_instance() {
    return reinterpret_cast<const CStore_UserContentDescriptorPreferences_ContentDescriptor*>(
               &_CStore_UserContentDescriptorPreferences_ContentDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CStore_UserContentDescriptorPreferences_ContentDescriptor* other);
  friend void swap(CStore_UserContentDescriptorPreferences_ContentDescriptor& a, CStore_UserContentDescriptorPreferences_ContentDescriptor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CStore_UserContentDescriptorPreferences_ContentDescriptor* New() const final {
    return CreateMaybeMessage<CStore_UserContentDescriptorPreferences_ContentDescriptor>(nullptr);
  }

  CStore_UserContentDescriptorPreferences_ContentDescriptor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CStore_UserContentDescriptorPreferences_ContentDescriptor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CStore_UserContentDescriptorPreferences_ContentDescriptor& from);
  void MergeFrom(const CStore_UserContentDescriptorPreferences_ContentDescriptor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CStore_UserContentDescriptorPreferences_ContentDescriptor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 content_descriptorid = 1;
  bool has_content_descriptorid() const;
  void clear_content_descriptorid();
  static const int kContentDescriptoridFieldNumber = 1;
  ::google::protobuf::uint32 content_descriptorid() const;
  void set_content_descriptorid(::google::protobuf::uint32 value);

  // optional uint32 timestamp_added = 2;
  bool has_timestamp_added() const;
  void clear_timestamp_added();
  static const int kTimestampAddedFieldNumber = 2;
  ::google::protobuf::uint32 timestamp_added() const;
  void set_timestamp_added(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CStore_UserContentDescriptorPreferences.ContentDescriptor)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 content_descriptorid_;
  ::google::protobuf::uint32 timestamp_added_;
  friend struct ::TableStruct_steammessages_5fstore_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CStore_UserContentDescriptorPreferences final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CStore_UserContentDescriptorPreferences) */ {
 public:
  CStore_UserContentDescriptorPreferences();
  virtual ~CStore_UserContentDescriptorPreferences();

  CStore_UserContentDescriptorPreferences(const CStore_UserContentDescriptorPreferences& from);

  inline CStore_UserContentDescriptorPreferences& operator=(const CStore_UserContentDescriptorPreferences& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CStore_UserContentDescriptorPreferences(CStore_UserContentDescriptorPreferences&& from) noexcept
    : CStore_UserContentDescriptorPreferences() {
    *this = ::std::move(from);
  }

  inline CStore_UserContentDescriptorPreferences& operator=(CStore_UserContentDescriptorPreferences&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CStore_UserContentDescriptorPreferences& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CStore_UserContentDescriptorPreferences* internal_default_instance() {
    return reinterpret_cast<const CStore_UserContentDescriptorPreferences*>(
               &_CStore_UserContentDescriptorPreferences_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CStore_UserContentDescriptorPreferences* other);
  friend void swap(CStore_UserContentDescriptorPreferences& a, CStore_UserContentDescriptorPreferences& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CStore_UserContentDescriptorPreferences* New() const final {
    return CreateMaybeMessage<CStore_UserContentDescriptorPreferences>(nullptr);
  }

  CStore_UserContentDescriptorPreferences* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CStore_UserContentDescriptorPreferences>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CStore_UserContentDescriptorPreferences& from);
  void MergeFrom(const CStore_UserContentDescriptorPreferences& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CStore_UserContentDescriptorPreferences* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef CStore_UserContentDescriptorPreferences_ContentDescriptor ContentDescriptor;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CStore_UserContentDescriptorPreferences.ContentDescriptor content_descriptors_to_exclude = 1;
  int content_descriptors_to_exclude_size() const;
  void clear_content_descriptors_to_exclude();
  static const int kContentDescriptorsToExcludeFieldNumber = 1;
  ::proto::steam::CStore_UserContentDescriptorPreferences_ContentDescriptor* mutable_content_descriptors_to_exclude(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CStore_UserContentDescriptorPreferences_ContentDescriptor >*
      mutable_content_descriptors_to_exclude();
  const ::proto::steam::CStore_UserContentDescriptorPreferences_ContentDescriptor& content_descriptors_to_exclude(int index) const;
  ::proto::steam::CStore_UserContentDescriptorPreferences_ContentDescriptor* add_content_descriptors_to_exclude();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CStore_UserContentDescriptorPreferences_ContentDescriptor >&
      content_descriptors_to_exclude() const;

  // @@protoc_insertion_point(class_scope:proto.steam.CStore_UserContentDescriptorPreferences)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CStore_UserContentDescriptorPreferences_ContentDescriptor > content_descriptors_to_exclude_;
  friend struct ::TableStruct_steammessages_5fstore_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CStore_GetStorePreferences_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CStore_GetStorePreferences_Response) */ {
 public:
  CStore_GetStorePreferences_Response();
  virtual ~CStore_GetStorePreferences_Response();

  CStore_GetStorePreferences_Response(const CStore_GetStorePreferences_Response& from);

  inline CStore_GetStorePreferences_Response& operator=(const CStore_GetStorePreferences_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CStore_GetStorePreferences_Response(CStore_GetStorePreferences_Response&& from) noexcept
    : CStore_GetStorePreferences_Response() {
    *this = ::std::move(from);
  }

  inline CStore_GetStorePreferences_Response& operator=(CStore_GetStorePreferences_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CStore_GetStorePreferences_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CStore_GetStorePreferences_Response* internal_default_instance() {
    return reinterpret_cast<const CStore_GetStorePreferences_Response*>(
               &_CStore_GetStorePreferences_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CStore_GetStorePreferences_Response* other);
  friend void swap(CStore_GetStorePreferences_Response& a, CStore_GetStorePreferences_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CStore_GetStorePreferences_Response* New() const final {
    return CreateMaybeMessage<CStore_GetStorePreferences_Response>(nullptr);
  }

  CStore_GetStorePreferences_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CStore_GetStorePreferences_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CStore_GetStorePreferences_Response& from);
  void MergeFrom(const CStore_GetStorePreferences_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CStore_GetStorePreferences_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.steam.CStore_UserPreferences preferences = 1;
  bool has_preferences() const;
  void clear_preferences();
  static const int kPreferencesFieldNumber = 1;
  const ::proto::steam::CStore_UserPreferences& preferences() const;
  ::proto::steam::CStore_UserPreferences* release_preferences();
  ::proto::steam::CStore_UserPreferences* mutable_preferences();
  void set_allocated_preferences(::proto::steam::CStore_UserPreferences* preferences);

  // optional .proto.steam.CStore_UserTagPreferences tag_preferences = 2;
  bool has_tag_preferences() const;
  void clear_tag_preferences();
  static const int kTagPreferencesFieldNumber = 2;
  const ::proto::steam::CStore_UserTagPreferences& tag_preferences() const;
  ::proto::steam::CStore_UserTagPreferences* release_tag_preferences();
  ::proto::steam::CStore_UserTagPreferences* mutable_tag_preferences();
  void set_allocated_tag_preferences(::proto::steam::CStore_UserTagPreferences* tag_preferences);

  // optional .proto.steam.CStore_UserContentDescriptorPreferences content_descriptor_preferences = 3;
  bool has_content_descriptor_preferences() const;
  void clear_content_descriptor_preferences();
  static const int kContentDescriptorPreferencesFieldNumber = 3;
  const ::proto::steam::CStore_UserContentDescriptorPreferences& content_descriptor_preferences() const;
  ::proto::steam::CStore_UserContentDescriptorPreferences* release_content_descriptor_preferences();
  ::proto::steam::CStore_UserContentDescriptorPreferences* mutable_content_descriptor_preferences();
  void set_allocated_content_descriptor_preferences(::proto::steam::CStore_UserContentDescriptorPreferences* content_descriptor_preferences);

  // @@protoc_insertion_point(class_scope:proto.steam.CStore_GetStorePreferences_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::proto::steam::CStore_UserPreferences* preferences_;
  ::proto::steam::CStore_UserTagPreferences* tag_preferences_;
  ::proto::steam::CStore_UserContentDescriptorPreferences* content_descriptor_preferences_;
  friend struct ::TableStruct_steammessages_5fstore_2esteamclient_2eproto;
};
// ===================================================================

class Store_Stub;

class Store : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Store() {};
 public:
  virtual ~Store();

  typedef Store_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void GetLocalizedNameForTags(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CStore_GetLocalizedNameForTags_Request* request,
                       ::proto::steam::CStore_GetLocalizedNameForTags_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetStorePreferences(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CStore_GetStorePreferences_Request* request,
                       ::proto::steam::CStore_GetStorePreferences_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Store);
};

class Store_Stub : public Store {
 public:
  Store_Stub(::google::protobuf::RpcChannel* channel);
  Store_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Store_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Store ------------------------------------------

  void GetLocalizedNameForTags(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CStore_GetLocalizedNameForTags_Request* request,
                       ::proto::steam::CStore_GetLocalizedNameForTags_Response* response,
                       ::google::protobuf::Closure* done);
  void GetStorePreferences(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CStore_GetStorePreferences_Request* request,
                       ::proto::steam::CStore_GetStorePreferences_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Store_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CStore_GetLocalizedNameForTags_Request

// optional string language = 1;
inline bool CStore_GetLocalizedNameForTags_Request::has_language() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CStore_GetLocalizedNameForTags_Request::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CStore_GetLocalizedNameForTags_Request::language() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_GetLocalizedNameForTags_Request.language)
  return language_.GetNoArena();
}
inline void CStore_GetLocalizedNameForTags_Request::set_language(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CStore_GetLocalizedNameForTags_Request.language)
}
#if LANG_CXX11
inline void CStore_GetLocalizedNameForTags_Request::set_language(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CStore_GetLocalizedNameForTags_Request.language)
}
#endif
inline void CStore_GetLocalizedNameForTags_Request::set_language(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CStore_GetLocalizedNameForTags_Request.language)
}
inline void CStore_GetLocalizedNameForTags_Request::set_language(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CStore_GetLocalizedNameForTags_Request.language)
}
inline ::std::string* CStore_GetLocalizedNameForTags_Request::mutable_language() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CStore_GetLocalizedNameForTags_Request.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStore_GetLocalizedNameForTags_Request::release_language() {
  // @@protoc_insertion_point(field_release:proto.steam.CStore_GetLocalizedNameForTags_Request.language)
  if (!has_language()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return language_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStore_GetLocalizedNameForTags_Request::set_allocated_language(::std::string* language) {
  if (language != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CStore_GetLocalizedNameForTags_Request.language)
}

// repeated uint32 tagids = 2;
inline int CStore_GetLocalizedNameForTags_Request::tagids_size() const {
  return tagids_.size();
}
inline void CStore_GetLocalizedNameForTags_Request::clear_tagids() {
  tagids_.Clear();
}
inline ::google::protobuf::uint32 CStore_GetLocalizedNameForTags_Request::tagids(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_GetLocalizedNameForTags_Request.tagids)
  return tagids_.Get(index);
}
inline void CStore_GetLocalizedNameForTags_Request::set_tagids(int index, ::google::protobuf::uint32 value) {
  tagids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CStore_GetLocalizedNameForTags_Request.tagids)
}
inline void CStore_GetLocalizedNameForTags_Request::add_tagids(::google::protobuf::uint32 value) {
  tagids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CStore_GetLocalizedNameForTags_Request.tagids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CStore_GetLocalizedNameForTags_Request::tagids() const {
  // @@protoc_insertion_point(field_list:proto.steam.CStore_GetLocalizedNameForTags_Request.tagids)
  return tagids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CStore_GetLocalizedNameForTags_Request::mutable_tagids() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CStore_GetLocalizedNameForTags_Request.tagids)
  return &tagids_;
}

// -------------------------------------------------------------------

// CStore_GetLocalizedNameForTags_Response_Tag

// optional uint32 tagid = 1;
inline bool CStore_GetLocalizedNameForTags_Response_Tag::has_tagid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::clear_tagid() {
  tagid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CStore_GetLocalizedNameForTags_Response_Tag::tagid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.tagid)
  return tagid_;
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_tagid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  tagid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.tagid)
}

// optional string english_name = 2;
inline bool CStore_GetLocalizedNameForTags_Response_Tag::has_english_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::clear_english_name() {
  english_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CStore_GetLocalizedNameForTags_Response_Tag::english_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.english_name)
  return english_name_.GetNoArena();
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_english_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  english_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.english_name)
}
#if LANG_CXX11
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_english_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  english_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.english_name)
}
#endif
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_english_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  english_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.english_name)
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_english_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  english_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.english_name)
}
inline ::std::string* CStore_GetLocalizedNameForTags_Response_Tag::mutable_english_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.english_name)
  return english_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStore_GetLocalizedNameForTags_Response_Tag::release_english_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.english_name)
  if (!has_english_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return english_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_allocated_english_name(::std::string* english_name) {
  if (english_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  english_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), english_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.english_name)
}

// optional string name = 3;
inline bool CStore_GetLocalizedNameForTags_Response_Tag::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CStore_GetLocalizedNameForTags_Response_Tag::name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.name)
  return name_.GetNoArena();
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.name)
}
#if LANG_CXX11
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.name)
}
#endif
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.name)
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.name)
}
inline ::std::string* CStore_GetLocalizedNameForTags_Response_Tag::mutable_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStore_GetLocalizedNameForTags_Response_Tag::release_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStore_GetLocalizedNameForTags_Response_Tag::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CStore_GetLocalizedNameForTags_Response.Tag.name)
}

// -------------------------------------------------------------------

// CStore_GetLocalizedNameForTags_Response

// repeated .proto.steam.CStore_GetLocalizedNameForTags_Response.Tag tags = 1;
inline int CStore_GetLocalizedNameForTags_Response::tags_size() const {
  return tags_.size();
}
inline void CStore_GetLocalizedNameForTags_Response::clear_tags() {
  tags_.Clear();
}
inline ::proto::steam::CStore_GetLocalizedNameForTags_Response_Tag* CStore_GetLocalizedNameForTags_Response::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CStore_GetLocalizedNameForTags_Response.tags)
  return tags_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CStore_GetLocalizedNameForTags_Response_Tag >*
CStore_GetLocalizedNameForTags_Response::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CStore_GetLocalizedNameForTags_Response.tags)
  return &tags_;
}
inline const ::proto::steam::CStore_GetLocalizedNameForTags_Response_Tag& CStore_GetLocalizedNameForTags_Response::tags(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_GetLocalizedNameForTags_Response.tags)
  return tags_.Get(index);
}
inline ::proto::steam::CStore_GetLocalizedNameForTags_Response_Tag* CStore_GetLocalizedNameForTags_Response::add_tags() {
  // @@protoc_insertion_point(field_add:proto.steam.CStore_GetLocalizedNameForTags_Response.tags)
  return tags_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CStore_GetLocalizedNameForTags_Response_Tag >&
CStore_GetLocalizedNameForTags_Response::tags() const {
  // @@protoc_insertion_point(field_list:proto.steam.CStore_GetLocalizedNameForTags_Response.tags)
  return tags_;
}

// -------------------------------------------------------------------

// CStore_GetStorePreferences_Request

// -------------------------------------------------------------------

// CStore_UserPreferences

// optional uint32 primary_language = 1;
inline bool CStore_UserPreferences::has_primary_language() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CStore_UserPreferences::clear_primary_language() {
  primary_language_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CStore_UserPreferences::primary_language() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserPreferences.primary_language)
  return primary_language_;
}
inline void CStore_UserPreferences::set_primary_language(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  primary_language_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CStore_UserPreferences.primary_language)
}

// optional uint32 secondary_languages = 2;
inline bool CStore_UserPreferences::has_secondary_languages() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CStore_UserPreferences::clear_secondary_languages() {
  secondary_languages_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CStore_UserPreferences::secondary_languages() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserPreferences.secondary_languages)
  return secondary_languages_;
}
inline void CStore_UserPreferences::set_secondary_languages(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  secondary_languages_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CStore_UserPreferences.secondary_languages)
}

// optional bool platform_windows = 3;
inline bool CStore_UserPreferences::has_platform_windows() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CStore_UserPreferences::clear_platform_windows() {
  platform_windows_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CStore_UserPreferences::platform_windows() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserPreferences.platform_windows)
  return platform_windows_;
}
inline void CStore_UserPreferences::set_platform_windows(bool value) {
  _has_bits_[0] |= 0x00000004u;
  platform_windows_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CStore_UserPreferences.platform_windows)
}

// optional bool platform_mac = 4;
inline bool CStore_UserPreferences::has_platform_mac() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CStore_UserPreferences::clear_platform_mac() {
  platform_mac_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CStore_UserPreferences::platform_mac() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserPreferences.platform_mac)
  return platform_mac_;
}
inline void CStore_UserPreferences::set_platform_mac(bool value) {
  _has_bits_[0] |= 0x00000008u;
  platform_mac_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CStore_UserPreferences.platform_mac)
}

// optional bool platform_linux = 5;
inline bool CStore_UserPreferences::has_platform_linux() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CStore_UserPreferences::clear_platform_linux() {
  platform_linux_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CStore_UserPreferences::platform_linux() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserPreferences.platform_linux)
  return platform_linux_;
}
inline void CStore_UserPreferences::set_platform_linux(bool value) {
  _has_bits_[0] |= 0x00000010u;
  platform_linux_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CStore_UserPreferences.platform_linux)
}

// optional bool hide_adult_content_violence = 6;
inline bool CStore_UserPreferences::has_hide_adult_content_violence() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CStore_UserPreferences::clear_hide_adult_content_violence() {
  hide_adult_content_violence_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CStore_UserPreferences::hide_adult_content_violence() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserPreferences.hide_adult_content_violence)
  return hide_adult_content_violence_;
}
inline void CStore_UserPreferences::set_hide_adult_content_violence(bool value) {
  _has_bits_[0] |= 0x00000020u;
  hide_adult_content_violence_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CStore_UserPreferences.hide_adult_content_violence)
}

// optional bool hide_adult_content_sex = 7;
inline bool CStore_UserPreferences::has_hide_adult_content_sex() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CStore_UserPreferences::clear_hide_adult_content_sex() {
  hide_adult_content_sex_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CStore_UserPreferences::hide_adult_content_sex() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserPreferences.hide_adult_content_sex)
  return hide_adult_content_sex_;
}
inline void CStore_UserPreferences::set_hide_adult_content_sex(bool value) {
  _has_bits_[0] |= 0x00000080u;
  hide_adult_content_sex_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CStore_UserPreferences.hide_adult_content_sex)
}

// optional uint32 timestamp_updated = 8;
inline bool CStore_UserPreferences::has_timestamp_updated() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CStore_UserPreferences::clear_timestamp_updated() {
  timestamp_updated_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::uint32 CStore_UserPreferences::timestamp_updated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserPreferences.timestamp_updated)
  return timestamp_updated_;
}
inline void CStore_UserPreferences::set_timestamp_updated(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  timestamp_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CStore_UserPreferences.timestamp_updated)
}

// optional bool hide_store_broadcast = 9;
inline bool CStore_UserPreferences::has_hide_store_broadcast() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CStore_UserPreferences::clear_hide_store_broadcast() {
  hide_store_broadcast_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CStore_UserPreferences::hide_store_broadcast() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserPreferences.hide_store_broadcast)
  return hide_store_broadcast_;
}
inline void CStore_UserPreferences::set_hide_store_broadcast(bool value) {
  _has_bits_[0] |= 0x00000100u;
  hide_store_broadcast_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CStore_UserPreferences.hide_store_broadcast)
}

// optional int32 timestamp_content_descriptor_preferences_updated = 10;
inline bool CStore_UserPreferences::has_timestamp_content_descriptor_preferences_updated() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CStore_UserPreferences::clear_timestamp_content_descriptor_preferences_updated() {
  timestamp_content_descriptor_preferences_updated_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::google::protobuf::int32 CStore_UserPreferences::timestamp_content_descriptor_preferences_updated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserPreferences.timestamp_content_descriptor_preferences_updated)
  return timestamp_content_descriptor_preferences_updated_;
}
inline void CStore_UserPreferences::set_timestamp_content_descriptor_preferences_updated(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  timestamp_content_descriptor_preferences_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CStore_UserPreferences.timestamp_content_descriptor_preferences_updated)
}

// -------------------------------------------------------------------

// CStore_UserTagPreferences_Tag

// optional uint32 tagid = 1;
inline bool CStore_UserTagPreferences_Tag::has_tagid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CStore_UserTagPreferences_Tag::clear_tagid() {
  tagid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CStore_UserTagPreferences_Tag::tagid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserTagPreferences.Tag.tagid)
  return tagid_;
}
inline void CStore_UserTagPreferences_Tag::set_tagid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  tagid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CStore_UserTagPreferences.Tag.tagid)
}

// optional string name = 2;
inline bool CStore_UserTagPreferences_Tag::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CStore_UserTagPreferences_Tag::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CStore_UserTagPreferences_Tag::name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserTagPreferences.Tag.name)
  return name_.GetNoArena();
}
inline void CStore_UserTagPreferences_Tag::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CStore_UserTagPreferences.Tag.name)
}
#if LANG_CXX11
inline void CStore_UserTagPreferences_Tag::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CStore_UserTagPreferences.Tag.name)
}
#endif
inline void CStore_UserTagPreferences_Tag::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CStore_UserTagPreferences.Tag.name)
}
inline void CStore_UserTagPreferences_Tag::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CStore_UserTagPreferences.Tag.name)
}
inline ::std::string* CStore_UserTagPreferences_Tag::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CStore_UserTagPreferences.Tag.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStore_UserTagPreferences_Tag::release_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CStore_UserTagPreferences.Tag.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStore_UserTagPreferences_Tag::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CStore_UserTagPreferences.Tag.name)
}

// optional uint32 timestamp_added = 3;
inline bool CStore_UserTagPreferences_Tag::has_timestamp_added() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CStore_UserTagPreferences_Tag::clear_timestamp_added() {
  timestamp_added_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 CStore_UserTagPreferences_Tag::timestamp_added() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserTagPreferences.Tag.timestamp_added)
  return timestamp_added_;
}
inline void CStore_UserTagPreferences_Tag::set_timestamp_added(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  timestamp_added_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CStore_UserTagPreferences.Tag.timestamp_added)
}

// -------------------------------------------------------------------

// CStore_UserTagPreferences

// repeated .proto.steam.CStore_UserTagPreferences.Tag tags_to_exclude = 1;
inline int CStore_UserTagPreferences::tags_to_exclude_size() const {
  return tags_to_exclude_.size();
}
inline void CStore_UserTagPreferences::clear_tags_to_exclude() {
  tags_to_exclude_.Clear();
}
inline ::proto::steam::CStore_UserTagPreferences_Tag* CStore_UserTagPreferences::mutable_tags_to_exclude(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CStore_UserTagPreferences.tags_to_exclude)
  return tags_to_exclude_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CStore_UserTagPreferences_Tag >*
CStore_UserTagPreferences::mutable_tags_to_exclude() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CStore_UserTagPreferences.tags_to_exclude)
  return &tags_to_exclude_;
}
inline const ::proto::steam::CStore_UserTagPreferences_Tag& CStore_UserTagPreferences::tags_to_exclude(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserTagPreferences.tags_to_exclude)
  return tags_to_exclude_.Get(index);
}
inline ::proto::steam::CStore_UserTagPreferences_Tag* CStore_UserTagPreferences::add_tags_to_exclude() {
  // @@protoc_insertion_point(field_add:proto.steam.CStore_UserTagPreferences.tags_to_exclude)
  return tags_to_exclude_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CStore_UserTagPreferences_Tag >&
CStore_UserTagPreferences::tags_to_exclude() const {
  // @@protoc_insertion_point(field_list:proto.steam.CStore_UserTagPreferences.tags_to_exclude)
  return tags_to_exclude_;
}

// -------------------------------------------------------------------

// CStore_UserContentDescriptorPreferences_ContentDescriptor

// optional uint32 content_descriptorid = 1;
inline bool CStore_UserContentDescriptorPreferences_ContentDescriptor::has_content_descriptorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CStore_UserContentDescriptorPreferences_ContentDescriptor::clear_content_descriptorid() {
  content_descriptorid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CStore_UserContentDescriptorPreferences_ContentDescriptor::content_descriptorid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserContentDescriptorPreferences.ContentDescriptor.content_descriptorid)
  return content_descriptorid_;
}
inline void CStore_UserContentDescriptorPreferences_ContentDescriptor::set_content_descriptorid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  content_descriptorid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CStore_UserContentDescriptorPreferences.ContentDescriptor.content_descriptorid)
}

// optional uint32 timestamp_added = 2;
inline bool CStore_UserContentDescriptorPreferences_ContentDescriptor::has_timestamp_added() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CStore_UserContentDescriptorPreferences_ContentDescriptor::clear_timestamp_added() {
  timestamp_added_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CStore_UserContentDescriptorPreferences_ContentDescriptor::timestamp_added() const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserContentDescriptorPreferences.ContentDescriptor.timestamp_added)
  return timestamp_added_;
}
inline void CStore_UserContentDescriptorPreferences_ContentDescriptor::set_timestamp_added(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  timestamp_added_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CStore_UserContentDescriptorPreferences.ContentDescriptor.timestamp_added)
}

// -------------------------------------------------------------------

// CStore_UserContentDescriptorPreferences

// repeated .proto.steam.CStore_UserContentDescriptorPreferences.ContentDescriptor content_descriptors_to_exclude = 1;
inline int CStore_UserContentDescriptorPreferences::content_descriptors_to_exclude_size() const {
  return content_descriptors_to_exclude_.size();
}
inline void CStore_UserContentDescriptorPreferences::clear_content_descriptors_to_exclude() {
  content_descriptors_to_exclude_.Clear();
}
inline ::proto::steam::CStore_UserContentDescriptorPreferences_ContentDescriptor* CStore_UserContentDescriptorPreferences::mutable_content_descriptors_to_exclude(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CStore_UserContentDescriptorPreferences.content_descriptors_to_exclude)
  return content_descriptors_to_exclude_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CStore_UserContentDescriptorPreferences_ContentDescriptor >*
CStore_UserContentDescriptorPreferences::mutable_content_descriptors_to_exclude() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CStore_UserContentDescriptorPreferences.content_descriptors_to_exclude)
  return &content_descriptors_to_exclude_;
}
inline const ::proto::steam::CStore_UserContentDescriptorPreferences_ContentDescriptor& CStore_UserContentDescriptorPreferences::content_descriptors_to_exclude(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CStore_UserContentDescriptorPreferences.content_descriptors_to_exclude)
  return content_descriptors_to_exclude_.Get(index);
}
inline ::proto::steam::CStore_UserContentDescriptorPreferences_ContentDescriptor* CStore_UserContentDescriptorPreferences::add_content_descriptors_to_exclude() {
  // @@protoc_insertion_point(field_add:proto.steam.CStore_UserContentDescriptorPreferences.content_descriptors_to_exclude)
  return content_descriptors_to_exclude_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CStore_UserContentDescriptorPreferences_ContentDescriptor >&
CStore_UserContentDescriptorPreferences::content_descriptors_to_exclude() const {
  // @@protoc_insertion_point(field_list:proto.steam.CStore_UserContentDescriptorPreferences.content_descriptors_to_exclude)
  return content_descriptors_to_exclude_;
}

// -------------------------------------------------------------------

// CStore_GetStorePreferences_Response

// optional .proto.steam.CStore_UserPreferences preferences = 1;
inline bool CStore_GetStorePreferences_Response::has_preferences() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CStore_GetStorePreferences_Response::clear_preferences() {
  if (preferences_ != nullptr) preferences_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::proto::steam::CStore_UserPreferences& CStore_GetStorePreferences_Response::preferences() const {
  const ::proto::steam::CStore_UserPreferences* p = preferences_;
  // @@protoc_insertion_point(field_get:proto.steam.CStore_GetStorePreferences_Response.preferences)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::steam::CStore_UserPreferences*>(
      &::proto::steam::_CStore_UserPreferences_default_instance_);
}
inline ::proto::steam::CStore_UserPreferences* CStore_GetStorePreferences_Response::release_preferences() {
  // @@protoc_insertion_point(field_release:proto.steam.CStore_GetStorePreferences_Response.preferences)
  _has_bits_[0] &= ~0x00000001u;
  ::proto::steam::CStore_UserPreferences* temp = preferences_;
  preferences_ = nullptr;
  return temp;
}
inline ::proto::steam::CStore_UserPreferences* CStore_GetStorePreferences_Response::mutable_preferences() {
  _has_bits_[0] |= 0x00000001u;
  if (preferences_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::steam::CStore_UserPreferences>(GetArenaNoVirtual());
    preferences_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.steam.CStore_GetStorePreferences_Response.preferences)
  return preferences_;
}
inline void CStore_GetStorePreferences_Response::set_allocated_preferences(::proto::steam::CStore_UserPreferences* preferences) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete preferences_;
  }
  if (preferences) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      preferences = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, preferences, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  preferences_ = preferences;
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CStore_GetStorePreferences_Response.preferences)
}

// optional .proto.steam.CStore_UserTagPreferences tag_preferences = 2;
inline bool CStore_GetStorePreferences_Response::has_tag_preferences() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CStore_GetStorePreferences_Response::clear_tag_preferences() {
  if (tag_preferences_ != nullptr) tag_preferences_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::proto::steam::CStore_UserTagPreferences& CStore_GetStorePreferences_Response::tag_preferences() const {
  const ::proto::steam::CStore_UserTagPreferences* p = tag_preferences_;
  // @@protoc_insertion_point(field_get:proto.steam.CStore_GetStorePreferences_Response.tag_preferences)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::steam::CStore_UserTagPreferences*>(
      &::proto::steam::_CStore_UserTagPreferences_default_instance_);
}
inline ::proto::steam::CStore_UserTagPreferences* CStore_GetStorePreferences_Response::release_tag_preferences() {
  // @@protoc_insertion_point(field_release:proto.steam.CStore_GetStorePreferences_Response.tag_preferences)
  _has_bits_[0] &= ~0x00000002u;
  ::proto::steam::CStore_UserTagPreferences* temp = tag_preferences_;
  tag_preferences_ = nullptr;
  return temp;
}
inline ::proto::steam::CStore_UserTagPreferences* CStore_GetStorePreferences_Response::mutable_tag_preferences() {
  _has_bits_[0] |= 0x00000002u;
  if (tag_preferences_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::steam::CStore_UserTagPreferences>(GetArenaNoVirtual());
    tag_preferences_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.steam.CStore_GetStorePreferences_Response.tag_preferences)
  return tag_preferences_;
}
inline void CStore_GetStorePreferences_Response::set_allocated_tag_preferences(::proto::steam::CStore_UserTagPreferences* tag_preferences) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete tag_preferences_;
  }
  if (tag_preferences) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      tag_preferences = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tag_preferences, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  tag_preferences_ = tag_preferences;
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CStore_GetStorePreferences_Response.tag_preferences)
}

// optional .proto.steam.CStore_UserContentDescriptorPreferences content_descriptor_preferences = 3;
inline bool CStore_GetStorePreferences_Response::has_content_descriptor_preferences() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CStore_GetStorePreferences_Response::clear_content_descriptor_preferences() {
  if (content_descriptor_preferences_ != nullptr) content_descriptor_preferences_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::proto::steam::CStore_UserContentDescriptorPreferences& CStore_GetStorePreferences_Response::content_descriptor_preferences() const {
  const ::proto::steam::CStore_UserContentDescriptorPreferences* p = content_descriptor_preferences_;
  // @@protoc_insertion_point(field_get:proto.steam.CStore_GetStorePreferences_Response.content_descriptor_preferences)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::steam::CStore_UserContentDescriptorPreferences*>(
      &::proto::steam::_CStore_UserContentDescriptorPreferences_default_instance_);
}
inline ::proto::steam::CStore_UserContentDescriptorPreferences* CStore_GetStorePreferences_Response::release_content_descriptor_preferences() {
  // @@protoc_insertion_point(field_release:proto.steam.CStore_GetStorePreferences_Response.content_descriptor_preferences)
  _has_bits_[0] &= ~0x00000004u;
  ::proto::steam::CStore_UserContentDescriptorPreferences* temp = content_descriptor_preferences_;
  content_descriptor_preferences_ = nullptr;
  return temp;
}
inline ::proto::steam::CStore_UserContentDescriptorPreferences* CStore_GetStorePreferences_Response::mutable_content_descriptor_preferences() {
  _has_bits_[0] |= 0x00000004u;
  if (content_descriptor_preferences_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::steam::CStore_UserContentDescriptorPreferences>(GetArenaNoVirtual());
    content_descriptor_preferences_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.steam.CStore_GetStorePreferences_Response.content_descriptor_preferences)
  return content_descriptor_preferences_;
}
inline void CStore_GetStorePreferences_Response::set_allocated_content_descriptor_preferences(::proto::steam::CStore_UserContentDescriptorPreferences* content_descriptor_preferences) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete content_descriptor_preferences_;
  }
  if (content_descriptor_preferences) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      content_descriptor_preferences = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, content_descriptor_preferences, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  content_descriptor_preferences_ = content_descriptor_preferences;
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CStore_GetStorePreferences_Response.content_descriptor_preferences)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_steammessages_5fstore_2esteamclient_2eproto
