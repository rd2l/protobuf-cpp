// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_video.steamclient.proto

#ifndef PROTOBUF_INCLUDED_steammessages_5fvideo_2esteamclient_2eproto
#define PROTOBUF_INCLUDED_steammessages_5fvideo_2esteamclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fvideo_2esteamclient_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fvideo_2esteamclient_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_steammessages_5fvideo_2esteamclient_2eproto();
namespace proto {
namespace steam {
class CFovasVideo_ClientGetOPFSettings_Request;
class CFovasVideo_ClientGetOPFSettings_RequestDefaultTypeInternal;
extern CFovasVideo_ClientGetOPFSettings_RequestDefaultTypeInternal _CFovasVideo_ClientGetOPFSettings_Request_default_instance_;
class CFovasVideo_ClientGetOPFSettings_Response;
class CFovasVideo_ClientGetOPFSettings_ResponseDefaultTypeInternal;
extern CFovasVideo_ClientGetOPFSettings_ResponseDefaultTypeInternal _CFovasVideo_ClientGetOPFSettings_Response_default_instance_;
class CVideo_ClientGetVideoURL_Request;
class CVideo_ClientGetVideoURL_RequestDefaultTypeInternal;
extern CVideo_ClientGetVideoURL_RequestDefaultTypeInternal _CVideo_ClientGetVideoURL_Request_default_instance_;
class CVideo_ClientGetVideoURL_Response;
class CVideo_ClientGetVideoURL_ResponseDefaultTypeInternal;
extern CVideo_ClientGetVideoURL_ResponseDefaultTypeInternal _CVideo_ClientGetVideoURL_Response_default_instance_;
class CVideo_GetVideoBookmarks_Request;
class CVideo_GetVideoBookmarks_RequestDefaultTypeInternal;
extern CVideo_GetVideoBookmarks_RequestDefaultTypeInternal _CVideo_GetVideoBookmarks_Request_default_instance_;
class CVideo_GetVideoBookmarks_Response;
class CVideo_GetVideoBookmarks_ResponseDefaultTypeInternal;
extern CVideo_GetVideoBookmarks_ResponseDefaultTypeInternal _CVideo_GetVideoBookmarks_Response_default_instance_;
class CVideo_SetVideoBookmark_Notification;
class CVideo_SetVideoBookmark_NotificationDefaultTypeInternal;
extern CVideo_SetVideoBookmark_NotificationDefaultTypeInternal _CVideo_SetVideoBookmark_Notification_default_instance_;
class CVideo_UnlockedH264_Notification;
class CVideo_UnlockedH264_NotificationDefaultTypeInternal;
extern CVideo_UnlockedH264_NotificationDefaultTypeInternal _CVideo_UnlockedH264_Notification_default_instance_;
class VideoBookmark;
class VideoBookmarkDefaultTypeInternal;
extern VideoBookmarkDefaultTypeInternal _VideoBookmark_default_instance_;
}  // namespace steam
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::steam::CFovasVideo_ClientGetOPFSettings_Request* Arena::CreateMaybeMessage<::proto::steam::CFovasVideo_ClientGetOPFSettings_Request>(Arena*);
template<> ::proto::steam::CFovasVideo_ClientGetOPFSettings_Response* Arena::CreateMaybeMessage<::proto::steam::CFovasVideo_ClientGetOPFSettings_Response>(Arena*);
template<> ::proto::steam::CVideo_ClientGetVideoURL_Request* Arena::CreateMaybeMessage<::proto::steam::CVideo_ClientGetVideoURL_Request>(Arena*);
template<> ::proto::steam::CVideo_ClientGetVideoURL_Response* Arena::CreateMaybeMessage<::proto::steam::CVideo_ClientGetVideoURL_Response>(Arena*);
template<> ::proto::steam::CVideo_GetVideoBookmarks_Request* Arena::CreateMaybeMessage<::proto::steam::CVideo_GetVideoBookmarks_Request>(Arena*);
template<> ::proto::steam::CVideo_GetVideoBookmarks_Response* Arena::CreateMaybeMessage<::proto::steam::CVideo_GetVideoBookmarks_Response>(Arena*);
template<> ::proto::steam::CVideo_SetVideoBookmark_Notification* Arena::CreateMaybeMessage<::proto::steam::CVideo_SetVideoBookmark_Notification>(Arena*);
template<> ::proto::steam::CVideo_UnlockedH264_Notification* Arena::CreateMaybeMessage<::proto::steam::CVideo_UnlockedH264_Notification>(Arena*);
template<> ::proto::steam::VideoBookmark* Arena::CreateMaybeMessage<::proto::steam::VideoBookmark>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace steam {

// ===================================================================

class CVideo_ClientGetVideoURL_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CVideo_ClientGetVideoURL_Request) */ {
 public:
  CVideo_ClientGetVideoURL_Request();
  virtual ~CVideo_ClientGetVideoURL_Request();

  CVideo_ClientGetVideoURL_Request(const CVideo_ClientGetVideoURL_Request& from);

  inline CVideo_ClientGetVideoURL_Request& operator=(const CVideo_ClientGetVideoURL_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CVideo_ClientGetVideoURL_Request(CVideo_ClientGetVideoURL_Request&& from) noexcept
    : CVideo_ClientGetVideoURL_Request() {
    *this = ::std::move(from);
  }

  inline CVideo_ClientGetVideoURL_Request& operator=(CVideo_ClientGetVideoURL_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CVideo_ClientGetVideoURL_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CVideo_ClientGetVideoURL_Request* internal_default_instance() {
    return reinterpret_cast<const CVideo_ClientGetVideoURL_Request*>(
               &_CVideo_ClientGetVideoURL_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CVideo_ClientGetVideoURL_Request* other);
  friend void swap(CVideo_ClientGetVideoURL_Request& a, CVideo_ClientGetVideoURL_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CVideo_ClientGetVideoURL_Request* New() const final {
    return CreateMaybeMessage<CVideo_ClientGetVideoURL_Request>(nullptr);
  }

  CVideo_ClientGetVideoURL_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CVideo_ClientGetVideoURL_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CVideo_ClientGetVideoURL_Request& from);
  void MergeFrom(const CVideo_ClientGetVideoURL_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CVideo_ClientGetVideoURL_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 video_id = 1 [(.proto.steam.description) = "Video ID"];
  bool has_video_id() const;
  void clear_video_id();
  static const int kVideoIdFieldNumber = 1;
  ::google::protobuf::uint64 video_id() const;
  void set_video_id(::google::protobuf::uint64 value);

  // optional uint32 client_cellid = 2 [(.proto.steam.description) = "Cell ID of client, zero if unknown"];
  bool has_client_cellid() const;
  void clear_client_cellid();
  static const int kClientCellidFieldNumber = 2;
  ::google::protobuf::uint32 client_cellid() const;
  void set_client_cellid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CVideo_ClientGetVideoURL_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 video_id_;
  ::google::protobuf::uint32 client_cellid_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CVideo_ClientGetVideoURL_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CVideo_ClientGetVideoURL_Response) */ {
 public:
  CVideo_ClientGetVideoURL_Response();
  virtual ~CVideo_ClientGetVideoURL_Response();

  CVideo_ClientGetVideoURL_Response(const CVideo_ClientGetVideoURL_Response& from);

  inline CVideo_ClientGetVideoURL_Response& operator=(const CVideo_ClientGetVideoURL_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CVideo_ClientGetVideoURL_Response(CVideo_ClientGetVideoURL_Response&& from) noexcept
    : CVideo_ClientGetVideoURL_Response() {
    *this = ::std::move(from);
  }

  inline CVideo_ClientGetVideoURL_Response& operator=(CVideo_ClientGetVideoURL_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CVideo_ClientGetVideoURL_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CVideo_ClientGetVideoURL_Response* internal_default_instance() {
    return reinterpret_cast<const CVideo_ClientGetVideoURL_Response*>(
               &_CVideo_ClientGetVideoURL_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CVideo_ClientGetVideoURL_Response* other);
  friend void swap(CVideo_ClientGetVideoURL_Response& a, CVideo_ClientGetVideoURL_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CVideo_ClientGetVideoURL_Response* New() const final {
    return CreateMaybeMessage<CVideo_ClientGetVideoURL_Response>(nullptr);
  }

  CVideo_ClientGetVideoURL_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CVideo_ClientGetVideoURL_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CVideo_ClientGetVideoURL_Response& from);
  void MergeFrom(const CVideo_ClientGetVideoURL_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CVideo_ClientGetVideoURL_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string video_url = 2 [(.proto.steam.description) = "URL for video manifest"];
  bool has_video_url() const;
  void clear_video_url();
  static const int kVideoUrlFieldNumber = 2;
  const ::std::string& video_url() const;
  void set_video_url(const ::std::string& value);
  #if LANG_CXX11
  void set_video_url(::std::string&& value);
  #endif
  void set_video_url(const char* value);
  void set_video_url(const char* value, size_t size);
  ::std::string* mutable_video_url();
  ::std::string* release_video_url();
  void set_allocated_video_url(::std::string* video_url);

  // optional uint64 video_id = 1 [(.proto.steam.description) = "Video ID"];
  bool has_video_id() const;
  void clear_video_id();
  static const int kVideoIdFieldNumber = 1;
  ::google::protobuf::uint64 video_id() const;
  void set_video_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CVideo_ClientGetVideoURL_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr video_url_;
  ::google::protobuf::uint64 video_id_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class VideoBookmark final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.VideoBookmark) */ {
 public:
  VideoBookmark();
  virtual ~VideoBookmark();

  VideoBookmark(const VideoBookmark& from);

  inline VideoBookmark& operator=(const VideoBookmark& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VideoBookmark(VideoBookmark&& from) noexcept
    : VideoBookmark() {
    *this = ::std::move(from);
  }

  inline VideoBookmark& operator=(VideoBookmark&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VideoBookmark& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VideoBookmark* internal_default_instance() {
    return reinterpret_cast<const VideoBookmark*>(
               &_VideoBookmark_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(VideoBookmark* other);
  friend void swap(VideoBookmark& a, VideoBookmark& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VideoBookmark* New() const final {
    return CreateMaybeMessage<VideoBookmark>(nullptr);
  }

  VideoBookmark* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VideoBookmark>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VideoBookmark& from);
  void MergeFrom(const VideoBookmark& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VideoBookmark* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_id = 1 [(.proto.steam.description) = "App ID"];
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // optional uint32 playback_position_in_seconds = 2 [(.proto.steam.description) = "How many seconds into the video the bookmark is for"];
  bool has_playback_position_in_seconds() const;
  void clear_playback_position_in_seconds();
  static const int kPlaybackPositionInSecondsFieldNumber = 2;
  ::google::protobuf::uint32 playback_position_in_seconds() const;
  void set_playback_position_in_seconds(::google::protobuf::uint32 value);

  // optional uint64 video_track_id = 3 [(.proto.steam.description) = "video track choice."];
  bool has_video_track_id() const;
  void clear_video_track_id();
  static const int kVideoTrackIdFieldNumber = 3;
  ::google::protobuf::uint64 video_track_id() const;
  void set_video_track_id(::google::protobuf::uint64 value);

  // optional uint64 audio_track_id = 4 [(.proto.steam.description) = "audio track choice."];
  bool has_audio_track_id() const;
  void clear_audio_track_id();
  static const int kAudioTrackIdFieldNumber = 4;
  ::google::protobuf::uint64 audio_track_id() const;
  void set_audio_track_id(::google::protobuf::uint64 value);

  // optional uint64 timedtext_track_id = 5 [(.proto.steam.description) = "timedtimed or subtitle track choice"];
  bool has_timedtext_track_id() const;
  void clear_timedtext_track_id();
  static const int kTimedtextTrackIdFieldNumber = 5;
  ::google::protobuf::uint64 timedtext_track_id() const;
  void set_timedtext_track_id(::google::protobuf::uint64 value);

  // optional uint32 last_modified = 6 [(.proto.steam.description) = "when we recorded it was last modified. Not settable."];
  bool has_last_modified() const;
  void clear_last_modified();
  static const int kLastModifiedFieldNumber = 6;
  ::google::protobuf::uint32 last_modified() const;
  void set_last_modified(::google::protobuf::uint32 value);

  // optional bool hide_from_watch_history = 7 [default = false, (.proto.steam.description) = "Whether I want to show this in my history"];
  bool has_hide_from_watch_history() const;
  void clear_hide_from_watch_history();
  static const int kHideFromWatchHistoryFieldNumber = 7;
  bool hide_from_watch_history() const;
  void set_hide_from_watch_history(bool value);

  // optional bool hide_from_library = 8 [default = false, (.proto.steam.description) = "Whether I want to show this in my library"];
  bool has_hide_from_library() const;
  void clear_hide_from_library();
  static const int kHideFromLibraryFieldNumber = 8;
  bool hide_from_library() const;
  void set_hide_from_library(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.VideoBookmark)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 playback_position_in_seconds_;
  ::google::protobuf::uint64 video_track_id_;
  ::google::protobuf::uint64 audio_track_id_;
  ::google::protobuf::uint64 timedtext_track_id_;
  ::google::protobuf::uint32 last_modified_;
  bool hide_from_watch_history_;
  bool hide_from_library_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CVideo_SetVideoBookmark_Notification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CVideo_SetVideoBookmark_Notification) */ {
 public:
  CVideo_SetVideoBookmark_Notification();
  virtual ~CVideo_SetVideoBookmark_Notification();

  CVideo_SetVideoBookmark_Notification(const CVideo_SetVideoBookmark_Notification& from);

  inline CVideo_SetVideoBookmark_Notification& operator=(const CVideo_SetVideoBookmark_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CVideo_SetVideoBookmark_Notification(CVideo_SetVideoBookmark_Notification&& from) noexcept
    : CVideo_SetVideoBookmark_Notification() {
    *this = ::std::move(from);
  }

  inline CVideo_SetVideoBookmark_Notification& operator=(CVideo_SetVideoBookmark_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CVideo_SetVideoBookmark_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CVideo_SetVideoBookmark_Notification* internal_default_instance() {
    return reinterpret_cast<const CVideo_SetVideoBookmark_Notification*>(
               &_CVideo_SetVideoBookmark_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CVideo_SetVideoBookmark_Notification* other);
  friend void swap(CVideo_SetVideoBookmark_Notification& a, CVideo_SetVideoBookmark_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CVideo_SetVideoBookmark_Notification* New() const final {
    return CreateMaybeMessage<CVideo_SetVideoBookmark_Notification>(nullptr);
  }

  CVideo_SetVideoBookmark_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CVideo_SetVideoBookmark_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CVideo_SetVideoBookmark_Notification& from);
  void MergeFrom(const CVideo_SetVideoBookmark_Notification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CVideo_SetVideoBookmark_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.steam.VideoBookmark bookmarks = 1 [(.proto.steam.description) = "list of bookmarks we want to store."];
  int bookmarks_size() const;
  void clear_bookmarks();
  static const int kBookmarksFieldNumber = 1;
  ::proto::steam::VideoBookmark* mutable_bookmarks(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::steam::VideoBookmark >*
      mutable_bookmarks();
  const ::proto::steam::VideoBookmark& bookmarks(int index) const;
  ::proto::steam::VideoBookmark* add_bookmarks();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::VideoBookmark >&
      bookmarks() const;

  // @@protoc_insertion_point(class_scope:proto.steam.CVideo_SetVideoBookmark_Notification)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::VideoBookmark > bookmarks_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CVideo_GetVideoBookmarks_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CVideo_GetVideoBookmarks_Request) */ {
 public:
  CVideo_GetVideoBookmarks_Request();
  virtual ~CVideo_GetVideoBookmarks_Request();

  CVideo_GetVideoBookmarks_Request(const CVideo_GetVideoBookmarks_Request& from);

  inline CVideo_GetVideoBookmarks_Request& operator=(const CVideo_GetVideoBookmarks_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CVideo_GetVideoBookmarks_Request(CVideo_GetVideoBookmarks_Request&& from) noexcept
    : CVideo_GetVideoBookmarks_Request() {
    *this = ::std::move(from);
  }

  inline CVideo_GetVideoBookmarks_Request& operator=(CVideo_GetVideoBookmarks_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CVideo_GetVideoBookmarks_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CVideo_GetVideoBookmarks_Request* internal_default_instance() {
    return reinterpret_cast<const CVideo_GetVideoBookmarks_Request*>(
               &_CVideo_GetVideoBookmarks_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CVideo_GetVideoBookmarks_Request* other);
  friend void swap(CVideo_GetVideoBookmarks_Request& a, CVideo_GetVideoBookmarks_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CVideo_GetVideoBookmarks_Request* New() const final {
    return CreateMaybeMessage<CVideo_GetVideoBookmarks_Request>(nullptr);
  }

  CVideo_GetVideoBookmarks_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CVideo_GetVideoBookmarks_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CVideo_GetVideoBookmarks_Request& from);
  void MergeFrom(const CVideo_GetVideoBookmarks_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CVideo_GetVideoBookmarks_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 appids = 1 [(.proto.steam.description) = "List of App IDs to grab bookmarks for. Can be empty if using updated_since."];
  int appids_size() const;
  void clear_appids();
  static const int kAppidsFieldNumber = 1;
  ::google::protobuf::uint32 appids(int index) const;
  void set_appids(int index, ::google::protobuf::uint32 value);
  void add_appids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      appids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_appids();

  // optional uint32 updated_since = 2 [(.proto.steam.description) = "Only return results after time. Min value is 1. (seconds since epoch January 1st, 1970 Unix Time)"];
  bool has_updated_since() const;
  void clear_updated_since();
  static const int kUpdatedSinceFieldNumber = 2;
  ::google::protobuf::uint32 updated_since() const;
  void set_updated_since(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CVideo_GetVideoBookmarks_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > appids_;
  ::google::protobuf::uint32 updated_since_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CVideo_GetVideoBookmarks_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CVideo_GetVideoBookmarks_Response) */ {
 public:
  CVideo_GetVideoBookmarks_Response();
  virtual ~CVideo_GetVideoBookmarks_Response();

  CVideo_GetVideoBookmarks_Response(const CVideo_GetVideoBookmarks_Response& from);

  inline CVideo_GetVideoBookmarks_Response& operator=(const CVideo_GetVideoBookmarks_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CVideo_GetVideoBookmarks_Response(CVideo_GetVideoBookmarks_Response&& from) noexcept
    : CVideo_GetVideoBookmarks_Response() {
    *this = ::std::move(from);
  }

  inline CVideo_GetVideoBookmarks_Response& operator=(CVideo_GetVideoBookmarks_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CVideo_GetVideoBookmarks_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CVideo_GetVideoBookmarks_Response* internal_default_instance() {
    return reinterpret_cast<const CVideo_GetVideoBookmarks_Response*>(
               &_CVideo_GetVideoBookmarks_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(CVideo_GetVideoBookmarks_Response* other);
  friend void swap(CVideo_GetVideoBookmarks_Response& a, CVideo_GetVideoBookmarks_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CVideo_GetVideoBookmarks_Response* New() const final {
    return CreateMaybeMessage<CVideo_GetVideoBookmarks_Response>(nullptr);
  }

  CVideo_GetVideoBookmarks_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CVideo_GetVideoBookmarks_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CVideo_GetVideoBookmarks_Response& from);
  void MergeFrom(const CVideo_GetVideoBookmarks_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CVideo_GetVideoBookmarks_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.steam.VideoBookmark bookmarks = 1 [(.proto.steam.description) = "List of bookmarks we found. Can be empty."];
  int bookmarks_size() const;
  void clear_bookmarks();
  static const int kBookmarksFieldNumber = 1;
  ::proto::steam::VideoBookmark* mutable_bookmarks(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::steam::VideoBookmark >*
      mutable_bookmarks();
  const ::proto::steam::VideoBookmark& bookmarks(int index) const;
  ::proto::steam::VideoBookmark* add_bookmarks();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::VideoBookmark >&
      bookmarks() const;

  // @@protoc_insertion_point(class_scope:proto.steam.CVideo_GetVideoBookmarks_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::VideoBookmark > bookmarks_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CVideo_UnlockedH264_Notification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CVideo_UnlockedH264_Notification) */ {
 public:
  CVideo_UnlockedH264_Notification();
  virtual ~CVideo_UnlockedH264_Notification();

  CVideo_UnlockedH264_Notification(const CVideo_UnlockedH264_Notification& from);

  inline CVideo_UnlockedH264_Notification& operator=(const CVideo_UnlockedH264_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CVideo_UnlockedH264_Notification(CVideo_UnlockedH264_Notification&& from) noexcept
    : CVideo_UnlockedH264_Notification() {
    *this = ::std::move(from);
  }

  inline CVideo_UnlockedH264_Notification& operator=(CVideo_UnlockedH264_Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CVideo_UnlockedH264_Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CVideo_UnlockedH264_Notification* internal_default_instance() {
    return reinterpret_cast<const CVideo_UnlockedH264_Notification*>(
               &_CVideo_UnlockedH264_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CVideo_UnlockedH264_Notification* other);
  friend void swap(CVideo_UnlockedH264_Notification& a, CVideo_UnlockedH264_Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CVideo_UnlockedH264_Notification* New() const final {
    return CreateMaybeMessage<CVideo_UnlockedH264_Notification>(nullptr);
  }

  CVideo_UnlockedH264_Notification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CVideo_UnlockedH264_Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CVideo_UnlockedH264_Notification& from);
  void MergeFrom(const CVideo_UnlockedH264_Notification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CVideo_UnlockedH264_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes encryption_key = 1;
  bool has_encryption_key() const;
  void clear_encryption_key();
  static const int kEncryptionKeyFieldNumber = 1;
  const ::std::string& encryption_key() const;
  void set_encryption_key(const ::std::string& value);
  #if LANG_CXX11
  void set_encryption_key(::std::string&& value);
  #endif
  void set_encryption_key(const char* value);
  void set_encryption_key(const void* value, size_t size);
  ::std::string* mutable_encryption_key();
  ::std::string* release_encryption_key();
  void set_allocated_encryption_key(::std::string* encryption_key);

  // @@protoc_insertion_point(class_scope:proto.steam.CVideo_UnlockedH264_Notification)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr encryption_key_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CFovasVideo_ClientGetOPFSettings_Request final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CFovasVideo_ClientGetOPFSettings_Request) */ {
 public:
  CFovasVideo_ClientGetOPFSettings_Request();
  virtual ~CFovasVideo_ClientGetOPFSettings_Request();

  CFovasVideo_ClientGetOPFSettings_Request(const CFovasVideo_ClientGetOPFSettings_Request& from);

  inline CFovasVideo_ClientGetOPFSettings_Request& operator=(const CFovasVideo_ClientGetOPFSettings_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CFovasVideo_ClientGetOPFSettings_Request(CFovasVideo_ClientGetOPFSettings_Request&& from) noexcept
    : CFovasVideo_ClientGetOPFSettings_Request() {
    *this = ::std::move(from);
  }

  inline CFovasVideo_ClientGetOPFSettings_Request& operator=(CFovasVideo_ClientGetOPFSettings_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CFovasVideo_ClientGetOPFSettings_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CFovasVideo_ClientGetOPFSettings_Request* internal_default_instance() {
    return reinterpret_cast<const CFovasVideo_ClientGetOPFSettings_Request*>(
               &_CFovasVideo_ClientGetOPFSettings_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CFovasVideo_ClientGetOPFSettings_Request* other);
  friend void swap(CFovasVideo_ClientGetOPFSettings_Request& a, CFovasVideo_ClientGetOPFSettings_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CFovasVideo_ClientGetOPFSettings_Request* New() const final {
    return CreateMaybeMessage<CFovasVideo_ClientGetOPFSettings_Request>(nullptr);
  }

  CFovasVideo_ClientGetOPFSettings_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CFovasVideo_ClientGetOPFSettings_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CFovasVideo_ClientGetOPFSettings_Request& from);
  void MergeFrom(const CFovasVideo_ClientGetOPFSettings_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CFovasVideo_ClientGetOPFSettings_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_id = 1 [(.proto.steam.description) = "App ID"];
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // optional uint32 client_cellid = 2 [(.proto.steam.description) = "Cell ID of client, zero if unknown"];
  bool has_client_cellid() const;
  void clear_client_cellid();
  static const int kClientCellidFieldNumber = 2;
  ::google::protobuf::uint32 client_cellid() const;
  void set_client_cellid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CFovasVideo_ClientGetOPFSettings_Request)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 client_cellid_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CFovasVideo_ClientGetOPFSettings_Response final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CFovasVideo_ClientGetOPFSettings_Response) */ {
 public:
  CFovasVideo_ClientGetOPFSettings_Response();
  virtual ~CFovasVideo_ClientGetOPFSettings_Response();

  CFovasVideo_ClientGetOPFSettings_Response(const CFovasVideo_ClientGetOPFSettings_Response& from);

  inline CFovasVideo_ClientGetOPFSettings_Response& operator=(const CFovasVideo_ClientGetOPFSettings_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CFovasVideo_ClientGetOPFSettings_Response(CFovasVideo_ClientGetOPFSettings_Response&& from) noexcept
    : CFovasVideo_ClientGetOPFSettings_Response() {
    *this = ::std::move(from);
  }

  inline CFovasVideo_ClientGetOPFSettings_Response& operator=(CFovasVideo_ClientGetOPFSettings_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CFovasVideo_ClientGetOPFSettings_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CFovasVideo_ClientGetOPFSettings_Response* internal_default_instance() {
    return reinterpret_cast<const CFovasVideo_ClientGetOPFSettings_Response*>(
               &_CFovasVideo_ClientGetOPFSettings_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CFovasVideo_ClientGetOPFSettings_Response* other);
  friend void swap(CFovasVideo_ClientGetOPFSettings_Response& a, CFovasVideo_ClientGetOPFSettings_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CFovasVideo_ClientGetOPFSettings_Response* New() const final {
    return CreateMaybeMessage<CFovasVideo_ClientGetOPFSettings_Response>(nullptr);
  }

  CFovasVideo_ClientGetOPFSettings_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CFovasVideo_ClientGetOPFSettings_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CFovasVideo_ClientGetOPFSettings_Response& from);
  void MergeFrom(const CFovasVideo_ClientGetOPFSettings_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CFovasVideo_ClientGetOPFSettings_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string opf_settings = 2 [(.proto.steam.description) = "JSON blob of OPF Settings"];
  bool has_opf_settings() const;
  void clear_opf_settings();
  static const int kOpfSettingsFieldNumber = 2;
  const ::std::string& opf_settings() const;
  void set_opf_settings(const ::std::string& value);
  #if LANG_CXX11
  void set_opf_settings(::std::string&& value);
  #endif
  void set_opf_settings(const char* value);
  void set_opf_settings(const char* value, size_t size);
  ::std::string* mutable_opf_settings();
  ::std::string* release_opf_settings();
  void set_allocated_opf_settings(::std::string* opf_settings);

  // optional uint32 app_id = 1 [(.proto.steam.description) = "App ID"];
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CFovasVideo_ClientGetOPFSettings_Response)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr opf_settings_;
  ::google::protobuf::uint32 app_id_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// ===================================================================

class Video_Stub;

class Video : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Video() {};
 public:
  virtual ~Video();

  typedef Video_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void ClientGetVideoURL(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CVideo_ClientGetVideoURL_Request* request,
                       ::proto::steam::CVideo_ClientGetVideoURL_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetVideoBookmark(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CVideo_SetVideoBookmark_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetVideoBookmarks(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CVideo_GetVideoBookmarks_Request* request,
                       ::proto::steam::CVideo_GetVideoBookmarks_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Video);
};

class Video_Stub : public Video {
 public:
  Video_Stub(::google::protobuf::RpcChannel* channel);
  Video_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Video_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Video ------------------------------------------

  void ClientGetVideoURL(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CVideo_ClientGetVideoURL_Request* request,
                       ::proto::steam::CVideo_ClientGetVideoURL_Response* response,
                       ::google::protobuf::Closure* done);
  void SetVideoBookmark(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CVideo_SetVideoBookmark_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void GetVideoBookmarks(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CVideo_GetVideoBookmarks_Request* request,
                       ::proto::steam::CVideo_GetVideoBookmarks_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Video_Stub);
};


// -------------------------------------------------------------------

class VideoClient_Stub;

class VideoClient : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline VideoClient() {};
 public:
  virtual ~VideoClient();

  typedef VideoClient_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void NotifyUnlockedH264(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CVideo_UnlockedH264_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(VideoClient);
};

class VideoClient_Stub : public VideoClient {
 public:
  VideoClient_Stub(::google::protobuf::RpcChannel* channel);
  VideoClient_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~VideoClient_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements VideoClient ------------------------------------------

  void NotifyUnlockedH264(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CVideo_UnlockedH264_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(VideoClient_Stub);
};


// -------------------------------------------------------------------

class FovasVideo_Stub;

class FovasVideo : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline FovasVideo() {};
 public:
  virtual ~FovasVideo();

  typedef FovasVideo_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void ClientGetOPFSettings(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CFovasVideo_ClientGetOPFSettings_Request* request,
                       ::proto::steam::CFovasVideo_ClientGetOPFSettings_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FovasVideo);
};

class FovasVideo_Stub : public FovasVideo {
 public:
  FovasVideo_Stub(::google::protobuf::RpcChannel* channel);
  FovasVideo_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~FovasVideo_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements FovasVideo ------------------------------------------

  void ClientGetOPFSettings(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CFovasVideo_ClientGetOPFSettings_Request* request,
                       ::proto::steam::CFovasVideo_ClientGetOPFSettings_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FovasVideo_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CVideo_ClientGetVideoURL_Request

// optional uint64 video_id = 1 [(.proto.steam.description) = "Video ID"];
inline bool CVideo_ClientGetVideoURL_Request::has_video_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CVideo_ClientGetVideoURL_Request::clear_video_id() {
  video_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint64 CVideo_ClientGetVideoURL_Request::video_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CVideo_ClientGetVideoURL_Request.video_id)
  return video_id_;
}
inline void CVideo_ClientGetVideoURL_Request::set_video_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  video_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CVideo_ClientGetVideoURL_Request.video_id)
}

// optional uint32 client_cellid = 2 [(.proto.steam.description) = "Cell ID of client, zero if unknown"];
inline bool CVideo_ClientGetVideoURL_Request::has_client_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CVideo_ClientGetVideoURL_Request::clear_client_cellid() {
  client_cellid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CVideo_ClientGetVideoURL_Request::client_cellid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CVideo_ClientGetVideoURL_Request.client_cellid)
  return client_cellid_;
}
inline void CVideo_ClientGetVideoURL_Request::set_client_cellid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  client_cellid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CVideo_ClientGetVideoURL_Request.client_cellid)
}

// -------------------------------------------------------------------

// CVideo_ClientGetVideoURL_Response

// optional uint64 video_id = 1 [(.proto.steam.description) = "Video ID"];
inline bool CVideo_ClientGetVideoURL_Response::has_video_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CVideo_ClientGetVideoURL_Response::clear_video_id() {
  video_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint64 CVideo_ClientGetVideoURL_Response::video_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CVideo_ClientGetVideoURL_Response.video_id)
  return video_id_;
}
inline void CVideo_ClientGetVideoURL_Response::set_video_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  video_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CVideo_ClientGetVideoURL_Response.video_id)
}

// optional string video_url = 2 [(.proto.steam.description) = "URL for video manifest"];
inline bool CVideo_ClientGetVideoURL_Response::has_video_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CVideo_ClientGetVideoURL_Response::clear_video_url() {
  video_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CVideo_ClientGetVideoURL_Response::video_url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
  return video_url_.GetNoArena();
}
inline void CVideo_ClientGetVideoURL_Response::set_video_url(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  video_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
}
#if LANG_CXX11
inline void CVideo_ClientGetVideoURL_Response::set_video_url(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  video_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
}
#endif
inline void CVideo_ClientGetVideoURL_Response::set_video_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  video_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
}
inline void CVideo_ClientGetVideoURL_Response::set_video_url(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  video_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
}
inline ::std::string* CVideo_ClientGetVideoURL_Response::mutable_video_url() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
  return video_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CVideo_ClientGetVideoURL_Response::release_video_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
  if (!has_video_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return video_url_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CVideo_ClientGetVideoURL_Response::set_allocated_video_url(::std::string* video_url) {
  if (video_url != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  video_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), video_url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
}

// -------------------------------------------------------------------

// VideoBookmark

// optional uint32 app_id = 1 [(.proto.steam.description) = "App ID"];
inline bool VideoBookmark::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VideoBookmark::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 VideoBookmark::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.VideoBookmark.app_id)
  return app_id_;
}
inline void VideoBookmark::set_app_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.VideoBookmark.app_id)
}

// optional uint32 playback_position_in_seconds = 2 [(.proto.steam.description) = "How many seconds into the video the bookmark is for"];
inline bool VideoBookmark::has_playback_position_in_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VideoBookmark::clear_playback_position_in_seconds() {
  playback_position_in_seconds_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 VideoBookmark::playback_position_in_seconds() const {
  // @@protoc_insertion_point(field_get:proto.steam.VideoBookmark.playback_position_in_seconds)
  return playback_position_in_seconds_;
}
inline void VideoBookmark::set_playback_position_in_seconds(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  playback_position_in_seconds_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.VideoBookmark.playback_position_in_seconds)
}

// optional uint64 video_track_id = 3 [(.proto.steam.description) = "video track choice."];
inline bool VideoBookmark::has_video_track_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VideoBookmark::clear_video_track_id() {
  video_track_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint64 VideoBookmark::video_track_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.VideoBookmark.video_track_id)
  return video_track_id_;
}
inline void VideoBookmark::set_video_track_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  video_track_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.VideoBookmark.video_track_id)
}

// optional uint64 audio_track_id = 4 [(.proto.steam.description) = "audio track choice."];
inline bool VideoBookmark::has_audio_track_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VideoBookmark::clear_audio_track_id() {
  audio_track_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::uint64 VideoBookmark::audio_track_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.VideoBookmark.audio_track_id)
  return audio_track_id_;
}
inline void VideoBookmark::set_audio_track_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  audio_track_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.VideoBookmark.audio_track_id)
}

// optional uint64 timedtext_track_id = 5 [(.proto.steam.description) = "timedtimed or subtitle track choice"];
inline bool VideoBookmark::has_timedtext_track_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VideoBookmark::clear_timedtext_track_id() {
  timedtext_track_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::uint64 VideoBookmark::timedtext_track_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.VideoBookmark.timedtext_track_id)
  return timedtext_track_id_;
}
inline void VideoBookmark::set_timedtext_track_id(::google::protobuf::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  timedtext_track_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.VideoBookmark.timedtext_track_id)
}

// optional uint32 last_modified = 6 [(.proto.steam.description) = "when we recorded it was last modified. Not settable."];
inline bool VideoBookmark::has_last_modified() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VideoBookmark::clear_last_modified() {
  last_modified_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::uint32 VideoBookmark::last_modified() const {
  // @@protoc_insertion_point(field_get:proto.steam.VideoBookmark.last_modified)
  return last_modified_;
}
inline void VideoBookmark::set_last_modified(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  last_modified_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.VideoBookmark.last_modified)
}

// optional bool hide_from_watch_history = 7 [default = false, (.proto.steam.description) = "Whether I want to show this in my history"];
inline bool VideoBookmark::has_hide_from_watch_history() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VideoBookmark::clear_hide_from_watch_history() {
  hide_from_watch_history_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool VideoBookmark::hide_from_watch_history() const {
  // @@protoc_insertion_point(field_get:proto.steam.VideoBookmark.hide_from_watch_history)
  return hide_from_watch_history_;
}
inline void VideoBookmark::set_hide_from_watch_history(bool value) {
  _has_bits_[0] |= 0x00000040u;
  hide_from_watch_history_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.VideoBookmark.hide_from_watch_history)
}

// optional bool hide_from_library = 8 [default = false, (.proto.steam.description) = "Whether I want to show this in my library"];
inline bool VideoBookmark::has_hide_from_library() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void VideoBookmark::clear_hide_from_library() {
  hide_from_library_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool VideoBookmark::hide_from_library() const {
  // @@protoc_insertion_point(field_get:proto.steam.VideoBookmark.hide_from_library)
  return hide_from_library_;
}
inline void VideoBookmark::set_hide_from_library(bool value) {
  _has_bits_[0] |= 0x00000080u;
  hide_from_library_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.VideoBookmark.hide_from_library)
}

// -------------------------------------------------------------------

// CVideo_SetVideoBookmark_Notification

// repeated .proto.steam.VideoBookmark bookmarks = 1 [(.proto.steam.description) = "list of bookmarks we want to store."];
inline int CVideo_SetVideoBookmark_Notification::bookmarks_size() const {
  return bookmarks_.size();
}
inline void CVideo_SetVideoBookmark_Notification::clear_bookmarks() {
  bookmarks_.Clear();
}
inline ::proto::steam::VideoBookmark* CVideo_SetVideoBookmark_Notification::mutable_bookmarks(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CVideo_SetVideoBookmark_Notification.bookmarks)
  return bookmarks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::VideoBookmark >*
CVideo_SetVideoBookmark_Notification::mutable_bookmarks() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CVideo_SetVideoBookmark_Notification.bookmarks)
  return &bookmarks_;
}
inline const ::proto::steam::VideoBookmark& CVideo_SetVideoBookmark_Notification::bookmarks(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CVideo_SetVideoBookmark_Notification.bookmarks)
  return bookmarks_.Get(index);
}
inline ::proto::steam::VideoBookmark* CVideo_SetVideoBookmark_Notification::add_bookmarks() {
  // @@protoc_insertion_point(field_add:proto.steam.CVideo_SetVideoBookmark_Notification.bookmarks)
  return bookmarks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::VideoBookmark >&
CVideo_SetVideoBookmark_Notification::bookmarks() const {
  // @@protoc_insertion_point(field_list:proto.steam.CVideo_SetVideoBookmark_Notification.bookmarks)
  return bookmarks_;
}

// -------------------------------------------------------------------

// CVideo_GetVideoBookmarks_Request

// repeated uint32 appids = 1 [(.proto.steam.description) = "List of App IDs to grab bookmarks for. Can be empty if using updated_since."];
inline int CVideo_GetVideoBookmarks_Request::appids_size() const {
  return appids_.size();
}
inline void CVideo_GetVideoBookmarks_Request::clear_appids() {
  appids_.Clear();
}
inline ::google::protobuf::uint32 CVideo_GetVideoBookmarks_Request::appids(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CVideo_GetVideoBookmarks_Request.appids)
  return appids_.Get(index);
}
inline void CVideo_GetVideoBookmarks_Request::set_appids(int index, ::google::protobuf::uint32 value) {
  appids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CVideo_GetVideoBookmarks_Request.appids)
}
inline void CVideo_GetVideoBookmarks_Request::add_appids(::google::protobuf::uint32 value) {
  appids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CVideo_GetVideoBookmarks_Request.appids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CVideo_GetVideoBookmarks_Request::appids() const {
  // @@protoc_insertion_point(field_list:proto.steam.CVideo_GetVideoBookmarks_Request.appids)
  return appids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CVideo_GetVideoBookmarks_Request::mutable_appids() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CVideo_GetVideoBookmarks_Request.appids)
  return &appids_;
}

// optional uint32 updated_since = 2 [(.proto.steam.description) = "Only return results after time. Min value is 1. (seconds since epoch January 1st, 1970 Unix Time)"];
inline bool CVideo_GetVideoBookmarks_Request::has_updated_since() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CVideo_GetVideoBookmarks_Request::clear_updated_since() {
  updated_since_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CVideo_GetVideoBookmarks_Request::updated_since() const {
  // @@protoc_insertion_point(field_get:proto.steam.CVideo_GetVideoBookmarks_Request.updated_since)
  return updated_since_;
}
inline void CVideo_GetVideoBookmarks_Request::set_updated_since(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  updated_since_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CVideo_GetVideoBookmarks_Request.updated_since)
}

// -------------------------------------------------------------------

// CVideo_GetVideoBookmarks_Response

// repeated .proto.steam.VideoBookmark bookmarks = 1 [(.proto.steam.description) = "List of bookmarks we found. Can be empty."];
inline int CVideo_GetVideoBookmarks_Response::bookmarks_size() const {
  return bookmarks_.size();
}
inline void CVideo_GetVideoBookmarks_Response::clear_bookmarks() {
  bookmarks_.Clear();
}
inline ::proto::steam::VideoBookmark* CVideo_GetVideoBookmarks_Response::mutable_bookmarks(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CVideo_GetVideoBookmarks_Response.bookmarks)
  return bookmarks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::VideoBookmark >*
CVideo_GetVideoBookmarks_Response::mutable_bookmarks() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CVideo_GetVideoBookmarks_Response.bookmarks)
  return &bookmarks_;
}
inline const ::proto::steam::VideoBookmark& CVideo_GetVideoBookmarks_Response::bookmarks(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CVideo_GetVideoBookmarks_Response.bookmarks)
  return bookmarks_.Get(index);
}
inline ::proto::steam::VideoBookmark* CVideo_GetVideoBookmarks_Response::add_bookmarks() {
  // @@protoc_insertion_point(field_add:proto.steam.CVideo_GetVideoBookmarks_Response.bookmarks)
  return bookmarks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::VideoBookmark >&
CVideo_GetVideoBookmarks_Response::bookmarks() const {
  // @@protoc_insertion_point(field_list:proto.steam.CVideo_GetVideoBookmarks_Response.bookmarks)
  return bookmarks_;
}

// -------------------------------------------------------------------

// CVideo_UnlockedH264_Notification

// optional bytes encryption_key = 1;
inline bool CVideo_UnlockedH264_Notification::has_encryption_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CVideo_UnlockedH264_Notification::clear_encryption_key() {
  encryption_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CVideo_UnlockedH264_Notification::encryption_key() const {
  // @@protoc_insertion_point(field_get:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
  return encryption_key_.GetNoArena();
}
inline void CVideo_UnlockedH264_Notification::set_encryption_key(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  encryption_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
}
#if LANG_CXX11
inline void CVideo_UnlockedH264_Notification::set_encryption_key(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  encryption_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
}
#endif
inline void CVideo_UnlockedH264_Notification::set_encryption_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  encryption_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
}
inline void CVideo_UnlockedH264_Notification::set_encryption_key(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  encryption_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
}
inline ::std::string* CVideo_UnlockedH264_Notification::mutable_encryption_key() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
  return encryption_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CVideo_UnlockedH264_Notification::release_encryption_key() {
  // @@protoc_insertion_point(field_release:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
  if (!has_encryption_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return encryption_key_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CVideo_UnlockedH264_Notification::set_allocated_encryption_key(::std::string* encryption_key) {
  if (encryption_key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  encryption_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encryption_key);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
}

// -------------------------------------------------------------------

// CFovasVideo_ClientGetOPFSettings_Request

// optional uint32 app_id = 1 [(.proto.steam.description) = "App ID"];
inline bool CFovasVideo_ClientGetOPFSettings_Request::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CFovasVideo_ClientGetOPFSettings_Request::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::uint32 CFovasVideo_ClientGetOPFSettings_Request::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CFovasVideo_ClientGetOPFSettings_Request.app_id)
  return app_id_;
}
inline void CFovasVideo_ClientGetOPFSettings_Request::set_app_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CFovasVideo_ClientGetOPFSettings_Request.app_id)
}

// optional uint32 client_cellid = 2 [(.proto.steam.description) = "Cell ID of client, zero if unknown"];
inline bool CFovasVideo_ClientGetOPFSettings_Request::has_client_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CFovasVideo_ClientGetOPFSettings_Request::clear_client_cellid() {
  client_cellid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CFovasVideo_ClientGetOPFSettings_Request::client_cellid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CFovasVideo_ClientGetOPFSettings_Request.client_cellid)
  return client_cellid_;
}
inline void CFovasVideo_ClientGetOPFSettings_Request::set_client_cellid(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  client_cellid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CFovasVideo_ClientGetOPFSettings_Request.client_cellid)
}

// -------------------------------------------------------------------

// CFovasVideo_ClientGetOPFSettings_Response

// optional uint32 app_id = 1 [(.proto.steam.description) = "App ID"];
inline bool CFovasVideo_ClientGetOPFSettings_Response::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CFovasVideo_ClientGetOPFSettings_Response::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 CFovasVideo_ClientGetOPFSettings_Response::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.app_id)
  return app_id_;
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_app_id(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.app_id)
}

// optional string opf_settings = 2 [(.proto.steam.description) = "JSON blob of OPF Settings"];
inline bool CFovasVideo_ClientGetOPFSettings_Response::has_opf_settings() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CFovasVideo_ClientGetOPFSettings_Response::clear_opf_settings() {
  opf_settings_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CFovasVideo_ClientGetOPFSettings_Response::opf_settings() const {
  // @@protoc_insertion_point(field_get:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
  return opf_settings_.GetNoArena();
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_opf_settings(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  opf_settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
}
#if LANG_CXX11
inline void CFovasVideo_ClientGetOPFSettings_Response::set_opf_settings(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  opf_settings_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
}
#endif
inline void CFovasVideo_ClientGetOPFSettings_Response::set_opf_settings(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  opf_settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_opf_settings(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  opf_settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
}
inline ::std::string* CFovasVideo_ClientGetOPFSettings_Response::mutable_opf_settings() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
  return opf_settings_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CFovasVideo_ClientGetOPFSettings_Response::release_opf_settings() {
  // @@protoc_insertion_point(field_release:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
  if (!has_opf_settings()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return opf_settings_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_allocated_opf_settings(::std::string* opf_settings) {
  if (opf_settings != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  opf_settings_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), opf_settings);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_steammessages_5fvideo_2esteamclient_2eproto
