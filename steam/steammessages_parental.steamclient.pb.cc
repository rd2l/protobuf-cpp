// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_parental.steamclient.proto

#include "steammessages_parental.steamclient.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fparental_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ParentalApp_steammessages_5fparental_2esteamclient_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_steammessages_5fparental_2esteamclient_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ParentalSettings_steammessages_5fparental_2esteamclient_2eproto;
namespace proto {
namespace steam {
class ParentalAppDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParentalApp> _instance;
} _ParentalApp_default_instance_;
class ParentalSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParentalSettings> _instance;
} _ParentalSettings_default_instance_;
class CParental_EnableParentalSettings_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_EnableParentalSettings_Request> _instance;
} _CParental_EnableParentalSettings_Request_default_instance_;
class CParental_EnableParentalSettings_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_EnableParentalSettings_Response> _instance;
} _CParental_EnableParentalSettings_Response_default_instance_;
class CParental_DisableParentalSettings_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_DisableParentalSettings_Request> _instance;
} _CParental_DisableParentalSettings_Request_default_instance_;
class CParental_DisableParentalSettings_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_DisableParentalSettings_Response> _instance;
} _CParental_DisableParentalSettings_Response_default_instance_;
class CParental_GetParentalSettings_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_GetParentalSettings_Request> _instance;
} _CParental_GetParentalSettings_Request_default_instance_;
class CParental_GetParentalSettings_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_GetParentalSettings_Response> _instance;
} _CParental_GetParentalSettings_Response_default_instance_;
class CParental_GetSignedParentalSettings_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_GetSignedParentalSettings_Request> _instance;
} _CParental_GetSignedParentalSettings_Request_default_instance_;
class CParental_GetSignedParentalSettings_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_GetSignedParentalSettings_Response> _instance;
} _CParental_GetSignedParentalSettings_Response_default_instance_;
class CParental_SetParentalSettings_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_SetParentalSettings_Request> _instance;
} _CParental_SetParentalSettings_Request_default_instance_;
class CParental_SetParentalSettings_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_SetParentalSettings_Response> _instance;
} _CParental_SetParentalSettings_Response_default_instance_;
class CParental_ValidateToken_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_ValidateToken_Request> _instance;
} _CParental_ValidateToken_Request_default_instance_;
class CParental_ValidateToken_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_ValidateToken_Response> _instance;
} _CParental_ValidateToken_Response_default_instance_;
class CParental_ValidatePassword_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_ValidatePassword_Request> _instance;
} _CParental_ValidatePassword_Request_default_instance_;
class CParental_ValidatePassword_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_ValidatePassword_Response> _instance;
} _CParental_ValidatePassword_Response_default_instance_;
class CParental_LockClient_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_LockClient_Request> _instance;
} _CParental_LockClient_Request_default_instance_;
class CParental_LockClient_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_LockClient_Response> _instance;
} _CParental_LockClient_Response_default_instance_;
class CParental_RequestRecoveryCode_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_RequestRecoveryCode_Request> _instance;
} _CParental_RequestRecoveryCode_Request_default_instance_;
class CParental_RequestRecoveryCode_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_RequestRecoveryCode_Response> _instance;
} _CParental_RequestRecoveryCode_Response_default_instance_;
class CParental_DisableWithRecoveryCode_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_DisableWithRecoveryCode_Request> _instance;
} _CParental_DisableWithRecoveryCode_Request_default_instance_;
class CParental_DisableWithRecoveryCode_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_DisableWithRecoveryCode_Response> _instance;
} _CParental_DisableWithRecoveryCode_Response_default_instance_;
class CParental_ParentalSettingsChange_NotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_ParentalSettingsChange_Notification> _instance;
} _CParental_ParentalSettingsChange_Notification_default_instance_;
class CParental_ParentalUnlock_NotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_ParentalUnlock_Notification> _instance;
} _CParental_ParentalUnlock_Notification_default_instance_;
class CParental_ParentalLock_NotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CParental_ParentalLock_Notification> _instance;
} _CParental_ParentalLock_Notification_default_instance_;
}  // namespace steam
}  // namespace proto
static void InitDefaultsParentalApp_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_ParentalApp_default_instance_;
    new (ptr) ::proto::steam::ParentalApp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::ParentalApp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ParentalApp_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParentalApp_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsParentalSettings_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_ParentalSettings_default_instance_;
    new (ptr) ::proto::steam::ParentalSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::ParentalSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ParentalSettings_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsParentalSettings_steammessages_5fparental_2esteamclient_2eproto}, {
      &scc_info_ParentalApp_steammessages_5fparental_2esteamclient_2eproto.base,}};

static void InitDefaultsCParental_EnableParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_EnableParentalSettings_Request_default_instance_;
    new (ptr) ::proto::steam::CParental_EnableParentalSettings_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_EnableParentalSettings_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CParental_EnableParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCParental_EnableParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto}, {
      &scc_info_ParentalSettings_steammessages_5fparental_2esteamclient_2eproto.base,}};

static void InitDefaultsCParental_EnableParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_EnableParentalSettings_Response_default_instance_;
    new (ptr) ::proto::steam::CParental_EnableParentalSettings_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_EnableParentalSettings_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_EnableParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_EnableParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_DisableParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_DisableParentalSettings_Request_default_instance_;
    new (ptr) ::proto::steam::CParental_DisableParentalSettings_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_DisableParentalSettings_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_DisableParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_DisableParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_DisableParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_DisableParentalSettings_Response_default_instance_;
    new (ptr) ::proto::steam::CParental_DisableParentalSettings_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_DisableParentalSettings_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_DisableParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_DisableParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_GetParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_GetParentalSettings_Request_default_instance_;
    new (ptr) ::proto::steam::CParental_GetParentalSettings_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_GetParentalSettings_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_GetParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_GetParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_GetParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_GetParentalSettings_Response_default_instance_;
    new (ptr) ::proto::steam::CParental_GetParentalSettings_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_GetParentalSettings_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CParental_GetParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCParental_GetParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto}, {
      &scc_info_ParentalSettings_steammessages_5fparental_2esteamclient_2eproto.base,}};

static void InitDefaultsCParental_GetSignedParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_GetSignedParentalSettings_Request_default_instance_;
    new (ptr) ::proto::steam::CParental_GetSignedParentalSettings_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_GetSignedParentalSettings_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_GetSignedParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_GetSignedParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_GetSignedParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_GetSignedParentalSettings_Response_default_instance_;
    new (ptr) ::proto::steam::CParental_GetSignedParentalSettings_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_GetSignedParentalSettings_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_GetSignedParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_GetSignedParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_SetParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_SetParentalSettings_Request_default_instance_;
    new (ptr) ::proto::steam::CParental_SetParentalSettings_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_SetParentalSettings_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CParental_SetParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCParental_SetParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto}, {
      &scc_info_ParentalSettings_steammessages_5fparental_2esteamclient_2eproto.base,}};

static void InitDefaultsCParental_SetParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_SetParentalSettings_Response_default_instance_;
    new (ptr) ::proto::steam::CParental_SetParentalSettings_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_SetParentalSettings_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_SetParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_SetParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_ValidateToken_Request_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_ValidateToken_Request_default_instance_;
    new (ptr) ::proto::steam::CParental_ValidateToken_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_ValidateToken_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_ValidateToken_Request_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_ValidateToken_Request_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_ValidateToken_Response_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_ValidateToken_Response_default_instance_;
    new (ptr) ::proto::steam::CParental_ValidateToken_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_ValidateToken_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_ValidateToken_Response_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_ValidateToken_Response_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_ValidatePassword_Request_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_ValidatePassword_Request_default_instance_;
    new (ptr) ::proto::steam::CParental_ValidatePassword_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_ValidatePassword_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_ValidatePassword_Request_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_ValidatePassword_Request_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_ValidatePassword_Response_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_ValidatePassword_Response_default_instance_;
    new (ptr) ::proto::steam::CParental_ValidatePassword_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_ValidatePassword_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_ValidatePassword_Response_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_ValidatePassword_Response_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_LockClient_Request_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_LockClient_Request_default_instance_;
    new (ptr) ::proto::steam::CParental_LockClient_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_LockClient_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_LockClient_Request_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_LockClient_Request_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_LockClient_Response_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_LockClient_Response_default_instance_;
    new (ptr) ::proto::steam::CParental_LockClient_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_LockClient_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_LockClient_Response_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_LockClient_Response_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_RequestRecoveryCode_Request_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_RequestRecoveryCode_Request_default_instance_;
    new (ptr) ::proto::steam::CParental_RequestRecoveryCode_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_RequestRecoveryCode_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_RequestRecoveryCode_Request_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_RequestRecoveryCode_Request_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_RequestRecoveryCode_Response_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_RequestRecoveryCode_Response_default_instance_;
    new (ptr) ::proto::steam::CParental_RequestRecoveryCode_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_RequestRecoveryCode_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_RequestRecoveryCode_Response_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_RequestRecoveryCode_Response_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_DisableWithRecoveryCode_Request_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_DisableWithRecoveryCode_Request_default_instance_;
    new (ptr) ::proto::steam::CParental_DisableWithRecoveryCode_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_DisableWithRecoveryCode_Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_DisableWithRecoveryCode_Request_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_DisableWithRecoveryCode_Request_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_DisableWithRecoveryCode_Response_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_DisableWithRecoveryCode_Response_default_instance_;
    new (ptr) ::proto::steam::CParental_DisableWithRecoveryCode_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_DisableWithRecoveryCode_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_DisableWithRecoveryCode_Response_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_DisableWithRecoveryCode_Response_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_ParentalSettingsChange_Notification_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_ParentalSettingsChange_Notification_default_instance_;
    new (ptr) ::proto::steam::CParental_ParentalSettingsChange_Notification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_ParentalSettingsChange_Notification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_ParentalSettingsChange_Notification_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_ParentalSettingsChange_Notification_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_ParentalUnlock_Notification_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_ParentalUnlock_Notification_default_instance_;
    new (ptr) ::proto::steam::CParental_ParentalUnlock_Notification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_ParentalUnlock_Notification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_ParentalUnlock_Notification_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_ParentalUnlock_Notification_steammessages_5fparental_2esteamclient_2eproto}, {}};

static void InitDefaultsCParental_ParentalLock_Notification_steammessages_5fparental_2esteamclient_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::steam::_CParental_ParentalLock_Notification_default_instance_;
    new (ptr) ::proto::steam::CParental_ParentalLock_Notification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::steam::CParental_ParentalLock_Notification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CParental_ParentalLock_Notification_steammessages_5fparental_2esteamclient_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCParental_ParentalLock_Notification_steammessages_5fparental_2esteamclient_2eproto}, {}};

void InitDefaults_steammessages_5fparental_2esteamclient_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ParentalApp_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParentalSettings_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_EnableParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_EnableParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_DisableParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_DisableParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_GetParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_GetParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_GetSignedParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_GetSignedParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_SetParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_SetParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_ValidateToken_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_ValidateToken_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_ValidatePassword_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_ValidatePassword_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_LockClient_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_LockClient_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_RequestRecoveryCode_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_RequestRecoveryCode_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_DisableWithRecoveryCode_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_DisableWithRecoveryCode_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_ParentalSettingsChange_Notification_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_ParentalUnlock_Notification_steammessages_5fparental_2esteamclient_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CParental_ParentalLock_Notification_steammessages_5fparental_2esteamclient_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[25];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_steammessages_5fparental_2esteamclient_2eproto = nullptr;
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors_steammessages_5fparental_2esteamclient_2eproto[2];

const ::google::protobuf::uint32 TableStruct_steammessages_5fparental_2esteamclient_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalApp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalApp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalApp, appid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalApp, is_allowed_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalSettings, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalSettings, steamid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalSettings, applist_base_id_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalSettings, applist_base_description_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalSettings, applist_base_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalSettings, applist_custom_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalSettings, passwordhashtype_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalSettings, salt_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalSettings, passwordhash_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalSettings, is_enabled_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalSettings, enabled_features_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::ParentalSettings, recovery_email_),
  4,
  5,
  0,
  ~0u,
  ~0u,
  6,
  1,
  2,
  7,
  8,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_EnableParentalSettings_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_EnableParentalSettings_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_EnableParentalSettings_Request, password_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_EnableParentalSettings_Request, settings_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_EnableParentalSettings_Request, sessionid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_EnableParentalSettings_Request, enablecode_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_EnableParentalSettings_Request, steamid_),
  0,
  2,
  1,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_EnableParentalSettings_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_EnableParentalSettings_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_DisableParentalSettings_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_DisableParentalSettings_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_DisableParentalSettings_Request, password_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_DisableParentalSettings_Request, steamid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_DisableParentalSettings_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_DisableParentalSettings_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_GetParentalSettings_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_GetParentalSettings_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_GetParentalSettings_Request, steamid_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_GetParentalSettings_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_GetParentalSettings_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_GetParentalSettings_Response, settings_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_GetSignedParentalSettings_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_GetSignedParentalSettings_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_GetSignedParentalSettings_Request, priority_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_GetSignedParentalSettings_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_GetSignedParentalSettings_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_GetSignedParentalSettings_Response, serialized_settings_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_GetSignedParentalSettings_Response, signature_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_SetParentalSettings_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_SetParentalSettings_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_SetParentalSettings_Request, password_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_SetParentalSettings_Request, settings_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_SetParentalSettings_Request, new_password_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_SetParentalSettings_Request, sessionid_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_SetParentalSettings_Request, steamid_),
  0,
  3,
  1,
  2,
  4,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_SetParentalSettings_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_SetParentalSettings_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ValidateToken_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ValidateToken_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ValidateToken_Request, unlock_token_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ValidateToken_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ValidateToken_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ValidatePassword_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ValidatePassword_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ValidatePassword_Request, password_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ValidatePassword_Request, session_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ValidatePassword_Request, send_unlock_on_success_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ValidatePassword_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ValidatePassword_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ValidatePassword_Response, token_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_LockClient_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_LockClient_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_LockClient_Request, session_),
  0,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_LockClient_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_LockClient_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_RequestRecoveryCode_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_RequestRecoveryCode_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_RequestRecoveryCode_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_RequestRecoveryCode_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_DisableWithRecoveryCode_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_DisableWithRecoveryCode_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_DisableWithRecoveryCode_Request, recovery_code_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_DisableWithRecoveryCode_Request, steamid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_DisableWithRecoveryCode_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_DisableWithRecoveryCode_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ParentalSettingsChange_Notification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ParentalSettingsChange_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ParentalSettingsChange_Notification, serialized_settings_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ParentalSettingsChange_Notification, signature_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ParentalSettingsChange_Notification, password_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ParentalSettingsChange_Notification, sessionid_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ParentalUnlock_Notification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ParentalUnlock_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ParentalUnlock_Notification, password_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ParentalUnlock_Notification, sessionid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ParentalLock_Notification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ParentalLock_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::steam::CParental_ParentalLock_Notification, sessionid_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::proto::steam::ParentalApp)},
  { 9, 25, sizeof(::proto::steam::ParentalSettings)},
  { 36, 46, sizeof(::proto::steam::CParental_EnableParentalSettings_Request)},
  { 51, 56, sizeof(::proto::steam::CParental_EnableParentalSettings_Response)},
  { 56, 63, sizeof(::proto::steam::CParental_DisableParentalSettings_Request)},
  { 65, 70, sizeof(::proto::steam::CParental_DisableParentalSettings_Response)},
  { 70, 76, sizeof(::proto::steam::CParental_GetParentalSettings_Request)},
  { 77, 83, sizeof(::proto::steam::CParental_GetParentalSettings_Response)},
  { 84, 90, sizeof(::proto::steam::CParental_GetSignedParentalSettings_Request)},
  { 91, 98, sizeof(::proto::steam::CParental_GetSignedParentalSettings_Response)},
  { 100, 110, sizeof(::proto::steam::CParental_SetParentalSettings_Request)},
  { 115, 120, sizeof(::proto::steam::CParental_SetParentalSettings_Response)},
  { 120, 126, sizeof(::proto::steam::CParental_ValidateToken_Request)},
  { 127, 132, sizeof(::proto::steam::CParental_ValidateToken_Response)},
  { 132, 140, sizeof(::proto::steam::CParental_ValidatePassword_Request)},
  { 143, 149, sizeof(::proto::steam::CParental_ValidatePassword_Response)},
  { 150, 156, sizeof(::proto::steam::CParental_LockClient_Request)},
  { 157, 162, sizeof(::proto::steam::CParental_LockClient_Response)},
  { 162, 167, sizeof(::proto::steam::CParental_RequestRecoveryCode_Request)},
  { 167, 172, sizeof(::proto::steam::CParental_RequestRecoveryCode_Response)},
  { 172, 179, sizeof(::proto::steam::CParental_DisableWithRecoveryCode_Request)},
  { 181, 186, sizeof(::proto::steam::CParental_DisableWithRecoveryCode_Response)},
  { 186, 195, sizeof(::proto::steam::CParental_ParentalSettingsChange_Notification)},
  { 199, 206, sizeof(::proto::steam::CParental_ParentalUnlock_Notification)},
  { 208, 214, sizeof(::proto::steam::CParental_ParentalLock_Notification)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_ParentalApp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_ParentalSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_EnableParentalSettings_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_EnableParentalSettings_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_DisableParentalSettings_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_DisableParentalSettings_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_GetParentalSettings_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_GetParentalSettings_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_GetSignedParentalSettings_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_GetSignedParentalSettings_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_SetParentalSettings_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_SetParentalSettings_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_ValidateToken_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_ValidateToken_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_ValidatePassword_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_ValidatePassword_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_LockClient_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_LockClient_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_RequestRecoveryCode_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_RequestRecoveryCode_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_DisableWithRecoveryCode_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_DisableWithRecoveryCode_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_ParentalSettingsChange_Notification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_ParentalUnlock_Notification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::steam::_CParental_ParentalLock_Notification_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto = {
  {}, AddDescriptors_steammessages_5fparental_2esteamclient_2eproto, "steammessages_parental.steamclient.proto", schemas,
  file_default_instances, TableStruct_steammessages_5fparental_2esteamclient_2eproto::offsets,
  file_level_metadata_steammessages_5fparental_2esteamclient_2eproto, 25, file_level_enum_descriptors_steammessages_5fparental_2esteamclient_2eproto, file_level_service_descriptors_steammessages_5fparental_2esteamclient_2eproto,
};

const char descriptor_table_protodef_steammessages_5fparental_2esteamclient_2eproto[] =
  "\n(steammessages_parental.steamclient.pro"
  "to\022\013proto.steam\032,steammessages_unified_b"
  "ase.steamclient.proto\"0\n\013ParentalApp\022\r\n\005"
  "appid\030\001 \001(\r\022\022\n\nis_allowed\030\002 \001(\010\"\304\002\n\020Pare"
  "ntalSettings\022\017\n\007steamid\030\001 \001(\006\022\027\n\017applist"
  "_base_id\030\002 \001(\r\022 \n\030applist_base_descripti"
  "on\030\003 \001(\t\022.\n\014applist_base\030\004 \003(\0132\030.proto.s"
  "team.ParentalApp\0220\n\016applist_custom\030\005 \003(\013"
  "2\030.proto.steam.ParentalApp\022\030\n\020passwordha"
  "shtype\030\006 \001(\r\022\014\n\004salt\030\007 \001(\014\022\024\n\014passwordha"
  "sh\030\010 \001(\014\022\022\n\nis_enabled\030\t \001(\010\022\030\n\020enabled_"
  "features\030\n \001(\r\022\026\n\016recovery_email\030\013 \001(\t\"\245"
  "\001\n(CParental_EnableParentalSettings_Requ"
  "est\022\020\n\010password\030\001 \001(\t\022/\n\010settings\030\002 \001(\0132"
  "\035.proto.steam.ParentalSettings\022\021\n\tsessio"
  "nid\030\003 \001(\t\022\022\n\nenablecode\030\004 \001(\r\022\017\n\007steamid"
  "\030\n \001(\006\"+\n)CParental_EnableParentalSettin"
  "gs_Response\"N\n)CParental_DisableParental"
  "Settings_Request\022\020\n\010password\030\001 \001(\t\022\017\n\007st"
  "eamid\030\n \001(\006\",\n*CParental_DisableParental"
  "Settings_Response\"8\n%CParental_GetParent"
  "alSettings_Request\022\017\n\007steamid\030\n \001(\006\"Y\n&C"
  "Parental_GetParentalSettings_Response\022/\n"
  "\010settings\030\001 \001(\0132\035.proto.steam.ParentalSe"
  "ttings\"\?\n+CParental_GetSignedParentalSet"
  "tings_Request\022\020\n\010priority\030\001 \001(\r\"^\n,CPare"
  "ntal_GetSignedParentalSettings_Response\022"
  "\033\n\023serialized_settings\030\001 \001(\014\022\021\n\tsignatur"
  "e\030\002 \001(\014\"\244\001\n%CParental_SetParentalSetting"
  "s_Request\022\020\n\010password\030\001 \001(\t\022/\n\010settings\030"
  "\002 \001(\0132\035.proto.steam.ParentalSettings\022\024\n\014"
  "new_password\030\003 \001(\t\022\021\n\tsessionid\030\004 \001(\t\022\017\n"
  "\007steamid\030\n \001(\006\"(\n&CParental_SetParentalS"
  "ettings_Response\"7\n\037CParental_ValidateTo"
  "ken_Request\022\024\n\014unlock_token\030\001 \001(\t\"\"\n CPa"
  "rental_ValidateToken_Response\"g\n\"CParent"
  "al_ValidatePassword_Request\022\020\n\010password\030"
  "\001 \001(\t\022\017\n\007session\030\002 \001(\t\022\036\n\026send_unlock_on"
  "_success\030\003 \001(\010\"4\n#CParental_ValidatePass"
  "word_Response\022\r\n\005token\030\001 \001(\t\"/\n\034CParenta"
  "l_LockClient_Request\022\017\n\007session\030\001 \001(\t\"\037\n"
  "\035CParental_LockClient_Response\"\'\n%CParen"
  "tal_RequestRecoveryCode_Request\"(\n&CPare"
  "ntal_RequestRecoveryCode_Response\"S\n)CPa"
  "rental_DisableWithRecoveryCode_Request\022\025"
  "\n\rrecovery_code\030\001 \001(\r\022\017\n\007steamid\030\n \001(\006\","
  "\n*CParental_DisableWithRecoveryCode_Resp"
  "onse\"\204\001\n-CParental_ParentalSettingsChang"
  "e_Notification\022\033\n\023serialized_settings\030\001 "
  "\001(\014\022\021\n\tsignature\030\002 \001(\014\022\020\n\010password\030\003 \001(\t"
  "\022\021\n\tsessionid\030\004 \001(\t\"L\n%CParental_Parenta"
  "lUnlock_Notification\022\020\n\010password\030\001 \001(\t\022\021"
  "\n\tsessionid\030\002 \001(\t\"8\n#CParental_ParentalL"
  "ock_Notification\022\021\n\tsessionid\030\001 \001(\t2\302\020\n\010"
  "Parental\022\350\001\n\026EnableParentalSettings\0225.pr"
  "oto.steam.CParental_EnableParentalSettin"
  "gs_Request\0326.proto.steam.CParental_Enabl"
  "eParentalSettings_Response\"_\202\265\030[Enable p"
  "arental settings for the logged in accou"
  "nt, optionally setting the current setti"
  "ngs\022\303\001\n\027DisableParentalSettings\0226.proto."
  "steam.CParental_DisableParentalSettings_"
  "Request\0327.proto.steam.CParental_DisableP"
  "arentalSettings_Response\"7\202\265\0303Disable pa"
  "rental settings for the logged in accoun"
  "t\022\277\001\n\023GetParentalSettings\0222.proto.steam."
  "CParental_GetParentalSettings_Request\0323."
  "proto.steam.CParental_GetParentalSetting"
  "s_Response\"\?\202\265\030;Get the current parental"
  " settings for the logged in account\022\200\002\n\031"
  "GetSignedParentalSettings\0228.proto.steam."
  "CParental_GetSignedParentalSettings_Requ"
  "est\0329.proto.steam.CParental_GetSignedPar"
  "entalSettings_Response\"n\202\265\030jGet the curr"
  "ent parental settings for the logged in "
  "account in a form that can by verified b"
  "y the receiver\022\277\001\n\023SetParentalSettings\0222"
  ".proto.steam.CParental_SetParentalSettin"
  "gs_Request\0323.proto.steam.CParental_SetPa"
  "rentalSettings_Response\"\?\202\265\030;Set the cur"
  "rent parental settings for the logged in"
  " account\022\277\001\n\rValidateToken\022,.proto.steam"
  ".CParental_ValidateToken_Request\032-.proto"
  ".steam.CParental_ValidateToken_Response\""
  "Q\202\265\030MCheck if the given parental unlock "
  "token is correct for the logged in accou"
  "nt\022\317\001\n\020ValidatePassword\022/.proto.steam.CP"
  "arental_ValidatePassword_Request\0320.proto"
  ".steam.CParental_ValidatePassword_Respon"
  "se\"X\202\265\030TValidate the plaintext password "
  "for the logged in account and return an "
  "unlock token\022\247\001\n\nLockClient\022).proto.stea"
  "m.CParental_LockClient_Request\032*.proto.s"
  "team.CParental_LockClient_Response\"B\202\265\030>"
  "Notify connected clients that a lock has"
  " occurred in a browser\022\333\001\n\023RequestRecove"
  "ryCode\0222.proto.steam.CParental_RequestRe"
  "coveryCode_Request\0323.proto.steam.CParent"
  "al_RequestRecoveryCode_Response\"[\202\265\030WReq"
  "uest a recovery code be sent to the reco"
  "very email address for the specified acc"
  "ount\022\302\001\n\027DisableWithRecoveryCode\0226.proto"
  ".steam.CParental_DisableWithRecoveryCode"
  "_Request\0327.proto.steam.CParental_Disable"
  "WithRecoveryCode_Response\"6\202\265\0302Attempt a"
  " recovery unlock on the specified accoun"
  "t\032\035\202\265\030\031Parental settings service2\316\004\n\016Par"
  "entalClient\022\264\001\n\024NotifySettingsChange\022:.p"
  "roto.steam.CParental_ParentalSettingsCha"
  "nge_Notification\032\027.proto.steam.NoRespons"
  "e\"G\202\265\030CNotification from server to clien"
  "t of a change in parental settings\022\254\001\n\014N"
  "otifyUnlock\0222.proto.steam.CParental_Pare"
  "ntalUnlock_Notification\032\027.proto.steam.No"
  "Response\"O\202\265\030KNotification from server t"
  "o client that an unlock has occurred in "
  "a browser\022\245\001\n\nNotifyLock\0220.proto.steam.C"
  "Parental_ParentalLock_Notification\032\027.pro"
  "to.steam.NoResponse\"L\202\265\030HNotification fr"
  "om server to client that a lock has occu"
  "rred in a browser\032.\202\265\030&Parental settings"
  " client notifications\300\265\030\002B\003\200\001\001"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_steammessages_5fparental_2esteamclient_2eproto = {
  false, InitDefaults_steammessages_5fparental_2esteamclient_2eproto, 
  descriptor_table_protodef_steammessages_5fparental_2esteamclient_2eproto,
  "steammessages_parental.steamclient.proto", &assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto, 4870,
};

void AddDescriptors_steammessages_5fparental_2esteamclient_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_steammessages_5funified_5fbase_2esteamclient_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_steammessages_5fparental_2esteamclient_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_steammessages_5fparental_2esteamclient_2eproto = []() { AddDescriptors_steammessages_5fparental_2esteamclient_2eproto(); return true; }();
namespace proto {
namespace steam {

// ===================================================================

void ParentalApp::InitAsDefaultInstance() {
}
class ParentalApp::HasBitSetters {
 public:
  static void set_has_appid(ParentalApp* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_is_allowed(ParentalApp* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParentalApp::kAppidFieldNumber;
const int ParentalApp::kIsAllowedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParentalApp::ParentalApp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.ParentalApp)
}
ParentalApp::ParentalApp(const ParentalApp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_allowed_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(is_allowed_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.ParentalApp)
}

void ParentalApp::SharedCtor() {
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_allowed_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(is_allowed_));
}

ParentalApp::~ParentalApp() {
  // @@protoc_insertion_point(destructor:proto.steam.ParentalApp)
  SharedDtor();
}

void ParentalApp::SharedDtor() {
}

void ParentalApp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParentalApp& ParentalApp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ParentalApp_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void ParentalApp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.ParentalApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_allowed_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(is_allowed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ParentalApp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ParentalApp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_appid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bool is_allowed = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_is_allowed(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ParentalApp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.ParentalApp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_appid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_allowed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_is_allowed(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_allowed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.ParentalApp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.ParentalApp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ParentalApp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.ParentalApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional bool is_allowed = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_allowed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.ParentalApp)
}

::google::protobuf::uint8* ParentalApp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.ParentalApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional bool is_allowed = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_allowed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.ParentalApp)
  return target;
}

size_t ParentalApp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.ParentalApp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 appid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional bool is_allowed = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParentalApp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.ParentalApp)
  GOOGLE_DCHECK_NE(&from, this);
  const ParentalApp* source =
      ::google::protobuf::DynamicCastToGenerated<ParentalApp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.ParentalApp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.ParentalApp)
    MergeFrom(*source);
  }
}

void ParentalApp::MergeFrom(const ParentalApp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.ParentalApp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_allowed_ = from.is_allowed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ParentalApp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.ParentalApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParentalApp::CopyFrom(const ParentalApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.ParentalApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParentalApp::IsInitialized() const {
  return true;
}

void ParentalApp::Swap(ParentalApp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParentalApp::InternalSwap(ParentalApp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(appid_, other->appid_);
  swap(is_allowed_, other->is_allowed_);
}

::google::protobuf::Metadata ParentalApp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ParentalSettings::InitAsDefaultInstance() {
}
class ParentalSettings::HasBitSetters {
 public:
  static void set_has_steamid(ParentalSettings* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_applist_base_id(ParentalSettings* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_applist_base_description(ParentalSettings* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_passwordhashtype(ParentalSettings* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_salt(ParentalSettings* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_passwordhash(ParentalSettings* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_is_enabled(ParentalSettings* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_enabled_features(ParentalSettings* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_recovery_email(ParentalSettings* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParentalSettings::kSteamidFieldNumber;
const int ParentalSettings::kApplistBaseIdFieldNumber;
const int ParentalSettings::kApplistBaseDescriptionFieldNumber;
const int ParentalSettings::kApplistBaseFieldNumber;
const int ParentalSettings::kApplistCustomFieldNumber;
const int ParentalSettings::kPasswordhashtypeFieldNumber;
const int ParentalSettings::kSaltFieldNumber;
const int ParentalSettings::kPasswordhashFieldNumber;
const int ParentalSettings::kIsEnabledFieldNumber;
const int ParentalSettings::kEnabledFeaturesFieldNumber;
const int ParentalSettings::kRecoveryEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParentalSettings::ParentalSettings()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.ParentalSettings)
}
ParentalSettings::ParentalSettings(const ParentalSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      applist_base_(from.applist_base_),
      applist_custom_(from.applist_custom_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  applist_base_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_applist_base_description()) {
    applist_base_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.applist_base_description_);
  }
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_salt()) {
    salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
  }
  passwordhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_passwordhash()) {
    passwordhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwordhash_);
  }
  recovery_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_recovery_email()) {
    recovery_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recovery_email_);
  }
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&enabled_features_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(enabled_features_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.ParentalSettings)
}

void ParentalSettings::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ParentalSettings_steammessages_5fparental_2esteamclient_2eproto.base);
  applist_base_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwordhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recovery_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enabled_features_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(enabled_features_));
}

ParentalSettings::~ParentalSettings() {
  // @@protoc_insertion_point(destructor:proto.steam.ParentalSettings)
  SharedDtor();
}

void ParentalSettings::SharedDtor() {
  applist_base_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwordhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recovery_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ParentalSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParentalSettings& ParentalSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ParentalSettings_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void ParentalSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.ParentalSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applist_base_.Clear();
  applist_custom_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      applist_base_description_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      salt_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      passwordhash_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      recovery_email_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_enabled_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(is_enabled_));
  }
  enabled_features_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ParentalSettings::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ParentalSettings*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_steamid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      // optional uint32 applist_base_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_applist_base_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string applist_base_description = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.ParentalSettings.applist_base_description");
        object = msg->mutable_applist_base_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .proto.steam.ParentalApp applist_base = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::ParentalApp::_InternalParse;
          object = msg->add_applist_base();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // repeated .proto.steam.ParentalApp applist_custom = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::steam::ParentalApp::_InternalParse;
          object = msg->add_applist_custom();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // optional uint32 passwordhashtype = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_passwordhashtype(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes salt = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_salt();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes passwordhash = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_passwordhash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool is_enabled = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_is_enabled(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 enabled_features = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_enabled_features(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string recovery_email = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.ParentalSettings.recovery_email");
        object = msg->mutable_recovery_email();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ParentalSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.ParentalSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          HasBitSetters::set_has_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 applist_base_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_applist_base_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &applist_base_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string applist_base_description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_applist_base_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->applist_base_description().data(), static_cast<int>(this->applist_base_description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.ParentalSettings.applist_base_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.ParentalApp applist_base = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_applist_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.ParentalApp applist_custom = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_applist_custom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 passwordhashtype = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_passwordhashtype(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &passwordhashtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes salt = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_salt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes passwordhash = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_passwordhash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_enabled = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_is_enabled(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 enabled_features = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          HasBitSetters::set_has_enabled_features(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enabled_features_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string recovery_email = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recovery_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->recovery_email().data(), static_cast<int>(this->recovery_email().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.ParentalSettings.recovery_email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.ParentalSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.ParentalSettings)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ParentalSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.ParentalSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 applist_base_id = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->applist_base_id(), output);
  }

  // optional string applist_base_description = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applist_base_description().data(), static_cast<int>(this->applist_base_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.ParentalSettings.applist_base_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->applist_base_description(), output);
  }

  // repeated .proto.steam.ParentalApp applist_base = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applist_base_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->applist_base(static_cast<int>(i)),
      output);
  }

  // repeated .proto.steam.ParentalApp applist_custom = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applist_custom_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->applist_custom(static_cast<int>(i)),
      output);
  }

  // optional uint32 passwordhashtype = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->passwordhashtype(), output);
  }

  // optional bytes salt = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->salt(), output);
  }

  // optional bytes passwordhash = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->passwordhash(), output);
  }

  // optional bool is_enabled = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_enabled(), output);
  }

  // optional uint32 enabled_features = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->enabled_features(), output);
  }

  // optional string recovery_email = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recovery_email().data(), static_cast<int>(this->recovery_email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.ParentalSettings.recovery_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->recovery_email(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.ParentalSettings)
}

::google::protobuf::uint8* ParentalSettings::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.ParentalSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 applist_base_id = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->applist_base_id(), target);
  }

  // optional string applist_base_description = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applist_base_description().data(), static_cast<int>(this->applist_base_description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.ParentalSettings.applist_base_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->applist_base_description(), target);
  }

  // repeated .proto.steam.ParentalApp applist_base = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applist_base_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->applist_base(static_cast<int>(i)), target);
  }

  // repeated .proto.steam.ParentalApp applist_custom = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applist_custom_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->applist_custom(static_cast<int>(i)), target);
  }

  // optional uint32 passwordhashtype = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->passwordhashtype(), target);
  }

  // optional bytes salt = 7;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->salt(), target);
  }

  // optional bytes passwordhash = 8;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->passwordhash(), target);
  }

  // optional bool is_enabled = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_enabled(), target);
  }

  // optional uint32 enabled_features = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->enabled_features(), target);
  }

  // optional string recovery_email = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recovery_email().data(), static_cast<int>(this->recovery_email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.ParentalSettings.recovery_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->recovery_email(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.ParentalSettings)
  return target;
}

size_t ParentalSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.ParentalSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.steam.ParentalApp applist_base = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->applist_base_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->applist_base(static_cast<int>(i)));
    }
  }

  // repeated .proto.steam.ParentalApp applist_custom = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->applist_custom_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->applist_custom(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string applist_base_description = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->applist_base_description());
    }

    // optional bytes salt = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->salt());
    }

    // optional bytes passwordhash = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->passwordhash());
    }

    // optional string recovery_email = 11;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->recovery_email());
    }

    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

    // optional uint32 applist_base_id = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->applist_base_id());
    }

    // optional uint32 passwordhashtype = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->passwordhashtype());
    }

    // optional bool is_enabled = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  // optional uint32 enabled_features = 10;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->enabled_features());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParentalSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.ParentalSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const ParentalSettings* source =
      ::google::protobuf::DynamicCastToGenerated<ParentalSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.ParentalSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.ParentalSettings)
    MergeFrom(*source);
  }
}

void ParentalSettings::MergeFrom(const ParentalSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.ParentalSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  applist_base_.MergeFrom(from.applist_base_);
  applist_custom_.MergeFrom(from.applist_custom_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      applist_base_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.applist_base_description_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      passwordhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwordhash_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      recovery_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recovery_email_);
    }
    if (cached_has_bits & 0x00000010u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000020u) {
      applist_base_id_ = from.applist_base_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      passwordhashtype_ = from.passwordhashtype_;
    }
    if (cached_has_bits & 0x00000080u) {
      is_enabled_ = from.is_enabled_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_enabled_features(from.enabled_features());
  }
}

void ParentalSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.ParentalSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParentalSettings::CopyFrom(const ParentalSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.ParentalSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParentalSettings::IsInitialized() const {
  return true;
}

void ParentalSettings::Swap(ParentalSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParentalSettings::InternalSwap(ParentalSettings* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&applist_base_)->InternalSwap(CastToBase(&other->applist_base_));
  CastToBase(&applist_custom_)->InternalSwap(CastToBase(&other->applist_custom_));
  applist_base_description_.Swap(&other->applist_base_description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  salt_.Swap(&other->salt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  passwordhash_.Swap(&other->passwordhash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  recovery_email_.Swap(&other->recovery_email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steamid_, other->steamid_);
  swap(applist_base_id_, other->applist_base_id_);
  swap(passwordhashtype_, other->passwordhashtype_);
  swap(is_enabled_, other->is_enabled_);
  swap(enabled_features_, other->enabled_features_);
}

::google::protobuf::Metadata ParentalSettings::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_EnableParentalSettings_Request::InitAsDefaultInstance() {
  ::proto::steam::_CParental_EnableParentalSettings_Request_default_instance_._instance.get_mutable()->settings_ = const_cast< ::proto::steam::ParentalSettings*>(
      ::proto::steam::ParentalSettings::internal_default_instance());
}
class CParental_EnableParentalSettings_Request::HasBitSetters {
 public:
  static void set_has_password(CParental_EnableParentalSettings_Request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::proto::steam::ParentalSettings& settings(const CParental_EnableParentalSettings_Request* msg);
  static void set_has_settings(CParental_EnableParentalSettings_Request* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_sessionid(CParental_EnableParentalSettings_Request* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_enablecode(CParental_EnableParentalSettings_Request* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_steamid(CParental_EnableParentalSettings_Request* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

const ::proto::steam::ParentalSettings&
CParental_EnableParentalSettings_Request::HasBitSetters::settings(const CParental_EnableParentalSettings_Request* msg) {
  return *msg->settings_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_EnableParentalSettings_Request::kPasswordFieldNumber;
const int CParental_EnableParentalSettings_Request::kSettingsFieldNumber;
const int CParental_EnableParentalSettings_Request::kSessionidFieldNumber;
const int CParental_EnableParentalSettings_Request::kEnablecodeFieldNumber;
const int CParental_EnableParentalSettings_Request::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_EnableParentalSettings_Request::CParental_EnableParentalSettings_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_EnableParentalSettings_Request)
}
CParental_EnableParentalSettings_Request::CParental_EnableParentalSettings_Request(const CParental_EnableParentalSettings_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionid()) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  if (from.has_settings()) {
    settings_ = new ::proto::steam::ParentalSettings(*from.settings_);
  } else {
    settings_ = nullptr;
  }
  ::memcpy(&enablecode_, &from.enablecode_,
    static_cast<size_t>(reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&enablecode_)) + sizeof(steamid_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_EnableParentalSettings_Request)
}

void CParental_EnableParentalSettings_Request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CParental_EnableParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&steamid_) -
      reinterpret_cast<char*>(&settings_)) + sizeof(steamid_));
}

CParental_EnableParentalSettings_Request::~CParental_EnableParentalSettings_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_EnableParentalSettings_Request)
  SharedDtor();
}

void CParental_EnableParentalSettings_Request::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete settings_;
}

void CParental_EnableParentalSettings_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_EnableParentalSettings_Request& CParental_EnableParentalSettings_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_EnableParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_EnableParentalSettings_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_EnableParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sessionid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(settings_ != nullptr);
      settings_->Clear();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&enablecode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steamid_) -
        reinterpret_cast<char*>(&enablecode_)) + sizeof(steamid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_EnableParentalSettings_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_EnableParentalSettings_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string password = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_EnableParentalSettings_Request.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .proto.steam.ParentalSettings settings = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::steam::ParentalSettings::_InternalParse;
        object = msg->mutable_settings();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional string sessionid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_EnableParentalSettings_Request.sessionid");
        object = msg->mutable_sessionid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 enablecode = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_enablecode(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 steamid = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 81) goto handle_unusual;
        msg->set_steamid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_EnableParentalSettings_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_EnableParentalSettings_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_EnableParentalSettings_Request.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.steam.ParentalSettings settings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sessionid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), static_cast<int>(this->sessionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_EnableParentalSettings_Request.sessionid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 enablecode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_enablecode(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enablecode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (81 & 0xFF)) {
          HasBitSetters::set_has_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_EnableParentalSettings_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_EnableParentalSettings_Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_EnableParentalSettings_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_EnableParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_EnableParentalSettings_Request.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional .proto.steam.ParentalSettings settings = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::settings(this), output);
  }

  // optional string sessionid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_EnableParentalSettings_Request.sessionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sessionid(), output);
  }

  // optional uint32 enablecode = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->enablecode(), output);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_EnableParentalSettings_Request)
}

::google::protobuf::uint8* CParental_EnableParentalSettings_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_EnableParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_EnableParentalSettings_Request.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional .proto.steam.ParentalSettings settings = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::settings(this), target);
  }

  // optional string sessionid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_EnableParentalSettings_Request.sessionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sessionid(), target);
  }

  // optional uint32 enablecode = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->enablecode(), target);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_EnableParentalSettings_Request)
  return target;
}

size_t CParental_EnableParentalSettings_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_EnableParentalSettings_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string password = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string sessionid = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sessionid());
    }

    // optional .proto.steam.ParentalSettings settings = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *settings_);
    }

    // optional uint32 enablecode = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->enablecode());
    }

    // optional fixed64 steamid = 10;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_EnableParentalSettings_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_EnableParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_EnableParentalSettings_Request* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_EnableParentalSettings_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_EnableParentalSettings_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_EnableParentalSettings_Request)
    MergeFrom(*source);
  }
}

void CParental_EnableParentalSettings_Request::MergeFrom(const CParental_EnableParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_EnableParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_settings()->::proto::steam::ParentalSettings::MergeFrom(from.settings());
    }
    if (cached_has_bits & 0x00000008u) {
      enablecode_ = from.enablecode_;
    }
    if (cached_has_bits & 0x00000010u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CParental_EnableParentalSettings_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_EnableParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_EnableParentalSettings_Request::CopyFrom(const CParental_EnableParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_EnableParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_EnableParentalSettings_Request::IsInitialized() const {
  return true;
}

void CParental_EnableParentalSettings_Request::Swap(CParental_EnableParentalSettings_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_EnableParentalSettings_Request::InternalSwap(CParental_EnableParentalSettings_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sessionid_.Swap(&other->sessionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(settings_, other->settings_);
  swap(enablecode_, other->enablecode_);
  swap(steamid_, other->steamid_);
}

::google::protobuf::Metadata CParental_EnableParentalSettings_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_EnableParentalSettings_Response::InitAsDefaultInstance() {
}
class CParental_EnableParentalSettings_Response::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_EnableParentalSettings_Response::CParental_EnableParentalSettings_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_EnableParentalSettings_Response)
}
CParental_EnableParentalSettings_Response::CParental_EnableParentalSettings_Response(const CParental_EnableParentalSettings_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_EnableParentalSettings_Response)
}

void CParental_EnableParentalSettings_Response::SharedCtor() {
}

CParental_EnableParentalSettings_Response::~CParental_EnableParentalSettings_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_EnableParentalSettings_Response)
  SharedDtor();
}

void CParental_EnableParentalSettings_Response::SharedDtor() {
}

void CParental_EnableParentalSettings_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_EnableParentalSettings_Response& CParental_EnableParentalSettings_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_EnableParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_EnableParentalSettings_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_EnableParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_EnableParentalSettings_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_EnableParentalSettings_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_EnableParentalSettings_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_EnableParentalSettings_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_EnableParentalSettings_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_EnableParentalSettings_Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_EnableParentalSettings_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_EnableParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_EnableParentalSettings_Response)
}

::google::protobuf::uint8* CParental_EnableParentalSettings_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_EnableParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_EnableParentalSettings_Response)
  return target;
}

size_t CParental_EnableParentalSettings_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_EnableParentalSettings_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_EnableParentalSettings_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_EnableParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_EnableParentalSettings_Response* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_EnableParentalSettings_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_EnableParentalSettings_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_EnableParentalSettings_Response)
    MergeFrom(*source);
  }
}

void CParental_EnableParentalSettings_Response::MergeFrom(const CParental_EnableParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_EnableParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_EnableParentalSettings_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_EnableParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_EnableParentalSettings_Response::CopyFrom(const CParental_EnableParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_EnableParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_EnableParentalSettings_Response::IsInitialized() const {
  return true;
}

void CParental_EnableParentalSettings_Response::Swap(CParental_EnableParentalSettings_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_EnableParentalSettings_Response::InternalSwap(CParental_EnableParentalSettings_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CParental_EnableParentalSettings_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_DisableParentalSettings_Request::InitAsDefaultInstance() {
}
class CParental_DisableParentalSettings_Request::HasBitSetters {
 public:
  static void set_has_password(CParental_DisableParentalSettings_Request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_steamid(CParental_DisableParentalSettings_Request* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_DisableParentalSettings_Request::kPasswordFieldNumber;
const int CParental_DisableParentalSettings_Request::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_DisableParentalSettings_Request::CParental_DisableParentalSettings_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_DisableParentalSettings_Request)
}
CParental_DisableParentalSettings_Request::CParental_DisableParentalSettings_Request(const CParental_DisableParentalSettings_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_DisableParentalSettings_Request)
}

void CParental_DisableParentalSettings_Request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CParental_DisableParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steamid_ = PROTOBUF_ULONGLONG(0);
}

CParental_DisableParentalSettings_Request::~CParental_DisableParentalSettings_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_DisableParentalSettings_Request)
  SharedDtor();
}

void CParental_DisableParentalSettings_Request::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_DisableParentalSettings_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_DisableParentalSettings_Request& CParental_DisableParentalSettings_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_DisableParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_DisableParentalSettings_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_DisableParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    password_.ClearNonDefaultToEmptyNoArena();
  }
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_DisableParentalSettings_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_DisableParentalSettings_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string password = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_DisableParentalSettings_Request.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional fixed64 steamid = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 81) goto handle_unusual;
        msg->set_steamid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_DisableParentalSettings_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_DisableParentalSettings_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_DisableParentalSettings_Request.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (81 & 0xFF)) {
          HasBitSetters::set_has_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_DisableParentalSettings_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_DisableParentalSettings_Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_DisableParentalSettings_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_DisableParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_DisableParentalSettings_Request.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_DisableParentalSettings_Request)
}

::google::protobuf::uint8* CParental_DisableParentalSettings_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_DisableParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_DisableParentalSettings_Request.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_DisableParentalSettings_Request)
  return target;
}

size_t CParental_DisableParentalSettings_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_DisableParentalSettings_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string password = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional fixed64 steamid = 10;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_DisableParentalSettings_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_DisableParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_DisableParentalSettings_Request* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_DisableParentalSettings_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_DisableParentalSettings_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_DisableParentalSettings_Request)
    MergeFrom(*source);
  }
}

void CParental_DisableParentalSettings_Request::MergeFrom(const CParental_DisableParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_DisableParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CParental_DisableParentalSettings_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_DisableParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_DisableParentalSettings_Request::CopyFrom(const CParental_DisableParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_DisableParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_DisableParentalSettings_Request::IsInitialized() const {
  return true;
}

void CParental_DisableParentalSettings_Request::Swap(CParental_DisableParentalSettings_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_DisableParentalSettings_Request::InternalSwap(CParental_DisableParentalSettings_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(steamid_, other->steamid_);
}

::google::protobuf::Metadata CParental_DisableParentalSettings_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_DisableParentalSettings_Response::InitAsDefaultInstance() {
}
class CParental_DisableParentalSettings_Response::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_DisableParentalSettings_Response::CParental_DisableParentalSettings_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_DisableParentalSettings_Response)
}
CParental_DisableParentalSettings_Response::CParental_DisableParentalSettings_Response(const CParental_DisableParentalSettings_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_DisableParentalSettings_Response)
}

void CParental_DisableParentalSettings_Response::SharedCtor() {
}

CParental_DisableParentalSettings_Response::~CParental_DisableParentalSettings_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_DisableParentalSettings_Response)
  SharedDtor();
}

void CParental_DisableParentalSettings_Response::SharedDtor() {
}

void CParental_DisableParentalSettings_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_DisableParentalSettings_Response& CParental_DisableParentalSettings_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_DisableParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_DisableParentalSettings_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_DisableParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_DisableParentalSettings_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_DisableParentalSettings_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_DisableParentalSettings_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_DisableParentalSettings_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_DisableParentalSettings_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_DisableParentalSettings_Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_DisableParentalSettings_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_DisableParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_DisableParentalSettings_Response)
}

::google::protobuf::uint8* CParental_DisableParentalSettings_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_DisableParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_DisableParentalSettings_Response)
  return target;
}

size_t CParental_DisableParentalSettings_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_DisableParentalSettings_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_DisableParentalSettings_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_DisableParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_DisableParentalSettings_Response* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_DisableParentalSettings_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_DisableParentalSettings_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_DisableParentalSettings_Response)
    MergeFrom(*source);
  }
}

void CParental_DisableParentalSettings_Response::MergeFrom(const CParental_DisableParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_DisableParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_DisableParentalSettings_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_DisableParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_DisableParentalSettings_Response::CopyFrom(const CParental_DisableParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_DisableParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_DisableParentalSettings_Response::IsInitialized() const {
  return true;
}

void CParental_DisableParentalSettings_Response::Swap(CParental_DisableParentalSettings_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_DisableParentalSettings_Response::InternalSwap(CParental_DisableParentalSettings_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CParental_DisableParentalSettings_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_GetParentalSettings_Request::InitAsDefaultInstance() {
}
class CParental_GetParentalSettings_Request::HasBitSetters {
 public:
  static void set_has_steamid(CParental_GetParentalSettings_Request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_GetParentalSettings_Request::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_GetParentalSettings_Request::CParental_GetParentalSettings_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_GetParentalSettings_Request)
}
CParental_GetParentalSettings_Request::CParental_GetParentalSettings_Request(const CParental_GetParentalSettings_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_GetParentalSettings_Request)
}

void CParental_GetParentalSettings_Request::SharedCtor() {
  steamid_ = PROTOBUF_ULONGLONG(0);
}

CParental_GetParentalSettings_Request::~CParental_GetParentalSettings_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_GetParentalSettings_Request)
  SharedDtor();
}

void CParental_GetParentalSettings_Request::SharedDtor() {
}

void CParental_GetParentalSettings_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_GetParentalSettings_Request& CParental_GetParentalSettings_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_GetParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_GetParentalSettings_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_GetParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_GetParentalSettings_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_GetParentalSettings_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional fixed64 steamid = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 81) goto handle_unusual;
        msg->set_steamid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_GetParentalSettings_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_GetParentalSettings_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (81 & 0xFF)) {
          HasBitSetters::set_has_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_GetParentalSettings_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_GetParentalSettings_Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_GetParentalSettings_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_GetParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_GetParentalSettings_Request)
}

::google::protobuf::uint8* CParental_GetParentalSettings_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_GetParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_GetParentalSettings_Request)
  return target;
}

size_t CParental_GetParentalSettings_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_GetParentalSettings_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 steamid = 10;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_GetParentalSettings_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_GetParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_GetParentalSettings_Request* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_GetParentalSettings_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_GetParentalSettings_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_GetParentalSettings_Request)
    MergeFrom(*source);
  }
}

void CParental_GetParentalSettings_Request::MergeFrom(const CParental_GetParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_GetParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steamid()) {
    set_steamid(from.steamid());
  }
}

void CParental_GetParentalSettings_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_GetParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_GetParentalSettings_Request::CopyFrom(const CParental_GetParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_GetParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_GetParentalSettings_Request::IsInitialized() const {
  return true;
}

void CParental_GetParentalSettings_Request::Swap(CParental_GetParentalSettings_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_GetParentalSettings_Request::InternalSwap(CParental_GetParentalSettings_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(steamid_, other->steamid_);
}

::google::protobuf::Metadata CParental_GetParentalSettings_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_GetParentalSettings_Response::InitAsDefaultInstance() {
  ::proto::steam::_CParental_GetParentalSettings_Response_default_instance_._instance.get_mutable()->settings_ = const_cast< ::proto::steam::ParentalSettings*>(
      ::proto::steam::ParentalSettings::internal_default_instance());
}
class CParental_GetParentalSettings_Response::HasBitSetters {
 public:
  static const ::proto::steam::ParentalSettings& settings(const CParental_GetParentalSettings_Response* msg);
  static void set_has_settings(CParental_GetParentalSettings_Response* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::proto::steam::ParentalSettings&
CParental_GetParentalSettings_Response::HasBitSetters::settings(const CParental_GetParentalSettings_Response* msg) {
  return *msg->settings_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_GetParentalSettings_Response::kSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_GetParentalSettings_Response::CParental_GetParentalSettings_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_GetParentalSettings_Response)
}
CParental_GetParentalSettings_Response::CParental_GetParentalSettings_Response(const CParental_GetParentalSettings_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_settings()) {
    settings_ = new ::proto::steam::ParentalSettings(*from.settings_);
  } else {
    settings_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_GetParentalSettings_Response)
}

void CParental_GetParentalSettings_Response::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CParental_GetParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  settings_ = nullptr;
}

CParental_GetParentalSettings_Response::~CParental_GetParentalSettings_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_GetParentalSettings_Response)
  SharedDtor();
}

void CParental_GetParentalSettings_Response::SharedDtor() {
  if (this != internal_default_instance()) delete settings_;
}

void CParental_GetParentalSettings_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_GetParentalSettings_Response& CParental_GetParentalSettings_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_GetParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_GetParentalSettings_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_GetParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(settings_ != nullptr);
    settings_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_GetParentalSettings_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_GetParentalSettings_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .proto.steam.ParentalSettings settings = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::steam::ParentalSettings::_InternalParse;
        object = msg->mutable_settings();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_GetParentalSettings_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_GetParentalSettings_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.steam.ParentalSettings settings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_GetParentalSettings_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_GetParentalSettings_Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_GetParentalSettings_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_GetParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.steam.ParentalSettings settings = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::settings(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_GetParentalSettings_Response)
}

::google::protobuf::uint8* CParental_GetParentalSettings_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_GetParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.steam.ParentalSettings settings = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::settings(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_GetParentalSettings_Response)
  return target;
}

size_t CParental_GetParentalSettings_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_GetParentalSettings_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto.steam.ParentalSettings settings = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *settings_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_GetParentalSettings_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_GetParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_GetParentalSettings_Response* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_GetParentalSettings_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_GetParentalSettings_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_GetParentalSettings_Response)
    MergeFrom(*source);
  }
}

void CParental_GetParentalSettings_Response::MergeFrom(const CParental_GetParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_GetParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_settings()) {
    mutable_settings()->::proto::steam::ParentalSettings::MergeFrom(from.settings());
  }
}

void CParental_GetParentalSettings_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_GetParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_GetParentalSettings_Response::CopyFrom(const CParental_GetParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_GetParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_GetParentalSettings_Response::IsInitialized() const {
  return true;
}

void CParental_GetParentalSettings_Response::Swap(CParental_GetParentalSettings_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_GetParentalSettings_Response::InternalSwap(CParental_GetParentalSettings_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(settings_, other->settings_);
}

::google::protobuf::Metadata CParental_GetParentalSettings_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_GetSignedParentalSettings_Request::InitAsDefaultInstance() {
}
class CParental_GetSignedParentalSettings_Request::HasBitSetters {
 public:
  static void set_has_priority(CParental_GetSignedParentalSettings_Request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_GetSignedParentalSettings_Request::kPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_GetSignedParentalSettings_Request::CParental_GetSignedParentalSettings_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_GetSignedParentalSettings_Request)
}
CParental_GetSignedParentalSettings_Request::CParental_GetSignedParentalSettings_Request(const CParental_GetSignedParentalSettings_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  priority_ = from.priority_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_GetSignedParentalSettings_Request)
}

void CParental_GetSignedParentalSettings_Request::SharedCtor() {
  priority_ = 0u;
}

CParental_GetSignedParentalSettings_Request::~CParental_GetSignedParentalSettings_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_GetSignedParentalSettings_Request)
  SharedDtor();
}

void CParental_GetSignedParentalSettings_Request::SharedDtor() {
}

void CParental_GetSignedParentalSettings_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_GetSignedParentalSettings_Request& CParental_GetSignedParentalSettings_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_GetSignedParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_GetSignedParentalSettings_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  priority_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_GetSignedParentalSettings_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_GetSignedParentalSettings_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 priority = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_priority(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_GetSignedParentalSettings_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 priority = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_priority(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_GetSignedParentalSettings_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_GetSignedParentalSettings_Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_GetSignedParentalSettings_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 priority = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->priority(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_GetSignedParentalSettings_Request)
}

::google::protobuf::uint8* CParental_GetSignedParentalSettings_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 priority = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->priority(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_GetSignedParentalSettings_Request)
  return target;
}

size_t CParental_GetSignedParentalSettings_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 priority = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->priority());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_GetSignedParentalSettings_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_GetSignedParentalSettings_Request* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_GetSignedParentalSettings_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_GetSignedParentalSettings_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_GetSignedParentalSettings_Request)
    MergeFrom(*source);
  }
}

void CParental_GetSignedParentalSettings_Request::MergeFrom(const CParental_GetSignedParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_priority()) {
    set_priority(from.priority());
  }
}

void CParental_GetSignedParentalSettings_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_GetSignedParentalSettings_Request::CopyFrom(const CParental_GetSignedParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_GetSignedParentalSettings_Request::IsInitialized() const {
  return true;
}

void CParental_GetSignedParentalSettings_Request::Swap(CParental_GetSignedParentalSettings_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_GetSignedParentalSettings_Request::InternalSwap(CParental_GetSignedParentalSettings_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(priority_, other->priority_);
}

::google::protobuf::Metadata CParental_GetSignedParentalSettings_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_GetSignedParentalSettings_Response::InitAsDefaultInstance() {
}
class CParental_GetSignedParentalSettings_Response::HasBitSetters {
 public:
  static void set_has_serialized_settings(CParental_GetSignedParentalSettings_Response* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_signature(CParental_GetSignedParentalSettings_Response* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_GetSignedParentalSettings_Response::kSerializedSettingsFieldNumber;
const int CParental_GetSignedParentalSettings_Response::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_GetSignedParentalSettings_Response::CParental_GetSignedParentalSettings_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_GetSignedParentalSettings_Response)
}
CParental_GetSignedParentalSettings_Response::CParental_GetSignedParentalSettings_Response(const CParental_GetSignedParentalSettings_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serialized_settings_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialized_settings()) {
    serialized_settings_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_settings_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_GetSignedParentalSettings_Response)
}

void CParental_GetSignedParentalSettings_Response::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CParental_GetSignedParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  serialized_settings_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CParental_GetSignedParentalSettings_Response::~CParental_GetSignedParentalSettings_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_GetSignedParentalSettings_Response)
  SharedDtor();
}

void CParental_GetSignedParentalSettings_Response::SharedDtor() {
  serialized_settings_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_GetSignedParentalSettings_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_GetSignedParentalSettings_Response& CParental_GetSignedParentalSettings_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_GetSignedParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_GetSignedParentalSettings_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      serialized_settings_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      signature_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_GetSignedParentalSettings_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_GetSignedParentalSettings_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes serialized_settings = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_serialized_settings();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes signature = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_signature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_GetSignedParentalSettings_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes serialized_settings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_GetSignedParentalSettings_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_GetSignedParentalSettings_Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_GetSignedParentalSettings_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes serialized_settings = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->serialized_settings(), output);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_GetSignedParentalSettings_Response)
}

::google::protobuf::uint8* CParental_GetSignedParentalSettings_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes serialized_settings = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->serialized_settings(), target);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_GetSignedParentalSettings_Response)
  return target;
}

size_t CParental_GetSignedParentalSettings_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes serialized_settings = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serialized_settings());
    }

    // optional bytes signature = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->signature());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_GetSignedParentalSettings_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_GetSignedParentalSettings_Response* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_GetSignedParentalSettings_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_GetSignedParentalSettings_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_GetSignedParentalSettings_Response)
    MergeFrom(*source);
  }
}

void CParental_GetSignedParentalSettings_Response::MergeFrom(const CParental_GetSignedParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      serialized_settings_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_settings_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
  }
}

void CParental_GetSignedParentalSettings_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_GetSignedParentalSettings_Response::CopyFrom(const CParental_GetSignedParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_GetSignedParentalSettings_Response::IsInitialized() const {
  return true;
}

void CParental_GetSignedParentalSettings_Response::Swap(CParental_GetSignedParentalSettings_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_GetSignedParentalSettings_Response::InternalSwap(CParental_GetSignedParentalSettings_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  serialized_settings_.Swap(&other->serialized_settings_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CParental_GetSignedParentalSettings_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_SetParentalSettings_Request::InitAsDefaultInstance() {
  ::proto::steam::_CParental_SetParentalSettings_Request_default_instance_._instance.get_mutable()->settings_ = const_cast< ::proto::steam::ParentalSettings*>(
      ::proto::steam::ParentalSettings::internal_default_instance());
}
class CParental_SetParentalSettings_Request::HasBitSetters {
 public:
  static void set_has_password(CParental_SetParentalSettings_Request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::proto::steam::ParentalSettings& settings(const CParental_SetParentalSettings_Request* msg);
  static void set_has_settings(CParental_SetParentalSettings_Request* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_new_password(CParental_SetParentalSettings_Request* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_sessionid(CParental_SetParentalSettings_Request* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_steamid(CParental_SetParentalSettings_Request* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

const ::proto::steam::ParentalSettings&
CParental_SetParentalSettings_Request::HasBitSetters::settings(const CParental_SetParentalSettings_Request* msg) {
  return *msg->settings_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_SetParentalSettings_Request::kPasswordFieldNumber;
const int CParental_SetParentalSettings_Request::kSettingsFieldNumber;
const int CParental_SetParentalSettings_Request::kNewPasswordFieldNumber;
const int CParental_SetParentalSettings_Request::kSessionidFieldNumber;
const int CParental_SetParentalSettings_Request::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_SetParentalSettings_Request::CParental_SetParentalSettings_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_SetParentalSettings_Request)
}
CParental_SetParentalSettings_Request::CParental_SetParentalSettings_Request(const CParental_SetParentalSettings_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  new_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_new_password()) {
    new_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_password_);
  }
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionid()) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  if (from.has_settings()) {
    settings_ = new ::proto::steam::ParentalSettings(*from.settings_);
  } else {
    settings_ = nullptr;
  }
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_SetParentalSettings_Request)
}

void CParental_SetParentalSettings_Request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CParental_SetParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&steamid_) -
      reinterpret_cast<char*>(&settings_)) + sizeof(steamid_));
}

CParental_SetParentalSettings_Request::~CParental_SetParentalSettings_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_SetParentalSettings_Request)
  SharedDtor();
}

void CParental_SetParentalSettings_Request::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete settings_;
}

void CParental_SetParentalSettings_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_SetParentalSettings_Request& CParental_SetParentalSettings_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_SetParentalSettings_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_SetParentalSettings_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_SetParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      new_password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      sessionid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(settings_ != nullptr);
      settings_->Clear();
    }
  }
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_SetParentalSettings_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_SetParentalSettings_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string password = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_SetParentalSettings_Request.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .proto.steam.ParentalSettings settings = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::steam::ParentalSettings::_InternalParse;
        object = msg->mutable_settings();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional string new_password = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_SetParentalSettings_Request.new_password");
        object = msg->mutable_new_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string sessionid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_SetParentalSettings_Request.sessionid");
        object = msg->mutable_sessionid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional fixed64 steamid = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 81) goto handle_unusual;
        msg->set_steamid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_SetParentalSettings_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_SetParentalSettings_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_SetParentalSettings_Request.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.steam.ParentalSettings settings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string new_password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->new_password().data(), static_cast<int>(this->new_password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_SetParentalSettings_Request.new_password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sessionid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), static_cast<int>(this->sessionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_SetParentalSettings_Request.sessionid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (81 & 0xFF)) {
          HasBitSetters::set_has_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_SetParentalSettings_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_SetParentalSettings_Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_SetParentalSettings_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_SetParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_SetParentalSettings_Request.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional .proto.steam.ParentalSettings settings = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::settings(this), output);
  }

  // optional string new_password = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_password().data(), static_cast<int>(this->new_password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_SetParentalSettings_Request.new_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->new_password(), output);
  }

  // optional string sessionid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_SetParentalSettings_Request.sessionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sessionid(), output);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_SetParentalSettings_Request)
}

::google::protobuf::uint8* CParental_SetParentalSettings_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_SetParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_SetParentalSettings_Request.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional .proto.steam.ParentalSettings settings = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::settings(this), target);
  }

  // optional string new_password = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_password().data(), static_cast<int>(this->new_password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_SetParentalSettings_Request.new_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->new_password(), target);
  }

  // optional string sessionid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_SetParentalSettings_Request.sessionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sessionid(), target);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_SetParentalSettings_Request)
  return target;
}

size_t CParental_SetParentalSettings_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_SetParentalSettings_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string password = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string new_password = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->new_password());
    }

    // optional string sessionid = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sessionid());
    }

    // optional .proto.steam.ParentalSettings settings = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *settings_);
    }

    // optional fixed64 steamid = 10;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_SetParentalSettings_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_SetParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_SetParentalSettings_Request* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_SetParentalSettings_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_SetParentalSettings_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_SetParentalSettings_Request)
    MergeFrom(*source);
  }
}

void CParental_SetParentalSettings_Request::MergeFrom(const CParental_SetParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_SetParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      new_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_password_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_settings()->::proto::steam::ParentalSettings::MergeFrom(from.settings());
    }
    if (cached_has_bits & 0x00000010u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CParental_SetParentalSettings_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_SetParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_SetParentalSettings_Request::CopyFrom(const CParental_SetParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_SetParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_SetParentalSettings_Request::IsInitialized() const {
  return true;
}

void CParental_SetParentalSettings_Request::Swap(CParental_SetParentalSettings_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_SetParentalSettings_Request::InternalSwap(CParental_SetParentalSettings_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  new_password_.Swap(&other->new_password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sessionid_.Swap(&other->sessionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(settings_, other->settings_);
  swap(steamid_, other->steamid_);
}

::google::protobuf::Metadata CParental_SetParentalSettings_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_SetParentalSettings_Response::InitAsDefaultInstance() {
}
class CParental_SetParentalSettings_Response::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_SetParentalSettings_Response::CParental_SetParentalSettings_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_SetParentalSettings_Response)
}
CParental_SetParentalSettings_Response::CParental_SetParentalSettings_Response(const CParental_SetParentalSettings_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_SetParentalSettings_Response)
}

void CParental_SetParentalSettings_Response::SharedCtor() {
}

CParental_SetParentalSettings_Response::~CParental_SetParentalSettings_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_SetParentalSettings_Response)
  SharedDtor();
}

void CParental_SetParentalSettings_Response::SharedDtor() {
}

void CParental_SetParentalSettings_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_SetParentalSettings_Response& CParental_SetParentalSettings_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_SetParentalSettings_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_SetParentalSettings_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_SetParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_SetParentalSettings_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_SetParentalSettings_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_SetParentalSettings_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_SetParentalSettings_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_SetParentalSettings_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_SetParentalSettings_Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_SetParentalSettings_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_SetParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_SetParentalSettings_Response)
}

::google::protobuf::uint8* CParental_SetParentalSettings_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_SetParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_SetParentalSettings_Response)
  return target;
}

size_t CParental_SetParentalSettings_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_SetParentalSettings_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_SetParentalSettings_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_SetParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_SetParentalSettings_Response* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_SetParentalSettings_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_SetParentalSettings_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_SetParentalSettings_Response)
    MergeFrom(*source);
  }
}

void CParental_SetParentalSettings_Response::MergeFrom(const CParental_SetParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_SetParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_SetParentalSettings_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_SetParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_SetParentalSettings_Response::CopyFrom(const CParental_SetParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_SetParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_SetParentalSettings_Response::IsInitialized() const {
  return true;
}

void CParental_SetParentalSettings_Response::Swap(CParental_SetParentalSettings_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_SetParentalSettings_Response::InternalSwap(CParental_SetParentalSettings_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CParental_SetParentalSettings_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_ValidateToken_Request::InitAsDefaultInstance() {
}
class CParental_ValidateToken_Request::HasBitSetters {
 public:
  static void set_has_unlock_token(CParental_ValidateToken_Request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_ValidateToken_Request::kUnlockTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_ValidateToken_Request::CParental_ValidateToken_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_ValidateToken_Request)
}
CParental_ValidateToken_Request::CParental_ValidateToken_Request(const CParental_ValidateToken_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unlock_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_unlock_token()) {
    unlock_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unlock_token_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_ValidateToken_Request)
}

void CParental_ValidateToken_Request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CParental_ValidateToken_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  unlock_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CParental_ValidateToken_Request::~CParental_ValidateToken_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_ValidateToken_Request)
  SharedDtor();
}

void CParental_ValidateToken_Request::SharedDtor() {
  unlock_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_ValidateToken_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_ValidateToken_Request& CParental_ValidateToken_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_ValidateToken_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_ValidateToken_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_ValidateToken_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    unlock_token_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_ValidateToken_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_ValidateToken_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string unlock_token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_ValidateToken_Request.unlock_token");
        object = msg->mutable_unlock_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_ValidateToken_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_ValidateToken_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string unlock_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unlock_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unlock_token().data(), static_cast<int>(this->unlock_token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ValidateToken_Request.unlock_token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_ValidateToken_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_ValidateToken_Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_ValidateToken_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_ValidateToken_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string unlock_token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unlock_token().data(), static_cast<int>(this->unlock_token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidateToken_Request.unlock_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->unlock_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_ValidateToken_Request)
}

::google::protobuf::uint8* CParental_ValidateToken_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_ValidateToken_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string unlock_token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unlock_token().data(), static_cast<int>(this->unlock_token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidateToken_Request.unlock_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->unlock_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_ValidateToken_Request)
  return target;
}

size_t CParental_ValidateToken_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_ValidateToken_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string unlock_token = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unlock_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_ValidateToken_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_ValidateToken_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_ValidateToken_Request* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_ValidateToken_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_ValidateToken_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_ValidateToken_Request)
    MergeFrom(*source);
  }
}

void CParental_ValidateToken_Request::MergeFrom(const CParental_ValidateToken_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_ValidateToken_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_unlock_token()) {
    _has_bits_[0] |= 0x00000001u;
    unlock_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unlock_token_);
  }
}

void CParental_ValidateToken_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_ValidateToken_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_ValidateToken_Request::CopyFrom(const CParental_ValidateToken_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_ValidateToken_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ValidateToken_Request::IsInitialized() const {
  return true;
}

void CParental_ValidateToken_Request::Swap(CParental_ValidateToken_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_ValidateToken_Request::InternalSwap(CParental_ValidateToken_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  unlock_token_.Swap(&other->unlock_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CParental_ValidateToken_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_ValidateToken_Response::InitAsDefaultInstance() {
}
class CParental_ValidateToken_Response::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_ValidateToken_Response::CParental_ValidateToken_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_ValidateToken_Response)
}
CParental_ValidateToken_Response::CParental_ValidateToken_Response(const CParental_ValidateToken_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_ValidateToken_Response)
}

void CParental_ValidateToken_Response::SharedCtor() {
}

CParental_ValidateToken_Response::~CParental_ValidateToken_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_ValidateToken_Response)
  SharedDtor();
}

void CParental_ValidateToken_Response::SharedDtor() {
}

void CParental_ValidateToken_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_ValidateToken_Response& CParental_ValidateToken_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_ValidateToken_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_ValidateToken_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_ValidateToken_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_ValidateToken_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_ValidateToken_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_ValidateToken_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_ValidateToken_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_ValidateToken_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_ValidateToken_Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_ValidateToken_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_ValidateToken_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_ValidateToken_Response)
}

::google::protobuf::uint8* CParental_ValidateToken_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_ValidateToken_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_ValidateToken_Response)
  return target;
}

size_t CParental_ValidateToken_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_ValidateToken_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_ValidateToken_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_ValidateToken_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_ValidateToken_Response* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_ValidateToken_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_ValidateToken_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_ValidateToken_Response)
    MergeFrom(*source);
  }
}

void CParental_ValidateToken_Response::MergeFrom(const CParental_ValidateToken_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_ValidateToken_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_ValidateToken_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_ValidateToken_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_ValidateToken_Response::CopyFrom(const CParental_ValidateToken_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_ValidateToken_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ValidateToken_Response::IsInitialized() const {
  return true;
}

void CParental_ValidateToken_Response::Swap(CParental_ValidateToken_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_ValidateToken_Response::InternalSwap(CParental_ValidateToken_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CParental_ValidateToken_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_ValidatePassword_Request::InitAsDefaultInstance() {
}
class CParental_ValidatePassword_Request::HasBitSetters {
 public:
  static void set_has_password(CParental_ValidatePassword_Request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_session(CParental_ValidatePassword_Request* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_send_unlock_on_success(CParental_ValidatePassword_Request* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_ValidatePassword_Request::kPasswordFieldNumber;
const int CParental_ValidatePassword_Request::kSessionFieldNumber;
const int CParental_ValidatePassword_Request::kSendUnlockOnSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_ValidatePassword_Request::CParental_ValidatePassword_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_ValidatePassword_Request)
}
CParental_ValidatePassword_Request::CParental_ValidatePassword_Request(const CParental_ValidatePassword_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_session()) {
    session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_);
  }
  send_unlock_on_success_ = from.send_unlock_on_success_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_ValidatePassword_Request)
}

void CParental_ValidatePassword_Request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CParental_ValidatePassword_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  send_unlock_on_success_ = false;
}

CParental_ValidatePassword_Request::~CParental_ValidatePassword_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_ValidatePassword_Request)
  SharedDtor();
}

void CParental_ValidatePassword_Request::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_ValidatePassword_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_ValidatePassword_Request& CParental_ValidatePassword_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_ValidatePassword_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_ValidatePassword_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_ValidatePassword_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      session_.ClearNonDefaultToEmptyNoArena();
    }
  }
  send_unlock_on_success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_ValidatePassword_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_ValidatePassword_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string password = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_ValidatePassword_Request.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string session = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_ValidatePassword_Request.session");
        object = msg->mutable_session();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bool send_unlock_on_success = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_send_unlock_on_success(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_ValidatePassword_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_ValidatePassword_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ValidatePassword_Request.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string session = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->session().data(), static_cast<int>(this->session().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ValidatePassword_Request.session");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool send_unlock_on_success = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_send_unlock_on_success(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &send_unlock_on_success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_ValidatePassword_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_ValidatePassword_Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_ValidatePassword_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_ValidatePassword_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidatePassword_Request.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional string session = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session().data(), static_cast<int>(this->session().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidatePassword_Request.session");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->session(), output);
  }

  // optional bool send_unlock_on_success = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->send_unlock_on_success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_ValidatePassword_Request)
}

::google::protobuf::uint8* CParental_ValidatePassword_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_ValidatePassword_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidatePassword_Request.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional string session = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session().data(), static_cast<int>(this->session().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidatePassword_Request.session");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->session(), target);
  }

  // optional bool send_unlock_on_success = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->send_unlock_on_success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_ValidatePassword_Request)
  return target;
}

size_t CParental_ValidatePassword_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_ValidatePassword_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string password = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string session = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->session());
    }

    // optional bool send_unlock_on_success = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_ValidatePassword_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_ValidatePassword_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_ValidatePassword_Request* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_ValidatePassword_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_ValidatePassword_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_ValidatePassword_Request)
    MergeFrom(*source);
  }
}

void CParental_ValidatePassword_Request::MergeFrom(const CParental_ValidatePassword_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_ValidatePassword_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_);
    }
    if (cached_has_bits & 0x00000004u) {
      send_unlock_on_success_ = from.send_unlock_on_success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CParental_ValidatePassword_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_ValidatePassword_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_ValidatePassword_Request::CopyFrom(const CParental_ValidatePassword_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_ValidatePassword_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ValidatePassword_Request::IsInitialized() const {
  return true;
}

void CParental_ValidatePassword_Request::Swap(CParental_ValidatePassword_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_ValidatePassword_Request::InternalSwap(CParental_ValidatePassword_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  session_.Swap(&other->session_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(send_unlock_on_success_, other->send_unlock_on_success_);
}

::google::protobuf::Metadata CParental_ValidatePassword_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_ValidatePassword_Response::InitAsDefaultInstance() {
}
class CParental_ValidatePassword_Response::HasBitSetters {
 public:
  static void set_has_token(CParental_ValidatePassword_Response* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_ValidatePassword_Response::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_ValidatePassword_Response::CParental_ValidatePassword_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_ValidatePassword_Response)
}
CParental_ValidatePassword_Response::CParental_ValidatePassword_Response(const CParental_ValidatePassword_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_ValidatePassword_Response)
}

void CParental_ValidatePassword_Response::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CParental_ValidatePassword_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CParental_ValidatePassword_Response::~CParental_ValidatePassword_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_ValidatePassword_Response)
  SharedDtor();
}

void CParental_ValidatePassword_Response::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_ValidatePassword_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_ValidatePassword_Response& CParental_ValidatePassword_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_ValidatePassword_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_ValidatePassword_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_ValidatePassword_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    token_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_ValidatePassword_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_ValidatePassword_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_ValidatePassword_Response.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_ValidatePassword_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_ValidatePassword_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ValidatePassword_Response.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_ValidatePassword_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_ValidatePassword_Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_ValidatePassword_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_ValidatePassword_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidatePassword_Response.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_ValidatePassword_Response)
}

::google::protobuf::uint8* CParental_ValidatePassword_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_ValidatePassword_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidatePassword_Response.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_ValidatePassword_Response)
  return target;
}

size_t CParental_ValidatePassword_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_ValidatePassword_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string token = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_ValidatePassword_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_ValidatePassword_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_ValidatePassword_Response* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_ValidatePassword_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_ValidatePassword_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_ValidatePassword_Response)
    MergeFrom(*source);
  }
}

void CParental_ValidatePassword_Response::MergeFrom(const CParental_ValidatePassword_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_ValidatePassword_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_token()) {
    _has_bits_[0] |= 0x00000001u;
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void CParental_ValidatePassword_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_ValidatePassword_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_ValidatePassword_Response::CopyFrom(const CParental_ValidatePassword_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_ValidatePassword_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ValidatePassword_Response::IsInitialized() const {
  return true;
}

void CParental_ValidatePassword_Response::Swap(CParental_ValidatePassword_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_ValidatePassword_Response::InternalSwap(CParental_ValidatePassword_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CParental_ValidatePassword_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_LockClient_Request::InitAsDefaultInstance() {
}
class CParental_LockClient_Request::HasBitSetters {
 public:
  static void set_has_session(CParental_LockClient_Request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_LockClient_Request::kSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_LockClient_Request::CParental_LockClient_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_LockClient_Request)
}
CParental_LockClient_Request::CParental_LockClient_Request(const CParental_LockClient_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_session()) {
    session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_LockClient_Request)
}

void CParental_LockClient_Request::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CParental_LockClient_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CParental_LockClient_Request::~CParental_LockClient_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_LockClient_Request)
  SharedDtor();
}

void CParental_LockClient_Request::SharedDtor() {
  session_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_LockClient_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_LockClient_Request& CParental_LockClient_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_LockClient_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_LockClient_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_LockClient_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    session_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_LockClient_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_LockClient_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string session = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_LockClient_Request.session");
        object = msg->mutable_session();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_LockClient_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_LockClient_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string session = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->session().data(), static_cast<int>(this->session().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_LockClient_Request.session");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_LockClient_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_LockClient_Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_LockClient_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_LockClient_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string session = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session().data(), static_cast<int>(this->session().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_LockClient_Request.session");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_LockClient_Request)
}

::google::protobuf::uint8* CParental_LockClient_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_LockClient_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string session = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session().data(), static_cast<int>(this->session().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_LockClient_Request.session");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->session(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_LockClient_Request)
  return target;
}

size_t CParental_LockClient_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_LockClient_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string session = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_LockClient_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_LockClient_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_LockClient_Request* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_LockClient_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_LockClient_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_LockClient_Request)
    MergeFrom(*source);
  }
}

void CParental_LockClient_Request::MergeFrom(const CParental_LockClient_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_LockClient_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_session()) {
    _has_bits_[0] |= 0x00000001u;
    session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_);
  }
}

void CParental_LockClient_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_LockClient_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_LockClient_Request::CopyFrom(const CParental_LockClient_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_LockClient_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_LockClient_Request::IsInitialized() const {
  return true;
}

void CParental_LockClient_Request::Swap(CParental_LockClient_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_LockClient_Request::InternalSwap(CParental_LockClient_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  session_.Swap(&other->session_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CParental_LockClient_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_LockClient_Response::InitAsDefaultInstance() {
}
class CParental_LockClient_Response::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_LockClient_Response::CParental_LockClient_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_LockClient_Response)
}
CParental_LockClient_Response::CParental_LockClient_Response(const CParental_LockClient_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_LockClient_Response)
}

void CParental_LockClient_Response::SharedCtor() {
}

CParental_LockClient_Response::~CParental_LockClient_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_LockClient_Response)
  SharedDtor();
}

void CParental_LockClient_Response::SharedDtor() {
}

void CParental_LockClient_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_LockClient_Response& CParental_LockClient_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_LockClient_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_LockClient_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_LockClient_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_LockClient_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_LockClient_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_LockClient_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_LockClient_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_LockClient_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_LockClient_Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_LockClient_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_LockClient_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_LockClient_Response)
}

::google::protobuf::uint8* CParental_LockClient_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_LockClient_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_LockClient_Response)
  return target;
}

size_t CParental_LockClient_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_LockClient_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_LockClient_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_LockClient_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_LockClient_Response* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_LockClient_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_LockClient_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_LockClient_Response)
    MergeFrom(*source);
  }
}

void CParental_LockClient_Response::MergeFrom(const CParental_LockClient_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_LockClient_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_LockClient_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_LockClient_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_LockClient_Response::CopyFrom(const CParental_LockClient_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_LockClient_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_LockClient_Response::IsInitialized() const {
  return true;
}

void CParental_LockClient_Response::Swap(CParental_LockClient_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_LockClient_Response::InternalSwap(CParental_LockClient_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CParental_LockClient_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_RequestRecoveryCode_Request::InitAsDefaultInstance() {
}
class CParental_RequestRecoveryCode_Request::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_RequestRecoveryCode_Request::CParental_RequestRecoveryCode_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_RequestRecoveryCode_Request)
}
CParental_RequestRecoveryCode_Request::CParental_RequestRecoveryCode_Request(const CParental_RequestRecoveryCode_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_RequestRecoveryCode_Request)
}

void CParental_RequestRecoveryCode_Request::SharedCtor() {
}

CParental_RequestRecoveryCode_Request::~CParental_RequestRecoveryCode_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_RequestRecoveryCode_Request)
  SharedDtor();
}

void CParental_RequestRecoveryCode_Request::SharedDtor() {
}

void CParental_RequestRecoveryCode_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_RequestRecoveryCode_Request& CParental_RequestRecoveryCode_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_RequestRecoveryCode_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_RequestRecoveryCode_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_RequestRecoveryCode_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_RequestRecoveryCode_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_RequestRecoveryCode_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_RequestRecoveryCode_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_RequestRecoveryCode_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_RequestRecoveryCode_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_RequestRecoveryCode_Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_RequestRecoveryCode_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_RequestRecoveryCode_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_RequestRecoveryCode_Request)
}

::google::protobuf::uint8* CParental_RequestRecoveryCode_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_RequestRecoveryCode_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_RequestRecoveryCode_Request)
  return target;
}

size_t CParental_RequestRecoveryCode_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_RequestRecoveryCode_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_RequestRecoveryCode_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_RequestRecoveryCode_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_RequestRecoveryCode_Request* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_RequestRecoveryCode_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_RequestRecoveryCode_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_RequestRecoveryCode_Request)
    MergeFrom(*source);
  }
}

void CParental_RequestRecoveryCode_Request::MergeFrom(const CParental_RequestRecoveryCode_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_RequestRecoveryCode_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_RequestRecoveryCode_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_RequestRecoveryCode_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_RequestRecoveryCode_Request::CopyFrom(const CParental_RequestRecoveryCode_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_RequestRecoveryCode_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_RequestRecoveryCode_Request::IsInitialized() const {
  return true;
}

void CParental_RequestRecoveryCode_Request::Swap(CParental_RequestRecoveryCode_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_RequestRecoveryCode_Request::InternalSwap(CParental_RequestRecoveryCode_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CParental_RequestRecoveryCode_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_RequestRecoveryCode_Response::InitAsDefaultInstance() {
}
class CParental_RequestRecoveryCode_Response::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_RequestRecoveryCode_Response::CParental_RequestRecoveryCode_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_RequestRecoveryCode_Response)
}
CParental_RequestRecoveryCode_Response::CParental_RequestRecoveryCode_Response(const CParental_RequestRecoveryCode_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_RequestRecoveryCode_Response)
}

void CParental_RequestRecoveryCode_Response::SharedCtor() {
}

CParental_RequestRecoveryCode_Response::~CParental_RequestRecoveryCode_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_RequestRecoveryCode_Response)
  SharedDtor();
}

void CParental_RequestRecoveryCode_Response::SharedDtor() {
}

void CParental_RequestRecoveryCode_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_RequestRecoveryCode_Response& CParental_RequestRecoveryCode_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_RequestRecoveryCode_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_RequestRecoveryCode_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_RequestRecoveryCode_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_RequestRecoveryCode_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_RequestRecoveryCode_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_RequestRecoveryCode_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_RequestRecoveryCode_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_RequestRecoveryCode_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_RequestRecoveryCode_Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_RequestRecoveryCode_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_RequestRecoveryCode_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_RequestRecoveryCode_Response)
}

::google::protobuf::uint8* CParental_RequestRecoveryCode_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_RequestRecoveryCode_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_RequestRecoveryCode_Response)
  return target;
}

size_t CParental_RequestRecoveryCode_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_RequestRecoveryCode_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_RequestRecoveryCode_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_RequestRecoveryCode_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_RequestRecoveryCode_Response* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_RequestRecoveryCode_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_RequestRecoveryCode_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_RequestRecoveryCode_Response)
    MergeFrom(*source);
  }
}

void CParental_RequestRecoveryCode_Response::MergeFrom(const CParental_RequestRecoveryCode_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_RequestRecoveryCode_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_RequestRecoveryCode_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_RequestRecoveryCode_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_RequestRecoveryCode_Response::CopyFrom(const CParental_RequestRecoveryCode_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_RequestRecoveryCode_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_RequestRecoveryCode_Response::IsInitialized() const {
  return true;
}

void CParental_RequestRecoveryCode_Response::Swap(CParental_RequestRecoveryCode_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_RequestRecoveryCode_Response::InternalSwap(CParental_RequestRecoveryCode_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CParental_RequestRecoveryCode_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_DisableWithRecoveryCode_Request::InitAsDefaultInstance() {
}
class CParental_DisableWithRecoveryCode_Request::HasBitSetters {
 public:
  static void set_has_recovery_code(CParental_DisableWithRecoveryCode_Request* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_steamid(CParental_DisableWithRecoveryCode_Request* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_DisableWithRecoveryCode_Request::kRecoveryCodeFieldNumber;
const int CParental_DisableWithRecoveryCode_Request::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_DisableWithRecoveryCode_Request::CParental_DisableWithRecoveryCode_Request()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_DisableWithRecoveryCode_Request)
}
CParental_DisableWithRecoveryCode_Request::CParental_DisableWithRecoveryCode_Request(const CParental_DisableWithRecoveryCode_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&recovery_code_, &from.recovery_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&recovery_code_)) + sizeof(steamid_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_DisableWithRecoveryCode_Request)
}

void CParental_DisableWithRecoveryCode_Request::SharedCtor() {
  ::memset(&recovery_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&steamid_) -
      reinterpret_cast<char*>(&recovery_code_)) + sizeof(steamid_));
}

CParental_DisableWithRecoveryCode_Request::~CParental_DisableWithRecoveryCode_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_DisableWithRecoveryCode_Request)
  SharedDtor();
}

void CParental_DisableWithRecoveryCode_Request::SharedDtor() {
}

void CParental_DisableWithRecoveryCode_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_DisableWithRecoveryCode_Request& CParental_DisableWithRecoveryCode_Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_DisableWithRecoveryCode_Request_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_DisableWithRecoveryCode_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&recovery_code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steamid_) -
        reinterpret_cast<char*>(&recovery_code_)) + sizeof(steamid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_DisableWithRecoveryCode_Request::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_DisableWithRecoveryCode_Request*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 recovery_code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_recovery_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional fixed64 steamid = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 81) goto handle_unusual;
        msg->set_steamid(::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr));
        ptr += sizeof(::google::protobuf::uint64);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_DisableWithRecoveryCode_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 recovery_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_recovery_code(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recovery_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (81 & 0xFF)) {
          HasBitSetters::set_has_steamid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_DisableWithRecoveryCode_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_DisableWithRecoveryCode_Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_DisableWithRecoveryCode_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 recovery_code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recovery_code(), output);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_DisableWithRecoveryCode_Request)
}

::google::protobuf::uint8* CParental_DisableWithRecoveryCode_Request::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 recovery_code = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recovery_code(), target);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_DisableWithRecoveryCode_Request)
  return target;
}

size_t CParental_DisableWithRecoveryCode_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 recovery_code = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recovery_code());
    }

    // optional fixed64 steamid = 10;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_DisableWithRecoveryCode_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_DisableWithRecoveryCode_Request* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_DisableWithRecoveryCode_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_DisableWithRecoveryCode_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_DisableWithRecoveryCode_Request)
    MergeFrom(*source);
  }
}

void CParental_DisableWithRecoveryCode_Request::MergeFrom(const CParental_DisableWithRecoveryCode_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      recovery_code_ = from.recovery_code_;
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CParental_DisableWithRecoveryCode_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_DisableWithRecoveryCode_Request::CopyFrom(const CParental_DisableWithRecoveryCode_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_DisableWithRecoveryCode_Request::IsInitialized() const {
  return true;
}

void CParental_DisableWithRecoveryCode_Request::Swap(CParental_DisableWithRecoveryCode_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_DisableWithRecoveryCode_Request::InternalSwap(CParental_DisableWithRecoveryCode_Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(recovery_code_, other->recovery_code_);
  swap(steamid_, other->steamid_);
}

::google::protobuf::Metadata CParental_DisableWithRecoveryCode_Request::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_DisableWithRecoveryCode_Response::InitAsDefaultInstance() {
}
class CParental_DisableWithRecoveryCode_Response::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_DisableWithRecoveryCode_Response::CParental_DisableWithRecoveryCode_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_DisableWithRecoveryCode_Response)
}
CParental_DisableWithRecoveryCode_Response::CParental_DisableWithRecoveryCode_Response(const CParental_DisableWithRecoveryCode_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_DisableWithRecoveryCode_Response)
}

void CParental_DisableWithRecoveryCode_Response::SharedCtor() {
}

CParental_DisableWithRecoveryCode_Response::~CParental_DisableWithRecoveryCode_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_DisableWithRecoveryCode_Response)
  SharedDtor();
}

void CParental_DisableWithRecoveryCode_Response::SharedDtor() {
}

void CParental_DisableWithRecoveryCode_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_DisableWithRecoveryCode_Response& CParental_DisableWithRecoveryCode_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_DisableWithRecoveryCode_Response_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_DisableWithRecoveryCode_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_DisableWithRecoveryCode_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_DisableWithRecoveryCode_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_DisableWithRecoveryCode_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_DisableWithRecoveryCode_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_DisableWithRecoveryCode_Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_DisableWithRecoveryCode_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_DisableWithRecoveryCode_Response)
}

::google::protobuf::uint8* CParental_DisableWithRecoveryCode_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_DisableWithRecoveryCode_Response)
  return target;
}

size_t CParental_DisableWithRecoveryCode_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_DisableWithRecoveryCode_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_DisableWithRecoveryCode_Response* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_DisableWithRecoveryCode_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_DisableWithRecoveryCode_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_DisableWithRecoveryCode_Response)
    MergeFrom(*source);
  }
}

void CParental_DisableWithRecoveryCode_Response::MergeFrom(const CParental_DisableWithRecoveryCode_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_DisableWithRecoveryCode_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_DisableWithRecoveryCode_Response::CopyFrom(const CParental_DisableWithRecoveryCode_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_DisableWithRecoveryCode_Response::IsInitialized() const {
  return true;
}

void CParental_DisableWithRecoveryCode_Response::Swap(CParental_DisableWithRecoveryCode_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_DisableWithRecoveryCode_Response::InternalSwap(CParental_DisableWithRecoveryCode_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CParental_DisableWithRecoveryCode_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_ParentalSettingsChange_Notification::InitAsDefaultInstance() {
}
class CParental_ParentalSettingsChange_Notification::HasBitSetters {
 public:
  static void set_has_serialized_settings(CParental_ParentalSettingsChange_Notification* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_signature(CParental_ParentalSettingsChange_Notification* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_password(CParental_ParentalSettingsChange_Notification* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_sessionid(CParental_ParentalSettingsChange_Notification* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_ParentalSettingsChange_Notification::kSerializedSettingsFieldNumber;
const int CParental_ParentalSettingsChange_Notification::kSignatureFieldNumber;
const int CParental_ParentalSettingsChange_Notification::kPasswordFieldNumber;
const int CParental_ParentalSettingsChange_Notification::kSessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_ParentalSettingsChange_Notification::CParental_ParentalSettingsChange_Notification()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_ParentalSettingsChange_Notification)
}
CParental_ParentalSettingsChange_Notification::CParental_ParentalSettingsChange_Notification(const CParental_ParentalSettingsChange_Notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serialized_settings_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialized_settings()) {
    serialized_settings_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_settings_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionid()) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_ParentalSettingsChange_Notification)
}

void CParental_ParentalSettingsChange_Notification::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CParental_ParentalSettingsChange_Notification_steammessages_5fparental_2esteamclient_2eproto.base);
  serialized_settings_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CParental_ParentalSettingsChange_Notification::~CParental_ParentalSettingsChange_Notification() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_ParentalSettingsChange_Notification)
  SharedDtor();
}

void CParental_ParentalSettingsChange_Notification::SharedDtor() {
  serialized_settings_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_ParentalSettingsChange_Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_ParentalSettingsChange_Notification& CParental_ParentalSettingsChange_Notification::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_ParentalSettingsChange_Notification_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_ParentalSettingsChange_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      serialized_settings_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      signature_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      sessionid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_ParentalSettingsChange_Notification::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_ParentalSettingsChange_Notification*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes serialized_settings = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_serialized_settings();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional bytes signature = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_signature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string password = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_ParentalSettingsChange_Notification.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string sessionid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_ParentalSettingsChange_Notification.sessionid");
        object = msg->mutable_sessionid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_ParentalSettingsChange_Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes serialized_settings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ParentalSettingsChange_Notification.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sessionid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), static_cast<int>(this->sessionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ParentalSettingsChange_Notification.sessionid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_ParentalSettingsChange_Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_ParentalSettingsChange_Notification)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_ParentalSettingsChange_Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes serialized_settings = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->serialized_settings(), output);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->signature(), output);
  }

  // optional string password = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalSettingsChange_Notification.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // optional string sessionid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalSettingsChange_Notification.sessionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sessionid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_ParentalSettingsChange_Notification)
}

::google::protobuf::uint8* CParental_ParentalSettingsChange_Notification::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes serialized_settings = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->serialized_settings(), target);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->signature(), target);
  }

  // optional string password = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalSettingsChange_Notification.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // optional string sessionid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalSettingsChange_Notification.sessionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sessionid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_ParentalSettingsChange_Notification)
  return target;
}

size_t CParental_ParentalSettingsChange_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bytes serialized_settings = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serialized_settings());
    }

    // optional bytes signature = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->signature());
    }

    // optional string password = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string sessionid = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sessionid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_ParentalSettingsChange_Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_ParentalSettingsChange_Notification* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_ParentalSettingsChange_Notification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_ParentalSettingsChange_Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_ParentalSettingsChange_Notification)
    MergeFrom(*source);
  }
}

void CParental_ParentalSettingsChange_Notification::MergeFrom(const CParental_ParentalSettingsChange_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      serialized_settings_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_settings_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
    }
  }
}

void CParental_ParentalSettingsChange_Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_ParentalSettingsChange_Notification::CopyFrom(const CParental_ParentalSettingsChange_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ParentalSettingsChange_Notification::IsInitialized() const {
  return true;
}

void CParental_ParentalSettingsChange_Notification::Swap(CParental_ParentalSettingsChange_Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_ParentalSettingsChange_Notification::InternalSwap(CParental_ParentalSettingsChange_Notification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  serialized_settings_.Swap(&other->serialized_settings_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sessionid_.Swap(&other->sessionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CParental_ParentalSettingsChange_Notification::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_ParentalUnlock_Notification::InitAsDefaultInstance() {
}
class CParental_ParentalUnlock_Notification::HasBitSetters {
 public:
  static void set_has_password(CParental_ParentalUnlock_Notification* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_sessionid(CParental_ParentalUnlock_Notification* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_ParentalUnlock_Notification::kPasswordFieldNumber;
const int CParental_ParentalUnlock_Notification::kSessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_ParentalUnlock_Notification::CParental_ParentalUnlock_Notification()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_ParentalUnlock_Notification)
}
CParental_ParentalUnlock_Notification::CParental_ParentalUnlock_Notification(const CParental_ParentalUnlock_Notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionid()) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_ParentalUnlock_Notification)
}

void CParental_ParentalUnlock_Notification::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CParental_ParentalUnlock_Notification_steammessages_5fparental_2esteamclient_2eproto.base);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CParental_ParentalUnlock_Notification::~CParental_ParentalUnlock_Notification() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_ParentalUnlock_Notification)
  SharedDtor();
}

void CParental_ParentalUnlock_Notification::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_ParentalUnlock_Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_ParentalUnlock_Notification& CParental_ParentalUnlock_Notification::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_ParentalUnlock_Notification_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_ParentalUnlock_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_ParentalUnlock_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      password_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sessionid_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_ParentalUnlock_Notification::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_ParentalUnlock_Notification*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string password = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_ParentalUnlock_Notification.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional string sessionid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_ParentalUnlock_Notification.sessionid");
        object = msg->mutable_sessionid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_ParentalUnlock_Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_ParentalUnlock_Notification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ParentalUnlock_Notification.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sessionid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), static_cast<int>(this->sessionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ParentalUnlock_Notification.sessionid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_ParentalUnlock_Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_ParentalUnlock_Notification)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_ParentalUnlock_Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_ParentalUnlock_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalUnlock_Notification.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional string sessionid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalUnlock_Notification.sessionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sessionid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_ParentalUnlock_Notification)
}

::google::protobuf::uint8* CParental_ParentalUnlock_Notification::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_ParentalUnlock_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalUnlock_Notification.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional string sessionid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalUnlock_Notification.sessionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sessionid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_ParentalUnlock_Notification)
  return target;
}

size_t CParental_ParentalUnlock_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_ParentalUnlock_Notification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string password = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string sessionid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sessionid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_ParentalUnlock_Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_ParentalUnlock_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_ParentalUnlock_Notification* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_ParentalUnlock_Notification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_ParentalUnlock_Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_ParentalUnlock_Notification)
    MergeFrom(*source);
  }
}

void CParental_ParentalUnlock_Notification::MergeFrom(const CParental_ParentalUnlock_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_ParentalUnlock_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
    }
  }
}

void CParental_ParentalUnlock_Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_ParentalUnlock_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_ParentalUnlock_Notification::CopyFrom(const CParental_ParentalUnlock_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_ParentalUnlock_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ParentalUnlock_Notification::IsInitialized() const {
  return true;
}

void CParental_ParentalUnlock_Notification::Swap(CParental_ParentalUnlock_Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_ParentalUnlock_Notification::InternalSwap(CParental_ParentalUnlock_Notification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sessionid_.Swap(&other->sessionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CParental_ParentalUnlock_Notification::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CParental_ParentalLock_Notification::InitAsDefaultInstance() {
}
class CParental_ParentalLock_Notification::HasBitSetters {
 public:
  static void set_has_sessionid(CParental_ParentalLock_Notification* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_ParentalLock_Notification::kSessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_ParentalLock_Notification::CParental_ParentalLock_Notification()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_ParentalLock_Notification)
}
CParental_ParentalLock_Notification::CParental_ParentalLock_Notification(const CParental_ParentalLock_Notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionid()) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_ParentalLock_Notification)
}

void CParental_ParentalLock_Notification::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CParental_ParentalLock_Notification_steammessages_5fparental_2esteamclient_2eproto.base);
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CParental_ParentalLock_Notification::~CParental_ParentalLock_Notification() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_ParentalLock_Notification)
  SharedDtor();
}

void CParental_ParentalLock_Notification::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_ParentalLock_Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CParental_ParentalLock_Notification& CParental_ParentalLock_Notification::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CParental_ParentalLock_Notification_steammessages_5fparental_2esteamclient_2eproto.base);
  return *internal_default_instance();
}


void CParental_ParentalLock_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_ParentalLock_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    sessionid_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CParental_ParentalLock_Notification::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CParental_ParentalLock_Notification*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional string sessionid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.steam.CParental_ParentalLock_Notification.sessionid");
        object = msg->mutable_sessionid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CParental_ParentalLock_Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_ParentalLock_Notification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sessionid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), static_cast<int>(this->sessionid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ParentalLock_Notification.sessionid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_ParentalLock_Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_ParentalLock_Notification)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CParental_ParentalLock_Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_ParentalLock_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sessionid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalLock_Notification.sessionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sessionid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_ParentalLock_Notification)
}

::google::protobuf::uint8* CParental_ParentalLock_Notification::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_ParentalLock_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sessionid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), static_cast<int>(this->sessionid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalLock_Notification.sessionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sessionid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_ParentalLock_Notification)
  return target;
}

size_t CParental_ParentalLock_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_ParentalLock_Notification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string sessionid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CParental_ParentalLock_Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_ParentalLock_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_ParentalLock_Notification* source =
      ::google::protobuf::DynamicCastToGenerated<CParental_ParentalLock_Notification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_ParentalLock_Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_ParentalLock_Notification)
    MergeFrom(*source);
  }
}

void CParental_ParentalLock_Notification::MergeFrom(const CParental_ParentalLock_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_ParentalLock_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sessionid()) {
    _has_bits_[0] |= 0x00000001u;
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
}

void CParental_ParentalLock_Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_ParentalLock_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_ParentalLock_Notification::CopyFrom(const CParental_ParentalLock_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_ParentalLock_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ParentalLock_Notification::IsInitialized() const {
  return true;
}

void CParental_ParentalLock_Notification::Swap(CParental_ParentalLock_Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_ParentalLock_Notification::InternalSwap(CParental_ParentalLock_Notification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  sessionid_.Swap(&other->sessionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CParental_ParentalLock_Notification::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return ::file_level_metadata_steammessages_5fparental_2esteamclient_2eproto[kIndexInFileMessages];
}


// ===================================================================

Parental::~Parental() {}

const ::google::protobuf::ServiceDescriptor* Parental::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return file_level_service_descriptors_steammessages_5fparental_2esteamclient_2eproto[0];
}

const ::google::protobuf::ServiceDescriptor* Parental::GetDescriptor() {
  return descriptor();
}

void Parental::EnableParentalSettings(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_EnableParentalSettings_Request*,
                         ::proto::steam::CParental_EnableParentalSettings_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method EnableParentalSettings() not implemented.");
  done->Run();
}

void Parental::DisableParentalSettings(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_DisableParentalSettings_Request*,
                         ::proto::steam::CParental_DisableParentalSettings_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DisableParentalSettings() not implemented.");
  done->Run();
}

void Parental::GetParentalSettings(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_GetParentalSettings_Request*,
                         ::proto::steam::CParental_GetParentalSettings_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetParentalSettings() not implemented.");
  done->Run();
}

void Parental::GetSignedParentalSettings(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_GetSignedParentalSettings_Request*,
                         ::proto::steam::CParental_GetSignedParentalSettings_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetSignedParentalSettings() not implemented.");
  done->Run();
}

void Parental::SetParentalSettings(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_SetParentalSettings_Request*,
                         ::proto::steam::CParental_SetParentalSettings_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetParentalSettings() not implemented.");
  done->Run();
}

void Parental::ValidateToken(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_ValidateToken_Request*,
                         ::proto::steam::CParental_ValidateToken_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ValidateToken() not implemented.");
  done->Run();
}

void Parental::ValidatePassword(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_ValidatePassword_Request*,
                         ::proto::steam::CParental_ValidatePassword_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ValidatePassword() not implemented.");
  done->Run();
}

void Parental::LockClient(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_LockClient_Request*,
                         ::proto::steam::CParental_LockClient_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method LockClient() not implemented.");
  done->Run();
}

void Parental::RequestRecoveryCode(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_RequestRecoveryCode_Request*,
                         ::proto::steam::CParental_RequestRecoveryCode_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RequestRecoveryCode() not implemented.");
  done->Run();
}

void Parental::DisableWithRecoveryCode(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_DisableWithRecoveryCode_Request*,
                         ::proto::steam::CParental_DisableWithRecoveryCode_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DisableWithRecoveryCode() not implemented.");
  done->Run();
}

void Parental::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_steammessages_5fparental_2esteamclient_2eproto[0]);
  switch(method->index()) {
    case 0:
      EnableParentalSettings(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_EnableParentalSettings_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_EnableParentalSettings_Response*>(response),
             done);
      break;
    case 1:
      DisableParentalSettings(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_DisableParentalSettings_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_DisableParentalSettings_Response*>(response),
             done);
      break;
    case 2:
      GetParentalSettings(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_GetParentalSettings_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_GetParentalSettings_Response*>(response),
             done);
      break;
    case 3:
      GetSignedParentalSettings(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_GetSignedParentalSettings_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_GetSignedParentalSettings_Response*>(response),
             done);
      break;
    case 4:
      SetParentalSettings(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_SetParentalSettings_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_SetParentalSettings_Response*>(response),
             done);
      break;
    case 5:
      ValidateToken(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_ValidateToken_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_ValidateToken_Response*>(response),
             done);
      break;
    case 6:
      ValidatePassword(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_ValidatePassword_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_ValidatePassword_Response*>(response),
             done);
      break;
    case 7:
      LockClient(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_LockClient_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_LockClient_Response*>(response),
             done);
      break;
    case 8:
      RequestRecoveryCode(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_RequestRecoveryCode_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_RequestRecoveryCode_Response*>(response),
             done);
      break;
    case 9:
      DisableWithRecoveryCode(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_DisableWithRecoveryCode_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_DisableWithRecoveryCode_Response*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& Parental::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::proto::steam::CParental_EnableParentalSettings_Request::default_instance();
    case 1:
      return ::proto::steam::CParental_DisableParentalSettings_Request::default_instance();
    case 2:
      return ::proto::steam::CParental_GetParentalSettings_Request::default_instance();
    case 3:
      return ::proto::steam::CParental_GetSignedParentalSettings_Request::default_instance();
    case 4:
      return ::proto::steam::CParental_SetParentalSettings_Request::default_instance();
    case 5:
      return ::proto::steam::CParental_ValidateToken_Request::default_instance();
    case 6:
      return ::proto::steam::CParental_ValidatePassword_Request::default_instance();
    case 7:
      return ::proto::steam::CParental_LockClient_Request::default_instance();
    case 8:
      return ::proto::steam::CParental_RequestRecoveryCode_Request::default_instance();
    case 9:
      return ::proto::steam::CParental_DisableWithRecoveryCode_Request::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& Parental::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::proto::steam::CParental_EnableParentalSettings_Response::default_instance();
    case 1:
      return ::proto::steam::CParental_DisableParentalSettings_Response::default_instance();
    case 2:
      return ::proto::steam::CParental_GetParentalSettings_Response::default_instance();
    case 3:
      return ::proto::steam::CParental_GetSignedParentalSettings_Response::default_instance();
    case 4:
      return ::proto::steam::CParental_SetParentalSettings_Response::default_instance();
    case 5:
      return ::proto::steam::CParental_ValidateToken_Response::default_instance();
    case 6:
      return ::proto::steam::CParental_ValidatePassword_Response::default_instance();
    case 7:
      return ::proto::steam::CParental_LockClient_Response::default_instance();
    case 8:
      return ::proto::steam::CParental_RequestRecoveryCode_Response::default_instance();
    case 9:
      return ::proto::steam::CParental_DisableWithRecoveryCode_Response::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

Parental_Stub::Parental_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
Parental_Stub::Parental_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
Parental_Stub::~Parental_Stub() {
  if (owns_channel_) delete channel_;
}

void Parental_Stub::EnableParentalSettings(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_EnableParentalSettings_Request* request,
                              ::proto::steam::CParental_EnableParentalSettings_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void Parental_Stub::DisableParentalSettings(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_DisableParentalSettings_Request* request,
                              ::proto::steam::CParental_DisableParentalSettings_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void Parental_Stub::GetParentalSettings(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_GetParentalSettings_Request* request,
                              ::proto::steam::CParental_GetParentalSettings_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void Parental_Stub::GetSignedParentalSettings(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_GetSignedParentalSettings_Request* request,
                              ::proto::steam::CParental_GetSignedParentalSettings_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void Parental_Stub::SetParentalSettings(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_SetParentalSettings_Request* request,
                              ::proto::steam::CParental_SetParentalSettings_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void Parental_Stub::ValidateToken(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_ValidateToken_Request* request,
                              ::proto::steam::CParental_ValidateToken_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void Parental_Stub::ValidatePassword(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_ValidatePassword_Request* request,
                              ::proto::steam::CParental_ValidatePassword_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void Parental_Stub::LockClient(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_LockClient_Request* request,
                              ::proto::steam::CParental_LockClient_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
void Parental_Stub::RequestRecoveryCode(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_RequestRecoveryCode_Request* request,
                              ::proto::steam::CParental_RequestRecoveryCode_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8),
                       controller, request, response, done);
}
void Parental_Stub::DisableWithRecoveryCode(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_DisableWithRecoveryCode_Request* request,
                              ::proto::steam::CParental_DisableWithRecoveryCode_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(9),
                       controller, request, response, done);
}
// ===================================================================

ParentalClient::~ParentalClient() {}

const ::google::protobuf::ServiceDescriptor* ParentalClient::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_steammessages_5fparental_2esteamclient_2eproto);
  return file_level_service_descriptors_steammessages_5fparental_2esteamclient_2eproto[1];
}

const ::google::protobuf::ServiceDescriptor* ParentalClient::GetDescriptor() {
  return descriptor();
}

void ParentalClient::NotifySettingsChange(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_ParentalSettingsChange_Notification*,
                         ::proto::steam::NoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method NotifySettingsChange() not implemented.");
  done->Run();
}

void ParentalClient::NotifyUnlock(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_ParentalUnlock_Notification*,
                         ::proto::steam::NoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method NotifyUnlock() not implemented.");
  done->Run();
}

void ParentalClient::NotifyLock(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_ParentalLock_Notification*,
                         ::proto::steam::NoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method NotifyLock() not implemented.");
  done->Run();
}

void ParentalClient::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_steammessages_5fparental_2esteamclient_2eproto[1]);
  switch(method->index()) {
    case 0:
      NotifySettingsChange(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_ParentalSettingsChange_Notification*>(request),
             ::google::protobuf::down_cast< ::proto::steam::NoResponse*>(response),
             done);
      break;
    case 1:
      NotifyUnlock(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_ParentalUnlock_Notification*>(request),
             ::google::protobuf::down_cast< ::proto::steam::NoResponse*>(response),
             done);
      break;
    case 2:
      NotifyLock(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_ParentalLock_Notification*>(request),
             ::google::protobuf::down_cast< ::proto::steam::NoResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& ParentalClient::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::proto::steam::CParental_ParentalSettingsChange_Notification::default_instance();
    case 1:
      return ::proto::steam::CParental_ParentalUnlock_Notification::default_instance();
    case 2:
      return ::proto::steam::CParental_ParentalLock_Notification::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& ParentalClient::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::proto::steam::NoResponse::default_instance();
    case 1:
      return ::proto::steam::NoResponse::default_instance();
    case 2:
      return ::proto::steam::NoResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

ParentalClient_Stub::ParentalClient_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
ParentalClient_Stub::ParentalClient_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
ParentalClient_Stub::~ParentalClient_Stub() {
  if (owns_channel_) delete channel_;
}

void ParentalClient_Stub::NotifySettingsChange(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_ParentalSettingsChange_Notification* request,
                              ::proto::steam::NoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void ParentalClient_Stub::NotifyUnlock(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_ParentalUnlock_Notification* request,
                              ::proto::steam::NoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void ParentalClient_Stub::NotifyLock(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_ParentalLock_Notification* request,
                              ::proto::steam::NoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace steam
}  // namespace proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::proto::steam::ParentalApp* Arena::CreateMaybeMessage< ::proto::steam::ParentalApp >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::ParentalApp >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::ParentalSettings* Arena::CreateMaybeMessage< ::proto::steam::ParentalSettings >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::ParentalSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_EnableParentalSettings_Request* Arena::CreateMaybeMessage< ::proto::steam::CParental_EnableParentalSettings_Request >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_EnableParentalSettings_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_EnableParentalSettings_Response* Arena::CreateMaybeMessage< ::proto::steam::CParental_EnableParentalSettings_Response >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_EnableParentalSettings_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_DisableParentalSettings_Request* Arena::CreateMaybeMessage< ::proto::steam::CParental_DisableParentalSettings_Request >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_DisableParentalSettings_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_DisableParentalSettings_Response* Arena::CreateMaybeMessage< ::proto::steam::CParental_DisableParentalSettings_Response >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_DisableParentalSettings_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_GetParentalSettings_Request* Arena::CreateMaybeMessage< ::proto::steam::CParental_GetParentalSettings_Request >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_GetParentalSettings_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_GetParentalSettings_Response* Arena::CreateMaybeMessage< ::proto::steam::CParental_GetParentalSettings_Response >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_GetParentalSettings_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_GetSignedParentalSettings_Request* Arena::CreateMaybeMessage< ::proto::steam::CParental_GetSignedParentalSettings_Request >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_GetSignedParentalSettings_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_GetSignedParentalSettings_Response* Arena::CreateMaybeMessage< ::proto::steam::CParental_GetSignedParentalSettings_Response >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_GetSignedParentalSettings_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_SetParentalSettings_Request* Arena::CreateMaybeMessage< ::proto::steam::CParental_SetParentalSettings_Request >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_SetParentalSettings_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_SetParentalSettings_Response* Arena::CreateMaybeMessage< ::proto::steam::CParental_SetParentalSettings_Response >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_SetParentalSettings_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_ValidateToken_Request* Arena::CreateMaybeMessage< ::proto::steam::CParental_ValidateToken_Request >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_ValidateToken_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_ValidateToken_Response* Arena::CreateMaybeMessage< ::proto::steam::CParental_ValidateToken_Response >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_ValidateToken_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_ValidatePassword_Request* Arena::CreateMaybeMessage< ::proto::steam::CParental_ValidatePassword_Request >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_ValidatePassword_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_ValidatePassword_Response* Arena::CreateMaybeMessage< ::proto::steam::CParental_ValidatePassword_Response >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_ValidatePassword_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_LockClient_Request* Arena::CreateMaybeMessage< ::proto::steam::CParental_LockClient_Request >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_LockClient_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_LockClient_Response* Arena::CreateMaybeMessage< ::proto::steam::CParental_LockClient_Response >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_LockClient_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_RequestRecoveryCode_Request* Arena::CreateMaybeMessage< ::proto::steam::CParental_RequestRecoveryCode_Request >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_RequestRecoveryCode_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_RequestRecoveryCode_Response* Arena::CreateMaybeMessage< ::proto::steam::CParental_RequestRecoveryCode_Response >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_RequestRecoveryCode_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_DisableWithRecoveryCode_Request* Arena::CreateMaybeMessage< ::proto::steam::CParental_DisableWithRecoveryCode_Request >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_DisableWithRecoveryCode_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_DisableWithRecoveryCode_Response* Arena::CreateMaybeMessage< ::proto::steam::CParental_DisableWithRecoveryCode_Response >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_DisableWithRecoveryCode_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_ParentalSettingsChange_Notification* Arena::CreateMaybeMessage< ::proto::steam::CParental_ParentalSettingsChange_Notification >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_ParentalSettingsChange_Notification >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_ParentalUnlock_Notification* Arena::CreateMaybeMessage< ::proto::steam::CParental_ParentalUnlock_Notification >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_ParentalUnlock_Notification >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::steam::CParental_ParentalLock_Notification* Arena::CreateMaybeMessage< ::proto::steam::CParental_ParentalLock_Notification >(Arena* arena) {
  return Arena::CreateInternal< ::proto::steam::CParental_ParentalLock_Notification >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
